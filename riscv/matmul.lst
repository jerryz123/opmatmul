   1              		.file	"matmul.c"
   2              		.section	.text.unlikely,"ax",@progbits
   3              	.LCOLDB0:
   4              		.text
   5              	.LHOTB0:
   6              		.p2align 4,,15
   7              		.globl	naive_dgemm
   9              	naive_dgemm:
  10              	.LFB2277:
  11              		.cfi_startproc
  12 0000 85FF     		testl	%edi, %edi
  13 0002 7E75     		jle	.L11
  14 0004 8D47FF   		leal	-1(%rdi), %eax
  15 0007 4C63C7   		movslq	%edi, %r8
  16 000a 55       		pushq	%rbp
  17              		.cfi_def_cfa_offset 16
  18              		.cfi_offset 6, -16
  19 000b 4989CB   		movq	%rcx, %r11
  20 000e 53       		pushq	%rbx
  21              		.cfi_def_cfa_offset 24
  22              		.cfi_offset 3, -24
  23 000f 488D6CC1 		leaq	8(%rcx,%rax,8), %rbp
  23      08
  24 0014 4889D3   		movq	%rdx, %rbx
  25 0017 49C1E003 		salq	$3, %r8
  26 001b 4889F2   		movq	%rsi, %rdx
  27              	.L3:
  28 001e 4531C9   		xorl	%r9d, %r9d
  29 0021 4531D2   		xorl	%r10d, %r10d
  30              		.p2align 4,,10
  31 0024 0F1F4000 		.p2align 3
  32              	.L5:
  33 0028 C4817B10 		vmovsd	(%r11,%r9), %xmm1
  33      0C0B
  34 002e 4A8D340B 		leaq	(%rbx,%r9), %rsi
  35 0032 4889D1   		movq	%rdx, %rcx
  36 0035 31C0     		xorl	%eax, %eax
  37 0037 660F1F84 		.p2align 4,,10
  37      00000000 
  37      00
  38              		.p2align 3
  39              	.L4:
  40 0040 C5FB1001 		vmovsd	(%rcx), %xmm0
  41 0044 4C01C1   		addq	%r8, %rcx
  42 0047 C5FB5904 		vmulsd	(%rsi,%rax,8), %xmm0, %xmm0
  42      C6
  43 004c 4883C001 		addq	$1, %rax
  44 0050 C5F358C8 		vaddsd	%xmm0, %xmm1, %xmm1
  45 0054 39C7     		cmpl	%eax, %edi
  46 0056 7FE8     		jg	.L4
  47 0058 4183C201 		addl	$1, %r10d
  48 005c C4817B11 		vmovsd	%xmm1, (%r11,%r9)
  48      0C0B
  49 0062 4D01C1   		addq	%r8, %r9
  50 0065 4139FA   		cmpl	%edi, %r10d
  51 0068 75BE     		jne	.L5
  52 006a 4983C308 		addq	$8, %r11
  53 006e 4883C208 		addq	$8, %rdx
  54 0072 4939EB   		cmpq	%rbp, %r11
  55 0075 75A7     		jne	.L3
  56 0077 5B       		popq	%rbx
  57              		.cfi_restore 3
  58              		.cfi_def_cfa_offset 16
  59 0078 5D       		popq	%rbp
  60              		.cfi_restore 6
  61              		.cfi_def_cfa_offset 8
  62              	.L11:
  63 0079 C3       		ret
  64              		.cfi_endproc
  65              	.LFE2277:
  67              		.section	.text.unlikely
  68              	.LCOLDE0:
  69              		.text
  70              	.LHOTE0:
  71              		.section	.text.unlikely
  72              	.LCOLDB2:
  73              		.text
  74              	.LHOTB2:
  75 007a 660F1F44 		.p2align 4,,15
  75      0000
  76              		.globl	wall_time
  78              	wall_time:
  79              	.LFB2274:
  80              		.cfi_startproc
  81 0080 4883EC28 		subq	$40, %rsp
  82              		.cfi_def_cfa_offset 48
  83 0084 BF010000 		movl	$1, %edi
  83      00
  84 0089 64488B04 		movq	%fs:40, %rax
  84      25280000 
  84      00
  85 0092 48894424 		movq	%rax, 24(%rsp)
  85      18
  86 0097 31C0     		xorl	%eax, %eax
  87 0099 4889E6   		movq	%rsp, %rsi
  88 009c E8000000 		call	clock_gettime
  88      00
  89 00a1 C5F957C0 		vxorpd	%xmm0, %xmm0, %xmm0
  90 00a5 C5F157C9 		vxorpd	%xmm1, %xmm1, %xmm1
  91 00a9 488B4424 		movq	24(%rsp), %rax
  91      18
  92 00ae 64483304 		xorq	%fs:40, %rax
  92      25280000 
  92      00
  93 00b7 C4E1FB2A 		vcvtsi2sdq	8(%rsp), %xmm0, %xmm0
  93      442408
  94 00be C5FB5905 		vmulsd	.LC1(%rip), %xmm0, %xmm0
  94      00000000 
  95 00c6 C4E1F32A 		vcvtsi2sdq	(%rsp), %xmm1, %xmm1
  95      0C24
  96 00cc C5F358C0 		vaddsd	%xmm0, %xmm1, %xmm0
  97 00d0 7505     		jne	.L17
  98 00d2 4883C428 		addq	$40, %rsp
  99              		.cfi_remember_state
 100              		.cfi_def_cfa_offset 8
 101 00d6 C3       		ret
 102              	.L17:
 103              		.cfi_restore_state
 104 00d7 E8000000 		call	__stack_chk_fail
 104      00
 105              		.cfi_endproc
 106              	.LFE2274:
 108              		.section	.text.unlikely
 109              	.LCOLDE2:
 110              		.text
 111              	.LHOTE2:
 112              		.section	.text.unlikely
 113              	.LCOLDB4:
 114              		.text
 115              	.LHOTB4:
 116 00dc 0F1F4000 		.p2align 4,,15
 117              		.globl	fill
 119              	fill:
 120              	.LFB2275:
 121              		.cfi_startproc
 122 00e0 85F6     		testl	%esi, %esi
 123 00e2 7E39     		jle	.L26
 124 00e4 55       		pushq	%rbp
 125              		.cfi_def_cfa_offset 16
 126              		.cfi_offset 6, -16
 127 00e5 8D46FF   		leal	-1(%rsi), %eax
 128 00e8 53       		pushq	%rbx
 129              		.cfi_def_cfa_offset 24
 130              		.cfi_offset 3, -24
 131 00e9 488D6CC7 		leaq	8(%rdi,%rax,8), %rbp
 131      08
 132 00ee 4889FB   		movq	%rdi, %rbx
 133 00f1 4883EC08 		subq	$8, %rsp
 134              		.cfi_def_cfa_offset 32
 135              		.p2align 4,,10
 136 00f5 0F1F00   		.p2align 3
 137              	.L20:
 138 00f8 E8000000 		call	drand48
 138      00
 139 00fd 4883C308 		addq	$8, %rbx
 140 0101 C5FB58C0 		vaddsd	%xmm0, %xmm0, %xmm0
 141 0105 C5FB5C05 		vsubsd	.LC3(%rip), %xmm0, %xmm0
 141      00000000 
 142 010d C5FB1143 		vmovsd	%xmm0, -8(%rbx)
 142      F8
 143 0112 4839EB   		cmpq	%rbp, %rbx
 144 0115 75E1     		jne	.L20
 145 0117 4883C408 		addq	$8, %rsp
 146              		.cfi_def_cfa_offset 24
 147 011b 5B       		popq	%rbx
 148              		.cfi_restore 3
 149              		.cfi_def_cfa_offset 16
 150 011c 5D       		popq	%rbp
 151              		.cfi_restore 6
 152              		.cfi_def_cfa_offset 8
 153              	.L26:
 154 011d C3       		ret
 155              		.cfi_endproc
 156              	.LFE2275:
 158              		.section	.text.unlikely
 159              	.LCOLDE4:
 160              		.text
 161              	.LHOTE4:
 162              		.section	.rodata.str1.1,"aMS",@progbits,1
 163              	.LC5:
 164 0000 252E3366 		.string	"%.3f\t "
 164      092000
 165              		.section	.text.unlikely
 166              	.LCOLDB6:
 167              		.text
 168              	.LHOTB6:
 169 011e 6690     		.p2align 4,,15
 170              		.globl	printmatrix
 172              	printmatrix:
 173              	.LFB2276:
 174              		.cfi_startproc
 175 0120 85FF     		testl	%edi, %edi
 176 0122 0F8E8700 		jle	.L36
 176      0000
 177 0128 4157     		pushq	%r15
 178              		.cfi_def_cfa_offset 16
 179              		.cfi_offset 15, -16
 180 012a 8D47FF   		leal	-1(%rdi), %eax
 181 012d 4863FF   		movslq	%edi, %rdi
 182 0130 4156     		pushq	%r14
 183              		.cfi_def_cfa_offset 24
 184              		.cfi_offset 14, -24
 185 0132 4C8D7CC2 		leaq	8(%rdx,%rax,8), %r15
 185      08
 186 0137 4989D6   		movq	%rdx, %r14
 187 013a 4155     		pushq	%r13
 188              		.cfi_def_cfa_offset 32
 189              		.cfi_offset 13, -32
 190 013c 4C8D2CFD 		leaq	0(,%rdi,8), %r13
 190      00000000 
 191 0144 4154     		pushq	%r12
 192              		.cfi_def_cfa_offset 40
 193              		.cfi_offset 12, -40
 194 0146 4189F4   		movl	%esi, %r12d
 195 0149 55       		pushq	%rbp
 196              		.cfi_def_cfa_offset 48
 197              		.cfi_offset 6, -48
 198 014a 53       		pushq	%rbx
 199              		.cfi_def_cfa_offset 56
 200              		.cfi_offset 3, -56
 201 014b 4883EC08 		subq	$8, %rsp
 202              		.cfi_def_cfa_offset 64
 203 014f 90       		.p2align 4,,10
 204              		.p2align 3
 205              	.L29:
 206 0150 4C89F5   		movq	%r14, %rbp
 207 0153 31DB     		xorl	%ebx, %ebx
 208 0155 4585E4   		testl	%r12d, %r12d
 209 0158 7E2A     		jle	.L31
 210 015a 660F1F44 		.p2align 4,,10
 210      0000
 211              		.p2align 3
 212              	.L33:
 213 0160 C5FB1045 		vmovsd	0(%rbp), %xmm0
 213      00
 214 0165 BE000000 		movl	$.LC5, %esi
 214      00
 215 016a 83C301   		addl	$1, %ebx
 216 016d 4C01ED   		addq	%r13, %rbp
 217 0170 BF010000 		movl	$1, %edi
 217      00
 218 0175 B8010000 		movl	$1, %eax
 218      00
 219 017a E8000000 		call	__printf_chk
 219      00
 220 017f 4439E3   		cmpl	%r12d, %ebx
 221 0182 75DC     		jne	.L33
 222              	.L31:
 223 0184 BF0A0000 		movl	$10, %edi
 223      00
 224 0189 4983C608 		addq	$8, %r14
 225 018d E8000000 		call	putchar
 225      00
 226 0192 4D39FE   		cmpq	%r15, %r14
 227 0195 75B9     		jne	.L29
 228 0197 4883C408 		addq	$8, %rsp
 229              		.cfi_def_cfa_offset 56
 230 019b BF0A0000 		movl	$10, %edi
 230      00
 231 01a0 5B       		popq	%rbx
 232              		.cfi_restore 3
 233              		.cfi_def_cfa_offset 48
 234 01a1 5D       		popq	%rbp
 235              		.cfi_restore 6
 236              		.cfi_def_cfa_offset 40
 237 01a2 415C     		popq	%r12
 238              		.cfi_restore 12
 239              		.cfi_def_cfa_offset 32
 240 01a4 415D     		popq	%r13
 241              		.cfi_restore 13
 242              		.cfi_def_cfa_offset 24
 243 01a6 415E     		popq	%r14
 244              		.cfi_restore 14
 245              		.cfi_def_cfa_offset 16
 246 01a8 415F     		popq	%r15
 247              		.cfi_restore 15
 248              		.cfi_def_cfa_offset 8
 249 01aa E9000000 		jmp	putchar
 249      00
 250              	.L36:
 251 01af BF0A0000 		movl	$10, %edi
 251      00
 252 01b4 E9000000 		jmp	putchar
 252      00
 253              		.cfi_endproc
 254              	.LFE2276:
 256              		.section	.text.unlikely
 257              	.LCOLDE6:
 258              		.text
 259              	.LHOTE6:
 260              		.section	.text.unlikely
 261              	.LCOLDB7:
 262              		.text
 263              	.LHOTB7:
 264 01b9 0F1F8000 		.p2align 4,,15
 264      000000
 265              		.globl	test
 267              	test:
 268              	.LFB2278:
 269              		.cfi_startproc
 270 01c0 85FF     		testl	%edi, %edi
 271 01c2 0F8E7501 		jle	.L68
 271      0000
 272 01c8 4C8D4120 		leaq	32(%rcx), %r8
 273 01cc 488D4620 		leaq	32(%rsi), %rax
 274 01d0 4C39C6   		cmpq	%r8, %rsi
 275 01d3 410F93C1 		setnb	%r9b
 276 01d7 4839C1   		cmpq	%rax, %rcx
 277 01da 0F93C0   		setnb	%al
 278 01dd 4409C8   		orl	%r9d, %eax
 279 01e0 83FF08   		cmpl	$8, %edi
 280 01e3 410F97C1 		seta	%r9b
 281 01e7 4484C8   		testb	%r9b, %al
 282 01ea 0F845801 		je	.L48
 282      0000
 283 01f0 488D4220 		leaq	32(%rdx), %rax
 284 01f4 4C39C2   		cmpq	%r8, %rdx
 285 01f7 410F93C0 		setnb	%r8b
 286 01fb 4839C1   		cmpq	%rax, %rcx
 287 01fe 0F93C0   		setnb	%al
 288 0201 4108C0   		orb	%al, %r8b
 289 0204 0F843E01 		je	.L48
 289      0000
 290 020a 4C8D5424 		leaq	8(%rsp), %r10
 290      08
 291              		.cfi_def_cfa 10, 0
 292 020f 4889F0   		movq	%rsi, %rax
 293 0212 4883E4E0 		andq	$-32, %rsp
 294 0216 41FF72F8 		pushq	-8(%r10)
 295 021a 83E01F   		andl	$31, %eax
 296 021d 55       		pushq	%rbp
 297 021e 48C1E803 		shrq	$3, %rax
 298              		.cfi_escape 0x10,0x6,0x2,0x76,0
 299 0222 4889E5   		movq	%rsp, %rbp
 300 0225 48F7D8   		negq	%rax
 301 0228 4156     		pushq	%r14
 302 022a 83E003   		andl	$3, %eax
 303 022d 4155     		pushq	%r13
 304 022f 39C7     		cmpl	%eax, %edi
 305 0231 4154     		pushq	%r12
 306 0233 0F46C7   		cmovbe	%edi, %eax
 307 0236 4152     		pushq	%r10
 308              		.cfi_escape 0xf,0x3,0x76,0x60,0x6
 309              		.cfi_escape 0x10,0xe,0x2,0x76,0x78
 310              		.cfi_escape 0x10,0xd,0x2,0x76,0x70
 311              		.cfi_escape 0x10,0xc,0x2,0x76,0x68
 312 0238 4531C0   		xorl	%r8d, %r8d
 313 023b 53       		pushq	%rbx
 314              		.cfi_escape 0x10,0x3,0x2,0x76,0x58
 315 023c 85C0     		testl	%eax, %eax
 316 023e 743D     		je	.L40
 317 0240 C5FB1006 		vmovsd	(%rsi), %xmm0
 318 0244 41B001   		movb	$1, %r8b
 319 0247 C5FB5802 		vaddsd	(%rdx), %xmm0, %xmm0
 320 024b C5FB1101 		vmovsd	%xmm0, (%rcx)
 321 024f 83F801   		cmpl	$1, %eax
 322 0252 7429     		je	.L40
 323 0254 C5FB1046 		vmovsd	8(%rsi), %xmm0
 323      08
 324 0259 41B002   		movb	$2, %r8b
 325 025c C5FB5842 		vaddsd	8(%rdx), %xmm0, %xmm0
 325      08
 326 0261 C5FB1141 		vmovsd	%xmm0, 8(%rcx)
 326      08
 327 0266 83F803   		cmpl	$3, %eax
 328 0269 7512     		jne	.L40
 329 026b C5FB1046 		vmovsd	16(%rsi), %xmm0
 329      10
 330 0270 41B003   		movb	$3, %r8b
 331 0273 C5FB5842 		vaddsd	16(%rdx), %xmm0, %xmm0
 331      10
 332 0278 C5FB1141 		vmovsd	%xmm0, 16(%rcx)
 332      10
 333              	.L40:
 334 027d 4189FB   		movl	%edi, %r11d
 335 0280 4531C9   		xorl	%r9d, %r9d
 336 0283 4531E4   		xorl	%r12d, %r12d
 337 0286 4129C3   		subl	%eax, %r11d
 338 0289 89C0     		movl	%eax, %eax
 339 028b 458D53FC 		leal	-4(%r11), %r10d
 340 028f 48C1E003 		salq	$3, %rax
 341 0293 4C8D3406 		leaq	(%rsi,%rax), %r14
 342 0297 41C1EA02 		shrl	$2, %r10d
 343 029b 4C8D2C02 		leaq	(%rdx,%rax), %r13
 344 029f 4183C201 		addl	$1, %r10d
 345 02a3 4801C8   		addq	%rcx, %rax
 346 02a6 428D1C95 		leal	0(,%r10,4), %ebx
 346      00000000 
 347              	.L42:
 348 02ae C4817910 		vmovupd	0(%r13,%r9), %xmm0
 348      440D00
 349 02b5 C4837D18 		vinsertf128	$0x1, 16(%r13,%r9), %ymm0, %ymm0
 349      440D1001 
 350 02bd 4183C401 		addl	$1, %r12d
 351 02c1 C4817D58 		vaddpd	(%r14,%r9), %ymm0, %ymm0
 351      040E
 352 02c7 C4A17811 		vmovups	%xmm0, (%rax,%r9)
 352      0408
 353 02cd C4A37D19 		vextractf128	$0x1, %ymm0, 16(%rax,%r9)
 353      44081001 
 354 02d5 4983C120 		addq	$32, %r9
 355 02d9 4539D4   		cmpl	%r10d, %r12d
 356 02dc 72D0     		jb	.L42
 357 02de 4101D8   		addl	%ebx, %r8d
 358 02e1 4139DB   		cmpl	%ebx, %r11d
 359 02e4 745A     		je	.L64
 360 02e6 4963C0   		movslq	%r8d, %rax
 361 02e9 C5FB1004 		vmovsd	(%rsi,%rax,8), %xmm0
 361      C6
 362 02ee C5FB5804 		vaddsd	(%rdx,%rax,8), %xmm0, %xmm0
 362      C2
 363 02f3 C5FB1104 		vmovsd	%xmm0, (%rcx,%rax,8)
 363      C1
 364 02f8 418D4001 		leal	1(%r8), %eax
 365 02fc 39C7     		cmpl	%eax, %edi
 366 02fe 7E40     		jle	.L64
 367 0300 4898     		cltq
 368 0302 4183C002 		addl	$2, %r8d
 369 0306 C5FB1004 		vmovsd	(%rsi,%rax,8), %xmm0
 369      C6
 370 030b C5FB5804 		vaddsd	(%rdx,%rax,8), %xmm0, %xmm0
 370      C2
 371 0310 C5FB1104 		vmovsd	%xmm0, (%rcx,%rax,8)
 371      C1
 372 0315 4439C7   		cmpl	%r8d, %edi
 373 0318 7E26     		jle	.L64
 374 031a 4963C0   		movslq	%r8d, %rax
 375 031d C5FB1004 		vmovsd	(%rsi,%rax,8), %xmm0
 375      C6
 376 0322 C5FB5804 		vaddsd	(%rdx,%rax,8), %xmm0, %xmm0
 376      C2
 377 0327 C5FB1104 		vmovsd	%xmm0, (%rcx,%rax,8)
 377      C1
 378 032c C5F877   		vzeroupper
 379              	.L65:
 380 032f 5B       		popq	%rbx
 381              		.cfi_restore 3
 382 0330 415A     		popq	%r10
 383              		.cfi_restore 10
 384              		.cfi_def_cfa 10, 0
 385 0332 415C     		popq	%r12
 386              		.cfi_restore 12
 387 0334 415D     		popq	%r13
 388              		.cfi_restore 13
 389 0336 415E     		popq	%r14
 390              		.cfi_restore 14
 391 0338 5D       		popq	%rbp
 392              		.cfi_restore 6
 393 0339 498D62F8 		leaq	-8(%r10), %rsp
 394              		.cfi_def_cfa 7, 8
 395              	.L68:
 396 033d C3       		ret
 397 033e 6690     		.p2align 4,,10
 398              		.p2align 3
 399              	.L64:
 400              		.cfi_escape 0xf,0x3,0x76,0x60,0x6
 401              		.cfi_escape 0x10,0x3,0x2,0x76,0x58
 402              		.cfi_escape 0x10,0x6,0x2,0x76,0
 403              		.cfi_escape 0x10,0xc,0x2,0x76,0x68
 404              		.cfi_escape 0x10,0xd,0x2,0x76,0x70
 405              		.cfi_escape 0x10,0xe,0x2,0x76,0x78
 406 0340 C5F877   		vzeroupper
 407 0343 EBEA     		jmp	.L65
 408              		.p2align 4,,10
 409 0345 0F1F00   		.p2align 3
 410              	.L48:
 411              		.cfi_def_cfa 7, 8
 412              		.cfi_restore 3
 413              		.cfi_restore 6
 414              		.cfi_restore 12
 415              		.cfi_restore 13
 416              		.cfi_restore 14
 417 0348 31C0     		xorl	%eax, %eax
 418 034a 660F1F44 		.p2align 4,,10
 418      0000
 419              		.p2align 3
 420              	.L39:
 421 0350 C5FB1004 		vmovsd	(%rsi,%rax,8), %xmm0
 421      C6
 422 0355 C5FB5804 		vaddsd	(%rdx,%rax,8), %xmm0, %xmm0
 422      C2
 423 035a C5FB1104 		vmovsd	%xmm0, (%rcx,%rax,8)
 423      C1
 424 035f 4883C001 		addq	$1, %rax
 425 0363 39C7     		cmpl	%eax, %edi
 426 0365 7FE9     		jg	.L39
 427 0367 C3       		ret
 428              		.cfi_endproc
 429              	.LFE2278:
 431              		.section	.text.unlikely
 432              	.LCOLDE7:
 433              		.text
 434              	.LHOTE7:
 435              		.section	.rodata.str1.1
 436              	.LC8:
 437 0007 25730A53 		.string	"%s\nSize:\tGflops\n"
 437      697A653A 
 437      0947666C 
 437      6F70730A 
 437      00
 438              	.LC10:
 439 0018 25640925 		.string	"%d\t%.3g\n"
 439      2E33670A 
 439      00
 440              	.LC13:
 441 0021 6572726F 		.string	"error in matrix multiply"
 441      7220696E 
 441      206D6174 
 441      72697820 
 441      6D756C74 
 442              		.section	.text.unlikely
 443              	.LCOLDB14:
 444              		.text
 445              	.LHOTB14:
 446 0368 0F1F8400 		.p2align 4,,15
 446      00000000 
 447              		.globl	benchmark
 449              	benchmark:
 450              	.LFB2279:
 451              		.cfi_startproc
 452 0370 4157     		pushq	%r15
 453              		.cfi_def_cfa_offset 16
 454              		.cfi_offset 15, -16
 455 0372 4989D7   		movq	%rdx, %r15
 456 0375 4889FA   		movq	%rdi, %rdx
 457 0378 BF010000 		movl	$1, %edi
 457      00
 458 037d 4156     		pushq	%r14
 459              		.cfi_def_cfa_offset 24
 460              		.cfi_offset 14, -24
 461 037f 4189CE   		movl	%ecx, %r14d
 462 0382 4155     		pushq	%r13
 463              		.cfi_def_cfa_offset 32
 464              		.cfi_offset 13, -32
 465 0384 4989F5   		movq	%rsi, %r13
 466 0387 BE000000 		movl	$.LC8, %esi
 466      00
 467 038c 4154     		pushq	%r12
 468              		.cfi_def_cfa_offset 40
 469              		.cfi_offset 12, -40
 470 038e 55       		pushq	%rbp
 471              		.cfi_def_cfa_offset 48
 472              		.cfi_offset 6, -48
 473 038f 53       		pushq	%rbx
 474              		.cfi_def_cfa_offset 56
 475              		.cfi_offset 3, -56
 476 0390 4C89CB   		movq	%r9, %rbx
 477 0393 4883EC58 		subq	$88, %rsp
 478              		.cfi_def_cfa_offset 144
 479 0397 64488B04 		movq	%fs:40, %rax
 479      25280000 
 479      00
 480 03a0 48894424 		movq	%rax, 72(%rsp)
 480      48
 481 03a5 31C0     		xorl	%eax, %eax
 482 03a7 4C894424 		movq	%r8, 8(%rsp)
 482      08
 483 03ac 488BAC24 		movq	144(%rsp), %rbp
 483      90000000 
 484 03b4 E8000000 		call	__printf_chk
 484      00
 485 03b9 4585F6   		testl	%r14d, %r14d
 486 03bc 0F8EEC02 		jle	.L70
 486      0000
 487 03c2 418D46FF 		leal	-1(%r14), %eax
 488 03c6 4C897C24 		movq	%r15, 32(%rsp)
 488      20
 489 03cb 498D4487 		leaq	4(%r15,%rax,4), %rax
 489      04
 490 03d0 48894424 		movq	%rax, 40(%rsp)
 490      28
 491 03d5 4C89F8   		movq	%r15, %rax
 492              	.L98:
 493 03d8 448B20   		movl	(%rax), %r12d
 494 03db 4489E0   		movl	%r12d, %eax
 495 03de 410FAFC4 		imull	%r12d, %eax
 496 03e2 89442418 		movl	%eax, 24(%rsp)
 497 03e6 85C0     		testl	%eax, %eax
 498 03e8 0F848F00 		je	.L72
 498      0000
 499 03ee 4C8B7424 		movq	8(%rsp), %r14
 499      08
 500 03f3 8D50FF   		leal	-1(%rax), %edx
 501 03f6 488D04D5 		leaq	8(,%rdx,8), %rax
 501      08000000 
 502 03fe 48894424 		movq	%rax, 16(%rsp)
 502      10
 503 0403 4D89F7   		movq	%r14, %r15
 504 0406 4901C6   		addq	%rax, %r14
 505              	.L73:
 506 0409 E8000000 		call	drand48
 506      00
 507 040e 4983C708 		addq	$8, %r15
 508 0412 C5FB58C0 		vaddsd	%xmm0, %xmm0, %xmm0
 509 0416 C5FB5C05 		vsubsd	.LC3(%rip), %xmm0, %xmm0
 509      00000000 
 510 041e C4C17B11 		vmovsd	%xmm0, -8(%r15)
 510      47F8
 511 0424 4D39F7   		cmpq	%r14, %r15
 512 0427 75E0     		jne	.L73
 513 0429 4C8B7C24 		movq	16(%rsp), %r15
 513      10
 514 042e 4989DE   		movq	%rbx, %r14
 515 0431 4901DF   		addq	%rbx, %r15
 516              	.L74:
 517 0434 E8000000 		call	drand48
 517      00
 518 0439 4983C608 		addq	$8, %r14
 519 043d C5FB58C0 		vaddsd	%xmm0, %xmm0, %xmm0
 520 0441 C5FB5C05 		vsubsd	.LC3(%rip), %xmm0, %xmm0
 520      00000000 
 521 0449 C4C17B11 		vmovsd	%xmm0, -8(%r14)
 521      46F8
 522 044f 4D39FE   		cmpq	%r15, %r14
 523 0452 75E0     		jne	.L74
 524 0454 448B7C24 		movl	24(%rsp), %r15d
 524      18
 525 0459 4531F6   		xorl	%r14d, %r14d
 526              	.L75:
 527 045c E8000000 		call	drand48
 527      00
 528 0461 C5FB58C0 		vaddsd	%xmm0, %xmm0, %xmm0
 529 0465 C5FB5C05 		vsubsd	.LC3(%rip), %xmm0, %xmm0
 529      00000000 
 530 046d C4A17B11 		vmovsd	%xmm0, 0(%rbp,%r14,8)
 530      44F500
 531 0474 4983C601 		addq	$1, %r14
 532 0478 4539F7   		cmpl	%r14d, %r15d
 533 047b 7FDF     		jg	.L75
 534              	.L72:
 535 047d 4989EE   		movq	%rbp, %r14
 536 0480 41BF0100 		movl	$1, %r15d
 536      0000
 537 0486 4889DD   		movq	%rbx, %rbp
 538              	.L77:
 539 0489 4C89F1   		movq	%r14, %rcx
 540 048c 4889EA   		movq	%rbp, %rdx
 541 048f 488B7424 		movq	8(%rsp), %rsi
 541      08
 542 0494 4489E7   		movl	%r12d, %edi
 543 0497 41FFD5   		call	*%r13
 544 049a 488D7424 		leaq	48(%rsp), %rsi
 544      30
 545 049f BF010000 		movl	$1, %edi
 545      00
 546 04a4 31DB     		xorl	%ebx, %ebx
 547 04a6 E8000000 		call	clock_gettime
 547      00
 548 04ab C5F957C0 		vxorpd	%xmm0, %xmm0, %xmm0
 549 04af C5F157C9 		vxorpd	%xmm1, %xmm1, %xmm1
 550 04b3 C4E1FB2A 		vcvtsi2sdq	56(%rsp), %xmm0, %xmm0
 550      442438
 551 04ba C5FB5905 		vmulsd	.LC1(%rip), %xmm0, %xmm0
 551      00000000 
 552 04c2 C4E1F32A 		vcvtsi2sdq	48(%rsp), %xmm1, %xmm1
 552      4C2430
 553 04c9 C5F358D8 		vaddsd	%xmm0, %xmm1, %xmm3
 554 04cd C5FB115C 		vmovsd	%xmm3, 16(%rsp)
 554      2410
 555              		.p2align 4,,10
 556 04d3 0F1F4400 		.p2align 3
 556      00
 557              	.L76:
 558 04d8 83C301   		addl	$1, %ebx
 559 04db 4C89F1   		movq	%r14, %rcx
 560 04de 4889EA   		movq	%rbp, %rdx
 561 04e1 488B7424 		movq	8(%rsp), %rsi
 561      08
 562 04e6 4489E7   		movl	%r12d, %edi
 563 04e9 41FFD5   		call	*%r13
 564 04ec 4439FB   		cmpl	%r15d, %ebx
 565 04ef 75E7     		jne	.L76
 566 04f1 488D7424 		leaq	48(%rsp), %rsi
 566      30
 567 04f6 BF010000 		movl	$1, %edi
 567      00
 568 04fb E8000000 		call	clock_gettime
 568      00
 569 0500 C5F957C0 		vxorpd	%xmm0, %xmm0, %xmm0
 570 0504 C5F157C9 		vxorpd	%xmm1, %xmm1, %xmm1
 571 0508 C5FB102D 		vmovsd	.LC3(%rip), %xmm5
 571      00000000 
 572 0510 C4E1FB2A 		vcvtsi2sdq	56(%rsp), %xmm0, %xmm0
 572      442438
 573 0517 C5FB5905 		vmulsd	.LC1(%rip), %xmm0, %xmm0
 573      00000000 
 574 051f C4E1F32A 		vcvtsi2sdq	48(%rsp), %xmm1, %xmm1
 574      4C2430
 575 0526 448D3C1B 		leal	(%rbx,%rbx), %r15d
 576 052a C5F358C0 		vaddsd	%xmm0, %xmm1, %xmm0
 577 052e C5FB5C44 		vsubsd	16(%rsp), %xmm0, %xmm0
 577      2410
 578 0534 C5F92EE8 		vucomisd	%xmm0, %xmm5
 579 0538 0F874BFF 		ja	.L77
 579      FFFF
 580 053e 4C89F0   		movq	%r14, %rax
 581 0541 4189DE   		movl	%ebx, %r14d
 582 0544 C5E957D2 		vxorpd	%xmm2, %xmm2, %xmm2
 583 0548 C5F157C9 		vxorpd	%xmm1, %xmm1, %xmm1
 584 054c 4489E2   		movl	%r12d, %edx
 585 054f BE000000 		movl	$.LC10, %esi
 585      00
 586 0554 BF010000 		movl	$1, %edi
 586      00
 587 0559 C4C16B2A 		vcvtsi2sd	%r14d, %xmm2, %xmm2
 587      D6
 588 055e 4889EB   		movq	%rbp, %rbx
 589 0561 C5EB5915 		vmulsd	.LC9(%rip), %xmm2, %xmm2
 589      00000000 
 590 0569 4889C5   		movq	%rax, %rbp
 591 056c B8010000 		movl	$1, %eax
 591      00
 592 0571 C4C1732A 		vcvtsi2sd	%r12d, %xmm1, %xmm1
 592      CC
 593 0576 C5EB59D1 		vmulsd	%xmm1, %xmm2, %xmm2
 594 057a C5F359D2 		vmulsd	%xmm2, %xmm1, %xmm2
 595 057e C5F359CA 		vmulsd	%xmm2, %xmm1, %xmm1
 596 0582 C5F35EC0 		vdivsd	%xmm0, %xmm1, %xmm0
 597 0586 E8000000 		call	__printf_chk
 597      00
 598 058b 4C637424 		movslq	24(%rsp), %r14
 598      18
 599 0590 31F6     		xorl	%esi, %esi
 600 0592 4889EF   		movq	%rbp, %rdi
 601 0595 49C1E603 		salq	$3, %r14
 602 0599 4C89F2   		movq	%r14, %rdx
 603 059c E8000000 		call	memset
 603      00
 604 05a1 4C89F7   		movq	%r14, %rdi
 605 05a4 E8000000 		call	malloc
 605      00
 606 05a9 31F6     		xorl	%esi, %esi
 607 05ab 4C89F2   		movq	%r14, %rdx
 608 05ae 4889C7   		movq	%rax, %rdi
 609 05b1 4989C7   		movq	%rax, %r15
 610 05b4 E8000000 		call	memset
 610      00
 611 05b9 4585E4   		testl	%r12d, %r12d
 612 05bc 7E6A     		jle	.L84
 613 05be 4C8B5C24 		movq	8(%rsp), %r11
 613      08
 614 05c3 418D4424 		leal	-1(%r12), %eax
 614      FF
 615 05c8 4D89FA   		movq	%r15, %r10
 616 05cb 4D8D74C7 		leaq	8(%r15,%rax,8), %r14
 616      08
 617 05d0 4963C4   		movslq	%r12d, %rax
 618 05d3 48C1E003 		salq	$3, %rax
 619              	.L83:
 620 05d7 31FF     		xorl	%edi, %edi
 621 05d9 4531C0   		xorl	%r8d, %r8d
 622 05dc 0F1F4000 		.p2align 4,,10
 623              		.p2align 3
 624              	.L82:
 625 05e0 C4C17B10 		vmovsd	(%r10,%rdi), %xmm1
 625      0C3A
 626 05e6 488D343B 		leaq	(%rbx,%rdi), %rsi
 627 05ea 4C89D9   		movq	%r11, %rcx
 628 05ed 31D2     		xorl	%edx, %edx
 629 05ef 90       		.p2align 4,,10
 630              		.p2align 3
 631              	.L81:
 632 05f0 C5FB1001 		vmovsd	(%rcx), %xmm0
 633 05f4 4801C1   		addq	%rax, %rcx
 634 05f7 C5FB5904 		vmulsd	(%rsi,%rdx,8), %xmm0, %xmm0
 634      D6
 635 05fc 4883C201 		addq	$1, %rdx
 636 0600 C5F358C8 		vaddsd	%xmm0, %xmm1, %xmm1
 637 0604 4139D4   		cmpl	%edx, %r12d
 638 0607 7FE7     		jg	.L81
 639 0609 4183C001 		addl	$1, %r8d
 640 060d C4C17B11 		vmovsd	%xmm1, (%r10,%rdi)
 640      0C3A
 641 0613 4801C7   		addq	%rax, %rdi
 642 0616 4539E0   		cmpl	%r12d, %r8d
 643 0619 75C5     		jne	.L82
 644 061b 4983C208 		addq	$8, %r10
 645 061f 4983C308 		addq	$8, %r11
 646 0623 4D39F2   		cmpq	%r14, %r10
 647 0626 75AF     		jne	.L83
 648              	.L84:
 649 0628 4889E9   		movq	%rbp, %rcx
 650 062b 4889DA   		movq	%rbx, %rdx
 651 062e 488B7424 		movq	8(%rsp), %rsi
 651      08
 652 0633 4489E7   		movl	%r12d, %edi
 653 0636 41FFD5   		call	*%r13
 654 0639 8B442418 		movl	24(%rsp), %eax
 655 063d 85C0     		testl	%eax, %eax
 656 063f 7457     		je	.L80
 657 0641 C5FB1045 		vmovsd	0(%rbp), %xmm0
 657      00
 658 0646 C4C17B5C 		vsubsd	(%r15), %xmm0, %xmm0
 658      07
 659 064b C5F95405 		vandpd	.LC11(%rip), %xmm0, %xmm0
 659      00000000 
 660 0653 C5F92E05 		vucomisd	.LC12(%rip), %xmm0
 660      00000000 
 661 065b 7774     		ja	.L122
 662 065d 8B442418 		movl	24(%rsp), %eax
 663 0661 8D50FF   		leal	-1(%rax), %edx
 664 0664 31C0     		xorl	%eax, %eax
 665 0666 48C1E203 		salq	$3, %rdx
 666 066a EB27     		jmp	.L90
 667 066c 0F1F4000 		.p2align 4,,10
 668              		.p2align 3
 669              	.L97:
 670 0670 C5FB1044 		vmovsd	8(%rbp,%rax), %xmm0
 670      0508
 671 0676 C4C17B5C 		vsubsd	8(%r15,%rax), %xmm0, %xmm0
 671      440708
 672 067d 4883C008 		addq	$8, %rax
 673 0681 C5F95405 		vandpd	.LC11(%rip), %xmm0, %xmm0
 673      00000000 
 674 0689 C5F92E05 		vucomisd	.LC12(%rip), %xmm0
 674      00000000 
 675 0691 773E     		ja	.L122
 676              	.L90:
 677 0693 4839D0   		cmpq	%rdx, %rax
 678 0696 75D8     		jne	.L97
 679              	.L80:
 680 0698 48834424 		addq	$4, 32(%rsp)
 680      2004
 681 069e 488B4424 		movq	32(%rsp), %rax
 681      20
 682 06a3 483B4424 		cmpq	40(%rsp), %rax
 682      28
 683 06a8 0F852AFD 		jne	.L98
 683      FFFF
 684              	.L70:
 685 06ae 488B4424 		movq	72(%rsp), %rax
 685      48
 686 06b3 64483304 		xorq	%fs:40, %rax
 686      25280000 
 686      00
 687 06bc 0F850601 		jne	.L125
 687      0000
 688 06c2 4883C458 		addq	$88, %rsp
 689              		.cfi_remember_state
 690              		.cfi_def_cfa_offset 56
 691 06c6 5B       		popq	%rbx
 692              		.cfi_def_cfa_offset 48
 693 06c7 5D       		popq	%rbp
 694              		.cfi_def_cfa_offset 40
 695 06c8 415C     		popq	%r12
 696              		.cfi_def_cfa_offset 32
 697 06ca 415D     		popq	%r13
 698              		.cfi_def_cfa_offset 24
 699 06cc 415E     		popq	%r14
 700              		.cfi_def_cfa_offset 16
 701 06ce 415F     		popq	%r15
 702              		.cfi_def_cfa_offset 8
 703 06d0 C3       		ret
 704              	.L122:
 705              		.cfi_restore_state
 706 06d1 BF000000 		movl	$.LC13, %edi
 706      00
 707 06d6 4589E6   		movl	%r12d, %r14d
 708 06d9 E8000000 		call	perror
 708      00
 709 06de 4585E4   		testl	%r12d, %r12d
 710 06e1 0F8EC300 		jle	.L126
 710      0000
 711 06e7 418D4424 		leal	-1(%r12), %eax
 711      FF
 712 06ec 4963DE   		movslq	%r14d, %rbx
 713 06ef 4989C4   		movq	%rax, %r12
 714 06f2 488D44C5 		leaq	8(%rbp,%rax,8), %rax
 714      08
 715 06f7 48894424 		movq	%rax, 16(%rsp)
 715      10
 716 06fc 488D04DD 		leaq	0(,%rbx,8), %rax
 716      00000000 
 717 0704 48894424 		movq	%rax, 8(%rsp)
 717      08
 718              	.L92:
 719 0709 4889EA   		movq	%rbp, %rdx
 720 070c 4531ED   		xorl	%r13d, %r13d
 721              	.L91:
 722 070f C5FB1002 		vmovsd	(%rdx), %xmm0
 723 0713 BE000000 		movl	$.LC5, %esi
 723      00
 724 0718 BF010000 		movl	$1, %edi
 724      00
 725 071d B8010000 		movl	$1, %eax
 725      00
 726 0722 4183C501 		addl	$1, %r13d
 727 0726 48895424 		movq	%rdx, 24(%rsp)
 727      18
 728 072b E8000000 		call	__printf_chk
 728      00
 729 0730 488B5424 		movq	24(%rsp), %rdx
 729      18
 730 0735 48035424 		addq	8(%rsp), %rdx
 730      08
 731 073a 4539F5   		cmpl	%r14d, %r13d
 732 073d 75D0     		jne	.L91
 733 073f BF0A0000 		movl	$10, %edi
 733      00
 734 0744 4883C508 		addq	$8, %rbp
 735 0748 E8000000 		call	putchar
 735      00
 736 074d 483B6C24 		cmpq	16(%rsp), %rbp
 736      10
 737 0752 75B5     		jne	.L92
 738 0754 BF0A0000 		movl	$10, %edi
 738      00
 739 0759 4C89FD   		movq	%r15, %rbp
 740 075c 48C1E303 		salq	$3, %rbx
 741 0760 E8000000 		call	putchar
 741      00
 742 0765 4F8D6CE7 		leaq	8(%r15,%r12,8), %r13
 742      08
 743              	.L95:
 744 076a 4989EF   		movq	%rbp, %r15
 745 076d 4531E4   		xorl	%r12d, %r12d
 746              	.L94:
 747 0770 C4C17B10 		vmovsd	(%r15), %xmm0
 747      07
 748 0775 BE000000 		movl	$.LC5, %esi
 748      00
 749 077a 4183C401 		addl	$1, %r12d
 750 077e 4901DF   		addq	%rbx, %r15
 751 0781 BF010000 		movl	$1, %edi
 751      00
 752 0786 B8010000 		movl	$1, %eax
 752      00
 753 078b E8000000 		call	__printf_chk
 753      00
 754 0790 4539F4   		cmpl	%r14d, %r12d
 755 0793 75DB     		jne	.L94
 756 0795 BF0A0000 		movl	$10, %edi
 756      00
 757 079a 4883C508 		addq	$8, %rbp
 758 079e E8000000 		call	putchar
 758      00
 759 07a3 4C39ED   		cmpq	%r13, %rbp
 760 07a6 75C2     		jne	.L95
 761 07a8 EB0A     		jmp	.L96
 762              	.L126:
 763 07aa BF0A0000 		movl	$10, %edi
 763      00
 764 07af E8000000 		call	putchar
 764      00
 765              	.L96:
 766 07b4 BF0A0000 		movl	$10, %edi
 766      00
 767 07b9 E8000000 		call	putchar
 767      00
 768 07be BF010000 		movl	$1, %edi
 768      00
 769 07c3 E8000000 		call	exit
 769      00
 770              	.L125:
 771 07c8 E8000000 		call	__stack_chk_fail
 771      00
 772              		.cfi_endproc
 773              	.LFE2279:
 775              		.section	.text.unlikely
 776              	.LCOLDE14:
 777              		.text
 778              	.LHOTE14:
 779              		.section	.rodata.str1.1
 780              	.LC15:
 781 003a 6E616976 		.string	"naive"
 781      6500
 782              		.section	.text.unlikely
 783              	.LCOLDB16:
 784              		.section	.text.startup,"ax",@progbits
 785              	.LHOTB16:
 786              		.p2align 4,,15
 787              		.globl	main
 789              	main:
 790              	.LFB2280:
 791              		.cfi_startproc
 792 0000 55       		pushq	%rbp
 793              		.cfi_def_cfa_offset 16
 794              		.cfi_offset 6, -16
 795 0001 B9010000 		movl	$1, %ecx
 795      00
 796 0006 BE000000 		movl	$naive_dgemm, %esi
 796      00
 797 000b BF000000 		movl	$.LC15, %edi
 797      00
 798 0010 4889E5   		movq	%rsp, %rbp
 799              		.cfi_def_cfa_register 6
 800 0013 4883EC50 		subq	$80, %rsp
 801 0017 64488B04 		movq	%fs:40, %rax
 801      25280000 
 801      00
 802 0020 488945F8 		movq	%rax, -8(%rbp)
 803 0024 31C0     		xorl	%eax, %eax
 804 0026 4881EC10 		subq	$131088, %rsp
 804      000200
 805 002d C745B406 		movl	$6, -76(%rbp)
 805      000000
 806 0034 488D55B0 		leaq	-80(%rbp), %rdx
 807 0038 4989E0   		movq	%rsp, %r8
 808 003b 4881EC10 		subq	$131088, %rsp
 808      000200
 809 0042 C745B807 		movl	$7, -72(%rbp)
 809      000000
 810 0049 4989E1   		movq	%rsp, %r9
 811 004c 4881EC10 		subq	$131088, %rsp
 811      000200
 812 0053 C745BC08 		movl	$8, -68(%rbp)
 812      000000
 813 005a 4889E0   		movq	%rsp, %rax
 814 005d 4883EC08 		subq	$8, %rsp
 815 0061 C745C010 		movl	$16, -64(%rbp)
 815      000000
 816 0068 50       		pushq	%rax
 817 0069 C745C420 		movl	$32, -60(%rbp)
 817      000000
 818 0070 C745C840 		movl	$64, -56(%rbp)
 818      000000
 819 0077 C745CC41 		movl	$65, -52(%rbp)
 819      000000
 820 007e C745D042 		movl	$66, -48(%rbp)
 820      000000
 821 0085 C745D443 		movl	$67, -44(%rbp)
 821      000000
 822 008c C745D880 		movl	$128, -40(%rbp)
 822      000000
 823 0093 C745DC99 		movl	$153, -36(%rbp)
 823      000000
 824 009a C745E0B9 		movl	$185, -32(%rbp)
 824      000000
 825 00a1 C745E4FB 		movl	$251, -28(%rbp)
 825      000000
 826 00a8 C745E81D 		movl	$285, -24(%rbp)
 826      010000
 827 00af C745EC2D 		movl	$301, -20(%rbp)
 827      010000
 828 00b6 C745F053 		movl	$339, -16(%rbp)
 828      010000
 829 00bd C745B080 		movl	$128, -80(%rbp)
 829      000000
 830 00c4 E8000000 		call	benchmark
 830      00
 831 00c9 31C0     		xorl	%eax, %eax
 832 00cb 488B4DF8 		movq	-8(%rbp), %rcx
 833 00cf 6448330C 		xorq	%fs:40, %rcx
 833      25280000 
 833      00
 834 00d8 7502     		jne	.L131
 835 00da C9       		leave
 836              		.cfi_remember_state
 837              		.cfi_def_cfa 7, 8
 838 00db C3       		ret
 839              	.L131:
 840              		.cfi_restore_state
 841 00dc E8000000 		call	__stack_chk_fail
 841      00
 842              		.cfi_endproc
 843              	.LFE2280:
 845              		.section	.text.unlikely
 846              	.LCOLDE16:
 847              		.section	.text.startup
 848              	.LHOTE16:
 849              		.section	.rodata.cst8,"aM",@progbits,8
 850              		.align 8
 851              	.LC1:
 852 0000 95D626E8 		.long	3894859413
 853 0004 0B2E113E 		.long	1041313291
 854              		.align 8
 855              	.LC3:
 856 0008 00000000 		.long	0
 857 000c 0000F03F 		.long	1072693248
 858              		.align 8
 859              	.LC9:
 860 0010 95D626E8 		.long	3894859413
 861 0014 0B2E213E 		.long	1042361867
 862              		.section	.rodata.cst16,"aM",@progbits,16
 863              		.align 16
 864              	.LC11:
 865 0000 FFFFFFFF 		.long	4294967295
 866 0004 FFFFFF7F 		.long	2147483647
 867 0008 00000000 		.long	0
 868 000c 00000000 		.long	0
 869              		.section	.rodata.cst8
 870              		.align 8
 871              	.LC12:
 872 0018 7B14AE47 		.long	1202590843
 873 001c E17A843F 		.long	1065646817
 874              		.ident	"GCC: (Gentoo 4.9.3 p1.5, pie-0.6.4) 4.9.3"
 875              		.section	.note.GNU-stack,"",@progbits
