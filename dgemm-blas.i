# 1 "dgemm-blas.c"
# 1 "/home/jerryz123/opmatmul//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "dgemm-blas.c"
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 1
# 34 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h"
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_version.h" 1
# 35 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_types.h" 1
# 36 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_types.h"
typedef
struct _MKL_Complex8 {
    float real;
    float imag;
} MKL_Complex8;




typedef
struct _MKL_Complex16 {
    double real;
    double imag;
} MKL_Complex16;



typedef
struct {
    int MajorVersion;
    int MinorVersion;
    int UpdateVersion;
    char * ProductStatus;
    char * Build;
    char * Processor;
    char * Platform;
} MKLVersion;
# 36 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_blas.h" 1
# 38 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_blas.h"
void XERBLA(const char *srname, const int *info, const int lsrname);
int LSAME(const char *ca, const char *cb, const long long int lca, const long long int lcb);



float SCABS1(const MKL_Complex8 *c);
float SASUM(const long long int *n, const float *x, const long long int *incx);
void SAXPY(const long long int *n, const float *alpha, const float *x, const long long int *incx, float *y, const long long int *incy);
void SAXPBY(const long long int *n, const float *alpha, const float *x, const long long int *incx, const float *beta, float *y, const long long int *incy);
void SAXPYI(const long long int *nz, const float *a, const float *x, const long long int *indx,float *y);
float SCASUM(const long long int *n, const MKL_Complex8 *x, const long long int *incx);
float SCNRM2(const long long int *n, const MKL_Complex8 *x, const long long int *incx);
void SCOPY(const long long int *n, const float *x, const long long int *incx, float *y, const long long int *incy);
float SDOT(const long long int *n, const float *x, const long long int *incx, const float *y, const long long int *incy);
float SDSDOT(const long long int *n, const float *sb, const float *x, const long long int *incx, const float *y, const long long int *incy);
float SDOTI(const long long int *nz, const float *x, const long long int *indx, const float *y);
void SGTHR(const long long int *nz, const float *y, float *x, const long long int *indx);
void SGTHRZ(const long long int *nz, float *y, float *x, const long long int *indx);
float SNRM2(const long long int *n, const float *x, const long long int *incx);
void SROT(const long long int *n, float *x, const long long int *incx, float *y, const long long int *incy, const float *c, const float *s);
void SROTG(float *a,float *b,float *c,float *s);
void SROTI(const long long int *nz, float *x, const long long int *indx, float *y, const float *c, const float *s);
void SROTM(const long long int *n, float *x, const long long int *incx, float *y, const long long int *incy, const float *param);
void SROTMG(float *d1, float *d2, float *x1, const float *y1, float *param);
void SSCAL(const long long int *n, const float *a, float *x, const long long int *incx);
void SSCTR(const long long int *nz, const float *x, const long long int *indx, float *y);
void SSWAP(const long long int *n, float *x, const long long int *incx, float *y, const long long int *incy);
long long int ISAMAX(const long long int *n, const float *x, const long long int *incx);
long long int ISAMIN(const long long int *n, const float *x, const long long int *incx);

void CAXPY(const long long int *n, const MKL_Complex8 *alpha, const MKL_Complex8 *x, const long long int *incx, MKL_Complex8 *y, const long long int *incy);
void CAXPBY(const long long int *n, const MKL_Complex8 *alpha, const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);
void CAXPYI(const long long int *nz, const MKL_Complex8 *a, const MKL_Complex8 *x, const long long int *indx, MKL_Complex8 *y);
void CCOPY(const long long int *n, const MKL_Complex8 *x, const long long int *incx, MKL_Complex8 *y, const long long int *incy);
void CDOTC(MKL_Complex8 *pres, const long long int *n, const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy);
void CDOTCI(MKL_Complex8 *pres, const long long int *nz, const MKL_Complex8 *x, const long long int *indx, const MKL_Complex8 *y);
void CDOTU(MKL_Complex8 *pres, const long long int *n, const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy);
void CDOTUI(MKL_Complex8 *pres, const long long int *nz, const MKL_Complex8 *x, const long long int *indx, const MKL_Complex8 *y);
void CGTHR(const long long int *nz, const MKL_Complex8 *y, MKL_Complex8 *x, const long long int *indx);
void CGTHRZ(const long long int *nz, MKL_Complex8 *y, MKL_Complex8 *x, const long long int *indx);
void CROTG(MKL_Complex8 *a, const MKL_Complex8 *b, float *c, MKL_Complex8 *s);
void CSCAL(const long long int *n, const MKL_Complex8 *a, MKL_Complex8 *x, const long long int *incx);
void CSCTR(const long long int *nz, const MKL_Complex8 *x, const long long int *indx, MKL_Complex8 *y);
void CSROT(const long long int *n, MKL_Complex8 *x, const long long int *incx, MKL_Complex8 *y, const long long int *incy, const float *c, const float *s);
void CSSCAL(const long long int *n, const float *a, MKL_Complex8 *x, const long long int *incx);
void CSWAP(const long long int *n, MKL_Complex8 *x, const long long int *incx, MKL_Complex8 *y, const long long int *incy);
long long int ICAMAX(const long long int *n, const MKL_Complex8 *x, const long long int *incx);
long long int ICAMIN(const long long int *n, const MKL_Complex8 *x, const long long int *incx);

double DCABS1(const MKL_Complex16 *z);
double DASUM(const long long int *n, const double *x, const long long int *incx);
void DAXPY(const long long int *n, const double *alpha, const double *x, const long long int *incx, double *y, const long long int *incy);
void DAXPBY(const long long int *n, const double *alpha, const double *x, const long long int *incx, const double *beta, double *y, const long long int *incy);
void DAXPYI(const long long int *nz, const double *a, const double *x, const long long int *indx, double *y);
void DCOPY(const long long int *n, const double *x, const long long int *incx, double *y, const long long int *incy);
double DDOT(const long long int *n, const double *x, const long long int *incx, const double *y, const long long int *incy);
double DSDOT(const long long int *n, const float *x, const long long int *incx, const float *y, const long long int *incy);
double DDOTI(const long long int *nz, const double *x, const long long int *indx, const double *y);
void DGTHR(const long long int *nz, const double *y, double *x, const long long int *indx);
void DGTHRZ(const long long int *nz, double *y, double *x, const long long int *indx);
double DNRM2(const long long int *n, const double *x, const long long int *incx);
void DROT(const long long int *n, double *x, const long long int *incx, double *y, const long long int *incy, const double *c, const double *s);
void DROTG(double *a,double *b,double *c,double *s);
void DROTI(const long long int *nz, double *x, const long long int *indx, double *y, const double *c, const double *s);
void DROTM(const long long int *n, double *x, const long long int *incx, double *y, const long long int *incy, const double *param);
void DROTMG(double *d1, double *d2, double *x1, const double *y1, double *param);
void DSCAL(const long long int *n, const double *a, double *x, const long long int *incx);
void DSCTR(const long long int *nz, const double *x, const long long int *indx, double *y);
void DSWAP(const long long int *n, double *x, const long long int *incx, double *y, const long long int *incy);
double DZASUM(const long long int *n, const MKL_Complex16 *x, const long long int *incx);
double DZNRM2(const long long int *n, const MKL_Complex16 *x, const long long int *incx);
long long int IDAMAX(const long long int *n, const double *x, const long long int *incx);
long long int IDAMIN(const long long int *n, const double *x, const long long int *incx);

void ZAXPY(const long long int *n, const MKL_Complex16 *alpha, const MKL_Complex16 *x, const long long int *incx, MKL_Complex16 *y, const long long int *incy);
void ZAXPBY(const long long int *n, const MKL_Complex16 *alpha, const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);
void ZAXPYI(const long long int *nz, const MKL_Complex16 *a, const MKL_Complex16 *x, const long long int *indx, MKL_Complex16 *y);
void ZCOPY(const long long int *n, const MKL_Complex16 *x, const long long int *incx, MKL_Complex16 *y, const long long int *incy);
void ZDOTC(MKL_Complex16 *pres, const long long int *n, const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *y, const long long int *incy);
void ZDOTCI(MKL_Complex16 *pres,const long long int *nz, const MKL_Complex16 *x, const long long int *indx, const MKL_Complex16 *y);
void ZDOTU(MKL_Complex16 *pres, const long long int *n, const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *y, const long long int *incy);
void ZDOTUI(MKL_Complex16 *pres, const long long int *nz, const MKL_Complex16 *x, const long long int *indx, const MKL_Complex16 *y);
void ZDROT(const long long int *n, MKL_Complex16 *x, const long long int *incx, MKL_Complex16 *y, const long long int *incy, const double *c, const double *s);
void ZDSCAL(const long long int *n, const double *a, MKL_Complex16 *x, const long long int *incx);
void ZGTHR(const long long int *nz, const MKL_Complex16 *y, MKL_Complex16 *x, const long long int *indx);
void ZGTHRZ(const long long int *nz, MKL_Complex16 *y, MKL_Complex16 *x, const long long int *indx);
void ZROTG(MKL_Complex16 *a, const MKL_Complex16 *b, double *c, MKL_Complex16 *s);
void ZSCAL(const long long int *n, const MKL_Complex16 *a, MKL_Complex16 *x, const long long int *incx);
void ZSCTR(const long long int *nz, const MKL_Complex16 *x, const long long int *indx, MKL_Complex16 *y);
void ZSWAP(const long long int *n, MKL_Complex16 *x, const long long int *incx, MKL_Complex16 *y, const long long int *incy);
long long int IZAMAX(const long long int *n, const MKL_Complex16 *x, const long long int *incx);
long long int IZAMIN(const long long int *n,const MKL_Complex16 *x, const long long int *incx);



void SGBMV(const char *trans, const long long int *m, const long long int *n, const long long int *kl, const long long int *ku,
           const float *alpha, const float *a, const long long int *lda, const float *x, const long long int *incx,
           const float *beta, float *y, const long long int *incy);
void SGEMV(const char *trans, const long long int *m, const long long int *n, const float *alpha,
           const float *a, const long long int *lda, const float *x, const long long int *incx,
           const float *beta, float *y, const long long int *incy);
void SGER(const long long int *m, const long long int *n, const float *alpha, const float *x, const long long int *incx,
          const float *y, const long long int *incy, float *a, const long long int *lda);
void SSBMV(const char *uplo, const long long int *n, const long long int *k,
           const float *alpha, const float *a, const long long int *lda, const float *x, const long long int *incx,
           const float *beta, float *y, const long long int *incy);
void SSPMV(const char *uplo, const long long int *n, const float *alpha, const float *ap,
           const float *x, const long long int *incx, const float *beta, float *y, const long long int *incy);
void SSPR(const char *uplo, const long long int *n, const float *alpha, const float *x, const long long int *incx, float *ap);
void SSPR2(const char *uplo, const long long int *n, const float *alpha, const float *x, const long long int *incx,
           const float *y, const long long int *incy, float *ap);
void SSYMV(const char *uplo, const long long int *n, const float *alpha, const float *a, const long long int *lda,
           const float *x, const long long int *incx, const float *beta, float *y, const long long int *incy);
void SSYR(const char *uplo, const long long int *n, const float *alpha, const float *x, const long long int *incx,
          float *a, const long long int *lda);
void SSYR2(const char *uplo, const long long int *n, const float *alpha, const float *x, const long long int *incx,
           const float *y, const long long int *incy, float *a, const long long int *lda);
void STBMV(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const float *a, const long long int *lda, float *x, const long long int *incx);
void STBSV(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const float *a, const long long int *lda, float *x, const long long int *incx);
void STPMV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const float *ap, float *x, const long long int *incx);
void STPSV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const float *ap, float *x, const long long int *incx);
void STRMV(const char *uplo, const char *transa, const char *diag, const long long int *n,
           const float *a, const long long int *lda, float *b, const long long int *incx);
void STRSV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const float *a, const long long int *lda, float *x, const long long int *incx);
void SGEM2VU(const long long int *m, const long long int *n, const float *alpha, const float *a, const long long int *lda,
           const float *x1, const long long int *incx1, const float *x2, const long long int *incx2,
           const float *beta, float *y1, const long long int *incy1, float *y2, const long long int *incy2);

void CGBMV(const char *trans, const long long int *m, const long long int *n, const long long int *kl, const long long int *ku,
           const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *beta,
           MKL_Complex8 *y, const long long int *incy);
void CGEMV(const char *trans, const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, const MKL_Complex8 *x, const long long int *incx,
           const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);
void CGERC(const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy,
           MKL_Complex8 *a, const long long int *lda);
void CGERU(const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy,
           MKL_Complex8 *a, const long long int *lda);
void CHBMV(const char *uplo, const long long int *n, const long long int *k, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, const MKL_Complex8 *x, const long long int *incx,
           const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);
void CHEMV(const char *uplo, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, const MKL_Complex8 *x, const long long int *incx,
           const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);
void CHER(const char *uplo, const long long int *n, const float *alpha, const MKL_Complex8 *x, const long long int *incx,
          MKL_Complex8 *a, const long long int *lda);
void CHER2(const char *uplo, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy,
           MKL_Complex8 *a, const long long int *lda);
void CHPMV(const char *uplo, const long long int *n, const MKL_Complex8 *alpha, const MKL_Complex8 *ap,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *beta,
           MKL_Complex8 *y, const long long int *incy);
void CHPR(const char *uplo, const long long int *n, const float *alpha, const MKL_Complex8 *x, const long long int *incx,
          MKL_Complex8 *ap);
void CHPR2(const char *uplo, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy,
           MKL_Complex8 *ap);
void CTBMV(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *x, const long long int *incx);
void CTBSV(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *x, const long long int *incx);
void CTPMV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex8 *ap, MKL_Complex8 *x, const long long int *incx);
void CTPSV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex8 *ap, MKL_Complex8 *x, const long long int *incx);
void CTRMV(const char *uplo, const char *transa, const char *diag, const long long int *n,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *b, const long long int *incx);
void CTRSV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *x, const long long int *incx);
void CGEM2VC(const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, const MKL_Complex8 *x1, const long long int *incx1,
           const MKL_Complex8 *x2, const long long int *incx2, const MKL_Complex8 *beta,
           MKL_Complex8 *y1, const long long int *incy1, MKL_Complex8 *y2, const long long int *incy2);
void SCGEMV(const char *trans, const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const float *a, const long long int *lda, const MKL_Complex8 *x, const long long int *incx,
           const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);

void DGBMV(const char *trans, const long long int *m, const long long int *n, const long long int *kl, const long long int *ku,
           const double *alpha, const double *a, const long long int *lda, const double *x, const long long int *incx,
           const double *beta, double *y, const long long int *incy);
void DGEMV(const char *trans, const long long int *m, const long long int *n, const double *alpha,
           const double *a, const long long int *lda, const double *x, const long long int *incx,
           const double *beta, double *y, const long long int *incy);
void DGER(const long long int *m, const long long int *n, const double *alpha, const double *x, const long long int *incx,
          const double *y, const long long int *incy, double *a, const long long int *lda);
void DSBMV(const char *uplo, const long long int *n, const long long int *k, const double *alpha,
           const double *a, const long long int *lda, const double *x, const long long int *incx,
           const double *beta, double *y, const long long int *incy);
void DSPMV(const char *uplo, const long long int *n, const double *alpha, const double *ap,
           const double *x, const long long int *incx, const double *beta, double *y, const long long int *incy);
void DSPR(const char *uplo, const long long int *n, const double *alpha, const double *x, const long long int *incx, double *ap);
void DSPR2(const char *uplo, const long long int *n, const double *alpha, const double *x, const long long int *incx,
           const double *y, const long long int *incy, double *ap);
void DSYMV(const char *uplo, const long long int *n, const double *alpha, const double *a, const long long int *lda,
           const double *x, const long long int *incx, const double *beta, double *y, const long long int *incy);
void DSYR(const char *uplo, const long long int *n, const double *alpha, const double *x, const long long int *incx,
          double *a, const long long int *lda);
void DSYR2(const char *uplo, const long long int *n, const double *alpha, const double *x, const long long int *incx,
           const double *y, const long long int *incy, double *a, const long long int *lda);
void DTBMV(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const double *a, const long long int *lda, double *x, const long long int *incx);
void DTBSV(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const double *a, const long long int *lda, double *x, const long long int *incx);
void DTPMV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const double *ap, double *x, const long long int *incx);
void DTPSV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const double *ap, double *x, const long long int *incx);
void DTRMV(const char *uplo, const char *transa, const char *diag, const long long int *n,
           const double *a, const long long int *lda, double *b, const long long int *incx);
void DTRSV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const double *a, const long long int *lda, double *x, const long long int *incx);
void DGEM2VU(const long long int *m, const long long int *n, const double *alpha,
           const double *a, const long long int *lda, const double *x1, const long long int *incx1,
           const double *x2, const long long int *incx2, const double *beta,
           double *y1, const long long int *incy1, double *y2, const long long int *incy2);

void ZGBMV(const char *trans, const long long int *m, const long long int *n, const long long int *kl, const long long int *ku,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *beta,
           MKL_Complex16 *y, const long long int *incy);
void ZGEMV(const char *trans, const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);
void ZGERC(const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *y, const long long int *incy,
           MKL_Complex16 *a, const long long int *lda);
void ZGERU(const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *y, const long long int *incy,
           MKL_Complex16 *a, const long long int *lda);
void ZHBMV(const char *uplo, const long long int *n, const long long int *k, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);
void ZHEMV(const char *uplo, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);
void ZHER(const char *uplo, const long long int *n, const double *alpha,
          const MKL_Complex16 *x, const long long int *incx, MKL_Complex16 *a, const long long int *lda);
void ZHER2(const char *uplo, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *y, const long long int *incy,
           MKL_Complex16 *a, const long long int *lda);
void ZHPMV(const char *uplo, const long long int *n, const MKL_Complex16 *alpha, const MKL_Complex16 *ap,
           const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *beta,
           MKL_Complex16 *y, const long long int *incy);
void ZHPR(const char *uplo, const long long int *n, const double *alpha, const MKL_Complex16 *x,
          const long long int *incx, MKL_Complex16 *ap);
void ZHPR2(const char *uplo, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *y, const long long int *incy,
           MKL_Complex16 *ap);
void ZTBMV(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *x, const long long int *incx);
void ZTBSV(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *x, const long long int *incx);
void ZTPMV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex16 *ap, MKL_Complex16 *x, const long long int *incx);
void ZTPSV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           MKL_Complex16 *ap, MKL_Complex16 *x, const long long int *incx);
void ZTRMV(const char *uplo, const char *transa, const char *diag, const long long int *n,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *b, const long long int *incx);
void ZTRSV(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *x, const long long int *incx);
void ZGEM2VC(const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, const MKL_Complex16 *x1, const long long int *incx1,
           const MKL_Complex16 *x2, const long long int *incx2, const MKL_Complex16 *beta,
           MKL_Complex16 *y1, const long long int *incy1, MKL_Complex16 *y2, const long long int *incy2);
void DZGEMV(const char *trans, const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const double *a, const long long int *lda, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);



void SGEMM(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const float *alpha, const float *a, const long long int *lda, const float *b, const long long int *ldb,
           const float *beta, float *c, const long long int *ldc);
void SGEMM_BATCH(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const float *alpha_array, const float **a_array, const long long int *lda_array, const float **b_array, const long long int *ldb_array,
           const float *beta_array, float **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void SGEMMT(const char *uplo, const char *transa, const char *transb, const long long int *n, const long long int *k,
            const float *alpha, const float *a, const long long int *lda, const float *b, const long long int *ldb,
            const float *beta, float *c, const long long int *ldc);
void SSYMM(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const float *alpha, const float *a, const long long int *lda, const float *b, const long long int *ldb,
           const float *beta, float *c, const long long int *ldc);
void SSYR2K(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const float *alpha, const float *a, const long long int *lda, const float *b, const long long int *ldb,
            const float *beta, float *c, const long long int *ldc);
void SSYRK(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const float *alpha, const float *a, const long long int *lda,
           const float *beta, float *c, const long long int *ldc);
void STRMM(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const float *alpha, const float *a, const long long int *lda,
           float *b, const long long int *ldb);
void STRSM(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const float *alpha, const float *a, const long long int *lda,
           float *b, const long long int *ldb);

void CGEMM(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
           const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
           MKL_Complex8 *c, const long long int *ldc);

void CGEMM_BATCH(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const MKL_Complex8 *alpha_array, const MKL_Complex8 **a_array, const long long int *lda_array, const MKL_Complex8 **b_array, const long long int *ldb_array,
           const MKL_Complex8 *beta_array, MKL_Complex8 **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void SCGEMM(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const MKL_Complex8 *alpha, const float *a, const long long int *lda,
           const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
           MKL_Complex8 *c, const long long int *ldc);
void CGEMM3M(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
             const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
             const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
             MKL_Complex8 *c, const long long int *ldc);
void CGEMM3M_BATCH(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const MKL_Complex8 *alpha_array, const MKL_Complex8 **a_array, const long long int *lda_array, const MKL_Complex8 **b_array, const long long int *ldb_array,
           const MKL_Complex8 *beta_array, MKL_Complex8 **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void CGEMMT(const char *uplo, const char *transa, const char *transb, const long long int *n, const long long int *k,
            const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
            const MKL_Complex8 *b, const long long int *ldb,
            const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);

void CHEMM(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
           const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
           MKL_Complex8 *c, const long long int *ldc);
void CHER2K(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
            const MKL_Complex8 *b, const long long int *ldb, const float *beta,
            MKL_Complex8 *c, const long long int *ldc);
void CHERK(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const float *alpha, const MKL_Complex8 *a, const long long int *lda,
           const float *beta, MKL_Complex8 *c, const long long int *ldc);
void CSYMM(const char *side, const char *uplo, const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, const MKL_Complex8 *b, const long long int *ldb,
           const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void CSYR2K(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
            const MKL_Complex8 *b, const long long int *ldb,
            const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void CSYRK(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
           const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void CTRMM(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda,
           MKL_Complex8 *b, const long long int *ldb);
void CTRSM(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda,
           MKL_Complex8 *b, const long long int *ldb);

void DGEMM(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const double *alpha, const double *a, const long long int *lda, const double *b, const long long int *ldb,
           const double *beta, double *c, const long long int *ldc);

void DGEMM_BATCH(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const double *alpha_array, const double **a_array, const long long int *lda_array, const double **b_array, const long long int *ldb_array,
           const double *beta_array, double **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void DGEMMT(const char *uplo, const char *transa, const char *transb, const long long int *n, const long long int *k,
            const double *alpha, const double *a, const long long int *lda, const double *b, const long long int *ldb,
            const double *beta, double *c, const long long int *ldc);

void DSYMM(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const double *alpha, const double *a, const long long int *lda, const double *b, const long long int *ldb,
           const double *beta, double *c, const long long int *ldc);
void DSYR2K(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const double *alpha, const double *a, const long long int *lda, const double *b, const long long int *ldb,
            double *beta, double *c, const long long int *ldc);
void DSYRK(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const double *alpha, const double *a, const long long int *lda, const double *beta,
           double *c, const long long int *ldc);
void DTRMM(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const double *alpha, const double *a, const long long int *lda,
           double *b, const long long int *ldb);
void DTRSM(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const double *alpha, const double *a, const long long int *lda,
           double *b, const long long int *ldb);

void ZGEMM(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
           MKL_Complex16 *c, const long long int *ldc);
void ZGEMM_BATCH(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const MKL_Complex16 *alpha_array, const MKL_Complex16 **a_array, const long long int *lda_array, const MKL_Complex16 **b_array, const long long int *ldb_array,
           const MKL_Complex16 *beta_array, MKL_Complex16 **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void DZGEMM(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const MKL_Complex16 *alpha, const double *a, const long long int *lda,
           const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
           MKL_Complex16 *c, const long long int *ldc);
void ZGEMM3M(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
             const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
             const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
             MKL_Complex16 *c, const long long int *ldc);
void ZGEMM3M_BATCH(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const MKL_Complex16 *alpha_array, const MKL_Complex16 **a_array, const long long int *lda_array, const MKL_Complex16 **b_array, const long long int *ldb_array,
           const MKL_Complex16 *beta_array, MKL_Complex16 **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void ZGEMMT(const char *uplo, const char *transa, const char *transb, const long long int *n, const long long int *k,
            const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
            const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
            MKL_Complex16 *c, const long long int *ldc);
void ZHEMM(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
           MKL_Complex16 *c, const long long int *ldc);
void ZHER2K(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
            const MKL_Complex16 *b, const long long int *ldb, const double *beta,
            MKL_Complex16 *c, const long long int *ldc);
void ZHERK(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const double *alpha, const MKL_Complex16 *a, const long long int *lda,
           const double *beta, MKL_Complex16 *c, const long long int *ldc);
void ZSYMM(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
           MKL_Complex16 *c, const long long int *ldc);
void ZSYR2K(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
            const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
            MKL_Complex16 *c, const long long int *ldc);
void ZSYRK(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void ZTRMM(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *b, const long long int *ldb);
void ZTRSM(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *b, const long long int *ldb);



void xerbla(const char *srname, const int *info, const int lsrname);
int lsame(const char *ca, const char *cb, const long long int lca, const long long int lcb);


float scabs1(const MKL_Complex8 *c);
float sasum(const long long int *n, const float *x, const long long int *incx);
void saxpy(const long long int *n, const float *alpha, const float *x, const long long int *incx, float *y, const long long int *incy);
void saxpby(const long long int *n, const float *alpha, const float *x, const long long int *incx, const float *beta, float *y, const long long int *incy);
void saxpyi(const long long int *nz, const float *a, const float *x, const long long int *indx, float *y);
float scasum(const long long int *n, const MKL_Complex8 *x, const long long int *incx);
float scnrm2(const long long int *n, const MKL_Complex8 *x, const long long int *incx);
void scopy(const long long int *n, const float *x, const long long int *incx, float *y, const long long int *incy);
float sdot(const long long int *n, const float *x, const long long int *incx, const float *y, const long long int *incy);
float sdoti(const long long int *nz, const float *x, const long long int *indx, const float *y);
float sdsdot(const long long int *n, const float *sb, const float *x, const long long int *incx, const float *y, const long long int *incy);
void sgthr(const long long int *nz, const float *y, float *x, const long long int *indx);
void sgthrz(const long long int *nz, float *y, float *x, const long long int *indx);
float snrm2(const long long int *n, const float *x, const long long int *incx);
void srot(const long long int *n, float *x, const long long int *incx, float *y, const long long int *incy, const float *c, const float *s);
void srotg(float *a,float *b,float *c,float *s);
void sroti(const long long int *nz, float *x, const long long int *indx, float *y, const float *c, const float *s);
void srotm(const long long int *n, float *x, const long long int *incx, float *y, const long long int *incy, const float *param);
void srotmg(float *d1, float *d2, float *x1, const float *y1, float *param);
void sscal(const long long int *n, const float *a, float *x, const long long int *incx);
void ssctr(const long long int *nz, const float *x, const long long int *indx, float *y);
void sswap(const long long int *n, float *x, const long long int *incx, float *y, const long long int *incy);
long long int isamax(const long long int *n, const float *x, const long long int *incx);
long long int isamin(const long long int *n, const float *x, const long long int *incx);

void caxpy(const long long int *n, const MKL_Complex8 *alpha, const MKL_Complex8 *x, const long long int *incx, MKL_Complex8 *y, const long long int *incy);
void caxpby(const long long int *n, const MKL_Complex8 *alpha, const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);
void caxpyi(const long long int *nz, const MKL_Complex8 *a, const MKL_Complex8 *x, const long long int *indx, MKL_Complex8 *y);
void ccopy(const long long int *n, const MKL_Complex8 *x, const long long int *incx, MKL_Complex8 *y, const long long int *incy);
void cdotc(MKL_Complex8 *pres, const long long int *n, const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy);
void cdotci(MKL_Complex8 *pres, const long long int *nz, const MKL_Complex8 *x, const long long int *indx, const MKL_Complex8 *y);
void cdotu(MKL_Complex8 *pres, const long long int *n, const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy);
void cdotui(MKL_Complex8 *pres, const long long int *nz, const MKL_Complex8 *x, const long long int *indx, const MKL_Complex8 *y);
void cgthr(const long long int *nz, const MKL_Complex8 *y, MKL_Complex8 *x, const long long int *indx);
void cgthrz(const long long int *nz, MKL_Complex8 *y, MKL_Complex8 *x, const long long int *indx);
void crotg(MKL_Complex8 *a, const MKL_Complex8 *b, float *c, MKL_Complex8 *s);
void cscal(const long long int *n, const MKL_Complex8 *a, MKL_Complex8 *x, const long long int *incx);
void csctr(const long long int *nz, const MKL_Complex8 *x, const long long int *indx, MKL_Complex8 *y);
void csrot(const long long int *n, MKL_Complex8 *x, const long long int *incx, MKL_Complex8 *y, const long long int *incy, const float *c, const float *s);
void csscal(const long long int *n, const float *a, MKL_Complex8 *x, const long long int *incx);
void cswap(const long long int *n, MKL_Complex8 *x, const long long int *incx, MKL_Complex8 *y, const long long int *incy);
long long int icamax(const long long int *n, const MKL_Complex8 *x, const long long int *incx);
long long int icamin(const long long int *n, const MKL_Complex8 *x, const long long int *incx);

double dcabs1(const MKL_Complex16 *z);
double dasum(const long long int *n, const double *x, const long long int *incx);
void daxpy(const long long int *n, const double *alpha, const double *x, const long long int *incx, double *y, const long long int *incy);
void daxpby(const long long int *n, const double *alpha, const double *x, const long long int *incx, const double *beta, double *y, const long long int *incy);
void daxpyi(const long long int *nz, const double *a, const double *x, const long long int *indx, double *y);
void dcopy(const long long int *n, const double *x, const long long int *incx, double *y, const long long int *incy);
double ddot(const long long int *n, const double *x, const long long int *incx, const double *y, const long long int *incy);
double dsdot(const long long int *n, const float *x, const long long int *incx, const float *y, const long long int *incy);
double ddoti(const long long int *nz, const double *x, const long long int *indx, const double *y);
void dgthr(const long long int *nz, const double *y, double *x, const long long int *indx);
void dgthrz(const long long int *nz, double *y, double *x, const long long int *indx);
double dnrm2(const long long int *n, const double *x, const long long int *incx);
void drot(const long long int *n, double *x, const long long int *incx, double *y, const long long int *incy, const double *c, const double *s);
void drotg(double *a, double *b, double *c, double *s);
void droti(const long long int *nz, double *x, const long long int *indx, double *y, const double *c, const double *s);
void drotm(const long long int *n, double *x, const long long int *incx, double *y, const long long int *incy, const double *param);
void drotmg(double *d1, double *d2, double *x1, const double *y1, double *param);
void dscal(const long long int *n, const double *a, double *x, const long long int *incx);
void dsctr(const long long int *nz, const double *x, const long long int *indx, double *y);
void dswap(const long long int *n, double *x, const long long int *incx, double *y, const long long int *incy);
double dzasum(const long long int *n, const MKL_Complex16 *x, const long long int *incx);
double dznrm2(const long long int *n, const MKL_Complex16 *x, const long long int *incx);
long long int idamax(const long long int *n, const double *x, const long long int *incx);
long long int idamin(const long long int *n, const double *x, const long long int *incx);

void zaxpy(const long long int *n, const MKL_Complex16 *alpha, const MKL_Complex16 *x, const long long int *incx, MKL_Complex16 *y, const long long int *incy);
void zaxpby(const long long int *n, const MKL_Complex16 *alpha, const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);
void zaxpyi(const long long int *nz, const MKL_Complex16 *a, const MKL_Complex16 *x, const long long int *indx, MKL_Complex16 *y);
void zcopy(const long long int *n, const MKL_Complex16 *x, const long long int *incx, MKL_Complex16 *y, const long long int *incy);
void zdotc(MKL_Complex16 *pres, const long long int *n, const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *y, const long long int *incy);
void zdotci(MKL_Complex16 *pres, const long long int *nz, const MKL_Complex16 *x, const long long int *indx, const MKL_Complex16 *y);
void zdotu(MKL_Complex16 *pres, const long long int *n, const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *y, const long long int *incy);
void zdotui(MKL_Complex16 *pres, const long long int *nz, const MKL_Complex16 *x, const long long int *indx, const MKL_Complex16 *y);
void zdrot(const long long int *n, MKL_Complex16 *x, const long long int *incx, MKL_Complex16 *y, const long long int *incy, const double *c, const double *s);
void zdscal(const long long int *n, const double *a, MKL_Complex16 *x, const long long int *incx);
void zgthr(const long long int *nz, const MKL_Complex16 *y, MKL_Complex16 *x, const long long int *indx);
void zgthrz(const long long int *nz, MKL_Complex16 *y, MKL_Complex16 *x, const long long int *indx);
void zrotg(MKL_Complex16 *a, const MKL_Complex16 *b, double *c, MKL_Complex16 *s);
void zscal(const long long int *n, const MKL_Complex16 *a, MKL_Complex16 *x, const long long int *incx);
void zsctr(const long long int *nz, const MKL_Complex16 *x, const long long int *indx, MKL_Complex16 *y);
void zswap(const long long int *n, MKL_Complex16 *x, const long long int *incx, MKL_Complex16 *y, const long long int *incy);
long long int izamax(const long long int *n, const MKL_Complex16 *x, const long long int *incx);
long long int izamin(const long long int *n, const MKL_Complex16 *x, const long long int *incx);



void sgbmv(const char *trans, const long long int *m, const long long int *n, const long long int *kl, const long long int *ku,
           const float *alpha, const float *a, const long long int *lda, const float *x, const long long int *incx,
           const float *beta, float *y, const long long int *incy);
void sgemv(const char *trans, const long long int *m, const long long int *n, const float *alpha,
           const float *a, const long long int *lda, const float *x, const long long int *incx,
           const float *beta, float *y, const long long int *incy);
void sger(const long long int *m, const long long int *n, const float *alpha, const float *x, const long long int *incx,
          const float *y, const long long int *incy, float *a, const long long int *lda);
void ssbmv(const char *uplo, const long long int *n, const long long int *k, const float *alpha,
           const float *a, const long long int *lda, const float *x, const long long int *incx,
           const float *beta, float *y, const long long int *incy);
void sspmv(const char *uplo, const long long int *n, const float *alpha, const float *ap,
           const float *x, const long long int *incx, const float *beta, float *y, const long long int *incy);
void sspr(const char *uplo, const long long int *n, const float *alpha, const float *x, const long long int *incx,
          float *ap);
void sspr2(const char *uplo, const long long int *n, const float *alpha, const float *x, const long long int *incx,
           const float *y, const long long int *incy, float *ap);
void ssymv(const char *uplo, const long long int *n, const float *alpha, const float *a, const long long int *lda,
           const float *x, const long long int *incx, const float *beta, float *y, const long long int *incy);
void ssyr(const char *uplo, const long long int *n, const float *alpha, const float *x, const long long int *incx,
          float *a, const long long int *lda);
void ssyr2(const char *uplo, const long long int *n, const float *alpha, const float *x, const long long int *incx,
           const float *y, const long long int *incy, float *a, const long long int *lda);
void stbmv(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const float *a, const long long int *lda, float *x, const long long int *incx);
void stbsv(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const float *a, const long long int *lda, float *x, const long long int *incx);
void stpmv(const char *uplo, const char *trans, const char *diag, const long long int *n, const float *ap,
           float *x, const long long int *incx);
void stpsv(const char *uplo, const char *trans, const char *diag, const long long int *n, const float *ap,
           float *x, const long long int *incx);
void strmv(const char *uplo, const char *transa, const char *diag, const long long int *n, const float *a,
           const long long int *lda, float *b, const long long int *incx);
void strsv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const float *a, const long long int *lda, float *x, const long long int *incx);
void sgem2vu(const long long int *m, const long long int *n, const float *alpha, const float *a, const long long int *lda,
           const float *x1, const long long int *incx1, const float *x2, const long long int *incx2,
           const float *beta, float *y1, const long long int *incy1, float *y2, const long long int *incy2);

void cgbmv(const char *trans, const long long int *m, const long long int *n, const long long int *kl, const long long int *ku,
           const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *beta,
           MKL_Complex8 *y, const long long int *incy);
void cgemv(const char *trans, const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, const MKL_Complex8 *x, const long long int *incx,
           const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);
void cgerc(const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy,
           MKL_Complex8 *a, const long long int *lda);
void cgeru(const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy,
           MKL_Complex8 *a, const long long int *lda);
void chbmv(const char *uplo, const long long int *n, const long long int *k, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, const MKL_Complex8 *x, const long long int *incx,
           const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);
void chemv(const char *uplo, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, const MKL_Complex8 *x, const long long int *incx,
           const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);
void cher(const char *uplo, const long long int *n, const float *alpha, const MKL_Complex8 *x, const long long int *incx,
          MKL_Complex8 *a, const long long int *lda);
void cher2(const char *uplo, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *y, const long long int *incy,
           MKL_Complex8 *a, const long long int *lda);
void chpmv(const char *uplo, const long long int *n, const MKL_Complex8 *alpha, const MKL_Complex8 *ap,
           const MKL_Complex8 *x, const long long int *incx, const MKL_Complex8 *beta,
           MKL_Complex8 *y, const long long int *incy);
void chpr(const char *uplo, const long long int *n, const float *alpha, const MKL_Complex8 *x, const long long int *incx,
          MKL_Complex8 *ap);
void chpr2(const char *uplo, const long long int *n, const MKL_Complex8 *alpha, const MKL_Complex8 *x, const long long int *incx,
           const MKL_Complex8 *y, const long long int *incy, MKL_Complex8 *ap);
void ctbmv(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *x, const long long int *incx);
void ctbsv(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *x, const long long int *incx);
void ctpmv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex8 *ap, MKL_Complex8 *x, const long long int *incx);
void ctpsv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex8 *ap, MKL_Complex8 *x, const long long int *incx);
void ctrmv(const char *uplo, const char *transa, const char *diag, const long long int *n,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *b, const long long int *incx);
void ctrsv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *x, const long long int *incx);
void cgem2vc(const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, const MKL_Complex8 *x1, const long long int *incx1,
           const MKL_Complex8 *x2, const long long int *incx2, const MKL_Complex8 *beta,
           MKL_Complex8 *y1, const long long int *incy1, MKL_Complex8 *y2, const long long int *incy2);
void scgemv(const char *trans, const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const float *a, const long long int *lda, const MKL_Complex8 *x, const long long int *incx,
           const MKL_Complex8 *beta, MKL_Complex8 *y, const long long int *incy);

void dgbmv(const char *trans, const long long int *m, const long long int *n, const long long int *kl, const long long int *ku,
           const double *alpha, const double *a, const long long int *lda, const double *x, const long long int *incx,
           const double *beta, double *y, const long long int *incy);
void dgemv(const char *trans, const long long int *m, const long long int *n, const double *alpha,
           const double *a, const long long int *lda, const double *x, const long long int *incx,
           const double *beta, double *y, const long long int *incy);
void dger(const long long int *m, const long long int *n, const double *alpha, const double *x, const long long int *incx,
          const double *y, const long long int *incy, double *a, const long long int *lda);
void dsbmv(const char *uplo, const long long int *n, const long long int *k, const double *alpha,
           const double *a, const long long int *lda, const double *x, const long long int *incx,
           const double *beta, double *y, const long long int *incy);
void dspmv(const char *uplo, const long long int *n, const double *alpha, const double *ap,
           const double *x, const long long int *incx, const double *beta,
           double *y, const long long int *incy);
void dspr(const char *uplo, const long long int *n, const double *alpha, const double *x, const long long int *incx,
          double *ap);
void dspr2(const char *uplo, const long long int *n, const double *alpha, const double *x, const long long int *incx,
           const double *y, const long long int *incy, double *ap);
void dsymv(const char *uplo, const long long int *n, const double *alpha, const double *a, const long long int *lda,
           const double *x, const long long int *incx, const double *beta, double *y, const long long int *incy);
void dsyr(const char *uplo, const long long int *n, const double *alpha, const double *x, const long long int *incx,
          double *a, const long long int *lda);
void dsyr2(const char *uplo, const long long int *n, const double *alpha, const double *x, const long long int *incx,
           const double *y, const long long int *incy, double *a, const long long int *lda);
void dtbmv(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const double *a, const long long int *lda, double *x, const long long int *incx);
void dtbsv(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const double *a, const long long int *lda, double *x, const long long int *incx);
void dtpmv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const double *ap, double *x, const long long int *incx);
void dtpsv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const double *ap, double *x, const long long int *incx);
void dtrmv(const char *uplo, const char *transa, const char *diag, const long long int *n,
           const double *a, const long long int *lda, double *b, const long long int *incx);
void dtrsv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const double *a, const long long int *lda, double *x, const long long int *incx);
void dgem2vu(const long long int *m, const long long int *n, const double *alpha,
           const double *a, const long long int *lda, const double *x1, const long long int *incx1,
           const double *x2, const long long int *incx2, const double *beta,
           double *y1, const long long int *incy1, double *y2, const long long int *incy2);

void zgbmv(const char *trans, const long long int *m, const long long int *n, const long long int *kl, const long long int *ku,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *beta,
           MKL_Complex16 *y, const long long int *incy);
void zgemv(const char *trans, const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);
void zgerc(const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *y, const long long int *incy, MKL_Complex16 *a, const long long int *lda);
void zgeru(const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *y, const long long int *incy, MKL_Complex16 *a, const long long int *lda);
void zhbmv(const char *uplo, const long long int *n, const long long int *k, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);
void zhemv(const char *uplo, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);
void zher(const char *uplo, const long long int *n, const double *alpha, const MKL_Complex16 *x, const long long int *incx,
          MKL_Complex16 *a, const long long int *lda);
void zher2(const char *uplo, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *y, const long long int *incy,
           MKL_Complex16 *a, const long long int *lda);
void zhpmv(const char *uplo, const long long int *n, const MKL_Complex16 *alpha, const MKL_Complex16 *ap,
           const MKL_Complex16 *x, const long long int *incx, const MKL_Complex16 *beta,
           MKL_Complex16 *y, const long long int *incy);
void zhpr(const char *uplo, const long long int *n, const double *alpha, const MKL_Complex16 *x, const long long int *incx,
          MKL_Complex16 *ap);
void zhpr2(const char *uplo, const long long int *n, const MKL_Complex16 *alpha, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *y, const long long int *incy, MKL_Complex16 *ap);
void ztbmv(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *x, const long long int *incx);
void ztbsv(const char *uplo, const char *trans, const char *diag, const long long int *n, const long long int *k,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *x, const long long int *incx);
void ztpmv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex16 *ap, MKL_Complex16 *x, const long long int *incx);
void ztpsv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex16 *ap, MKL_Complex16 *x, const long long int *incx);
void ztrmv(const char *uplo, const char *transa, const char *diag, const long long int *n,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *b, const long long int *incx);
void ztrsv(const char *uplo, const char *trans, const char *diag, const long long int *n,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *x, const long long int *incx);
void zgem2vc(const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, const MKL_Complex16 *x1, const long long int *incx1,
           const MKL_Complex16 *x2, const long long int *incx2, const MKL_Complex16 *beta,
           MKL_Complex16 *y1, const long long int *incy1, MKL_Complex16 *y2, const long long int *incy2);
void dzgemv(const char *trans, const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const double *a, const long long int *lda, const MKL_Complex16 *x, const long long int *incx,
           const MKL_Complex16 *beta, MKL_Complex16 *y, const long long int *incy);



void sgemm(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const float *alpha, const float *a, const long long int *lda, const float *b, const long long int *ldb,
           const float *beta, float *c, const long long int *ldc);
void sgemm_batch(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const float *alpha_array, const float **a_array, const long long int *lda_array, const float **b_array, const long long int *ldb_array,
           const float *beta_array, float **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void sgemmt(const char *uplo, const char *transa, const char *transb, const long long int *n, const long long int *k,
            const float *alpha, const float *a, const long long int *lda, const float *b, const long long int *ldb,
            const float *beta, float *c, const long long int *ldc);
void ssymm(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const float *alpha, const float *a, const long long int *lda, const float *b, const long long int *ldb,
           const float *beta, float *c, const long long int *ldc);
void ssyr2k(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const float *alpha, const float *a, const long long int *lda, const float *b, const long long int *ldb,
            const float *beta, float *c, const long long int *ldc);
void ssyrk(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const float *alpha, const float *a, const long long int *lda, const float *beta,
           float *c, const long long int *ldc);
void strmm(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const float *alpha, const float *a, const long long int *lda,
           float *b, const long long int *ldb);
void strsm(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const float *alpha, const float *a, const long long int *lda,
           float *b, const long long int *ldb);

void cgemm(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
           const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
           MKL_Complex8 *c, const long long int *ldc);
void cgemm_batch(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const MKL_Complex8 *alpha_array, const MKL_Complex8 **a_array, const long long int *lda_array, const MKL_Complex8 **b_array, const long long int *ldb_array,
           const MKL_Complex8 *beta_array, MKL_Complex8 **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void scgemm(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const MKL_Complex8 *alpha, const float *a, const long long int *lda,
           const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
           MKL_Complex8 *c, const long long int *ldc);
void cgemm3m(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
             const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
             const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
             MKL_Complex8 *c, const long long int *ldc);
void cgemm3m_batch(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const MKL_Complex8 *alpha_array, const MKL_Complex8 **a_array, const long long int *lda_array, const MKL_Complex8 **b_array, const long long int *ldb_array,
           const MKL_Complex8 *beta_array, MKL_Complex8 **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void cgemmt(const char *uplo, const char *transa, const char *transb, const long long int *n, const long long int *k,
            const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
            const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
            MKL_Complex8 *c, const long long int *ldc);
void chemm(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
           const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
           MKL_Complex8 *c, const long long int *ldc);
void cher2k(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
            const MKL_Complex8 *b, const long long int *ldb, const float *beta,
            MKL_Complex8 *c, const long long int *ldc);
void cherk(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const float *alpha, const MKL_Complex8 *a, const long long int *lda, const float *beta,
           MKL_Complex8 *c, const long long int *ldc);
void csymm(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
           const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
           MKL_Complex8 *c, const long long int *ldc);
void csyr2k(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
            const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta,
            MKL_Complex8 *c, const long long int *ldc);
void csyrk(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const MKL_Complex8 *alpha, const MKL_Complex8 *a, const long long int *lda,
           const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void ctrmm(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *b, const long long int *ldb);
void ctrsm(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const MKL_Complex8 *alpha,
           const MKL_Complex8 *a, const long long int *lda, MKL_Complex8 *b, const long long int *ldb);

void dgemm(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const double *alpha, const double *a, const long long int *lda, const double *b, const long long int *ldb,
           const double *beta, double *c, const long long int *ldc);
void dgemm_batch(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const double *alpha_array, const double **a_array, const long long int *lda_array, const double **b_array, const long long int *ldb_array,
           const double *beta_array, double **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void dgemmt(const char *uplo, const char *transa, const char *transb, const long long int *n, const long long int *k,
            const double *alpha, const double *a, const long long int *lda, const double *b, const long long int *ldb,
            const double *beta, double *c, const long long int *ldc);
void dsymm(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const double *alpha, const double *a, const long long int *lda, const double *b, const long long int *ldb,
           const double *beta, double *c, const long long int *ldc);
void dsyr2k(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const double *alpha, const double *a, const long long int *lda, const double *b, const long long int *ldb,
            const double *beta, double *c, const long long int *ldc);
void dsyrk(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const double *alpha, const double *a, const long long int *lda, const double *beta,
           double *c, const long long int *ldc);
void dtrmm(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const double *alpha, const double *a, const long long int *lda,
           double *b, const long long int *ldb);
void dtrsm(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const double *alpha, const double *a, const long long int *lda,
           double *b, const long long int *ldb);

void zgemm(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
           MKL_Complex16 *c, const long long int *ldc);
void zgemm_batch(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const MKL_Complex16 *alpha_array, const MKL_Complex16 **a_array, const long long int *lda_array, const MKL_Complex16 **b_array, const long long int *ldb_array,
           const MKL_Complex16 *beta_array, MKL_Complex16 **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void dzgemm(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
           const MKL_Complex16 *alpha, const double *a, const long long int *lda,
           const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
           MKL_Complex16 *c, const long long int *ldc);
void zgemm3m(const char *transa, const char *transb, const long long int *m, const long long int *n, const long long int *k,
             const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
             const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
             MKL_Complex16 *c, const long long int *ldc);
void zgemm3m_batch(const char *transa_array, const char *transb_array, const long long int *m_array, const long long int *n_array, const long long int *k_array,
           const MKL_Complex16 *alpha_array, const MKL_Complex16 **a_array, const long long int *lda_array, const MKL_Complex16 **b_array, const long long int *ldb_array,
           const MKL_Complex16 *beta_array, MKL_Complex16 **c_array, const long long int *ldc_array, const long long int *group_count, const long long int *group_size);
void zgemmt(const char *uplo, const char *transa, const char *transb, const long long int *n, const long long int *k,
            const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
            const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
            MKL_Complex16 *c, const long long int *ldc);
void zhemm(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
           MKL_Complex16 *c, const long long int *ldc);
void zher2k(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
            const MKL_Complex16 *b, const long long int *ldb, const double *beta,
            MKL_Complex16 *c, const long long int *ldc);
void zherk(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const double *alpha, const MKL_Complex16 *a, const long long int *lda,
           const double *beta, MKL_Complex16 *c, const long long int *ldc);
void zsymm(const char *side, const char *uplo, const long long int *m, const long long int *n,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
           MKL_Complex16 *c, const long long int *ldc);
void zsyr2k(const char *uplo, const char *trans, const long long int *n, const long long int *k,
            const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
            const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta,
            MKL_Complex16 *c, const long long int *ldc);
void zsyrk(const char *uplo, const char *trans, const long long int *n, const long long int *k,
           const MKL_Complex16 *alpha, const MKL_Complex16 *a, const long long int *lda,
           const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void ztrmm(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *b, const long long int *ldb);
void ztrsm(const char *side, const char *uplo, const char *transa, const char *diag,
           const long long int *m, const long long int *n, const MKL_Complex16 *alpha,
           const MKL_Complex16 *a, const long long int *lda, MKL_Complex16 *b, const long long int *ldb);
# 37 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_trans.h" 1
# 31 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_trans.h"
# 1 "/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.3/include/stddef.h" 1 3 4
# 147 "/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.3/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 212 "/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.3/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 324 "/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.3/include/stddef.h" 3 4
typedef int wchar_t;
# 32 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_trans.h" 2
# 42 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_trans.h"
void MKL_Simatcopy(
    const char ordering, const char trans,
    size_t rows, size_t cols,
    const float alpha,
    float * AB, size_t lda, size_t ldb);


void MKL_Dimatcopy(
    const char ordering, const char trans,
    size_t rows, size_t cols,
    const double alpha,
    double * AB, size_t lda, size_t ldb);


void MKL_Cimatcopy(
    const char ordering, const char trans,
    size_t rows, size_t cols,
    const MKL_Complex8 alpha,
    MKL_Complex8 * AB, size_t lda, size_t ldb);


void MKL_Zimatcopy(
    const char ordering, const char trans,
    size_t rows, size_t cols,
    const MKL_Complex16 alpha,
    MKL_Complex16 * AB, size_t lda, size_t ldb);




void MKL_Somatcopy(
    char ordering, char trans,
    size_t rows, size_t cols,
    const float alpha,
    const float * A, size_t lda,
    float * B, size_t ldb);


void MKL_Domatcopy(
    char ordering, char trans,
    size_t rows, size_t cols,
    const double alpha,
    const double * A, size_t lda,
    double * B, size_t ldb);


void MKL_Comatcopy(
    char ordering, char trans,
    size_t rows, size_t cols,
    const MKL_Complex8 alpha,
    const MKL_Complex8 * A, size_t lda,
    MKL_Complex8 * B, size_t ldb);


void MKL_Zomatcopy(
    char ordering, char trans,
    size_t rows, size_t cols,
    const MKL_Complex16 alpha,
    const MKL_Complex16 * A, size_t lda,
    MKL_Complex16 * B, size_t ldb);




void MKL_Somatcopy2(
    char ordering, char trans,
    size_t rows, size_t cols,
    const float alpha,
    const float * A, size_t lda, size_t stridea,
    float * B, size_t ldb, size_t strideb);


void MKL_Domatcopy2(
    char ordering, char trans,
    size_t rows, size_t cols,
    const double alpha,
    const double * A, size_t lda, size_t stridea,
    double * B, size_t ldb, size_t strideb);


void MKL_Comatcopy2(
    char ordering, char trans,
    size_t rows, size_t cols,
    const MKL_Complex8 alpha,
    const MKL_Complex8 * A, size_t lda, size_t stridea,
    MKL_Complex8 * B, size_t ldb, size_t strideb);


void MKL_Zomatcopy2(
    char ordering, char trans,
    size_t rows, size_t cols,
    const MKL_Complex16 alpha,
    const MKL_Complex16 * A, size_t lda, size_t stridea,
    MKL_Complex16 * B, size_t ldb, size_t strideb);




void MKL_Somatadd(
    char ordering, char transa, char transb,
    size_t rows, size_t cols,
    const float alpha,
    const float * A, size_t lda,
    const float beta,
    const float * B, size_t ldb,
    float * C, size_t ldc);


void MKL_Domatadd(
    char ordering, char transa, char transb,
    size_t rows, size_t cols,
    const double alpha,
    const double * A, size_t lda,
    const double beta,
    const double * B, size_t ldb,
    double * C, size_t ldc);


void MKL_Comatadd(
    char ordering, char transa, char transb,
    size_t rows, size_t cols,
    const MKL_Complex8 alpha,
    const MKL_Complex8 * A, size_t lda,
    const MKL_Complex8 beta,
    const MKL_Complex8 * B, size_t ldb,
    MKL_Complex8 * C, size_t ldc);


void MKL_Zomatadd(
    char ordering, char transa, char transb,
    size_t rows, size_t cols,
    const MKL_Complex16 alpha,
    const MKL_Complex16 * A, size_t lda,
    const MKL_Complex16 beta,
    const MKL_Complex16 * B, size_t ldb,
    MKL_Complex16 * C, size_t ldc);
# 38 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_cblas.h" 1
# 29 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_cblas.h"
# 1 "/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.3/include/stddef.h" 1 3 4
# 30 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_cblas.h" 2
# 44 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_cblas.h"
typedef enum {CblasRowMajor=101, CblasColMajor=102} CBLAS_LAYOUT;
typedef enum {CblasNoTrans=111, CblasTrans=112, CblasConjTrans=113} CBLAS_TRANSPOSE;
typedef enum {CblasUpper=121, CblasLower=122} CBLAS_UPLO;
typedef enum {CblasNonUnit=131, CblasUnit=132} CBLAS_DIAG;
typedef enum {CblasLeft=141, CblasRight=142} CBLAS_SIDE;

typedef CBLAS_LAYOUT CBLAS_ORDER;
# 59 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_cblas.h"
double cblas_dcabs1(const void *z);
float cblas_scabs1(const void *c);

float cblas_sdot(const long long int N, const float *X, const long long int incX,
                  const float *Y, const long long int incY);
float cblas_sdoti(const long long int N, const float *X, const long long int *indx,
                   const float *Y);
double cblas_ddot(const long long int N, const double *X, const long long int incX,
                  const double *Y, const long long int incY);
double cblas_ddoti(const long long int N, const double *X, const long long int *indx,
                   const double *Y);


double cblas_dsdot(const long long int N, const float *X, const long long int incX,
                  const float *Y, const long long int incY);

float cblas_sdsdot(const long long int N, const float sb, const float *X,
      const long long int incX, const float *Y, const long long int incY);




void cblas_cdotu_sub(const long long int N, const void *X, const long long int incX,
                       const void *Y, const long long int incY, void *dotu);
void cblas_cdotui_sub(const long long int N, const void *X, const long long int *indx,
                        const void *Y, void *dotui);
void cblas_cdotc_sub(const long long int N, const void *X, const long long int incX,
                       const void *Y, const long long int incY, void *dotc);
void cblas_cdotci_sub(const long long int N, const void *X, const long long int *indx,
                        const void *Y, void *dotui);

void cblas_zdotu_sub(const long long int N, const void *X, const long long int incX,
                       const void *Y, const long long int incY, void *dotu);
void cblas_zdotui_sub(const long long int N, const void *X, const long long int *indx,
                        const void *Y, void *dotui);
void cblas_zdotc_sub(const long long int N, const void *X, const long long int incX,
                       const void *Y, const long long int incY, void *dotc);
void cblas_zdotci_sub(const long long int N, const void *X, const long long int *indx,
                        const void *Y, void *dotui);




float cblas_snrm2(const long long int N, const float *X, const long long int incX);
float cblas_sasum(const long long int N, const float *X, const long long int incX);

double cblas_dnrm2(const long long int N, const double *X, const long long int incX);
double cblas_dasum(const long long int N, const double *X, const long long int incX);

float cblas_scnrm2(const long long int N, const void *X, const long long int incX);
float cblas_scasum(const long long int N, const void *X, const long long int incX);

double cblas_dznrm2(const long long int N, const void *X, const long long int incX);
double cblas_dzasum(const long long int N, const void *X, const long long int incX);





size_t cblas_isamax(const long long int N, const float *X, const long long int incX);
size_t cblas_idamax(const long long int N, const double *X, const long long int incX);
size_t cblas_icamax(const long long int N, const void *X, const long long int incX);
size_t cblas_izamax(const long long int N, const void *X, const long long int incX);
size_t cblas_isamin(const long long int N, const float *X, const long long int incX);
size_t cblas_idamin(const long long int N, const double *X, const long long int incX);
size_t cblas_icamin(const long long int N, const void *X, const long long int incX);
size_t cblas_izamin(const long long int N, const void *X, const long long int incX);
# 136 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_cblas.h"
void cblas_sswap(const long long int N, float *X, const long long int incX,
                 float *Y, const long long int incY);
void cblas_scopy(const long long int N, const float *X, const long long int incX,
                 float *Y, const long long int incY);
void cblas_saxpy(const long long int N, const float alpha, const float *X,
                 const long long int incX, float *Y, const long long int incY);
void cblas_saxpby(const long long int N, const float alpha, const float *X,
                 const long long int incX, const float beta, float *Y, const long long int incY);
void cblas_saxpyi(const long long int N, const float alpha, const float *X,
                 const long long int *indx, float *Y);
void cblas_sgthr(const long long int N, const float *Y, float *X,
                                 const long long int *indx);
void cblas_sgthrz(const long long int N, float *Y, float *X,
                                 const long long int *indx);
void cblas_ssctr(const long long int N, const float *X, const long long int *indx,
                                 float *Y);
void cblas_srotg(float *a, float *b, float *c, float *s);

void cblas_dswap(const long long int N, double *X, const long long int incX,
                 double *Y, const long long int incY);
void cblas_dcopy(const long long int N, const double *X, const long long int incX,
                 double *Y, const long long int incY);
void cblas_daxpy(const long long int N, const double alpha, const double *X,
                 const long long int incX, double *Y, const long long int incY);
void cblas_daxpby(const long long int N, const double alpha, const double *X,
                 const long long int incX, const double beta, double *Y, const long long int incY);
void cblas_daxpyi(const long long int N, const double alpha, const double *X,
                 const long long int *indx, double *Y);
void cblas_dgthr(const long long int N, const double *Y, double *X,
                                 const long long int *indx);
void cblas_dgthrz(const long long int N, double *Y, double *X,
                                 const long long int *indx);
void cblas_dsctr(const long long int N, const double *X, const long long int *indx,
                                 double *Y);
void cblas_drotg(double *a, double *b, double *c, double *s);

void cblas_cswap(const long long int N, void *X, const long long int incX,
                 void *Y, const long long int incY);
void cblas_ccopy(const long long int N, const void *X, const long long int incX,
                 void *Y, const long long int incY);
void cblas_caxpy(const long long int N, const void *alpha, const void *X,
                 const long long int incX, void *Y, const long long int incY);
void cblas_caxpby(const long long int N, const void *alpha, const void *X,
                 const long long int incX, const void *beta, void *Y, const long long int incY);
void cblas_caxpyi(const long long int N, const void *alpha, const void *X,
                 const long long int *indx, void *Y);
void cblas_cgthr(const long long int N, const void *Y, void *X,
                                 const long long int *indx);
void cblas_cgthrz(const long long int N, void *Y, void *X,
                                 const long long int *indx);
void cblas_csctr(const long long int N, const void *X, const long long int *indx,
                                 void *Y);
void cblas_crotg(void *a, const void *b, float *c, void *s);

void cblas_zswap(const long long int N, void *X, const long long int incX,
                 void *Y, const long long int incY);
void cblas_zcopy(const long long int N, const void *X, const long long int incX,
                 void *Y, const long long int incY);
void cblas_zaxpy(const long long int N, const void *alpha, const void *X,
                 const long long int incX, void *Y, const long long int incY);
void cblas_zaxpby(const long long int N, const void *alpha, const void *X,
                 const long long int incX, const void *beta, void *Y, const long long int incY);
void cblas_zaxpyi(const long long int N, const void *alpha, const void *X,
                 const long long int *indx, void *Y);
void cblas_zgthr(const long long int N, const void *Y, void *X,
                                 const long long int *indx);
void cblas_zgthrz(const long long int N, void *Y, void *X,
                                 const long long int *indx);
void cblas_zsctr(const long long int N, const void *X, const long long int *indx,
                                 void *Y);
void cblas_zrotg(void *a, const void *b, double *c, void *s);




void cblas_srotmg(float *d1, float *d2, float *b1, const float b2, float *P);
void cblas_srot(const long long int N, float *X, const long long int incX,
                float *Y, const long long int incY, const float c, const float s);
void cblas_sroti(const long long int N, float *X, const long long int *indx,
                float *Y, const float c, const float s);
void cblas_srotm(const long long int N, float *X, const long long int incX,
                float *Y, const long long int incY, const float *P);

void cblas_drotmg(double *d1, double *d2, double *b1, const double b2, double *P);
void cblas_drot(const long long int N, double *X, const long long int incX,
                double *Y, const long long int incY, const double c, const double s);
void cblas_drotm(const long long int N, double *X, const long long int incX,
                double *Y, const long long int incY, const double *P);
void cblas_droti(const long long int N, double *X, const long long int *indx,
                double *Y, const double c, const double s);




void cblas_csrot(const long long int N, void *X, const long long int incX,
                 void *Y, const long long int incY, const float c, const float s);
void cblas_zdrot(const long long int N, void *X, const long long int incX,
                 void *Y, const long long int incY, const double c, const double s);




void cblas_sscal(const long long int N, const float alpha, float *X, const long long int incX);
void cblas_dscal(const long long int N, const double alpha, double *X, const long long int incX);
void cblas_cscal(const long long int N, const void *alpha, void *X, const long long int incX);
void cblas_zscal(const long long int N, const void *alpha, void *X, const long long int incX);
void cblas_csscal(const long long int N, const float alpha, void *X, const long long int incX);
void cblas_zdscal(const long long int N, const double alpha, void *X, const long long int incX);
# 254 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_cblas.h"
void cblas_sgemv(const CBLAS_LAYOUT Layout,
                 const CBLAS_TRANSPOSE TransA, const long long int M, const long long int N,
                 const float alpha, const float *A, const long long int lda,
                 const float *X, const long long int incX, const float beta,
                 float *Y, const long long int incY);
void cblas_sgbmv(const CBLAS_LAYOUT Layout,
                 const CBLAS_TRANSPOSE TransA, const long long int M, const long long int N,
                 const long long int KL, const long long int KU, const float alpha,
                 const float *A, const long long int lda, const float *X,
                 const long long int incX, const float beta, float *Y, const long long int incY);
void cblas_strmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const float *A, const long long int lda,
                 float *X, const long long int incX);
void cblas_stbmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const long long int K, const float *A, const long long int lda,
                 float *X, const long long int incX);
void cblas_stpmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const float *Ap, float *X, const long long int incX);
void cblas_strsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const float *A, const long long int lda, float *X,
                 const long long int incX);
void cblas_stbsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const long long int K, const float *A, const long long int lda,
                 float *X, const long long int incX);
void cblas_stpsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const float *Ap, float *X, const long long int incX);

void cblas_dgemv(const CBLAS_LAYOUT Layout,
                 const CBLAS_TRANSPOSE TransA, const long long int M, const long long int N,
                 const double alpha, const double *A, const long long int lda,
                 const double *X, const long long int incX, const double beta,
                 double *Y, const long long int incY);
void cblas_dgbmv(const CBLAS_LAYOUT Layout,
                 const CBLAS_TRANSPOSE TransA, const long long int M, const long long int N,
                 const long long int KL, const long long int KU, const double alpha,
                 const double *A, const long long int lda, const double *X,
                 const long long int incX, const double beta, double *Y, const long long int incY);
void cblas_dtrmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const double *A, const long long int lda,
                 double *X, const long long int incX);
void cblas_dtbmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const long long int K, const double *A, const long long int lda,
                 double *X, const long long int incX);
void cblas_dtpmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const double *Ap, double *X, const long long int incX);
void cblas_dtrsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const double *A, const long long int lda, double *X,
                 const long long int incX);
void cblas_dtbsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const long long int K, const double *A, const long long int lda,
                 double *X, const long long int incX);
void cblas_dtpsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const double *Ap, double *X, const long long int incX);

void cblas_cgemv(const CBLAS_LAYOUT Layout,
                 const CBLAS_TRANSPOSE TransA, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 const void *X, const long long int incX, const void *beta,
                 void *Y, const long long int incY);
void cblas_cgbmv(const CBLAS_LAYOUT Layout,
                 const CBLAS_TRANSPOSE TransA, const long long int M, const long long int N,
                 const long long int KL, const long long int KU, const void *alpha,
                 const void *A, const long long int lda, const void *X,
                 const long long int incX, const void *beta, void *Y, const long long int incY);
void cblas_ctrmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const void *A, const long long int lda,
                 void *X, const long long int incX);
void cblas_ctbmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const long long int K, const void *A, const long long int lda,
                 void *X, const long long int incX);
void cblas_ctpmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const void *Ap, void *X, const long long int incX);
void cblas_ctrsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const void *A, const long long int lda, void *X,
                 const long long int incX);
void cblas_ctbsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const long long int K, const void *A, const long long int lda,
                 void *X, const long long int incX);
void cblas_ctpsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const void *Ap, void *X, const long long int incX);

void cblas_zgemv(const CBLAS_LAYOUT Layout,
                 const CBLAS_TRANSPOSE TransA, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 const void *X, const long long int incX, const void *beta,
                 void *Y, const long long int incY);
void cblas_zgbmv(const CBLAS_LAYOUT Layout,
                 const CBLAS_TRANSPOSE TransA, const long long int M, const long long int N,
                 const long long int KL, const long long int KU, const void *alpha,
                 const void *A, const long long int lda, const void *X,
                 const long long int incX, const void *beta, void *Y, const long long int incY);
void cblas_ztrmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const void *A, const long long int lda,
                 void *X, const long long int incX);
void cblas_ztbmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const long long int K, const void *A, const long long int lda,
                 void *X, const long long int incX);
void cblas_ztpmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const void *Ap, void *X, const long long int incX);
void cblas_ztrsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const void *A, const long long int lda, void *X,
                 const long long int incX);
void cblas_ztbsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const long long int K, const void *A, const long long int lda,
                 void *X, const long long int incX);
void cblas_ztpsv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE TransA, const CBLAS_DIAG Diag,
                 const long long int N, const void *Ap, void *X, const long long int incX);





void cblas_ssymv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const float alpha, const float *A,
                 const long long int lda, const float *X, const long long int incX,
                 const float beta, float *Y, const long long int incY);
void cblas_ssbmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const long long int K, const float alpha, const float *A,
                 const long long int lda, const float *X, const long long int incX,
                 const float beta, float *Y, const long long int incY);
void cblas_sspmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const float alpha, const float *Ap,
                 const float *X, const long long int incX,
                 const float beta, float *Y, const long long int incY);
void cblas_sger(const CBLAS_LAYOUT Layout, const long long int M, const long long int N,
                const float alpha, const float *X, const long long int incX,
                const float *Y, const long long int incY, float *A, const long long int lda);
void cblas_ssyr(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const float alpha, const float *X,
                const long long int incX, float *A, const long long int lda);
void cblas_sspr(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const float alpha, const float *X,
                const long long int incX, float *Ap);
void cblas_ssyr2(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const float alpha, const float *X,
                const long long int incX, const float *Y, const long long int incY, float *A,
                const long long int lda);
void cblas_sspr2(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const float alpha, const float *X,
                const long long int incX, const float *Y, const long long int incY, float *A);

void cblas_dsymv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const double alpha, const double *A,
                 const long long int lda, const double *X, const long long int incX,
                 const double beta, double *Y, const long long int incY);
void cblas_dsbmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const long long int K, const double alpha, const double *A,
                 const long long int lda, const double *X, const long long int incX,
                 const double beta, double *Y, const long long int incY);
void cblas_dspmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const double alpha, const double *Ap,
                 const double *X, const long long int incX,
                 const double beta, double *Y, const long long int incY);
void cblas_dger(const CBLAS_LAYOUT Layout, const long long int M, const long long int N,
                const double alpha, const double *X, const long long int incX,
                const double *Y, const long long int incY, double *A, const long long int lda);
void cblas_dsyr(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const double alpha, const double *X,
                const long long int incX, double *A, const long long int lda);
void cblas_dspr(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const double alpha, const double *X,
                const long long int incX, double *Ap);
void cblas_dsyr2(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const double alpha, const double *X,
                const long long int incX, const double *Y, const long long int incY, double *A,
                const long long int lda);
void cblas_dspr2(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const double alpha, const double *X,
                const long long int incX, const double *Y, const long long int incY, double *A);




void cblas_chemv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const void *alpha, const void *A,
                 const long long int lda, const void *X, const long long int incX,
                 const void *beta, void *Y, const long long int incY);
void cblas_chbmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const long long int K, const void *alpha, const void *A,
                 const long long int lda, const void *X, const long long int incX,
                 const void *beta, void *Y, const long long int incY);
void cblas_chpmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const void *alpha, const void *Ap,
                 const void *X, const long long int incX,
                 const void *beta, void *Y, const long long int incY);
void cblas_cgeru(const CBLAS_LAYOUT Layout, const long long int M, const long long int N,
                 const void *alpha, const void *X, const long long int incX,
                 const void *Y, const long long int incY, void *A, const long long int lda);
void cblas_cgerc(const CBLAS_LAYOUT Layout, const long long int M, const long long int N,
                 const void *alpha, const void *X, const long long int incX,
                 const void *Y, const long long int incY, void *A, const long long int lda);
void cblas_cher(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const float alpha, const void *X, const long long int incX,
                void *A, const long long int lda);
void cblas_chpr(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const float alpha, const void *X,
                const long long int incX, void *A);
void cblas_cher2(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo, const long long int N,
                const void *alpha, const void *X, const long long int incX,
                const void *Y, const long long int incY, void *A, const long long int lda);
void cblas_chpr2(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo, const long long int N,
                const void *alpha, const void *X, const long long int incX,
                const void *Y, const long long int incY, void *Ap);

void cblas_zhemv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const void *alpha, const void *A,
                 const long long int lda, const void *X, const long long int incX,
                 const void *beta, void *Y, const long long int incY);
void cblas_zhbmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const long long int K, const void *alpha, const void *A,
                 const long long int lda, const void *X, const long long int incX,
                 const void *beta, void *Y, const long long int incY);
void cblas_zhpmv(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const long long int N, const void *alpha, const void *Ap,
                 const void *X, const long long int incX,
                 const void *beta, void *Y, const long long int incY);
void cblas_zgeru(const CBLAS_LAYOUT Layout, const long long int M, const long long int N,
                 const void *alpha, const void *X, const long long int incX,
                 const void *Y, const long long int incY, void *A, const long long int lda);
void cblas_zgerc(const CBLAS_LAYOUT Layout, const long long int M, const long long int N,
                 const void *alpha, const void *X, const long long int incX,
                 const void *Y, const long long int incY, void *A, const long long int lda);
void cblas_zher(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const double alpha, const void *X, const long long int incX,
                void *A, const long long int lda);
void cblas_zhpr(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                const long long int N, const double alpha, const void *X,
                const long long int incX, void *A);
void cblas_zher2(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo, const long long int N,
                const void *alpha, const void *X, const long long int incX,
                const void *Y, const long long int incY, void *A, const long long int lda);
void cblas_zhpr2(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo, const long long int N,
                const void *alpha, const void *X, const long long int incX,
                const void *Y, const long long int incY, void *Ap);
# 522 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_cblas.h"
void cblas_sgemm(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_TRANSPOSE TransB, const long long int M, const long long int N,
                 const long long int K, const float alpha, const float *A,
                 const long long int lda, const float *B, const long long int ldb,
                 const float beta, float *C, const long long int ldc);
void cblas_sgemm_batch(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE *TransA_Array,
                       const CBLAS_TRANSPOSE *TransB_Array, const long long int *M_Array, const long long int *N_Array,
                       const long long int *K_Array, const float *alpha_Array, const float **A_Array,
                       const long long int *lda_Array, const float **B_Array, const long long int *ldb_Array,
                       const float *beta_Array, float **C_Array, const long long int *ldc_Array,
                       const long long int group_count, const long long int *group_size);
void cblas_sgemmt(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE TransA, const CBLAS_TRANSPOSE TransB,
            const long long int N, const long long int K,
                  const float alpha, const float *A, const long long int lda,
                  const float *B, const long long int ldb, const float beta,
                  float *C, const long long int ldc);
void cblas_ssymm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const long long int M, const long long int N,
                 const float alpha, const float *A, const long long int lda,
                 const float *B, const long long int ldb, const float beta,
                 float *C, const long long int ldc);
void cblas_ssyrk(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                 const float alpha, const float *A, const long long int lda,
                 const float beta, float *C, const long long int ldc);
void cblas_ssyr2k(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                  const float alpha, const float *A, const long long int lda,
                  const float *B, const long long int ldb, const float beta,
                  float *C, const long long int ldc);
void cblas_strmm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_DIAG Diag, const long long int M, const long long int N,
                 const float alpha, const float *A, const long long int lda,
                 float *B, const long long int ldb);
void cblas_strsm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_DIAG Diag, const long long int M, const long long int N,
                 const float alpha, const float *A, const long long int lda,
                 float *B, const long long int ldb);

void cblas_dgemm(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_TRANSPOSE TransB, const long long int M, const long long int N,
                 const long long int K, const double alpha, const double *A,
                 const long long int lda, const double *B, const long long int ldb,
                 const double beta, double *C, const long long int ldc);
void cblas_dgemm_batch(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE *TransA_Array,
                       const CBLAS_TRANSPOSE *TransB_Array, const long long int *M_Array, const long long int *N_Array,
                       const long long int *K_Array, const double *alpha_Array, const double **A_Array,
                       const long long int *lda_Array, const double **B_Array, const long long int* ldb_Array,
                       const double *beta_Array, double **C_Array, const long long int *ldc_Array,
                       const long long int group_count, const long long int *group_size);
void cblas_dgemmt(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE TransA, const CBLAS_TRANSPOSE TransB,
            const long long int N, const long long int K,
                  const double alpha, const double *A, const long long int lda,
                  const double *B, const long long int ldb, const double beta,
                  double *C, const long long int ldc);
void cblas_dsymm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const long long int M, const long long int N,
                 const double alpha, const double *A, const long long int lda,
                 const double *B, const long long int ldb, const double beta,
                 double *C, const long long int ldc);
void cblas_dsyrk(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                 const double alpha, const double *A, const long long int lda,
                 const double beta, double *C, const long long int ldc);
void cblas_dsyr2k(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                  const double alpha, const double *A, const long long int lda,
                  const double *B, const long long int ldb, const double beta,
                  double *C, const long long int ldc);
void cblas_dtrmm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_DIAG Diag, const long long int M, const long long int N,
                 const double alpha, const double *A, const long long int lda,
                 double *B, const long long int ldb);
void cblas_dtrsm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_DIAG Diag, const long long int M, const long long int N,
                 const double alpha, const double *A, const long long int lda,
                 double *B, const long long int ldb);

void cblas_cgemm(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_TRANSPOSE TransB, const long long int M, const long long int N,
                 const long long int K, const void *alpha, const void *A,
                 const long long int lda, const void *B, const long long int ldb,
                 const void *beta, void *C, const long long int ldc);
void cblas_cgemm3m(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_TRANSPOSE TransB, const long long int M, const long long int N,
                 const long long int K, const void *alpha, const void *A,
                 const long long int lda, const void *B, const long long int ldb,
                 const void *beta, void *C, const long long int ldc);
void cblas_cgemm_batch(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE *TransA_Array,
                       const CBLAS_TRANSPOSE *TransB_Array, const long long int *M_Array, const long long int *N_Array,
                       const long long int *K_Array, const void *alpha_Array, const void **A_Array,
                       const long long int *lda_Array, const void **B_Array, const long long int* ldb_Array,
                       const void *beta_Array, void **C_Array, const long long int *ldc_Array,
                       const long long int group_count, const long long int *group_size);
void cblas_cgemm3m_batch(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE *TransA_Array,
                         const CBLAS_TRANSPOSE *TransB_Array, const long long int *M_Array, const long long int *N_Array,
                         const long long int *K_Array, const void *alpha_Array, const void **A_Array,
                         const long long int *lda_Array, const void **B_Array, const long long int* ldb_Array,
                         const void *beta_Array, void **C_Array, const long long int *ldc_Array,
                         const long long int group_count, const long long int *group_size);
void cblas_cgemmt(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE TransA, const CBLAS_TRANSPOSE TransB,
            const long long int N, const long long int K,
                  const void *alpha, const void *A, const long long int lda,
                  const void *B, const long long int ldb, const void *beta,
                  void *C, const long long int ldc);
void cblas_csymm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 const void *B, const long long int ldb, const void *beta,
                 void *C, const long long int ldc);
void cblas_csyrk(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                 const void *alpha, const void *A, const long long int lda,
                 const void *beta, void *C, const long long int ldc);
void cblas_csyr2k(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                  const void *alpha, const void *A, const long long int lda,
                  const void *B, const long long int ldb, const void *beta,
                  void *C, const long long int ldc);
void cblas_ctrmm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_DIAG Diag, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 void *B, const long long int ldb);
void cblas_ctrsm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_DIAG Diag, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 void *B, const long long int ldb);

void cblas_zgemm(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_TRANSPOSE TransB, const long long int M, const long long int N,
                 const long long int K, const void *alpha, const void *A,
                 const long long int lda, const void *B, const long long int ldb,
                 const void *beta, void *C, const long long int ldc);
void cblas_zgemm3m(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_TRANSPOSE TransB, const long long int M, const long long int N,
                 const long long int K, const void *alpha, const void *A,
                 const long long int lda, const void *B, const long long int ldb,
                 const void *beta, void *C, const long long int ldc);
void cblas_zgemm_batch(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE *TransA_Array,
                       const CBLAS_TRANSPOSE *TransB_Array, const long long int *M_Array, const long long int *N_Array,
                       const long long int *K_Array, const void *alpha_Array, const void **A_Array,
                       const long long int *lda_Array, const void **B_Array, const long long int* ldb_Array,
                       const void *beta_Array, void **C_Array, const long long int *ldc_Array,
                       const long long int group_count, const long long int *group_size);
void cblas_zgemm3m_batch(const CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE *TransA_Array,
                         const CBLAS_TRANSPOSE *TransB_Array, const long long int *M_Array, const long long int *N_Array,
                         const long long int *K_Array, const void *alpha_Array, const void **A_Array,
                         const long long int *lda_Array, const void **B_Array, const long long int* ldb_Array,
                         const void *beta_Array, void **C_Array, const long long int *ldc_Array,
                         const long long int group_count, const long long int *group_size);
void cblas_zgemmt(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE TransA, const CBLAS_TRANSPOSE TransB,
            const long long int N, const long long int K,
                  const void *alpha, const void *A, const long long int lda,
                  const void *B, const long long int ldb, const void *beta,
                  void *C, const long long int ldc);
void cblas_zsymm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 const void *B, const long long int ldb, const void *beta,
                 void *C, const long long int ldc);
void cblas_zsyrk(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                 const void *alpha, const void *A, const long long int lda,
                 const void *beta, void *C, const long long int ldc);
void cblas_zsyr2k(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                  const void *alpha, const void *A, const long long int lda,
                  const void *B, const long long int ldb, const void *beta,
                  void *C, const long long int ldc);
void cblas_ztrmm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_DIAG Diag, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 void *B, const long long int ldb);
void cblas_ztrsm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const CBLAS_TRANSPOSE TransA,
                 const CBLAS_DIAG Diag, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 void *B, const long long int ldb);




void cblas_chemm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 const void *B, const long long int ldb, const void *beta,
                 void *C, const long long int ldc);
void cblas_cherk(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                 const float alpha, const void *A, const long long int lda,
                 const float beta, void *C, const long long int ldc);
void cblas_cher2k(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                  const void *alpha, const void *A, const long long int lda,
                  const void *B, const long long int ldb, const float beta,
                  void *C, const long long int ldc);

void cblas_zhemm(const CBLAS_LAYOUT Layout, const CBLAS_SIDE Side,
                 const CBLAS_UPLO Uplo, const long long int M, const long long int N,
                 const void *alpha, const void *A, const long long int lda,
                 const void *B, const long long int ldb, const void *beta,
                 void *C, const long long int ldc);
void cblas_zherk(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                 const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                 const double alpha, const void *A, const long long int lda,
                 const double beta, void *C, const long long int ldc);
void cblas_zher2k(const CBLAS_LAYOUT Layout, const CBLAS_UPLO Uplo,
                  const CBLAS_TRANSPOSE Trans, const long long int N, const long long int K,
                  const void *alpha, const void *A, const long long int lda,
                  const void *B, const long long int ldb, const double beta,
                  void *C, const long long int ldc);
# 39 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_spblas.h" 1
# 41 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_spblas.h"
void mkl_scsrmv(const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, const float *beta, float *y);
void mkl_scsrsv(const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, float *y);
void mkl_scsrgemv(const char *transa, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_cspblas_scsrgemv(const char *transa, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_scsrsymv(const char *uplo, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_cspblas_scsrsymv(const char *uplo, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_scsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_cspblas_scsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);

void mkl_scscmv(const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, const float *beta, float *y);
void mkl_scscsv(const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, float *y);

void mkl_scoomv(const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, const float *beta, float *y);
void mkl_scoosv(const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void mkl_scoogemv(const char *transa, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void mkl_cspblas_scoogemv(const char *transa, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void mkl_scoosymv(const char *uplo, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void mkl_cspblas_scoosymv(const char *uplo, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void mkl_scootrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void mkl_cspblas_scootrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);

void mkl_sdiamv (const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, const float *beta, float *y);
void mkl_sdiasv (const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, float *y);
void mkl_sdiagemv(const char *transa, const long long int *m, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, float *y);
void mkl_sdiasymv(const char *uplo, const long long int *m, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, float *y);
void mkl_sdiatrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, float *y);

void mkl_sskymv (const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *pntr, const float *x, const float *beta, float *y);
void mkl_sskysv(const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *pntr, const float *x, float *y);

void mkl_sbsrmv (const char *transa, const long long int *m, const long long int *k, const long long int *lb, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, const float *beta, float *y);
void mkl_sbsrsv(const char *transa, const long long int *m, const long long int *lb, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, float *y);
void mkl_sbsrgemv(const char *transa, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_cspblas_sbsrgemv(const char *transa, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_sbsrsymv(const char *uplo, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_cspblas_sbsrsymv(const char *uplo, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_sbsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void mkl_cspblas_sbsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);


void mkl_scsrmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void mkl_scsrsm(const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, float *c, const long long int *ldc);

void mkl_scscmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void mkl_scscsm(const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, float *c, const long long int *ldc);

void mkl_scoomm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void mkl_scoosm(const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *b, const long long int *ldb, float *c, const long long int *ldc);

void mkl_sdiamm (const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void mkl_sdiasm (const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *b, const long long int *ldb, float *c, const long long int *ldc);

void mkl_sskysm (const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *pntr, const float *b, const long long int *ldb, float *c, const long long int *ldc);
void mkl_sskymm (const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *pntr, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);

void mkl_sbsrmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const long long int *lb, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void mkl_sbsrsm(const char *transa, const long long int *m, const long long int *n, const long long int *lb, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, float *c, const long long int *ldc);



void MKL_SCSRMV (const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, const float *beta, float *y);
void MKL_SCSRSV(const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, float *y);
void MKL_SCSRGEMV(const char *transa, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_CSPBLAS_SCSRGEMV(const char *transa, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_SCSRSYMV(const char *uplo, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_CSPBLAS_SCSRSYMV(const char *uplo, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_SCSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_CSPBLAS_SCSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);

void MKL_SCSCMV(const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, const float *beta, float *y);
void MKL_SCSCSV(const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, float *y);

void MKL_SCOOMV(const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, const float *beta, float *y);
void MKL_SCOOSV(const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void MKL_SCOOGEMV(const char *transa, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void MKL_CSPBLAS_SCOOGEMV(const char *transa, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void MKL_SCOOSYMV(const char *uplo, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void MKL_CSPBLAS_SCOOSYMV(const char *uplo, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void MKL_SCOOTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);
void MKL_CSPBLAS_SCOOTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *x, float *y);

void MKL_SDIAMV (const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, const float *beta, float *y);
void MKL_SDIASV (const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, float *y);
void MKL_SDIAGEMV(const char *transa, const long long int *m, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, float *y);
void MKL_SDIASYMV(const char *uplo, const long long int *m, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, float *y);
void MKL_SDIATRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *x, float *y);

void MKL_SSKYMV (const char *transa, const long long int *m, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *pntr, const float *x, const float *beta, float *y);
void MKL_SSKYSV(const char *transa, const long long int *m, const float *alpha, const char *matdescra, const float *val, const long long int *pntr, const float *x, float *y);

void MKL_SBSRMV (const char *transa, const long long int *m, const long long int *k, const long long int *lb, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, const float *beta, float *y);
void MKL_SBSRSV(const char *transa, const long long int *m, const long long int *lb, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *x, float *y);
void MKL_SBSRGEMV(const char *transa, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_CSPBLAS_SBSRGEMV(const char *transa, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_SBSRSYMV(const char *uplo, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_CSPBLAS_SBSRSYMV(const char *uplo, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_SBSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);
void MKL_CSPBLAS_SBSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const float *a, const long long int *ia, const long long int *ja, const float *x, float *y);


void MKL_SCSRMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void MKL_SCSRSM(const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, float *c, const long long int *ldc);

void MKL_SCSCMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void MKL_SCSCSM(const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, float *c, const long long int *ldc);

void MKL_SCOOMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void MKL_SCOOSM(const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const float *b, const long long int *ldb, float *c, const long long int *ldc);

void MKL_SDIAMM (const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void MKL_SDIASM (const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const float *b, const long long int *ldb, float *c, const long long int *ldc);

void MKL_SSKYSM (const char *transa, const long long int *m, const long long int *n, const float *alpha, const char *matdescra, const float *val, const long long int *pntr, const float *b, const long long int *ldb, float *c, const long long int *ldc);
void MKL_SSKYMM (const char *transa, const long long int *m, const long long int *n, const long long int *k, const float *alpha, const char *matdescra, const float *val, const long long int *pntr, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);

void MKL_SBSRMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const long long int *lb, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, const float *beta, float *c, const long long int *ldc);
void MKL_SBSRSM(const char *transa, const long long int *m, const long long int *n, const long long int *lb, const float *alpha, const char *matdescra, const float *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const float *b, const long long int *ldb, float *c, const long long int *ldc);



void mkl_dcsrmv(const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, const double *beta, double *y);
void mkl_dcsrsv(const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, double *y);
void mkl_dcsrgemv(const char *transa, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_cspblas_dcsrgemv(const char *transa, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_dcsrsymv(const char *uplo, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_cspblas_dcsrsymv(const char *uplo, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_dcsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_cspblas_dcsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);

void mkl_dcscmv(const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, const double *beta, double *y);
void mkl_dcscsv(const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, double *y);

void mkl_dcoomv(const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, const double *beta, double *y);
void mkl_dcoosv(const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void mkl_dcoogemv(const char *transa, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void mkl_cspblas_dcoogemv(const char *transa, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void mkl_dcoosymv(const char *uplo, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void mkl_cspblas_dcoosymv(const char *uplo, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void mkl_dcootrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void mkl_cspblas_dcootrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);

void mkl_ddiamv (const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, const double *beta, double *y);
void mkl_ddiasv (const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, double *y);
void mkl_ddiagemv(const char *transa, const long long int *m, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, double *y);
void mkl_ddiasymv(const char *uplo, const long long int *m, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, double *y);
void mkl_ddiatrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, double *y);

void mkl_dskymv (const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *pntr, const double *x, const double *beta, double *y);
void mkl_dskysv(const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *pntr, const double *x, double *y);

void mkl_dbsrmv (const char *transa, const long long int *m, const long long int *k, const long long int *lb, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, const double *beta, double *y);
void mkl_dbsrsv(const char *transa, const long long int *m, const long long int *lb, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, double *y);
void mkl_dbsrgemv(const char *transa, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_cspblas_dbsrgemv(const char *transa, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_dbsrsymv(const char *uplo, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_cspblas_dbsrsymv(const char *uplo, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_dbsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void mkl_cspblas_dbsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);


void mkl_dcsrmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void mkl_dcsrsm(const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, double *c, const long long int *ldc);

void mkl_dcscmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void mkl_dcscsm(const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, double *c, const long long int *ldc);

void mkl_dcoomm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void mkl_dcoosm(const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *b, const long long int *ldb, double *c, const long long int *ldc);

void mkl_ddiamm (const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void mkl_ddiasm (const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *b, const long long int *ldb, double *c, const long long int *ldc);

void mkl_dskysm (const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *pntr, const double *b, const long long int *ldb, double *c, const long long int *ldc);
void mkl_dskymm (const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *pntr, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);

void mkl_dbsrmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const long long int *lb, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void mkl_dbsrsm(const char *transa, const long long int *m, const long long int *n, const long long int *lb, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, double *c, const long long int *ldc);



void MKL_DCSRMV (const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, const double *beta, double *y);
void MKL_DCSRSV(const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, double *y);
void MKL_DCSRGEMV(const char *transa, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_CSPBLAS_DCSRGEMV(const char *transa, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_DCSRSYMV(const char *uplo, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_CSPBLAS_DCSRSYMV(const char *uplo, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_DCSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_CSPBLAS_DCSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);

void MKL_DCSCMV(const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, const double *beta, double *y);
void MKL_DCSCSV(const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, double *y);

void MKL_DCOOMV(const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, const double *beta, double *y);
void MKL_DCOOSV(const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void MKL_DCOOGEMV(const char *transa, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void MKL_CSPBLAS_DCOOGEMV(const char *transa, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void MKL_DCOOSYMV(const char *uplo, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void MKL_CSPBLAS_DCOOSYMV(const char *uplo, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void MKL_DCOOTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);
void MKL_CSPBLAS_DCOOTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *x, double *y);

void MKL_DDIAMV (const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, const double *beta, double *y);
void MKL_DDIASV (const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, double *y);
void MKL_DDIAGEMV(const char *transa, const long long int *m, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, double *y);
void MKL_DDIASYMV(const char *uplo, const long long int *m, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, double *y);
void MKL_DDIATRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *x, double *y);

void MKL_DSKYMV (const char *transa, const long long int *m, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *pntr, const double *x, const double *beta, double *y);
void MKL_DSKYSV(const char *transa, const long long int *m, const double *alpha, const char *matdescra, const double *val, const long long int *pntr, const double *x, double *y);

void MKL_DBSRMV (const char *transa, const long long int *m, const long long int *k, const long long int *lb, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, const double *beta, double *y);
void MKL_DBSRSV(const char *transa, const long long int *m, const long long int *lb, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *x, double *y);
void MKL_DBSRGEMV(const char *transa, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_CSPBLAS_DBSRGEMV(const char *transa, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_DBSRSYMV(const char *uplo, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_CSPBLAS_DBSRSYMV(const char *uplo, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_DBSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);
void MKL_CSPBLAS_DBSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const double *a, const long long int *ia, const long long int *ja, const double *x, double *y);


void MKL_DCSRMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void MKL_DCSRSM(const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, double *c, const long long int *ldc);

void MKL_DCSCMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void MKL_DCSCSM(const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, double *c, const long long int *ldc);

void MKL_DCOOMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void MKL_DCOOSM(const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const double *b, const long long int *ldb, double *c, const long long int *ldc);

void MKL_DDIAMM (const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void MKL_DDIASM (const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const double *b, const long long int *ldb, double *c, const long long int *ldc);

void MKL_DSKYSM (const char *transa, const long long int *m, const long long int *n, const double *alpha, const char *matdescra, const double *val, const long long int *pntr, const double *b, const long long int *ldb, double *c, const long long int *ldc);
void MKL_DSKYMM (const char *transa, const long long int *m, const long long int *n, const long long int *k, const double *alpha, const char *matdescra, const double *val, const long long int *pntr, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);

void MKL_DBSRMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const long long int *lb, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, const double *beta, double *c, const long long int *ldc);
void MKL_DBSRSM(const char *transa, const long long int *m, const long long int *n, const long long int *lb, const double *alpha, const char *matdescra, const double *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const double *b, const long long int *ldb, double *c, const long long int *ldc);



void mkl_ccsrmv(const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void mkl_ccsrsv(const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_ccsrgemv(const char *transa, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cspblas_ccsrgemv(const char *transa, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_ccsrsymv(const char *uplo, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cspblas_ccsrsymv(const char *uplo, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_ccsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cspblas_ccsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);

void mkl_ccscmv(const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void mkl_ccscsv(const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, MKL_Complex8 *y);

void mkl_ccoomv(const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void mkl_ccoosv(const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_ccoogemv(const char *transa, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cspblas_ccoogemv(const char *transa, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_ccoosymv(const char *uplo, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cspblas_ccoosymv(const char *uplo, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_ccootrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cspblas_ccootrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);

void mkl_cdiamv (const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void mkl_cdiasv (const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cdiagemv(const char *transa, const long long int *m, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cdiasymv(const char *uplo, const long long int *m, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cdiatrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, MKL_Complex8 *y);

void mkl_cskymv (const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *pntr, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void mkl_cskysv(const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *pntr, const MKL_Complex8 *x, MKL_Complex8 *y);

void mkl_cbsrmv (const char *transa, const long long int *m, const long long int *k, const long long int *lb, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void mkl_cbsrsv(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cbsrgemv(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cspblas_cbsrgemv(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cbsrsymv(const char *uplo, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cspblas_cbsrsymv(const char *uplo, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cbsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void mkl_cspblas_cbsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);


void mkl_ccsrmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void mkl_ccsrsm(const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);

void mkl_ccscmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void mkl_ccscsm(const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);

void mkl_ccoomm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void mkl_ccoosm(const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);

void mkl_cdiamm (const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void mkl_cdiasm (const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);

void mkl_cskysm (const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *pntr, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);
void mkl_cskymm (const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *pntr, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);

void mkl_cbsrmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const long long int *lb, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void mkl_cbsrsm(const char *transa, const long long int *m, const long long int *n, const long long int *lb, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);



void MKL_CCSRMV (const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void MKL_CCSRSV(const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CCSRGEMV(const char *transa, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CSPBLAS_CCSRGEMV(const char *transa, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CCSRSYMV(const char *uplo, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CSPBLAS_CCSRSYMV(const char *uplo, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CCSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CSPBLAS_CCSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);

void MKL_CCSCMV(const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void MKL_CCSCSV(const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, MKL_Complex8 *y);

void MKL_CCOOMV(const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void MKL_CCOOSV(const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CCOOGEMV(const char *transa, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CSPBLAS_CCOOGEMV(const char *transa, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CCOOSYMV(const char *uplo, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CSPBLAS_CCOOSYMV(const char *uplo, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CCOOTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CSPBLAS_CCOOTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *x, MKL_Complex8 *y);

void MKL_CDIAMV (const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void MKL_CDIASV (const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CDIAGEMV(const char *transa, const long long int *m, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CDIASYMV(const char *uplo, const long long int *m, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CDIATRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *x, MKL_Complex8 *y);

void MKL_CSKYMV (const char *transa, const long long int *m, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *pntr, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void MKL_CSKYSV(const char *transa, const long long int *m, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *pntr, const MKL_Complex8 *x, MKL_Complex8 *y);

void MKL_CBSRMV (const char *transa, const long long int *m, const long long int *k, const long long int *lb, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, const MKL_Complex8 *beta, MKL_Complex8 *y);
void MKL_CBSRSV(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CBSRGEMV(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CSPBLAS_CBSRGEMV(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CBSRSYMV(const char *uplo, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CSPBLAS_CBSRSYMV(const char *uplo, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CBSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);
void MKL_CSPBLAS_CBSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const MKL_Complex8 *a, const long long int *ia, const long long int *ja, const MKL_Complex8 *x, MKL_Complex8 *y);


void MKL_CCSRMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void MKL_CCSRSM(const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);

void MKL_CCSCMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void MKL_CCSCSM(const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);

void MKL_CCOOMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void MKL_CCOOSM(const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);

void MKL_CDIAMM (const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void MKL_CDIASM (const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);

void MKL_CSKYSM (const char *transa, const long long int *m, const long long int *n, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *pntr, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);
void MKL_CSKYMM (const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *pntr, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);

void MKL_CBSRMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const long long int *lb, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, const MKL_Complex8 *beta, MKL_Complex8 *c, const long long int *ldc);
void MKL_CBSRSM(const char *transa, const long long int *m, const long long int *n, const long long int *lb, const MKL_Complex8 *alpha, const char *matdescra, const MKL_Complex8 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex8 *b, const long long int *ldb, MKL_Complex8 *c, const long long int *ldc);



void mkl_zcsrmv(const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void mkl_zcsrsv(const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zcsrgemv(const char *transa, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_cspblas_zcsrgemv(const char *transa, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zcsrsymv(const char *uplo, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_cspblas_zcsrsymv(const char *uplo, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zcsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_cspblas_zcsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);

void mkl_zcscmv(const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void mkl_zcscsv(const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, MKL_Complex16 *y);

void mkl_zcoomv(const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void mkl_zcoosv(const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zcoogemv(const char *transa, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_cspblas_zcoogemv(const char *transa, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zcoosymv(const char *uplo, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_cspblas_zcoosymv(const char *uplo, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zcootrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_cspblas_zcootrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);

void mkl_zdiamv (const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void mkl_zdiasv (const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zdiagemv(const char *transa, const long long int *m, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zdiasymv(const char *uplo, const long long int *m, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zdiatrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, MKL_Complex16 *y);

void mkl_zskymv (const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *pntr, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void mkl_zskysv(const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *pntr, const MKL_Complex16 *x, MKL_Complex16 *y);

void mkl_zbsrmv (const char *transa, const long long int *m, const long long int *k, const long long int *lb, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void mkl_zbsrsv(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zbsrgemv(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_cspblas_zbsrgemv(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zbsrsymv(const char *uplo, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_cspblas_zbsrsymv(const char *uplo, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_zbsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void mkl_cspblas_zbsrtrsv(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);


void mkl_zcsrmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void mkl_zcsrsm(const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);

void mkl_zcscmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void mkl_zcscsm(const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);

void mkl_zcoomm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void mkl_zcoosm(const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);

void mkl_zdiamm (const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void mkl_zdiasm (const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);

void mkl_zskysm (const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *pntr, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);
void mkl_zskymm (const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *pntr, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);

void mkl_zbsrmm(const char *transa, const long long int *m, const long long int *n, const long long int *k, const long long int *lb, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void mkl_zbsrsm(const char *transa, const long long int *m, const long long int *n, const long long int *lb, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);



void MKL_ZCSRMV (const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void MKL_ZCSRSV(const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZCSRGEMV(const char *transa, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_CSPBLAS_ZCSRGEMV(const char *transa, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZCSRSYMV(const char *uplo, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_CSPBLAS_ZCSRSYMV(const char *uplo, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZCSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_CSPBLAS_ZCSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);

void MKL_ZCSCMV(const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void MKL_ZCSCSV(const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, MKL_Complex16 *y);

void MKL_ZCOOMV(const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void MKL_ZCOOSV(const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZCOOGEMV(const char *transa, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_CSPBLAS_ZCOOGEMV(const char *transa, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZCOOSYMV(const char *uplo, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_CSPBLAS_ZCOOSYMV(const char *uplo, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZCOOTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_CSPBLAS_ZCOOTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *x, MKL_Complex16 *y);

void MKL_ZDIAMV (const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void MKL_ZDIASV (const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZDIAGEMV(const char *transa, const long long int *m, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZDIASYMV(const char *uplo, const long long int *m, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZDIATRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *x, MKL_Complex16 *y);

void MKL_ZSKYMV (const char *transa, const long long int *m, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *pntr, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void MKL_ZSKYSV(const char *transa, const long long int *m, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *pntr, const MKL_Complex16 *x, MKL_Complex16 *y);

void MKL_ZBSRMV (const char *transa, const long long int *m, const long long int *k, const long long int *lb, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, const MKL_Complex16 *beta, MKL_Complex16 *y);
void MKL_ZBSRSV(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZBSRGEMV(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_CSPBLAS_ZBSRGEMV(const char *transa, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZBSRSYMV(const char *uplo, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_CSPBLAS_ZBSRSYMV(const char *uplo, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_ZBSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);
void MKL_CSPBLAS_ZBSRTRSV(const char *uplo, const char *transa, const char *diag, const long long int *m, const long long int *lb, const MKL_Complex16 *a, const long long int *ia, const long long int *ja, const MKL_Complex16 *x, MKL_Complex16 *y);


void MKL_ZCSRMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void MKL_ZCSRSM(const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);

void MKL_ZCSCMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void MKL_ZCSCSM(const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);

void MKL_ZCOOMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void MKL_ZCOOSM(const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *rowind, const long long int *colind, const long long int *nnz, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);

void MKL_ZDIAMM (const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void MKL_ZDIASM (const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *lval, const long long int *idiag, const long long int *ndiag, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);

void MKL_ZSKYSM (const char *transa, const long long int *m, const long long int *n, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *pntr, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);
void MKL_ZSKYMM (const char *transa, const long long int *m, const long long int *n, const long long int *k, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *pntr, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);

void MKL_ZBSRMM(const char *transa, const long long int *m, const long long int *n, const long long int *k, const long long int *lb, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, const MKL_Complex16 *beta, MKL_Complex16 *c, const long long int *ldc);
void MKL_ZBSRSM(const char *transa, const long long int *m, const long long int *n, const long long int *lb, const MKL_Complex16 *alpha, const char *matdescra, const MKL_Complex16 *val, const long long int *indx, const long long int *pntrb, const long long int *pntre, const MKL_Complex16 *b, const long long int *ldb, MKL_Complex16 *c, const long long int *ldc);


void mkl_dcsrbsr(const long long int *job, const long long int *m, const long long int *mblk, const long long int *ldAbsr, double *Acsr, long long int *AJ, long long int *AI, double *Absr, long long int *AJB, long long int *AIB, long long int *info);
void mkl_dcsrcoo(const long long int *job, const long long int *n, double *Acsr, long long int *AJR, long long int *AIR, long long int *nnz, double *Acoo, long long int *ir, long long int *jc, long long int *info);
void mkl_ddnscsr(const long long int *job, const long long int *m, const long long int *n, double *Adns, const long long int *lda, double *Acsr, long long int *AJ, long long int *AI, long long int *info);
void mkl_dcsrcsc(const long long int *job, const long long int *n, double *Acsr, long long int *AJ0, long long int *AI0, double *Acsc, long long int *AJ1, long long int *AI1, long long int *info);
void mkl_dcsrdia(const long long int *job, const long long int *n, double *Acsr, long long int *AJ0, long long int *AI0, double *Adia, const long long int *ndiag, long long int *distance, long long int *idiag, double *Acsr_rem, long long int *AJ0_rem, long long int *AI0_rem, long long int *info);
void mkl_dcsrsky(const long long int *job, const long long int *n, double *Acsr, long long int *AJ0, long long int *AI0, double *Asky, long long int *pointers, long long int *info);

void mkl_scsrbsr(const long long int *job, const long long int *m, const long long int *mblk, const long long int *ldAbsr, float *Acsr, long long int *AJ, long long int *AI, float *Absr, long long int *AJB, long long int *AIB, long long int *info);
void mkl_scsrcoo(const long long int *job, const long long int *n, float *Acsr, long long int *AJR, long long int *AIR, long long int *nnz, float *Acoo, long long int *ir, long long int *jc, long long int *info);
void mkl_sdnscsr(const long long int *job, const long long int *m, const long long int *n, float *Adns, const long long int *lda, float *Acsr, long long int *AJ, long long int *AI, long long int *info);
void mkl_scsrcsc(const long long int *job, const long long int *n, float *Acsr, long long int *AJ0, long long int *AI0, float *Acsc, long long int *AJ1, long long int *AI1, long long int *info);
void mkl_scsrdia(const long long int *job, const long long int *n, float *Acsr, long long int *AJ0, long long int *AI0, float *Adia, const long long int *ndiag, long long int *distance, long long int *idiag, float *Acsr_rem, long long int *AJ0_rem, long long int *AI0_rem, long long int *info);
void mkl_scsrsky(const long long int *job, const long long int *n, float *Acsr, long long int *AJ0, long long int *AI0, float *Asky, long long int *pointers, long long int *info);

void mkl_ccsrbsr(const long long int *job, const long long int *m, const long long int *mblk, const long long int *ldAbsr, MKL_Complex8 *Acsr, long long int *AJ, long long int *AI, MKL_Complex8 *Absr, long long int *AJB, long long int *AIB, long long int *info);
void mkl_ccsrcoo(const long long int *job, const long long int *n, MKL_Complex8 *Acsr, long long int *AJR, long long int *AIR, long long int *nnz, MKL_Complex8 *Acoo, long long int *ir, long long int *jc, long long int *info);
void mkl_cdnscsr(const long long int *job, const long long int *m, const long long int *n, MKL_Complex8 *Adns, const long long int *lda, MKL_Complex8 *Acsr, long long int *AJ, long long int *AI, long long int *info);
void mkl_ccsrcsc(const long long int *job, const long long int *n, MKL_Complex8 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex8 *Acsc, long long int *AJ1, long long int *AI1, long long int *info);
void mkl_ccsrdia(const long long int *job, const long long int *n, MKL_Complex8 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex8 *Adia, const long long int *ndiag, long long int *distance, long long int *idiag, MKL_Complex8 *Acsr_rem, long long int *AJ0_rem, long long int *AI0_rem, long long int *info);
void mkl_ccsrsky(const long long int *job, const long long int *n, MKL_Complex8 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex8 *Asky, long long int *pointers, long long int *info);

void mkl_zcsrbsr(const long long int *job, const long long int *m, const long long int *mblk, const long long int *ldAbsr, MKL_Complex16 *Acsr, long long int *AJ, long long int *AI, MKL_Complex16 *Absr, long long int *AJB, long long int *AIB, long long int *info);
void mkl_zcsrcoo(const long long int *job, const long long int *n, MKL_Complex16 *Acsr, long long int *AJR, long long int *AIR, long long int *nnz, MKL_Complex16 *Acoo, long long int *ir, long long int *jc, long long int *info);
void mkl_zdnscsr(const long long int *job, const long long int *m, const long long int *n, MKL_Complex16 *Adns, const long long int *lda, MKL_Complex16 *Acsr, long long int *AJ, long long int *AI, long long int *info);
void mkl_zcsrcsc(const long long int *job, const long long int *n, MKL_Complex16 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex16 *Acsc, long long int *AJ1, long long int *AI1, long long int *info);
void mkl_zcsrdia(const long long int *job, const long long int *n, MKL_Complex16 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex16 *Adia, const long long int *ndiag, long long int *distance, long long int *idiag, MKL_Complex16 *Acsr_rem, long long int *AJ0_rem, long long int *AI0_rem, long long int *info);
void mkl_zcsrsky(const long long int *job, const long long int *n, MKL_Complex16 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex16 *Asky, long long int *pointers, long long int *info);


void MKL_DCSRBSR(const long long int *job, const long long int *m, const long long int *mblk, const long long int *ldAbsr, double *Acsr, long long int *AJ, long long int *AI, double *Absr, long long int *AJB, long long int *AIB, long long int *info);
void MKL_DCSRCOO(const long long int *job, const long long int *n, double *Acsr, long long int *AJR, long long int *AIR, long long int *nnz, double *Acoo, long long int *ir, long long int *jc, long long int *info);
void MKL_DDNSCSR(const long long int *job, const long long int *m, const long long int *n, double *Adns, const long long int *lda, double *Acsr, long long int *AJ, long long int *AI, long long int *info);
void MKL_DCSRCSC(const long long int *job, const long long int *n, double *Acsr, long long int *AJ0, long long int *AI0, double *Acsc, long long int *AJ1, long long int *AI1, long long int *info);
void MKL_DCSRDIA(const long long int *job, const long long int *n, double *Acsr, long long int *AJ0, long long int *AI0, double *Adia, const long long int *ndiag, long long int *distance, long long int *idiag, double *Acsr_rem, long long int *AJ0_rem, long long int *AI0_rem, long long int *info);
void MKL_DCSRSKY(const long long int *job, const long long int *n, double *Acsr, long long int *AJ0, long long int *AI0, double *Asky, long long int *pointers, long long int *info);

void MKL_SCSRBSR(const long long int *job, const long long int *m, const long long int *mblk, const long long int *ldAbsr, float *Acsr, long long int *AJ, long long int *AI, float *Absr, long long int *AJB, long long int *AIB, long long int *info);
void MKL_SCSRCOO(const long long int *job, const long long int *n, float *Acsr, long long int *AJR, long long int *AIR, long long int *nnz, float *Acoo, long long int *ir, long long int *jc, long long int *info);
void MKL_SDNSCSR(const long long int *job, const long long int *m, const long long int *n, float *Adns, const long long int *lda, float *Acsr, long long int *AJ, long long int *AI, long long int *info);
void MKL_SCSRCSC(const long long int *job, const long long int *n, float *Acsr, long long int *AJ0, long long int *AI0, float *Acsc, long long int *AJ1, long long int *AI1, long long int *info);
void MKL_SCSRDIA(const long long int *job, const long long int *n, float *Acsr, long long int *AJ0, long long int *AI0, float *Adia, const long long int *ndiag, long long int *distance, long long int *idiag, float *Acsr_rem, long long int *AJ0_rem, long long int *AI0_rem, long long int *info);
void MKL_SCSRSKY(const long long int *job, const long long int *n, float *Acsr, long long int *AJ0, long long int *AI0, float *Asky, long long int *pointers, long long int *info);

void MKL_CCSRBSR(const long long int *job, const long long int *m, const long long int *mblk, const long long int *ldAbsr, MKL_Complex8 *Acsr, long long int *AJ, long long int *AI, MKL_Complex8 *Absr, long long int *AJB, long long int *AIB, long long int *info);
void MKL_CCSRCOO(const long long int *job, const long long int *n, MKL_Complex8 *Acsr, long long int *AJR, long long int *AIR, long long int *nnz, MKL_Complex8 *Acoo, long long int *ir, long long int *jc, long long int *info);
void MKL_CDNSCSR(const long long int *job, const long long int *m, const long long int *n, MKL_Complex8 *Adns, const long long int *lda, MKL_Complex8 *Acsr, long long int *AJ, long long int *AI, long long int *info);
void MKL_CCSRCSC(const long long int *job, const long long int *n, MKL_Complex8 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex8 *Acsc, long long int *AJ1, long long int *AI1, long long int *info);
void MKL_CCSRDIA(const long long int *job, const long long int *n, MKL_Complex8 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex8 *Adia, const long long int *ndiag, long long int *distance, long long int *idiag, MKL_Complex8 *Acsr_rem, long long int *AJ0_rem, long long int *AI0_rem, long long int *info);
void MKL_CCSRSKY(const long long int *job, const long long int *n, MKL_Complex8 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex8 *Asky, long long int *pointers, long long int *info);

void MKL_ZCSRBSR(const long long int *job, const long long int *m, const long long int *mblk, const long long int *ldAbsr, MKL_Complex16 *Acsr, long long int *AJ, long long int *AI, MKL_Complex16 *Absr, long long int *AJB, long long int *AIB, long long int *info);
void MKL_ZCSRCOO(const long long int *job, const long long int *n, MKL_Complex16 *Acsr, long long int *AJR, long long int *AIR, long long int *nnz, MKL_Complex16 *Acoo, long long int *ir, long long int *jc, long long int *info);
void MKL_ZDNSCSR(const long long int *job, const long long int *m, const long long int *n, MKL_Complex16 *Adns, const long long int *lda, MKL_Complex16 *Acsr, long long int *AJ, long long int *AI, long long int *info);
void MKL_ZCSRCSC(const long long int *job, const long long int *n, MKL_Complex16 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex16 *Acsc, long long int *AJ1, long long int *AI1, long long int *info);
void MKL_ZCSRDIA(const long long int *job, const long long int *n, MKL_Complex16 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex16 *Adia, const long long int *ndiag, long long int *distance, long long int *idiag, MKL_Complex16 *Acsr_rem, long long int *AJ0_rem, long long int *AI0_rem, long long int *info);
void MKL_ZCSRSKY(const long long int *job, const long long int *n, MKL_Complex16 *Acsr, long long int *AJ0, long long int *AI0, MKL_Complex16 *Asky, long long int *pointers, long long int *info);



void mkl_dcsrmultcsr(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, const long long int *k, double *a, long long int *ja, long long int *ia, double *b, long long int *jb, long long int *ib, double *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);
void mkl_dcsrmultd(const char *transa, const long long int *m, const long long int *n, const long long int *k, double *a, long long int *ja, long long int *ia, double *b, long long int *jb, long long int *ib, double *c, long long int *ldc);
void mkl_dcsradd(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, double *a, long long int *ja, long long int *ia, const double *beta, double *b, long long int *jb, long long int *ib, double *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);

void mkl_scsrmultcsr(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, const long long int *k, float *a, long long int *ja, long long int *ia, float *b, long long int *jb, long long int *ib, float *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);
void mkl_scsrmultd(const char *transa, const long long int *m, const long long int *n, const long long int *k, float *a, long long int *ja, long long int *ia, float *b, long long int *jb, long long int *ib, float *c, long long int *ldc);
void mkl_scsradd(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, float *a, long long int *ja, long long int *ia, const float *beta, float *b, long long int *jb, long long int *ib, float *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);

void mkl_ccsrmultcsr(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, const long long int *k, MKL_Complex8 *a, long long int *ja, long long int *ia, MKL_Complex8 *b, long long int *jb, long long int *ib, MKL_Complex8 *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);
void mkl_ccsrmultd(const char *transa, const long long int *m, const long long int *n, const long long int *k, MKL_Complex8 *a, long long int *ja, long long int *ia, MKL_Complex8 *b, long long int *jb, long long int *ib, MKL_Complex8 *c, long long int *ldc);
void mkl_ccsradd(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, MKL_Complex8 *a, long long int *ja, long long int *ia, const MKL_Complex8 *beta, MKL_Complex8 *b, long long int *jb, long long int *ib, MKL_Complex8 *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);

void mkl_zcsrmultcsr(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, const long long int *k, MKL_Complex16 *a, long long int *ja, long long int *ia, MKL_Complex16 *b, long long int *jb, long long int *ib, MKL_Complex16 *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);
void mkl_zcsrmultd(const char *transa, const long long int *m, const long long int *n, const long long int *k, MKL_Complex16 *a, long long int *ja, long long int *ia, MKL_Complex16 *b, long long int *jb, long long int *ib, MKL_Complex16 *c, long long int *ldc);
void mkl_zcsradd(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, MKL_Complex16 *a, long long int *ja, long long int *ia, const MKL_Complex16 *beta, MKL_Complex16 *b, long long int *jb, long long int *ib, MKL_Complex16 *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);



void MKL_DCSRMULTCSR(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, const long long int *k, double *a, long long int *ja, long long int *ia, double *b, long long int *jb, long long int *ib, double *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);
void MKL_DCSRMULTD(const char *transa, const long long int *m, const long long int *n, const long long int *k, double *a, long long int *ja, long long int *ia, double *b, long long int *jb, long long int *ib, double *c, long long int *ldc);
void MKL_DCSRADD(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, double *a, long long int *ja, long long int *ia, const double *beta, double *b, long long int *jb, long long int *ib, double *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);

void MKL_SCSRMULTCSR(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, const long long int *k, float *a, long long int *ja, long long int *ia, float *b, long long int *jb, long long int *ib, float *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);
void MKL_SCSRMULTD(const char *transa, const long long int *m, const long long int *n, const long long int *k, float *a, long long int *ja, long long int *ia, float *b, long long int *jb, long long int *ib, float *c, long long int *ldc);
void MKL_SCSRADD(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, float *a, long long int *ja, long long int *ia, const float *beta, float *b, long long int *jb, long long int *ib, float *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);

void MKL_CCSRMULTCSR(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, const long long int *k, MKL_Complex8 *a, long long int *ja, long long int *ia, MKL_Complex8 *b, long long int *jb, long long int *ib, MKL_Complex8 *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);
void MKL_CCSRMULTD(const char *transa, const long long int *m, const long long int *n, const long long int *k, MKL_Complex8 *a, long long int *ja, long long int *ia, MKL_Complex8 *b, long long int *jb, long long int *ib, MKL_Complex8 *c, long long int *ldc);
void MKL_CCSRADD(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, MKL_Complex8 *a, long long int *ja, long long int *ia, const MKL_Complex8 *beta, MKL_Complex8 *b, long long int *jb, long long int *ib, MKL_Complex8 *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);

void MKL_ZCSRMULTCSR(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, const long long int *k, MKL_Complex16 *a, long long int *ja, long long int *ia, MKL_Complex16 *b, long long int *jb, long long int *ib, MKL_Complex16 *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);
void MKL_ZCSRMULTD(const char *transa, const long long int *m, const long long int *n, const long long int *k, MKL_Complex16 *a, long long int *ja, long long int *ia, MKL_Complex16 *b, long long int *jb, long long int *ib, MKL_Complex16 *c, long long int *ldc);
void MKL_ZCSRADD(const char *transa, const long long int *job, const long long int *sort, const long long int *m, const long long int *n, MKL_Complex16 *a, long long int *ja, long long int *ia, const MKL_Complex16 *beta, MKL_Complex16 *b, long long int *jb, long long int *ib, MKL_Complex16 *c, long long int *jc, long long int *ic, const long long int *nnzmax, long long int *ierr);
# 621 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_spblas.h"
    typedef enum
    {
        SPARSE_STATUS_SUCCESS = 0,
        SPARSE_STATUS_NOT_INITIALIZED = 1,
        SPARSE_STATUS_ALLOC_FAILED = 2,
        SPARSE_STATUS_INVALID_VALUE = 3,
        SPARSE_STATUS_EXECUTION_FAILED = 4,
        SPARSE_STATUS_INTERNAL_ERROR = 5,
        SPARSE_STATUS_NOT_SUPPORTED = 6
    } sparse_status_t;


    typedef enum
    {
        SPARSE_OPERATION_NON_TRANSPOSE = 10,
        SPARSE_OPERATION_TRANSPOSE = 11,
        SPARSE_OPERATION_CONJUGATE_TRANSPOSE = 12
    } sparse_operation_t;


    typedef enum
    {
        SPARSE_MATRIX_TYPE_GENERAL = 20,
        SPARSE_MATRIX_TYPE_SYMMETRIC = 21,
        SPARSE_MATRIX_TYPE_HERMITIAN = 22,
        SPARSE_MATRIX_TYPE_TRIANGULAR = 23,
        SPARSE_MATRIX_TYPE_DIAGONAL = 24,
        SPARSE_MATRIX_TYPE_BLOCK_TRIANGULAR = 25,
        SPARSE_MATRIX_TYPE_BLOCK_DIAGONAL = 26
    } sparse_matrix_type_t;


    typedef enum
    {
        SPARSE_INDEX_BASE_ZERO = 0,
        SPARSE_INDEX_BASE_ONE = 1
    } sparse_index_base_t;


    typedef enum
    {
        SPARSE_FILL_MODE_LOWER = 40,
        SPARSE_FILL_MODE_UPPER = 41
    } sparse_fill_mode_t;


    typedef enum
    {
        SPARSE_DIAG_NON_UNIT = 50,
        SPARSE_DIAG_UNIT = 51
    } sparse_diag_type_t;


    typedef enum
    {
        SPARSE_LAYOUT_ROW_MAJOR = 60,
        SPARSE_LAYOUT_COLUMN_MAJOR = 61
    } sparse_layout_t;


    typedef enum
    {
        SPARSE_VERBOSE_OFF = 70,
        SPARSE_VERBOSE_BASIC = 71,
        SPARSE_VERBOSE_EXTENDED = 72
    } verbose_mode_t;


    typedef enum
    {
        SPARSE_MEMORY_NONE = 80,
        SPARSE_MEMORY_AGGRESSIVE = 81
    } sparse_memory_usage_t;





    struct sparse_matrix;
    typedef struct sparse_matrix *sparse_matrix_t;


    struct matrix_descr {
        sparse_matrix_type_t type;
        sparse_fill_mode_t mode;
        sparse_diag_type_t diag;
    };
# 723 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_spblas.h"
    sparse_status_t mkl_sparse_s_create_coo( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int nnz,
                                             long long int *row_indx,
                                             long long int *col_indx,
                                             float *values );

    sparse_status_t mkl_sparse_d_create_coo( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int nnz,
                                             long long int *row_indx,
                                             long long int *col_indx,
                                             double *values );

    sparse_status_t mkl_sparse_c_create_coo( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int nnz,
                                             long long int *row_indx,
                                             long long int *col_indx,
                                             MKL_Complex8 *values );

    sparse_status_t mkl_sparse_z_create_coo( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int nnz,
                                             long long int *row_indx,
                                             long long int *col_indx,
                                             MKL_Complex16 *values );






    sparse_status_t mkl_sparse_s_create_csr( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             float *values );

    sparse_status_t mkl_sparse_d_create_csr( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             double *values );

    sparse_status_t mkl_sparse_c_create_csr( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             MKL_Complex8 *values );

    sparse_status_t mkl_sparse_z_create_csr( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             MKL_Complex16 *values );





    sparse_status_t mkl_sparse_s_create_csc( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             float *values );

    sparse_status_t mkl_sparse_d_create_csc( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             double *values );

    sparse_status_t mkl_sparse_c_create_csc( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             MKL_Complex8 *values );

    sparse_status_t mkl_sparse_z_create_csc( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             long long int rows,
                                             long long int cols,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             MKL_Complex16 *values );





    sparse_status_t mkl_sparse_s_create_bsr( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             sparse_layout_t block_layout,
                                             long long int rows,
                                             long long int cols,
                                             long long int block_size,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             float *values );

    sparse_status_t mkl_sparse_d_create_bsr( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             sparse_layout_t block_layout,
                                             long long int rows,
                                             long long int cols,
                                             long long int block_size,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             double *values );

    sparse_status_t mkl_sparse_c_create_bsr( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             sparse_layout_t block_layout,
                                             long long int rows,
                                             long long int cols,
                                             long long int block_size,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             MKL_Complex8 *values );

    sparse_status_t mkl_sparse_z_create_bsr( sparse_matrix_t *A,
                                             sparse_index_base_t indexing,
                                             sparse_layout_t block_layout,
                                             long long int rows,
                                             long long int cols,
                                             long long int block_size,
                                             long long int *rows_start,
                                             long long int *rows_end,
                                             long long int *col_indx,
                                             MKL_Complex16 *values );





    sparse_status_t mkl_sparse_copy( const sparse_matrix_t source,
                                     struct matrix_descr descr,
                                     sparse_matrix_t *dest );





    sparse_status_t mkl_sparse_destroy( sparse_matrix_t A );




    sparse_status_t mkl_sparse_get_error_info( sparse_matrix_t A, long long int *info );







    sparse_status_t mkl_sparse_convert_csr ( const sparse_matrix_t source,
                                             sparse_operation_t operation,
                                             sparse_matrix_t *dest );

    sparse_status_t mkl_sparse_convert_bsr ( const sparse_matrix_t source,
                                             long long int block_size,
                                             sparse_layout_t block_layout,
                                             sparse_operation_t operation,
                                             sparse_matrix_t *dest );

    sparse_status_t mkl_sparse_s_export_bsr( const sparse_matrix_t source,
                                             sparse_index_base_t *indexing,
                                             sparse_layout_t *block_layout,
                                             long long int *rows,
                                             long long int *cols,
                                             long long int *block_size,
                                             long long int **rows_start,
                                             long long int **rows_end,
                                             long long int **col_indx,
                                             float **values );

    sparse_status_t mkl_sparse_d_export_bsr( const sparse_matrix_t source,
                                             sparse_index_base_t *indexing,
                                             sparse_layout_t *block_layout,
                                             long long int *rows,
                                             long long int *cols,
                                             long long int *block_size,
                                             long long int **rows_start,
                                             long long int **rows_end,
                                             long long int **col_indx,
                                             double **values );

    sparse_status_t mkl_sparse_c_export_bsr( const sparse_matrix_t source,
                                             sparse_index_base_t *indexing,
                                             sparse_layout_t *block_layout,
                                             long long int *rows,
                                             long long int *cols,
                                             long long int *block_size,
                                             long long int **rows_start,
                                             long long int **rows_end,
                                             long long int **col_indx,
                                             MKL_Complex8 **values );

    sparse_status_t mkl_sparse_z_export_bsr( const sparse_matrix_t source,
                                             sparse_index_base_t *indexing,
                                             sparse_layout_t *block_layout,
                                             long long int *rows,
                                             long long int *cols,
                                             long long int *block_size,
                                             long long int **rows_start,
                                             long long int **rows_end,
                                             long long int **col_indx,
                                             MKL_Complex16 **values );

    sparse_status_t mkl_sparse_s_export_csr( const sparse_matrix_t source,
                                             sparse_index_base_t *indexing,
                                             long long int *rows,
                                             long long int *cols,
                                             long long int **rows_start,
                                             long long int **rows_end,
                                             long long int **col_indx,
                                             float **values );

    sparse_status_t mkl_sparse_d_export_csr( const sparse_matrix_t source,
                                             sparse_index_base_t *indexing,
                                             long long int *rows,
                                             long long int *cols,
                                             long long int **rows_start,
                                             long long int **rows_end,
                                             long long int **col_indx,
                                             double **values );

    sparse_status_t mkl_sparse_c_export_csr( const sparse_matrix_t source,
                                             sparse_index_base_t *indexing,
                                             long long int *rows,
                                             long long int *cols,
                                             long long int **rows_start,
                                             long long int **rows_end,
                                             long long int **col_indx,
                                             MKL_Complex8 **values );

    sparse_status_t mkl_sparse_z_export_csr( const sparse_matrix_t source,
                                             sparse_index_base_t *indexing,
                                             long long int *rows,
                                             long long int *cols,
                                             long long int **rows_start,
                                             long long int **rows_end,
                                             long long int **col_indx,
                                             MKL_Complex16 **values );







    sparse_status_t mkl_sparse_s_set_value( sparse_matrix_t A,
                                            long long int row,
                                            long long int col,
                                            float value );

    sparse_status_t mkl_sparse_d_set_value( sparse_matrix_t A,
                                            long long int row,
                                            long long int col,
                                            double value );

    sparse_status_t mkl_sparse_c_set_value( sparse_matrix_t A,
                                            long long int row,
                                            long long int col,
                                            MKL_Complex8 value );

    sparse_status_t mkl_sparse_z_set_value( sparse_matrix_t A,
                                            long long int row,
                                            long long int col,
                                            MKL_Complex16 value );






    sparse_status_t mkl_sparse_set_verbose_mode ( verbose_mode_t verbose );






    sparse_status_t mkl_sparse_set_mv_hint ( sparse_matrix_t A,
                                              sparse_operation_t operation,
                                              struct matrix_descr descr,
                                              long long int expected_calls );

    sparse_status_t mkl_sparse_set_mm_hint ( sparse_matrix_t A,
                                              sparse_operation_t operation,
                                              struct matrix_descr descr,
                                              sparse_layout_t layout,
                                              long long int dense_matrix_size,
                                              long long int expected_calls );

    sparse_status_t mkl_sparse_set_sv_hint ( sparse_matrix_t A,
                                              sparse_operation_t operation,
                                              struct matrix_descr descr,
                                              long long int expected_calls );

    sparse_status_t mkl_sparse_set_sm_hint ( sparse_matrix_t A,
                                              sparse_operation_t operation,
                                              struct matrix_descr descr,
                                              sparse_layout_t layout,
                                              long long int dense_matrix_size,
                                              long long int expected_calls );


    sparse_status_t mkl_sparse_set_memory_hint ( sparse_matrix_t A,
                                                 sparse_memory_usage_t policy );






    sparse_status_t mkl_sparse_optimize ( sparse_matrix_t A );
# 1086 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_spblas.h"
    sparse_status_t mkl_sparse_s_mv ( sparse_operation_t operation,
                                      float alpha,
                                      const sparse_matrix_t A,
                                      struct matrix_descr descr,
                                      const float *x,
                                      float beta,
                                      float *y );

    sparse_status_t mkl_sparse_d_mv ( sparse_operation_t operation,
                                      double alpha,
                                      const sparse_matrix_t A,
                                      struct matrix_descr descr,
                                      const double *x,
                                      double beta,
                                      double *y );

    sparse_status_t mkl_sparse_c_mv ( sparse_operation_t operation,
                                      MKL_Complex8 alpha,
                                      const sparse_matrix_t A,
                                      struct matrix_descr descr,
                                      const MKL_Complex8 *x,
                                      MKL_Complex8 beta,
                                      MKL_Complex8 *y );

    sparse_status_t mkl_sparse_z_mv ( sparse_operation_t operation,
                                      MKL_Complex16 alpha,
                                      const sparse_matrix_t A,
                                      struct matrix_descr descr,
                                      const MKL_Complex16 *x,
                                      MKL_Complex16 beta,
                                      MKL_Complex16 *y );


    sparse_status_t mkl_sparse_s_trsv ( sparse_operation_t operation,
                                        float alpha,
                                        const sparse_matrix_t A,
                                        struct matrix_descr descr,
                                        const float *x,
                                        float *y );

    sparse_status_t mkl_sparse_d_trsv ( sparse_operation_t operation,
                                        double alpha,
                                        const sparse_matrix_t A,
                                        struct matrix_descr descr,
                                        const double *x,
                                        double *y );

    sparse_status_t mkl_sparse_c_trsv ( sparse_operation_t operation,
                                        MKL_Complex8 alpha,
                                        const sparse_matrix_t A,
                                        struct matrix_descr descr,
                                        const MKL_Complex8 *x,
                                        MKL_Complex8 *y );

    sparse_status_t mkl_sparse_z_trsv ( sparse_operation_t operation,
                                        MKL_Complex16 alpha,
                                        const sparse_matrix_t A,
                                        struct matrix_descr descr,
                                        const MKL_Complex16 *x,
                                        MKL_Complex16 *y );




    sparse_status_t mkl_sparse_s_mm( sparse_operation_t operation,
                                     float alpha,
                                     const sparse_matrix_t A,
                                     struct matrix_descr descr,
                                     sparse_layout_t layout,
                                     const float *x,
                                     long long int columns,
                                     long long int ldx,
                                     float beta,
                                     float *y,
                                     long long int ldy );

    sparse_status_t mkl_sparse_d_mm( sparse_operation_t operation,
                                     double alpha,
                                     const sparse_matrix_t A,
                                     struct matrix_descr descr,
                                     sparse_layout_t layout,
                                     const double *x,
                                     long long int columns,
                                     long long int ldx,
                                     double beta,
                                     double *y,
                                     long long int ldy );

    sparse_status_t mkl_sparse_c_mm( sparse_operation_t operation,
                                     MKL_Complex8 alpha,
                                     const sparse_matrix_t A,
                                     struct matrix_descr descr,
                                     sparse_layout_t layout,
                                     const MKL_Complex8 *x,
                                     long long int columns,
                                     long long int ldx,
                                     MKL_Complex8 beta,
                                     MKL_Complex8 *y,
                                     long long int ldy );

    sparse_status_t mkl_sparse_z_mm( sparse_operation_t operation,
                                     MKL_Complex16 alpha,
                                     const sparse_matrix_t A,
                                     struct matrix_descr descr,
                                     sparse_layout_t layout,
                                     const MKL_Complex16 *x,
                                     long long int columns,
                                     long long int ldx,
                                     MKL_Complex16 beta,
                                     MKL_Complex16 *y,
                                     long long int ldy );


    sparse_status_t mkl_sparse_s_trsm ( sparse_operation_t operation,
                                        float alpha,
                                        const sparse_matrix_t A,
                                        struct matrix_descr descr,
                                        sparse_layout_t layout,
                                        const float *x,
                                        long long int columns,
                                        long long int ldx,
                                        float *y,
                                        long long int ldy );

    sparse_status_t mkl_sparse_d_trsm ( sparse_operation_t operation,
                                        double alpha,
                                        const sparse_matrix_t A,
                                        struct matrix_descr descr,
                                        sparse_layout_t layout,
                                        const double *x,
                                        long long int columns,
                                        long long int ldx,
                                        double *y,
                                        long long int ldy );

    sparse_status_t mkl_sparse_c_trsm ( sparse_operation_t operation,
                                        MKL_Complex8 alpha,
                                        const sparse_matrix_t A,
                                        struct matrix_descr descr,
                                        sparse_layout_t layout,
                                        const MKL_Complex8 *x,
                                        long long int columns,
                                        long long int ldx,
                                        MKL_Complex8 *y,
                                        long long int ldy );

    sparse_status_t mkl_sparse_z_trsm ( sparse_operation_t operation,
                                        MKL_Complex16 alpha,
                                        const sparse_matrix_t A,
                                        struct matrix_descr descr,
                                        sparse_layout_t layout,
                                        const MKL_Complex16 *x,
                                        long long int columns,
                                        long long int ldx,
                                        MKL_Complex16 *y,
                                        long long int ldy );




    sparse_status_t mkl_sparse_s_add( sparse_operation_t operation,
                                      const sparse_matrix_t A,
                                      float alpha,
                                      const sparse_matrix_t B,
                                      sparse_matrix_t *C );

    sparse_status_t mkl_sparse_d_add( sparse_operation_t operation,
                                      const sparse_matrix_t A,
                                      double alpha,
                                      const sparse_matrix_t B,
                                      sparse_matrix_t *C );

    sparse_status_t mkl_sparse_c_add( sparse_operation_t operation,
                                      const sparse_matrix_t A,
                                      MKL_Complex8 alpha,
                                      const sparse_matrix_t B,
                                      sparse_matrix_t *C );

    sparse_status_t mkl_sparse_z_add( sparse_operation_t operation,
                                      const sparse_matrix_t A,
                                      MKL_Complex16 alpha,
                                      const sparse_matrix_t B,
                                      sparse_matrix_t *C );


    sparse_status_t mkl_sparse_spmm( sparse_operation_t operation,
                                      const sparse_matrix_t A,
                                      const sparse_matrix_t B,
                                      sparse_matrix_t *C );


    sparse_status_t mkl_sparse_s_spmmd( sparse_operation_t operation,
                                        const sparse_matrix_t A,
                                        const sparse_matrix_t B,
                                        sparse_layout_t layout,
                                        float *C,
                                        long long int ldc );

    sparse_status_t mkl_sparse_d_spmmd( sparse_operation_t operation,
                                        const sparse_matrix_t A,
                                        const sparse_matrix_t B,
                                        sparse_layout_t layout,
                                        double *C,
                                        long long int ldc );

    sparse_status_t mkl_sparse_c_spmmd( sparse_operation_t operation,
                                        const sparse_matrix_t A,
                                        const sparse_matrix_t B,
                                        sparse_layout_t layout,
                                        MKL_Complex8 *C,
                                        long long int ldc );

    sparse_status_t mkl_sparse_z_spmmd( sparse_operation_t operation,
                                        const sparse_matrix_t A,
                                        const sparse_matrix_t B,
                                        sparse_layout_t layout,
                                        MKL_Complex16 *C,
                                        long long int ldc );
# 40 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_lapack.h" 1
# 38 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_lapack.h"
typedef long long int (*MKL_C_SELECT_FUNCTION_1) ( MKL_Complex8* );
typedef long long int (*MKL_C_SELECT_FUNCTION_2) ( MKL_Complex8*, MKL_Complex8* );
typedef long long int (*MKL_D_SELECT_FUNCTION_2) ( double*, double* );
typedef long long int (*MKL_D_SELECT_FUNCTION_3) ( double*, double*, double* );
typedef long long int (*MKL_S_SELECT_FUNCTION_2) ( float*, float* );
typedef long long int (*MKL_S_SELECT_FUNCTION_3) ( float*, float*, float* );
typedef long long int (*MKL_Z_SELECT_FUNCTION_1) ( MKL_Complex16* );
typedef long long int (*MKL_Z_SELECT_FUNCTION_2) ( MKL_Complex16*, MKL_Complex16* );



void CHECON_ROOK( const char* uplo, const long long int* n, const MKL_Complex8* a,
                  const long long int* lda, const long long int* ipiv, const float* anorm,
                  float* rcond, MKL_Complex8* work, long long int* info );
void CHECON_ROOK_( const char* uplo, const long long int* n, const MKL_Complex8* a,
                   const long long int* lda, const long long int* ipiv, const float* anorm,
                   float* rcond, MKL_Complex8* work, long long int* info );
void checon_rook( const char* uplo, const long long int* n, const MKL_Complex8* a,
                  const long long int* lda, const long long int* ipiv, const float* anorm,
                  float* rcond, MKL_Complex8* work, long long int* info );
void checon_rook_( const char* uplo, const long long int* n, const MKL_Complex8* a,
                   const long long int* lda, const long long int* ipiv, const float* anorm,
                   float* rcond, MKL_Complex8* work, long long int* info );

void CHESV_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                 MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                 MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
                 const long long int* lwork, long long int* info );
void CHESV_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                  MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
                  const long long int* lwork, long long int* info );
void chesv_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                 MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                 MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
                 const long long int* lwork, long long int* info );
void chesv_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                  MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
                  const long long int* lwork, long long int* info );

void CHETF2_ROOK( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, long long int* ipiv, long long int* info );
void CHETF2_ROOK_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, long long int* ipiv, long long int* info );
void chetf2_rook( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, long long int* ipiv, long long int* info );
void chetf2_rook_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, long long int* ipiv, long long int* info );

void CHETRF_ROOK( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, long long int* ipiv, MKL_Complex8* work,
                  const long long int* lwork, long long int* info );
void CHETRF_ROOK_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, long long int* ipiv, MKL_Complex8* work,
                   const long long int* lwork, long long int* info );
void chetrf_rook( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, long long int* ipiv, MKL_Complex8* work,
                  const long long int* lwork, long long int* info );
void chetrf_rook_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, long long int* ipiv, MKL_Complex8* work,
                   const long long int* lwork, long long int* info );

void CHETRI_ROOK( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                  long long int* info );
void CHETRI_ROOK_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                   long long int* info );
void chetri_rook( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                  long long int* info );
void chetri_rook_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                   long long int* info );

void CHETRS_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                  const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
                  MKL_Complex8* b, const long long int* ldb, long long int* info );
void CHETRS_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                    const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
                    MKL_Complex8* b, const long long int* ldb, long long int* info );
void chetrs_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                    const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
                    MKL_Complex8* b, const long long int* ldb, long long int* info );
void chetrs_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
                   MKL_Complex8* b, const long long int* ldb, long long int* info );

void CLAHEF_ROOK( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex8* w, const long long int* ldw, long long int* info );
void CLAHEF_ROOK_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                   MKL_Complex8* w, const long long int* ldw, long long int* info );
void clahef_rook( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex8* w, const long long int* ldw, long long int* info );
void clahef_rook_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                   MKL_Complex8* w, const long long int* ldw, long long int* info );

void CLASYF_ROOK( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex8* w, const long long int* ldw, long long int* info );
void CLASYF_ROOK_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                   MKL_Complex8* w, const long long int* ldw, long long int* info );
void clasyf_rook( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex8* w, const long long int* ldw, long long int* info );
void clasyf_rook_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                   MKL_Complex8* w, const long long int* ldw, long long int* info );

void CSYCON_ROOK( const char* uplo, const long long int* n, const MKL_Complex8* a,
                  const long long int* lda, const long long int* ipiv, const float* anorm,
                  float* rcond, MKL_Complex8* work, long long int* info );
void CSYCON_ROOK_( const char* uplo, const long long int* n, const MKL_Complex8* a,
                   const long long int* lda, const long long int* ipiv, const float* anorm,
                   float* rcond, MKL_Complex8* work, long long int* info );
void csycon_rook( const char* uplo, const long long int* n, const MKL_Complex8* a,
                  const long long int* lda, const long long int* ipiv, const float* anorm,
                  float* rcond, MKL_Complex8* work, long long int* info );
void csycon_rook_( const char* uplo, const long long int* n, const MKL_Complex8* a,
                   const long long int* lda, const long long int* ipiv, const float* anorm,
                   float* rcond, MKL_Complex8* work, long long int* info );

void CSYSV_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                 MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                 MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
                 const long long int* lwork, long long int* info );
void CSYSV_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                  MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
                  const long long int* lwork, long long int* info );
void csysv_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                 MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                 MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
                 const long long int* lwork, long long int* info );
void csysv_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                  MKL_Complex8* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
                  const long long int* lwork, long long int* info );

void CSYTF2_ROOK( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, long long int* ipiv, long long int* info );
void CSYTF2_ROOK_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, long long int* ipiv, long long int* info );
void csytf2_rook( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, long long int* ipiv, long long int* info );
void csytf2_rook_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, long long int* ipiv, long long int* info );

void CSYTRF_ROOK( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, long long int* ipiv, MKL_Complex8* work,
                  const long long int* lwork, long long int* info );
void CSYTRF_ROOK_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, long long int* ipiv, MKL_Complex8* work,
                   const long long int* lwork, long long int* info );
void csytrf_rook( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, long long int* ipiv, MKL_Complex8* work,
                  const long long int* lwork, long long int* info );
void csytrf_rook_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, long long int* ipiv, MKL_Complex8* work,
                   const long long int* lwork, long long int* info );

void CSYTRI_ROOK( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                  long long int* info );
void CSYTRI_ROOK_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                   long long int* info );
void csytri_rook( const char* uplo, const long long int* n, MKL_Complex8* a,
                  const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                  long long int* info );
void csytri_rook_( const char* uplo, const long long int* n, MKL_Complex8* a,
                   const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                   long long int* info );

void CSYTRS_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                  const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
                  MKL_Complex8* b, const long long int* ldb, long long int* info );
void CSYTRS_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
                   MKL_Complex8* b, const long long int* ldb, long long int* info );
void csytrs_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                  const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
                  MKL_Complex8* b, const long long int* ldb, long long int* info );
void csytrs_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
                   MKL_Complex8* b, const long long int* ldb, long long int* info );

void DLASYF_ROOK( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, double* a, const long long int* lda, long long int* ipiv,
                  double* w, const long long int* ldw, long long int* info );
void DLASYF_ROOK_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, double* a, const long long int* lda, long long int* ipiv,
                   double* w, const long long int* ldw, long long int* info );
void dlasyf_rook( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, double* a, const long long int* lda, long long int* ipiv,
                  double* w, const long long int* ldw, long long int* info );
void dlasyf_rook_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, double* a, const long long int* lda, long long int* ipiv,
                   double* w, const long long int* ldw, long long int* info );

void DSYCON_ROOK( const char* uplo, const long long int* n, const double* a,
                  const long long int* lda, const long long int* ipiv, const double* anorm,
                  double* rcond, double* work, long long int* iwork, long long int* info );
void DSYCON_ROOK_( const char* uplo, const long long int* n, const double* a,
                   const long long int* lda, const long long int* ipiv, const double* anorm,
                   double* rcond, double* work, long long int* iwork, long long int* info );
void dsycon_rook( const char* uplo, const long long int* n, const double* a,
                  const long long int* lda, const long long int* ipiv, const double* anorm,
                  double* rcond, double* work, long long int* iwork, long long int* info );
void dsycon_rook_( const char* uplo, const long long int* n, const double* a,
                   const long long int* lda, const long long int* ipiv, const double* anorm,
                   double* rcond, double* work, long long int* iwork, long long int* info );

void DSYSV_ROOK( const char* uplo, const long long int* n, const long long int* nrhs, double* a,
                 const long long int* lda, long long int* ipiv, double* b, const long long int* ldb,
                 double* work, const long long int* lwork, long long int* info );
void DSYSV_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                  double* a, const long long int* lda, long long int* ipiv, double* b,
                  const long long int* ldb, double* work, const long long int* lwork,
                  long long int* info );
void dsysv_rook( const char* uplo, const long long int* n, const long long int* nrhs, double* a,
                 const long long int* lda, long long int* ipiv, double* b, const long long int* ldb,
                 double* work, const long long int* lwork, long long int* info );
void dsysv_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                  double* a, const long long int* lda, long long int* ipiv, double* b,
                  const long long int* ldb, double* work, const long long int* lwork,
                  long long int* info );

void DSYTF2_ROOK( const char* uplo, const long long int* n, double* a, const long long int* lda,
                  long long int* ipiv, long long int* info );
void DSYTF2_ROOK_( const char* uplo, const long long int* n, double* a,
                   const long long int* lda, long long int* ipiv, long long int* info );
void dsytf2_rook( const char* uplo, const long long int* n, double* a, const long long int* lda,
                  long long int* ipiv, long long int* info );
void dsytf2_rook_( const char* uplo, const long long int* n, double* a,
                   const long long int* lda, long long int* ipiv, long long int* info );

void DSYTRF_ROOK( const char* uplo, const long long int* n, double* a, const long long int* lda,
                  long long int* ipiv, double* work, const long long int* lwork,
                  long long int* info );
void DSYTRF_ROOK_( const char* uplo, const long long int* n, double* a,
                   const long long int* lda, long long int* ipiv, double* work,
                   const long long int* lwork, long long int* info );
void dsytrf_rook( const char* uplo, const long long int* n, double* a, const long long int* lda,
                  long long int* ipiv, double* work, const long long int* lwork,
                  long long int* info );
void dsytrf_rook_( const char* uplo, const long long int* n, double* a,
                  const long long int* lda, long long int* ipiv, double* work,
                  const long long int* lwork, long long int* info );

void DSYTRI_ROOK( const char* uplo, const long long int* n, double* a, const long long int* lda,
                  const long long int* ipiv, double* work, long long int* info );
void DSYTRI_ROOK_( const char* uplo, const long long int* n, double* a,
                   const long long int* lda, const long long int* ipiv, double* work,
                   long long int* info );
void dsytri_rook( const char* uplo, const long long int* n, double* a, const long long int* lda,
                  const long long int* ipiv, double* work, long long int* info );
void dsytri_rook_( const char* uplo, const long long int* n, double* a,
                   const long long int* lda, const long long int* ipiv, double* work,
                   long long int* info );

void DSYTRS_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                  const double* a, const long long int* lda, const long long int* ipiv,
                  double* b, const long long int* ldb, long long int* info );
void DSYTRS_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const double* a, const long long int* lda, const long long int* ipiv,
                   double* b, const long long int* ldb, long long int* info );
void dsytrs_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                  const double* a, const long long int* lda, const long long int* ipiv,
                  double* b, const long long int* ldb, long long int* info );
void dsytrs_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const double* a, const long long int* lda, const long long int* ipiv,
                   double* b, const long long int* ldb, long long int* info );

void SLASYF_ROOK( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, float* a, const long long int* lda, long long int* ipiv,
                  float* w, const long long int* ldw, long long int* info );
void SLASYF_ROOK_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, float* a, const long long int* lda, long long int* ipiv,
                   float* w, const long long int* ldw, long long int* info );
void slasyf_rook( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, float* a, const long long int* lda, long long int* ipiv,
                  float* w, const long long int* ldw, long long int* info );
void slasyf_rook_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, float* a, const long long int* lda, long long int* ipiv,
                   float* w, const long long int* ldw, long long int* info );

void SSYCON_ROOK( const char* uplo, const long long int* n, const float* a,
                  const long long int* lda, const long long int* ipiv, const float* anorm,
                  float* rcond, float* work, long long int* iwork, long long int* info );
void SSYCON_ROOK_( const char* uplo, const long long int* n, const float* a,
                   const long long int* lda, const long long int* ipiv, const float* anorm,
                   float* rcond, float* work, long long int* iwork, long long int* info );
void ssycon_rook( const char* uplo, const long long int* n, const float* a,
                  const long long int* lda, const long long int* ipiv, const float* anorm,
                  float* rcond, float* work, long long int* iwork, long long int* info );
void ssycon_rook_( const char* uplo, const long long int* n, const float* a,
                   const long long int* lda, const long long int* ipiv, const float* anorm,
                   float* rcond, float* work, long long int* iwork, long long int* info );

void SSYSV_ROOK( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
                 const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
                 float* work, const long long int* lwork, long long int* info );
void SSYSV_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
                  const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
                  float* work, const long long int* lwork, long long int* info );
void ssysv_rook( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
                 const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
                 float* work, const long long int* lwork, long long int* info );
void ssysv_rook_( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
                  const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
                  float* work, const long long int* lwork, long long int* info );

void SSYTF2_ROOK( const char* uplo, const long long int* n, float* a, const long long int* lda,
                  long long int* ipiv, long long int* info );
void SSYTF2_ROOK_( const char* uplo, const long long int* n, float* a, const long long int* lda,
                   long long int* ipiv, long long int* info );
void ssytf2_rook( const char* uplo, const long long int* n, float* a, const long long int* lda,
                  long long int* ipiv, long long int* info );
void ssytf2_rook_( const char* uplo, const long long int* n, float* a, const long long int* lda,
                   long long int* ipiv, long long int* info );

void SSYTRF_ROOK( const char* uplo, const long long int* n, float* a, const long long int* lda,
                 long long int* ipiv, float* work, const long long int* lwork, long long int* info );
void SSYTRF_ROOK_( const char* uplo, const long long int* n, float* a, const long long int* lda,
                   long long int* ipiv, float* work, const long long int* lwork,
                   long long int* info );
void ssytrf_rook( const char* uplo, const long long int* n, float* a, const long long int* lda,
                  long long int* ipiv, float* work, const long long int* lwork, long long int* info );
void ssytrf_rook_( const char* uplo, const long long int* n, float* a, const long long int* lda,
                   long long int* ipiv, float* work, const long long int* lwork,
                   long long int* info );

void SSYTRI_ROOK( const char* uplo, const long long int* n, float* a, const long long int* lda,
                  const long long int* ipiv, float* work, long long int* info );
void SSYTRI_ROOK_( const char* uplo, const long long int* n, float* a, const long long int* lda,
                   const long long int* ipiv, float* work, long long int* info );
void ssytri_rook( const char* uplo, const long long int* n, float* a, const long long int* lda,
                  const long long int* ipiv, float* work, long long int* info );
void ssytri_rook_( const char* uplo, const long long int* n, float* a, const long long int* lda,
                   const long long int* ipiv, float* work, long long int* info );

void SSYTRS_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                  const float* a, const long long int* lda, const long long int* ipiv, float* b,
                  const long long int* ldb, long long int* info );
void SSYTRS_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const float* a, const long long int* lda, const long long int* ipiv,
                   float* b, const long long int* ldb, long long int* info );
void ssytrs_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                  const float* a, const long long int* lda, const long long int* ipiv, float* b,
                  const long long int* ldb, long long int* info );
void ssytrs_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const float* a, const long long int* lda, const long long int* ipiv,
                   float* b, const long long int* ldb, long long int* info );

void ZHECON_ROOK( const char* uplo, const long long int* n, const MKL_Complex16* a,
                  const long long int* lda, const long long int* ipiv, const double* anorm,
                  double* rcond, MKL_Complex16* work, long long int* info );
void ZHECON_ROOK_( const char* uplo, const long long int* n, const MKL_Complex16* a,
                   const long long int* lda, const long long int* ipiv, const double* anorm,
                   double* rcond, MKL_Complex16* work, long long int* info );
void zhecon_rook( const char* uplo, const long long int* n, const MKL_Complex16* a,
                  const long long int* lda, const long long int* ipiv, const double* anorm,
                  double* rcond, MKL_Complex16* work, long long int* info );
void zhecon_rook_( const char* uplo, const long long int* n, const MKL_Complex16* a,
                   const long long int* lda, const long long int* ipiv, const double* anorm,
                   double* rcond, MKL_Complex16* work, long long int* info );

void ZHESV_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                 MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                 MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
                 const long long int* lwork, long long int* info );
void ZHESV_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                  MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
                  const long long int* lwork, long long int* info );
void zhesv_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                 MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                 MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
                 const long long int* lwork, long long int* info );
void zhesv_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                  MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
                  const long long int* lwork, long long int* info );

void ZHETF2_ROOK( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, long long int* ipiv, long long int* info );
void ZHETF2_ROOK_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, long long int* ipiv, long long int* info );
void zhetf2_rook( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, long long int* ipiv, long long int* info );
void zhetf2_rook_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, long long int* ipiv, long long int* info );

void ZHETRF_ROOK( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, long long int* ipiv, MKL_Complex16* work,
                  const long long int* lwork, long long int* info );
void ZHETRF_ROOK_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, long long int* ipiv, MKL_Complex16* work,
                   const long long int* lwork, long long int* info );
void zhetrf_rook( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, long long int* ipiv, MKL_Complex16* work,
                  const long long int* lwork, long long int* info );
void zhetrf_rook_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, long long int* ipiv, MKL_Complex16* work,
                   const long long int* lwork, long long int* info );

void ZHETRI_ROOK( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                  long long int* info );
void ZHETRI_ROOK_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                   long long int* info );
void zhetri_rook( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                  long long int* info );
void zhetri_rook_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                   long long int* info );

void ZHETRS_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                  const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
                  MKL_Complex16* b, const long long int* ldb, long long int* info );
void ZHETRS_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
                   MKL_Complex16* b, const long long int* ldb, long long int* info );
void zhetrs_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                  const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
                  MKL_Complex16* b, const long long int* ldb, long long int* info );
void zhetrs_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
                   MKL_Complex16* b, const long long int* ldb, long long int* info );

void ZLAHEF_ROOK( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex16* w, const long long int* ldw, long long int* info );
void ZLAHEF_ROOK_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                   MKL_Complex16* w, const long long int* ldw, long long int* info );
void zlahef_rook( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex16* w, const long long int* ldw, long long int* info );
void zlahef_rook_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                   MKL_Complex16* w, const long long int* ldw, long long int* info );

void ZLASYF_ROOK( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex16* w, const long long int* ldw, long long int* info );
void ZLASYF_ROOK_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                   MKL_Complex16* w, const long long int* ldw, long long int* info );
void zlasyf_rook( const char* uplo, const long long int* n, const long long int* nb,
                  long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex16* w, const long long int* ldw, long long int* info );
void zlasyf_rook_( const char* uplo, const long long int* n, const long long int* nb,
                   long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                   MKL_Complex16* w, const long long int* ldw, long long int* info );

void ZSYCON_ROOK( const char* uplo, const long long int* n, const MKL_Complex16* a,
                  const long long int* lda, const long long int* ipiv, const double* anorm,
                  double* rcond, MKL_Complex16* work, long long int* info );
void ZSYCON_ROOK_( const char* uplo, const long long int* n, const MKL_Complex16* a,
                   const long long int* lda, const long long int* ipiv, const double* anorm,
                   double* rcond, MKL_Complex16* work, long long int* info );
void zsycon_rook( const char* uplo, const long long int* n, const MKL_Complex16* a,
                  const long long int* lda, const long long int* ipiv, const double* anorm,
                  double* rcond, MKL_Complex16* work, long long int* info );
void zsycon_rook_( const char* uplo, const long long int* n, const MKL_Complex16* a,
                   const long long int* lda, const long long int* ipiv, const double* anorm,
                   double* rcond, MKL_Complex16* work, long long int* info );

void ZSYSV_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                 MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                 MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
                 const long long int* lwork, long long int* info );
void ZSYSV_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                  MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
                  const long long int* lwork, long long int* info );
void zsysv_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                 MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                 MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
                 const long long int* lwork, long long int* info );
void zsysv_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                  MKL_Complex16* a, const long long int* lda, long long int* ipiv,
                  MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
                  const long long int* lwork, long long int* info );

void ZSYTF2_ROOK( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, long long int* ipiv, long long int* info );
void ZSYTF2_ROOK_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, long long int* ipiv, long long int* info );
void zsytf2_rook( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, long long int* ipiv, long long int* info );
void zsytf2_rook_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, long long int* ipiv, long long int* info );

void ZSYTRF_ROOK( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, long long int* ipiv, MKL_Complex16* work,
                  const long long int* lwork, long long int* info );
void ZSYTRF_ROOK_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, long long int* ipiv, MKL_Complex16* work,
                   const long long int* lwork, long long int* info );
void zsytrf_rook( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, long long int* ipiv, MKL_Complex16* work,
                  const long long int* lwork, long long int* info );
void zsytrf_rook_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, long long int* ipiv, MKL_Complex16* work,
                   const long long int* lwork, long long int* info );

void ZSYTRI_ROOK( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                  long long int* info );
void ZSYTRI_ROOK_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                   long long int* info );
void zsytri_rook( const char* uplo, const long long int* n, MKL_Complex16* a,
                  const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                  long long int* info );
void zsytri_rook_( const char* uplo, const long long int* n, MKL_Complex16* a,
                   const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                   long long int* info );

void ZSYTRS_ROOK( const char* uplo, const long long int* n, const long long int* nrhs,
                  const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
                  MKL_Complex16* b, const long long int* ldb, long long int* info );
void ZSYTRS_ROOK_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
                   MKL_Complex16* b, const long long int* ldb, long long int* info );
void zsytrs_rook( const char* uplo, const long long int* n, const long long int* nrhs,
                  const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
                  MKL_Complex16* b, const long long int* ldb, long long int* info );
void zsytrs_rook_( const char* uplo, const long long int* n, const long long int* nrhs,
                   const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
                   MKL_Complex16* b, const long long int* ldb, long long int* info );

void CUNBDB1( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
              const long long int* ldx21, float* theta, float* phi,
              MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNBDB1_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
               const long long int* ldx21, float* theta, float* phi,
               MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
               MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunbdb1( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
              const long long int* ldx21, float* theta, float* phi,
              MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunbdb1_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
               const long long int* ldx21, float* theta, float* phi,
               MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
               MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNBDB2( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
              const long long int* ldx21, float* theta, float* phi,
              MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNBDB2_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
               const long long int* ldx21, float* theta, float* phi,
               MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
               MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunbdb2( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
              const long long int* ldx21, float* theta, float* phi,
              MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunbdb2_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
               const long long int* ldx21, float* theta, float* phi,
               MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
               MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNBDB3( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
              const long long int* ldx21, float* theta, float* phi,
              MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNBDB3_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
               const long long int* ldx21, float* theta, float* phi,
               MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
               MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunbdb3( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
              const long long int* ldx21, float* theta, float* phi,
              MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunbdb3_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
               const long long int* ldx21, float* theta, float* phi,
               MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
               MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNBDB4( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
              const long long int* ldx21, float* theta, float* phi,
              MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
              MKL_Complex8* phantom, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void CUNBDB4_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
               const long long int* ldx21, float* theta, float* phi,
               MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
               MKL_Complex8* phantom, MKL_Complex8* work, const long long int* lwork,
               long long int* info );
void cunbdb4( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
              const long long int* ldx21, float* theta, float* phi,
              MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
              MKL_Complex8* phantom, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cunbdb4_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
               const long long int* ldx21, float* theta, float* phi,
               MKL_Complex8* taup1, MKL_Complex8* taup2, MKL_Complex8* tauq1,
               MKL_Complex8* phantom, MKL_Complex8* work, const long long int* lwork,
               long long int* info );

void CUNBDB5( const long long int* m1, const long long int* m2, const long long int* n,
              MKL_Complex8* x1, const long long int* incx1, MKL_Complex8* x2,
              const long long int* incx2, MKL_Complex8* q1, const long long int* ldq1,
              MKL_Complex8* q2, const long long int* ldq2, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void CUNBDB5_( const long long int* m1, const long long int* m2, const long long int* n,
               MKL_Complex8* x1, const long long int* incx1, MKL_Complex8* x2,
               const long long int* incx2, MKL_Complex8* q1, const long long int* ldq1,
               MKL_Complex8* q2, const long long int* ldq2, MKL_Complex8* work,
               const long long int* lwork, long long int* info );
void cunbdb5( const long long int* m1, const long long int* m2, const long long int* n,
              MKL_Complex8* x1, const long long int* incx1, MKL_Complex8* x2,
              const long long int* incx2, MKL_Complex8* q1, const long long int* ldq1,
              MKL_Complex8* q2, const long long int* ldq2, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void cunbdb5_( const long long int* m1, const long long int* m2, const long long int* n,
               MKL_Complex8* x1, const long long int* incx1, MKL_Complex8* x2,
               const long long int* incx2, MKL_Complex8* q1, const long long int* ldq1,
               MKL_Complex8* q2, const long long int* ldq2, MKL_Complex8* work,
               const long long int* lwork, long long int* info );

void CUNBDB6( const long long int* m1, const long long int* m2, const long long int* n,
              MKL_Complex8* x1, const long long int* incx1, MKL_Complex8* x2,
              const long long int* incx2, MKL_Complex8* q1, const long long int* ldq1,
              MKL_Complex8* q2, const long long int* ldq2, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void CUNBDB6_( const long long int* m1, const long long int* m2, const long long int* n,
               MKL_Complex8* x1, const long long int* incx1, MKL_Complex8* x2,
               const long long int* incx2, MKL_Complex8* q1, const long long int* ldq1,
               MKL_Complex8* q2, const long long int* ldq2, MKL_Complex8* work,
               const long long int* lwork, long long int* info );
void cunbdb6( const long long int* m1, const long long int* m2, const long long int* n,
              MKL_Complex8* x1, const long long int* incx1, MKL_Complex8* x2,
              const long long int* incx2, MKL_Complex8* q1, const long long int* ldq1,
              MKL_Complex8* q2, const long long int* ldq2, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void cunbdb6_( const long long int* m1, const long long int* m2, const long long int* n,
               MKL_Complex8* x1, const long long int* incx1, MKL_Complex8* x2,
               const long long int* incx2, MKL_Complex8* q1, const long long int* ldq1,
               MKL_Complex8* q2, const long long int* ldq2, MKL_Complex8* work,
               const long long int* lwork, long long int* info );

void CUNCSD2BY1( const char* jobu1, const char* jobu2, const char* jobv1t,
                 const long long int* m, const long long int* p, const long long int* q,
                 MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
                 const long long int* ldx21, float* theta, MKL_Complex8* u1,
                 const long long int* ldu1, MKL_Complex8* u2, const long long int* ldu2,
                 MKL_Complex8* v1t, const long long int* ldv1t, MKL_Complex8* work,
                 const long long int* lwork, float* rwork, const long long int* lrwork,
                 long long int* iwork, long long int* info );
void CUNCSD2BY1_( const char* jobu1, const char* jobu2, const char* jobv1t,
                  const long long int* m, const long long int* p, const long long int* q,
                  MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
                  const long long int* ldx21, float* theta, MKL_Complex8* u1,
                  const long long int* ldu1, MKL_Complex8* u2, const long long int* ldu2,
                  MKL_Complex8* v1t, const long long int* ldv1t, MKL_Complex8* work,
                  const long long int* lwork, float* rwork, const long long int* lrwork,
                  long long int* iwork, long long int* info );
void cuncsd2by1( const char* jobu1, const char* jobu2, const char* jobv1t,
                 const long long int* m, const long long int* p, const long long int* q,
                 MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
                 const long long int* ldx21, float* theta, MKL_Complex8* u1,
                 const long long int* ldu1, MKL_Complex8* u2, const long long int* ldu2,
                 MKL_Complex8* v1t, const long long int* ldv1t, MKL_Complex8* work,
                 const long long int* lwork, float* rwork, const long long int* lrwork,
                 long long int* iwork, long long int* info );
void cuncsd2by1_( const char* jobu1, const char* jobu2, const char* jobv1t,
                  const long long int* m, const long long int* p, const long long int* q,
                  MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x21,
                  const long long int* ldx21, float* theta, MKL_Complex8* u1,
                  const long long int* ldu1, MKL_Complex8* u2, const long long int* ldu2,
                  MKL_Complex8* v1t, const long long int* ldv1t, MKL_Complex8* work,
                  const long long int* lwork, float* rwork, const long long int* lrwork,
                  long long int* iwork, long long int* info );

void DORBDB1( const long long int* m, const long long int* p, const long long int* q,
              double* x11, const long long int* ldx11, double* x21,
              const long long int* ldx21, double* theta, double* phi,
              double* taup1, double* taup2, double* tauq1,
              double* work, const long long int* lwork, long long int* info );
void DORBDB1_( const long long int* m, const long long int* p, const long long int* q,
               double* x11, const long long int* ldx11, double* x21,
               const long long int* ldx21, double* theta, double* phi,
               double* taup1, double* taup2, double* tauq1,
               double* work, const long long int* lwork, long long int* info );
void dorbdb1( const long long int* m, const long long int* p, const long long int* q,
              double* x11, const long long int* ldx11, double* x21,
              const long long int* ldx21, double* theta, double* phi,
              double* taup1, double* taup2, double* tauq1,
              double* work, const long long int* lwork, long long int* info );
void dorbdb1_( const long long int* m, const long long int* p, const long long int* q,
               double* x11, const long long int* ldx11, double* x21,
               const long long int* ldx21, double* theta, double* phi,
               double* taup1, double* taup2, double* tauq1,
               double* work, const long long int* lwork, long long int* info );

void DORBDB2( const long long int* m, const long long int* p, const long long int* q,
              double* x11, const long long int* ldx11, double* x21,
              const long long int* ldx21, double* theta, double* phi,
              double* taup1, double* taup2, double* tauq1,
              double* work, const long long int* lwork, long long int* info );
void DORBDB2_( const long long int* m, const long long int* p, const long long int* q,
               double* x11, const long long int* ldx11, double* x21,
               const long long int* ldx21, double* theta, double* phi,
               double* taup1, double* taup2, double* tauq1,
               double* work, const long long int* lwork, long long int* info );
void dorbdb2( const long long int* m, const long long int* p, const long long int* q,
              double* x11, const long long int* ldx11, double* x21,
              const long long int* ldx21, double* theta, double* phi,
              double* taup1, double* taup2, double* tauq1,
              double* work, const long long int* lwork, long long int* info );
void dorbdb2_( const long long int* m, const long long int* p, const long long int* q,
               double* x11, const long long int* ldx11, double* x21,
               const long long int* ldx21, double* theta, double* phi,
               double* taup1, double* taup2, double* tauq1,
               double* work, const long long int* lwork, long long int* info );

void DORBDB3( const long long int* m, const long long int* p, const long long int* q,
              double* x11, const long long int* ldx11, double* x21,
              const long long int* ldx21, double* theta, double* phi,
              double* taup1, double* taup2, double* tauq1,
              double* work, const long long int* lwork, long long int* info );
void DORBDB3_( const long long int* m, const long long int* p, const long long int* q,
               double* x11, const long long int* ldx11, double* x21,
               const long long int* ldx21, double* theta, double* phi,
               double* taup1, double* taup2, double* tauq1,
               double* work, const long long int* lwork, long long int* info );
void dorbdb3( const long long int* m, const long long int* p, const long long int* q,
              double* x11, const long long int* ldx11, double* x21,
              const long long int* ldx21, double* theta, double* phi,
              double* taup1, double* taup2, double* tauq1,
              double* work, const long long int* lwork, long long int* info );
void dorbdb3_( const long long int* m, const long long int* p, const long long int* q,
               double* x11, const long long int* ldx11, double* x21,
               const long long int* ldx21, double* theta, double* phi,
               double* taup1, double* taup2, double* tauq1,
               double* work, const long long int* lwork, long long int* info );

void DORBDB4( const long long int* m, const long long int* p, const long long int* q,
              double* x11, const long long int* ldx11, double* x21,
              const long long int* ldx21, double* theta, double* phi,
              double* taup1, double* taup2, double* tauq1,
              double* phantom, double* work, const long long int* lwork,
              long long int* info );
void DORBDB4_( const long long int* m, const long long int* p, const long long int* q,
               double* x11, const long long int* ldx11, double* x21,
               const long long int* ldx21, double* theta, double* phi,
               double* taup1, double* taup2, double* tauq1,
               double* phantom, double* work, const long long int* lwork,
               long long int* info );
void dorbdb4( const long long int* m, const long long int* p, const long long int* q,
              double* x11, const long long int* ldx11, double* x21,
              const long long int* ldx21, double* theta, double* phi,
              double* taup1, double* taup2, double* tauq1,
              double* phantom, double* work, const long long int* lwork,
              long long int* info );
void dorbdb4_( const long long int* m, const long long int* p, const long long int* q,
               double* x11, const long long int* ldx11, double* x21,
               const long long int* ldx21, double* theta, double* phi,
               double* taup1, double* taup2, double* tauq1,
               double* phantom, double* work, const long long int* lwork,
               long long int* info );

void DORBDB5( const long long int* m1, const long long int* m2, const long long int* n,
              double* x1, const long long int* incx1, double* x2,
              const long long int* incx2, double* q1, const long long int* ldq1,
              double* q2, const long long int* ldq2, double* work,
              const long long int* lwork, long long int* info );
void DORBDB5_( const long long int* m1, const long long int* m2, const long long int* n,
               double* x1, const long long int* incx1, double* x2,
               const long long int* incx2, double* q1, const long long int* ldq1,
               double* q2, const long long int* ldq2, double* work,
               const long long int* lwork, long long int* info );
void dorbdb5( const long long int* m1, const long long int* m2, const long long int* n,
              double* x1, const long long int* incx1, double* x2,
              const long long int* incx2, double* q1, const long long int* ldq1,
              double* q2, const long long int* ldq2, double* work,
              const long long int* lwork, long long int* info );
void dorbdb5_( const long long int* m1, const long long int* m2, const long long int* n,
               double* x1, const long long int* incx1, double* x2,
               const long long int* incx2, double* q1, const long long int* ldq1,
               double* q2, const long long int* ldq2, double* work,
               const long long int* lwork, long long int* info );

void DORBDB6( const long long int* m1, const long long int* m2, const long long int* n,
              double* x1, const long long int* incx1, double* x2,
              const long long int* incx2, double* q1, const long long int* ldq1,
              double* q2, const long long int* ldq2, double* work,
              const long long int* lwork, long long int* info );
void DORBDB6_( const long long int* m1, const long long int* m2, const long long int* n,
               double* x1, const long long int* incx1, double* x2,
               const long long int* incx2, double* q1, const long long int* ldq1,
               double* q2, const long long int* ldq2, double* work,
               const long long int* lwork, long long int* info );
void dorbdb6( const long long int* m1, const long long int* m2, const long long int* n,
              double* x1, const long long int* incx1, double* x2,
              const long long int* incx2, double* q1, const long long int* ldq1,
              double* q2, const long long int* ldq2, double* work,
              const long long int* lwork, long long int* info );
void dorbdb6_( const long long int* m1, const long long int* m2, const long long int* n,
               double* x1, const long long int* incx1, double* x2,
               const long long int* incx2, double* q1, const long long int* ldq1,
               double* q2, const long long int* ldq2, double* work,
               const long long int* lwork, long long int* info );

void DORCSD2BY1( const char* jobu1, const char* jobu2, const char* jobv1t,
                 const long long int* m, const long long int* p, const long long int* q,
                 double* x11, const long long int* ldx11, double* x21,
                 const long long int* ldx21, double* theta, double* u1,
                 const long long int* ldu1, double* u2, const long long int* ldu2,
                 double* v1t, const long long int* ldv1t, double* work,
                 const long long int* lwork, long long int* iwork, long long int* info );
void DORCSD2BY1_( const char* jobu1, const char* jobu2, const char* jobv1t,
                  const long long int* m, const long long int* p, const long long int* q,
                  double* x11, const long long int* ldx11, double* x21,
                  const long long int* ldx21, double* theta, double* u1,
                  const long long int* ldu1, double* u2, const long long int* ldu2,
                  double* v1t, const long long int* ldv1t, double* work,
                  const long long int* lwork, long long int* iwork, long long int* info );
void dorcsd2by1( const char* jobu1, const char* jobu2, const char* jobv1t,
                 const long long int* m, const long long int* p, const long long int* q,
                 double* x11, const long long int* ldx11, double* x21,
                 const long long int* ldx21, double* theta, double* u1,
                 const long long int* ldu1, double* u2, const long long int* ldu2,
                 double* v1t, const long long int* ldv1t, double* work,
                 const long long int* lwork, long long int* iwork, long long int* info );
void dorcsd2by1_( const char* jobu1, const char* jobu2, const char* jobv1t,
                  const long long int* m, const long long int* p, const long long int* q,
                  double* x11, const long long int* ldx11, double* x21,
                  const long long int* ldx21, double* theta, double* u1,
                  const long long int* ldu1, double* u2, const long long int* ldu2,
                  double* v1t, const long long int* ldv1t, double* work,
                  const long long int* lwork, long long int* iwork, long long int* info );

void SORBDB1( const long long int* m, const long long int* p, const long long int* q,
              float* x11, const long long int* ldx11, float* x21,
              const long long int* ldx21, float* theta, float* phi,
              float* taup1, float* taup2, float* tauq1,
              float* work, const long long int* lwork, long long int* info );
void SORBDB1_( const long long int* m, const long long int* p, const long long int* q,
               float* x11, const long long int* ldx11, float* x21,
               const long long int* ldx21, float* theta, float* phi,
               float* taup1, float* taup2, float* tauq1,
               float* work, const long long int* lwork, long long int* info );
void sorbdb1( const long long int* m, const long long int* p, const long long int* q,
              float* x11, const long long int* ldx11, float* x21,
              const long long int* ldx21, float* theta, float* phi,
              float* taup1, float* taup2, float* tauq1,
              float* work, const long long int* lwork, long long int* info );
void sorbdb1_( const long long int* m, const long long int* p, const long long int* q,
               float* x11, const long long int* ldx11, float* x21,
               const long long int* ldx21, float* theta, float* phi,
               float* taup1, float* taup2, float* tauq1,
               float* work, const long long int* lwork, long long int* info );

void SORBDB2( const long long int* m, const long long int* p, const long long int* q,
              float* x11, const long long int* ldx11, float* x21,
              const long long int* ldx21, float* theta, float* phi,
              float* taup1, float* taup2, float* tauq1,
              float* work, const long long int* lwork, long long int* info );
void SORBDB2_( const long long int* m, const long long int* p, const long long int* q,
               float* x11, const long long int* ldx11, float* x21,
               const long long int* ldx21, float* theta, float* phi,
               float* taup1, float* taup2, float* tauq1,
               float* work, const long long int* lwork, long long int* info );
void sorbdb2( const long long int* m, const long long int* p, const long long int* q,
              float* x11, const long long int* ldx11, float* x21,
              const long long int* ldx21, float* theta, float* phi,
              float* taup1, float* taup2, float* tauq1,
              float* work, const long long int* lwork, long long int* info );
void sorbdb2_( const long long int* m, const long long int* p, const long long int* q,
               float* x11, const long long int* ldx11, float* x21,
               const long long int* ldx21, float* theta, float* phi,
               float* taup1, float* taup2, float* tauq1,
               float* work, const long long int* lwork, long long int* info );

void SORBDB3( const long long int* m, const long long int* p, const long long int* q,
              float* x11, const long long int* ldx11, float* x21,
              const long long int* ldx21, float* theta, float* phi,
              float* taup1, float* taup2, float* tauq1,
              float* work, const long long int* lwork, long long int* info );
void SORBDB3_( const long long int* m, const long long int* p, const long long int* q,
               float* x11, const long long int* ldx11, float* x21,
               const long long int* ldx21, float* theta, float* phi,
               float* taup1, float* taup2, float* tauq1,
               float* work, const long long int* lwork, long long int* info );
void sorbdb3( const long long int* m, const long long int* p, const long long int* q,
              float* x11, const long long int* ldx11, float* x21,
              const long long int* ldx21, float* theta, float* phi,
              float* taup1, float* taup2, float* tauq1,
              float* work, const long long int* lwork, long long int* info );
void sorbdb3_( const long long int* m, const long long int* p, const long long int* q,
               float* x11, const long long int* ldx11, float* x21,
               const long long int* ldx21, float* theta, float* phi,
               float* taup1, float* taup2, float* tauq1,
               float* work, const long long int* lwork, long long int* info );

void SORBDB4( const long long int* m, const long long int* p, const long long int* q,
              float* x11, const long long int* ldx11, float* x21,
              const long long int* ldx21, float* theta, float* phi,
              float* taup1, float* taup2, float* tauq1,
              float* phantom, float* work, const long long int* lwork,
              long long int* info );
void SORBDB4_( const long long int* m, const long long int* p, const long long int* q,
               float* x11, const long long int* ldx11, float* x21,
               const long long int* ldx21, float* theta, float* phi,
               float* taup1, float* taup2, float* tauq1,
               float* phantom, float* work, const long long int* lwork,
               long long int* info );
void sorbdb4( const long long int* m, const long long int* p, const long long int* q,
              float* x11, const long long int* ldx11, float* x21,
              const long long int* ldx21, float* theta, float* phi,
              float* taup1, float* taup2, float* tauq1,
              float* phantom, float* work, const long long int* lwork,
              long long int* info );
void sorbdb4_( const long long int* m, const long long int* p, const long long int* q,
               float* x11, const long long int* ldx11, float* x21,
               const long long int* ldx21, float* theta, float* phi,
               float* taup1, float* taup2, float* tauq1,
               float* phantom, float* work, const long long int* lwork,
               long long int* info );

void SORBDB5( const long long int* m1, const long long int* m2, const long long int* n,
              float* x1, const long long int* incx1, float* x2,
              const long long int* incx2, float* q1, const long long int* ldq1,
              float* q2, const long long int* ldq2, float* work,
              const long long int* lwork, long long int* info );
void SORBDB5_( const long long int* m1, const long long int* m2, const long long int* n,
               float* x1, const long long int* incx1, float* x2,
               const long long int* incx2, float* q1, const long long int* ldq1,
               float* q2, const long long int* ldq2, float* work,
               const long long int* lwork, long long int* info );
void sorbdb5( const long long int* m1, const long long int* m2, const long long int* n,
              float* x1, const long long int* incx1, float* x2,
              const long long int* incx2, float* q1, const long long int* ldq1,
              float* q2, const long long int* ldq2, float* work,
              const long long int* lwork, long long int* info );
void sorbdb5_( const long long int* m1, const long long int* m2, const long long int* n,
               float* x1, const long long int* incx1, float* x2,
               const long long int* incx2, float* q1, const long long int* ldq1,
               float* q2, const long long int* ldq2, float* work,
               const long long int* lwork, long long int* info );

void SORBDB6( const long long int* m1, const long long int* m2, const long long int* n,
              float* x1, const long long int* incx1, float* x2,
              const long long int* incx2, float* q1, const long long int* ldq1,
              float* q2, const long long int* ldq2, float* work,
              const long long int* lwork, long long int* info );
void SORBDB6_( const long long int* m1, const long long int* m2, const long long int* n,
               float* x1, const long long int* incx1, float* x2,
               const long long int* incx2, float* q1, const long long int* ldq1,
               float* q2, const long long int* ldq2, float* work,
               const long long int* lwork, long long int* info );
void sorbdb6( const long long int* m1, const long long int* m2, const long long int* n,
              float* x1, const long long int* incx1, float* x2,
              const long long int* incx2, float* q1, const long long int* ldq1,
              float* q2, const long long int* ldq2, float* work,
              const long long int* lwork, long long int* info );
void sorbdb6_( const long long int* m1, const long long int* m2, const long long int* n,
               float* x1, const long long int* incx1, float* x2,
               const long long int* incx2, float* q1, const long long int* ldq1,
               float* q2, const long long int* ldq2, float* work,
               const long long int* lwork, long long int* info );

void SORCSD2BY1( const char* jobu1, const char* jobu2, const char* jobv1t,
                 const long long int* m, const long long int* p, const long long int* q,
                 float* x11, const long long int* ldx11, float* x21,
                 const long long int* ldx21, float* theta, float* u1,
                 const long long int* ldu1, float* u2, const long long int* ldu2,
                 float* v1t, const long long int* ldv1t, float* work,
                 const long long int* lwork, long long int* iwork, long long int* info );
void SORCSD2BY1_( const char* jobu1, const char* jobu2, const char* jobv1t,
                  const long long int* m, const long long int* p, const long long int* q,
                  float* x11, const long long int* ldx11, float* x21,
                  const long long int* ldx21, float* theta, float* u1,
                  const long long int* ldu1, float* u2, const long long int* ldu2,
                  float* v1t, const long long int* ldv1t, float* work,
                  const long long int* lwork, long long int* iwork, long long int* info );
void sorcsd2by1( const char* jobu1, const char* jobu2, const char* jobv1t,
                 const long long int* m, const long long int* p, const long long int* q,
                 float* x11, const long long int* ldx11, float* x21,
                 const long long int* ldx21, float* theta, float* u1,
                 const long long int* ldu1, float* u2, const long long int* ldu2,
                 float* v1t, const long long int* ldv1t, float* work,
                 const long long int* lwork, long long int* iwork, long long int* info );
void sorcsd2by1_( const char* jobu1, const char* jobu2, const char* jobv1t,
                  const long long int* m, const long long int* p, const long long int* q,
                  float* x11, const long long int* ldx11, float* x21,
                  const long long int* ldx21, float* theta, float* u1,
                  const long long int* ldu1, float* u2, const long long int* ldu2,
                  float* v1t, const long long int* ldv1t, float* work,
                  const long long int* lwork, long long int* iwork, long long int* info );

void ZUNBDB1( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
              const long long int* ldx21, double* theta, double* phi,
              MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNBDB1_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
               const long long int* ldx21, double* theta, double* phi,
               MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
               MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunbdb1( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
              const long long int* ldx21, double* theta, double* phi,
              MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunbdb1_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
               const long long int* ldx21, double* theta, double* phi,
               MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
               MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNBDB2( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
              const long long int* ldx21, double* theta, double* phi,
              MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNBDB2_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
               const long long int* ldx21, double* theta, double* phi,
               MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
               MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunbdb2( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
              const long long int* ldx21, double* theta, double* phi,
              MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunbdb2_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
               const long long int* ldx21, double* theta, double* phi,
               MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
               MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNBDB3( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
              const long long int* ldx21, double* theta, double* phi,
              MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNBDB3_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
               const long long int* ldx21, double* theta, double* phi,
               MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
               MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunbdb3( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
              const long long int* ldx21, double* theta, double* phi,
              MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunbdb3_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
               const long long int* ldx21, double* theta, double* phi,
               MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
               MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNBDB4( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
              const long long int* ldx21, double* theta, double* phi,
              MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
              MKL_Complex16* phantom, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void ZUNBDB4_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
               const long long int* ldx21, double* theta, double* phi,
               MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
               MKL_Complex16* phantom, MKL_Complex16* work, const long long int* lwork,
               long long int* info );
void zunbdb4( const long long int* m, const long long int* p, const long long int* q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
              const long long int* ldx21, double* theta, double* phi,
              MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
              MKL_Complex16* phantom, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zunbdb4_( const long long int* m, const long long int* p, const long long int* q,
               MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
               const long long int* ldx21, double* theta, double* phi,
               MKL_Complex16* taup1, MKL_Complex16* taup2, MKL_Complex16* tauq1,
               MKL_Complex16* phantom, MKL_Complex16* work, const long long int* lwork,
               long long int* info );

void ZUNBDB5( const long long int* m1, const long long int* m2, const long long int* n,
              MKL_Complex16* x1, const long long int* incx1, MKL_Complex16* x2,
              const long long int* incx2, MKL_Complex16* q1, const long long int* ldq1,
              MKL_Complex16* q2, const long long int* ldq2, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void ZUNBDB5_( const long long int* m1, const long long int* m2, const long long int* n,
               MKL_Complex16* x1, const long long int* incx1, MKL_Complex16* x2,
               const long long int* incx2, MKL_Complex16* q1, const long long int* ldq1,
               MKL_Complex16* q2, const long long int* ldq2, MKL_Complex16* work,
               const long long int* lwork, long long int* info );
void zunbdb5( const long long int* m1, const long long int* m2, const long long int* n,
              MKL_Complex16* x1, const long long int* incx1, MKL_Complex16* x2,
              const long long int* incx2, MKL_Complex16* q1, const long long int* ldq1,
              MKL_Complex16* q2, const long long int* ldq2, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zunbdb5_( const long long int* m1, const long long int* m2, const long long int* n,
               MKL_Complex16* x1, const long long int* incx1, MKL_Complex16* x2,
               const long long int* incx2, MKL_Complex16* q1, const long long int* ldq1,
               MKL_Complex16* q2, const long long int* ldq2, MKL_Complex16* work,
               const long long int* lwork, long long int* info );

void ZUNBDB6( const long long int* m1, const long long int* m2, const long long int* n,
              MKL_Complex16* x1, const long long int* incx1, MKL_Complex16* x2,
              const long long int* incx2, MKL_Complex16* q1, const long long int* ldq1,
              MKL_Complex16* q2, const long long int* ldq2, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void ZUNBDB6_( const long long int* m1, const long long int* m2, const long long int* n,
               MKL_Complex16* x1, const long long int* incx1, MKL_Complex16* x2,
               const long long int* incx2, MKL_Complex16* q1, const long long int* ldq1,
               MKL_Complex16* q2, const long long int* ldq2, MKL_Complex16* work,
               const long long int* lwork, long long int* info );
void zunbdb6( const long long int* m1, const long long int* m2, const long long int* n,
              MKL_Complex16* x1, const long long int* incx1, MKL_Complex16* x2,
              const long long int* incx2, MKL_Complex16* q1, const long long int* ldq1,
              MKL_Complex16* q2, const long long int* ldq2, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zunbdb6_( const long long int* m1, const long long int* m2, const long long int* n,
               MKL_Complex16* x1, const long long int* incx1, MKL_Complex16* x2,
               const long long int* incx2, MKL_Complex16* q1, const long long int* ldq1,
               MKL_Complex16* q2, const long long int* ldq2, MKL_Complex16* work,
               const long long int* lwork, long long int* info );

void ZUNCSD2BY1( const char* jobu1, const char* jobu2, const char* jobv1t,
                 const long long int* m, const long long int* p, const long long int* q,
                 MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
                 const long long int* ldx21, double* theta, MKL_Complex16* u1,
                 const long long int* ldu1, MKL_Complex16* u2, const long long int* ldu2,
                 MKL_Complex16* v1t, const long long int* ldv1t, MKL_Complex16* work,
                 const long long int* lwork, double* rwork, const long long int* lrwork,
                 long long int* iwork, long long int* info );
void ZUNCSD2BY1_( const char* jobu1, const char* jobu2, const char* jobv1t,
                  const long long int* m, const long long int* p, const long long int* q,
                  MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
                  const long long int* ldx21, double* theta, MKL_Complex16* u1,
                  const long long int* ldu1, MKL_Complex16* u2, const long long int* ldu2,
                  MKL_Complex16* v1t, const long long int* ldv1t, MKL_Complex16* work,
                  const long long int* lwork, double* rwork, const long long int* lrwork,
                  long long int* iwork, long long int* info );
void zuncsd2by1( const char* jobu1, const char* jobu2, const char* jobv1t,
                 const long long int* m, const long long int* p, const long long int* q,
                 MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
                 const long long int* ldx21, double* theta, MKL_Complex16* u1,
                 const long long int* ldu1, MKL_Complex16* u2, const long long int* ldu2,
                 MKL_Complex16* v1t, const long long int* ldv1t, MKL_Complex16* work,
                 const long long int* lwork, double* rwork, const long long int* lrwork,
                 long long int* iwork, long long int* info );
void zuncsd2by1_( const char* jobu1, const char* jobu2, const char* jobv1t,
                  const long long int* m, const long long int* p, const long long int* q,
                  MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x21,
                  const long long int* ldx21, double* theta, MKL_Complex16* u1,
                  const long long int* ldu1, MKL_Complex16* u2, const long long int* ldu2,
                  MKL_Complex16* v1t, const long long int* ldv1t, MKL_Complex16* work,
                  const long long int* lwork, double* rwork, const long long int* lrwork,
                  long long int* iwork, long long int* info );



void CGEMQRT( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* nb,
              const MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, long long int* info );
void CGEMQRT_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* nb,
               const MKL_Complex8* v, const long long int* ldv,
               const MKL_Complex8* t, const long long int* ldt,
               MKL_Complex8* c, const long long int* ldc,
               MKL_Complex8* work, long long int* info );
void cgemqrt( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* nb,
              const MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, long long int* info );
void cgemqrt_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* nb,
               const MKL_Complex8* v, const long long int* ldv,
               const MKL_Complex8* t, const long long int* ldt,
               MKL_Complex8* c, const long long int* ldc,
               MKL_Complex8* work, long long int* info );

void DGEMQRT( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* nb,
              const double* v, const long long int* ldv,
              const double* t, const long long int* ldt,
              double* c, const long long int* ldc, double* work, long long int* info );
void DGEMQRT_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* nb,
               const double* v, const long long int* ldv,
               const double* t, const long long int* ldt,
               double* c, const long long int* ldc, double* work, long long int* info );
void dgemqrt( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* nb,
              const double* v, const long long int* ldv,
              const double* t, const long long int* ldt,
              double* c, const long long int* ldc, double* work, long long int* info );
void dgemqrt_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* nb,
               const double* v, const long long int* ldv,
               const double* t, const long long int* ldt,
               double* c, const long long int* ldc, double* work, long long int* info );

void SGEMQRT( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* nb,
              const float* v, const long long int* ldv, const float* t,
              const long long int* ldt, float* c, const long long int* ldc, float* work,
              long long int* info );
void SGEMQRT_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* nb,
               const float* v, const long long int* ldv, const float* t,
               const long long int* ldt, float* c, const long long int* ldc, float* work,
               long long int* info );
void sgemqrt( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* nb,
              const float* v, const long long int* ldv, const float* t,
              const long long int* ldt, float* c, const long long int* ldc, float* work,
              long long int* info );
void sgemqrt_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* nb,
               const float* v, const long long int* ldv, const float* t,
               const long long int* ldt, float* c, const long long int* ldc, float* work,
               long long int* info );

void ZGEMQRT( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* nb,
              const MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, long long int* info );
void ZGEMQRT_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* nb,
               const MKL_Complex16* v, const long long int* ldv,
               const MKL_Complex16* t, const long long int* ldt,
               MKL_Complex16* c, const long long int* ldc,
               MKL_Complex16* work, long long int* info );
void zgemqrt( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* nb,
              const MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, long long int* info );
void zgemqrt_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* nb,
               const MKL_Complex16* v, const long long int* ldv,
               const MKL_Complex16* t, const long long int* ldt,
               MKL_Complex16* c, const long long int* ldc,
               MKL_Complex16* work, long long int* info );

void CGEQRT( const long long int* m, const long long int* n, const long long int* nb,
             MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* work, long long int* info );

void CGEQRT_( const long long int* m, const long long int* n, const long long int* nb,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* work, long long int* info );

void cgeqrt( const long long int* m, const long long int* n, const long long int* nb,
             MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* work, long long int* info );

void cgeqrt_( const long long int* m, const long long int* n, const long long int* nb,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* work, long long int* info );

void DGEQRT( const long long int* m, const long long int* n, const long long int* nb,
             double* a, const long long int* lda,
             double* t, const long long int* ldt,
             double* work, long long int* info );

void DGEQRT_( const long long int* m, const long long int* n, const long long int* nb,
              double* a, const long long int* lda,
              double* t, const long long int* ldt,
              double* work, long long int* info );

void dgeqrt( const long long int* m, const long long int* n, const long long int* nb,
             double* a, const long long int* lda,
             double* t, const long long int* ldt,
             double* work, long long int* info );

void dgeqrt_( const long long int* m, const long long int* n, const long long int* nb,
              double* a, const long long int* lda,
              double* t, const long long int* ldt,
              double* work, long long int* info );

void SGEQRT( const long long int* m, const long long int* n, const long long int* nb,
             float* a, const long long int* lda,
             float* t, const long long int* ldt,
             float* work, long long int* info );

void SGEQRT_( const long long int* m, const long long int* n, const long long int* nb,
              float* a, const long long int* lda,
              float* t, const long long int* ldt,
              float* work, long long int* info );

void sgeqrt( const long long int* m, const long long int* n, const long long int* nb,
             float* a, const long long int* lda,
             float* t, const long long int* ldt,
             float* work, long long int* info );

void sgeqrt_( const long long int* m, const long long int* n, const long long int* nb,
              float* a, const long long int* lda,
              float* t, const long long int* ldt,
              float* work, long long int* info );

void ZGEQRT( const long long int* m, const long long int* n, const long long int* nb,
             MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* work, long long int* info );

void ZGEQRT_( const long long int* m, const long long int* n, const long long int* nb,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* work, long long int* info );

void zgeqrt( const long long int* m, const long long int* n, const long long int* nb,
             MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* work, long long int* info );

void zgeqrt_( const long long int* m, const long long int* n, const long long int* nb,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* work, long long int* info );

void CGEQRT3( const long long int* m, const long long int* n,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* t, const long long int* ldt, long long int* info );

void CGEQRT3_( const long long int* m, const long long int* n,
               MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* t, const long long int* ldt, long long int* info );

void cgeqrt3( const long long int* m, const long long int* n,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* t, const long long int* ldt, long long int* info );

void cgeqrt3_( const long long int* m, const long long int* n,
               MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* t, const long long int* ldt, long long int* info );

void DGEQRT3( const long long int* m, const long long int* n,
              double* a, const long long int* lda,
              double* t, const long long int* ldt, long long int* info );

void DGEQRT3_( const long long int* m, const long long int* n,
               double* a, const long long int* lda,
               double* t, const long long int* ldt, long long int* info );

void dgeqrt3( const long long int* m, const long long int* n,
              double* a, const long long int* lda,
              double* t, const long long int* ldt, long long int* info );

void dgeqrt3_( const long long int* m, const long long int* n,
               double* a, const long long int* lda,
               double* t, const long long int* ldt, long long int* info );

void SGEQRT3( const long long int* m, const long long int* n,
              float* a, const long long int* lda,
              float* t, const long long int* ldt, long long int* info );

void SGEQRT3_( const long long int* m, const long long int* n,
               float* a, const long long int* lda,
               float* t, const long long int* ldt, long long int* info );

void sgeqrt3( const long long int* m, const long long int* n,
              float* a, const long long int* lda,
              float* t, const long long int* ldt, long long int* info );

void sgeqrt3_( const long long int* m, const long long int* n,
               float* a, const long long int* lda,
               float* t, const long long int* ldt, long long int* info );

void ZGEQRT3( const long long int* m, const long long int* n,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* t, const long long int* ldt, long long int* info );

void ZGEQRT3_( const long long int* m, const long long int* n,
               MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* t, const long long int* ldt, long long int* info );

void zgeqrt3( const long long int* m, const long long int* n,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* t, const long long int* ldt, long long int* info );

void zgeqrt3_( const long long int* m, const long long int* n,
               MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* t, const long long int* ldt, long long int* info );

void CTPMQRT( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
              const MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* work, long long int* info );

void CTPMQRT_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
               const MKL_Complex8* v, const long long int* ldv,
               const MKL_Complex8* t, const long long int* ldt,
               MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* b, const long long int* ldb,
               MKL_Complex8* work, long long int* info );

void ctpmqrt( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
              const MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* work, long long int* info );

void ctpmqrt_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
               const MKL_Complex8* v, const long long int* ldv,
               const MKL_Complex8* t, const long long int* ldt,
               MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* b, const long long int* ldb,
               MKL_Complex8* work, long long int* info );

void DTPMQRT( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
              const double* v, const long long int* ldv,
              const double* t, const long long int* ldt,
              double* a, const long long int* lda,
              double* b, const long long int* ldb,
              double* work, long long int* info );

void DTPMQRT_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
               const double* v, const long long int* ldv,
               const double* t, const long long int* ldt,
               double* a, const long long int* lda,
               double* b, const long long int* ldb,
               double* work, long long int* info );

void dtpmqrt( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
              const double* v, const long long int* ldv,
              const double* t, const long long int* ldt,
              double* a, const long long int* lda,
              double* b, const long long int* ldb,
              double* work, long long int* info );

void dtpmqrt_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
               const double* v, const long long int* ldv,
               const double* t, const long long int* ldt,
               double* a, const long long int* lda,
               double* b, const long long int* ldb,
               double* work, long long int* info );

void STPMQRT( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
              const float* v, const long long int* ldv,
              const float* t, const long long int* ldt,
              float* a, const long long int* lda,
              float* b, const long long int* ldb,
              float* work, long long int* info );

void STPMQRT_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
               const float* v, const long long int* ldv,
               const float* t, const long long int* ldt,
               float* a, const long long int* lda,
               float* b, const long long int* ldb,
               float* work, long long int* info );

void stpmqrt( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
              const float* v, const long long int* ldv,
              const float* t, const long long int* ldt,
              float* a, const long long int* lda,
              float* b, const long long int* ldb,
              float* work, long long int* info );

void stpmqrt_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
               const float* v, const long long int* ldv,
               const float* t, const long long int* ldt,
               float* a, const long long int* lda,
               float* b, const long long int* ldb,
               float* work, long long int* info );

void ZTPMQRT( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
              const MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* work, long long int* info );

void ZTPMQRT_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
               const MKL_Complex16* v, const long long int* ldv,
               const MKL_Complex16* t, const long long int* ldt,
               MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* work, long long int* info );

void ztpmqrt( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
              const MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* work, long long int* info );

void ztpmqrt_( const char* side, const char* trans, const long long int* m,
               const long long int* n, const long long int* k, const long long int* l, const long long int* nb,
               const MKL_Complex16* v, const long long int* ldv,
               const MKL_Complex16* t, const long long int* ldt,
               MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* work, long long int* info );

void CTPQRT( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
             MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* work, long long int* info );


void CTPQRT_( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* work, long long int* info );

void ctpqrt( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
             MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* work, long long int* info );

void ctpqrt_( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* work, long long int* info );

void DTPQRT( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
             double* a, const long long int* lda,
             double* b, const long long int* ldb,
             double* t, const long long int* ldt,
             double* work, long long int* info );

void DTPQRT_( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
              double* a, const long long int* lda,
              double* b, const long long int* ldb,
              double* t, const long long int* ldt,
              double* work, long long int* info );

void dtpqrt( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
             double* a, const long long int* lda,
             double* b, const long long int* ldb,
             double* t, const long long int* ldt,
             double* work, long long int* info );

void dtpqrt_( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
              double* a, const long long int* lda,
              double* b, const long long int* ldb,
              double* t, const long long int* ldt,
              double* work, long long int* info );

void STPQRT( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
             float* a, const long long int* lda,
             float* b, const long long int* ldb,
             float* t, const long long int* ldt,
             float* work, long long int* info );

void STPQRT_( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
              float* a, const long long int* lda,
              float* b, const long long int* ldb,
              float* t, const long long int* ldt,
              float* work, long long int* info );

void stpqrt( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
             float* a, const long long int* lda,
             float* b, const long long int* ldb,
             float* t, const long long int* ldt,
             float* work, long long int* info );

void stpqrt_( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
              float* a, const long long int* lda,
              float* b, const long long int* ldb,
              float* t, const long long int* ldt,
              float* work, long long int* info );

void ZTPQRT( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
             MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* work, long long int* info );

void ZTPQRT_( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* work, long long int* info );

void ztpqrt( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
             MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* work, long long int* info );

void ztpqrt_( const long long int* m, const long long int* n, const long long int* l, const long long int* nb,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* work, long long int* info );

void CTPQRT2( const long long int* m, const long long int* n, const long long int* l,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* t, const long long int* ldt, long long int* info );

void CTPQRT2_( const long long int* m, const long long int* n, const long long int* l,
               MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* b, const long long int* ldb,
               MKL_Complex8* t, const long long int* ldt, long long int* info );

void ctpqrt2( const long long int* m, const long long int* n, const long long int* l,
              MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* t, const long long int* ldt, long long int* info );

void ctpqrt2_( const long long int* m, const long long int* n, const long long int* l,
               MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* b, const long long int* ldb,
               MKL_Complex8* t, const long long int* ldt, long long int* info );

void DTPQRT2( const long long int* m, const long long int* n, const long long int* l,
              double* a, const long long int* lda,
              double* b, const long long int* ldb,
              double* t, const long long int* ldt, long long int* info );

void DTPQRT2_( const long long int* m, const long long int* n, const long long int* l,
               double* a, const long long int* lda,
               double* b, const long long int* ldb,
               double* t, const long long int* ldt, long long int* info );

void dtpqrt2( const long long int* m, const long long int* n, const long long int* l,
              double* a, const long long int* lda,
              double* b, const long long int* ldb,
              double* t, const long long int* ldt, long long int* info );

void dtpqrt2_( const long long int* m, const long long int* n, const long long int* l,
               double* a, const long long int* lda,
               double* b, const long long int* ldb,
               double* t, const long long int* ldt, long long int* info );

void STPQRT2( const long long int* m, const long long int* n, const long long int* l,
              float* a, const long long int* lda,
              float* b, const long long int* ldb,
              float* t, const long long int* ldt, long long int* info );

void STPQRT2_( const long long int* m, const long long int* n, const long long int* l,
               float* a, const long long int* lda,
               float* b, const long long int* ldb,
               float* t, const long long int* ldt, long long int* info );

void stpqrt2( const long long int* m, const long long int* n, const long long int* l,
              float* a, const long long int* lda,
              float* b, const long long int* ldb,
              float* t, const long long int* ldt, long long int* info );

void stpqrt2_( const long long int* m, const long long int* n, const long long int* l,
               float* a, const long long int* lda,
               float* b, const long long int* ldb,
               float* t, const long long int* ldt, long long int* info );

void ZTPQRT2( const long long int* m, const long long int* n, const long long int* l,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* t, const long long int* ldt, long long int* info );

void ZTPQRT2_( const long long int* m, const long long int* n, const long long int* l,
               MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* t, const long long int* ldt, long long int* info );

void ztpqrt2( const long long int* m, const long long int* n, const long long int* l,
              MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* t, const long long int* ldt, long long int* info );

void ztpqrt2_( const long long int* m, const long long int* n, const long long int* l,
               MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* t, const long long int* ldt, long long int* info );




void CBBCSD( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const long long int* M,
             const long long int* P, const long long int* Q, float* theta, float* phi,
             MKL_Complex8* u1, const long long int* ldu1, MKL_Complex8* u2,
             const long long int* ldu2, MKL_Complex8* v1t, const long long int* ldv1t,
             MKL_Complex8* v2t, const long long int* ldv2t, float* b11d, float* b11e,
             float* b12d, float* b12e, float* b21d, float* b21e, float* b22d,
             float* b22e, float* rwork, const long long int* lrwork, long long int* info );

void CBBCSD_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const long long int* M,
              const long long int* P, const long long int* Q, float* theta, float* phi,
              MKL_Complex8* u1, const long long int* ldu1, MKL_Complex8* u2,
              const long long int* ldu2, MKL_Complex8* v1t, const long long int* ldv1t,
              MKL_Complex8* v2t, const long long int* ldv2t, float* b11d, float* b11e,
              float* b12d, float* b12e, float* b21d, float* b21e, float* b22d,
              float* b22e, float* rwork, const long long int* lrwork, long long int* info );

void cbbcsd( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const long long int* M,
             const long long int* P, const long long int* Q, float* theta, float* phi,
             MKL_Complex8* u1, const long long int* ldu1, MKL_Complex8* u2,
             const long long int* ldu2, MKL_Complex8* v1t, const long long int* ldv1t,
             MKL_Complex8* v2t, const long long int* ldv2t, float* b11d, float* b11e,
             float* b12d, float* b12e, float* b21d, float* b21e, float* b22d,
             float* b22e, float* rwork, const long long int* lrwork, long long int* info );

void cbbcsd_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const long long int* M,
              const long long int* P, const long long int* Q, float* theta, float* phi,
              MKL_Complex8* u1, const long long int* ldu1, MKL_Complex8* u2,
              const long long int* ldu2, MKL_Complex8* v1t, const long long int* ldv1t,
              MKL_Complex8* v2t, const long long int* ldv2t, float* b11d, float* b11e,
              float* b12d, float* b12e, float* b21d, float* b21e, float* b22d,
              float* b22e, float* rwork, const long long int* lrwork, long long int* info );

void ZBBCSD( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const long long int* M,
             const long long int* P, const long long int* Q, double* theta, double* phi,
             MKL_Complex16* u1, const long long int* ldu1, MKL_Complex16* u2,
             const long long int* ldu2, MKL_Complex16* v1t, const long long int* ldv1t,
             MKL_Complex16* v2t, const long long int* ldv2t, double* b11d, double* b11e,
             double* b12d, double* b12e, double* b21d, double* b21e, double* b22d,
             double* b22e, double* rwork, const long long int* lrwork, long long int* info );

void ZBBCSD_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const long long int* M,
              const long long int* P, const long long int* Q, double* theta, double* phi,
              MKL_Complex16* u1, const long long int* ldu1, MKL_Complex16* u2,
              const long long int* ldu2, MKL_Complex16* v1t, const long long int* ldv1t,
              MKL_Complex16* v2t, const long long int* ldv2t, double* b11d, double* b11e,
              double* b12d, double* b12e, double* b21d, double* b21e, double* b22d,
              double* b22e, double* rwork, const long long int* lrwork, long long int* info );

void zbbcsd( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const long long int* M,
             const long long int* P, const long long int* Q, double* theta, double* phi,
             MKL_Complex16* u1, const long long int* ldu1, MKL_Complex16* u2,
             const long long int* ldu2, MKL_Complex16* v1t, const long long int* ldv1t,
             MKL_Complex16* v2t, const long long int* ldv2t, double* b11d, double* b11e,
             double* b12d, double* b12e, double* b21d, double* b21e, double* b22d,
             double* b22e, double* rwork, const long long int* lrwork, long long int* info );

void zbbcsd_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const long long int* M,
              const long long int* P, const long long int* Q, double* theta, double* phi,
              MKL_Complex16* u1, const long long int* ldu1, MKL_Complex16* u2,
              const long long int* ldu2, MKL_Complex16* v1t, const long long int* ldv1t,
              MKL_Complex16* v2t, const long long int* ldv2t, double* b11d, double* b11e,
              double* b12d, double* b12e, double* b21d, double* b21e, double* b22d,
              double* b22e, double* rwork, const long long int* lrwork, long long int* info );

void SBBCSD( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const long long int* M,
             const long long int* P, const long long int* Q, float* theta, float* phi,
             float* u1, const long long int* ldu1, float* u2,
             const long long int* ldu2, float* v1t, const long long int* ldv1t,
             float* v2t, const long long int* ldv2t, float* b11d, float* b11e,
             float* b12d, float* b12e, float* b21d, float* b21e, float* b22d,
             float* b22e, float* rwork, const long long int* lrwork, long long int* info );

void SBBCSD_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const long long int* M,
              const long long int* P, const long long int* Q, float* theta, float* phi,
              float* u1, const long long int* ldu1, float* u2,
              const long long int* ldu2, float* v1t, const long long int* ldv1t,
              float* v2t, const long long int* ldv2t, float* b11d, float* b11e,
              float* b12d, float* b12e, float* b21d, float* b21e, float* b22d,
              float* b22e, float* rwork, const long long int* lrwork, long long int* info );

void sbbcsd( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const long long int* M,
             const long long int* P, const long long int* Q, float* theta, float* phi,
             float* u1, const long long int* ldu1, float* u2,
             const long long int* ldu2, float* v1t, const long long int* ldv1t,
             float* v2t, const long long int* ldv2t, float* b11d, float* b11e,
             float* b12d, float* b12e, float* b21d, float* b21e, float* b22d,
             float* b22e, float* rwork, const long long int* lrwork, long long int* info );

void sbbcsd_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const long long int* M,
              const long long int* P, const long long int* Q, float* theta, float* phi,
              float* u1, const long long int* ldu1, float* u2,
              const long long int* ldu2, float* v1t, const long long int* ldv1t,
              float* v2t, const long long int* ldv2t, float* b11d, float* b11e,
              float* b12d, float* b12e, float* b21d, float* b21e, float* b22d,
              float* b22e, float* rwork, const long long int* lrwork, long long int* info );

void DBBCSD( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const long long int* M,
             const long long int* P, const long long int* Q, double* theta, double* phi,
             double* u1, const long long int* ldu1, double* u2,
             const long long int* ldu2, double* v1t, const long long int* ldv1t,
             double* v2t, const long long int* ldv2t, double* b11d, double* b11e,
             double* b12d, double* b12e, double* b21d, double* b21e, double* b22d,
             double* b22e, double* rwork, const long long int* lrwork, long long int* info );

void DBBCSD_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const long long int* M,
              const long long int* P, const long long int* Q, double* theta, double* phi,
              double* u1, const long long int* ldu1, double* u2,
              const long long int* ldu2, double* v1t, const long long int* ldv1t,
              double* v2t, const long long int* ldv2t, double* b11d, double* b11e,
              double* b12d, double* b12e, double* b21d, double* b21e, double* b22d,
              double* b22e, double* rwork, const long long int* lrwork, long long int* info );

void dbbcsd( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const long long int* M,
             const long long int* P, const long long int* Q, double* theta, double* phi,
             double* u1, const long long int* ldu1, double* u2,
             const long long int* ldu2, double* v1t, const long long int* ldv1t,
             double* v2t, const long long int* ldv2t, double* b11d, double* b11e,
             double* b12d, double* b12e, double* b21d, double* b21e, double* b22d,
             double* b22e, double* rwork, const long long int* lrwork, long long int* info );

void dbbcsd_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const long long int* M,
              const long long int* P, const long long int* Q, double* theta, double* phi,
              double* u1, const long long int* ldu1, double* u2,
              const long long int* ldu2, double* v1t, const long long int* ldv1t,
              double* v2t, const long long int* ldv2t, double* b11d, double* b11e,
              double* b12d, double* b12e, double* b21d, double* b21e, double* b22d,
              double* b22e, double* rwork, const long long int* lrwork, long long int* info );

void CUNBDB( const char* trans, const char* signs, const long long int* M,
             const long long int* P, const long long int* Q, MKL_Complex8* x11,
             const long long int* ldx11, MKL_Complex8* x12, const long long int* ldx12,
             MKL_Complex8* x21, const long long int* ldx21, MKL_Complex8* x22,
             const long long int* ldx22, float* theta, float* phi, MKL_Complex8* taup1,
             MKL_Complex8* taup2, MKL_Complex8* tauq1, MKL_Complex8* tauq2,
             MKL_Complex8* work, const long long int* lwork, long long int* info);

void CUNBDB_( const char* trans, const char* signs, const long long int* M,
              const long long int* P, const long long int* Q, MKL_Complex8* x11,
              const long long int* ldx11, MKL_Complex8* x12, const long long int* ldx12,
              MKL_Complex8* x21, const long long int* ldx21, MKL_Complex8* x22,
              const long long int* ldx22, float* theta, float* phi, MKL_Complex8* taup1,
              MKL_Complex8* taup2, MKL_Complex8* tauq1, MKL_Complex8* tauq2,
              MKL_Complex8* work, const long long int* lwork, long long int* info);

void cunbdb( const char* trans, const char* signs, const long long int* M,
             const long long int* P, const long long int* Q, MKL_Complex8* x11,
             const long long int* ldx11, MKL_Complex8* x12, const long long int* ldx12,
             MKL_Complex8* x21, const long long int* ldx21, MKL_Complex8* x22,
             const long long int* ldx22, float* theta, float* phi, MKL_Complex8* taup1,
             MKL_Complex8* taup2, MKL_Complex8* tauq1, MKL_Complex8* tauq2,
             MKL_Complex8* work, const long long int* lwork, long long int* info);

void cunbdb_( const char* trans, const char* signs, const long long int* M,
              const long long int* P, const long long int* Q, MKL_Complex8* x11,
              const long long int* ldx11, MKL_Complex8* x12, const long long int* ldx12,
              MKL_Complex8* x21, const long long int* ldx21, MKL_Complex8* x22,
              const long long int* ldx22, float* theta, float* phi, MKL_Complex8* taup1,
              MKL_Complex8* taup2, MKL_Complex8* tauq1, MKL_Complex8* tauq2,
              MKL_Complex8* work, const long long int* lwork, long long int* info);

void ZUNBDB( const char* trans, const char* signs, const long long int* M,
             const long long int* P, const long long int* Q, MKL_Complex16* x11,
             const long long int* ldx11, MKL_Complex16* x12, const long long int* ldx12,
             MKL_Complex16* x21, const long long int* ldx21, MKL_Complex16* x22,
             const long long int* ldx22, double* theta, double* phi, MKL_Complex16* taup1,
             MKL_Complex16* taup2, MKL_Complex16* tauq1, MKL_Complex16* tauq2,
             MKL_Complex16* work, const long long int* lwork, long long int* info);

void ZUNBDB_( const char* trans, const char* signs, const long long int* M,
              const long long int* P, const long long int* Q, MKL_Complex16* x11,
              const long long int* ldx11, MKL_Complex16* x12, const long long int* ldx12,
              MKL_Complex16* x21, const long long int* ldx21, MKL_Complex16* x22,
              const long long int* ldx22, double* theta, double* phi, MKL_Complex16* taup1,
              MKL_Complex16* taup2, MKL_Complex16* tauq1, MKL_Complex16* tauq2,
              MKL_Complex16* work, const long long int* lwork, long long int* info);

void zunbdb( const char* trans, const char* signs, const long long int* M,
             const long long int* P, const long long int* Q, MKL_Complex16* x11,
             const long long int* ldx11, MKL_Complex16* x12, const long long int* ldx12,
             MKL_Complex16* x21, const long long int* ldx21, MKL_Complex16* x22,
             const long long int* ldx22, double* theta, double* phi, MKL_Complex16* taup1,
             MKL_Complex16* taup2, MKL_Complex16* tauq1, MKL_Complex16* tauq2,
             MKL_Complex16* work, const long long int* lwork, long long int* info);

void zunbdb_( const char* trans, const char* signs, const long long int* M,
              const long long int* P, const long long int* Q, MKL_Complex16* x11,
              const long long int* ldx11, MKL_Complex16* x12, const long long int* ldx12,
              MKL_Complex16* x21, const long long int* ldx21, MKL_Complex16* x22,
              const long long int* ldx22, double* theta, double* phi, MKL_Complex16* taup1,
              MKL_Complex16* taup2, MKL_Complex16* tauq1, MKL_Complex16* tauq2,
              MKL_Complex16* work, const long long int* lwork, long long int* info);

void SORBDB( const char* trans, const char* signs, const long long int* M,
             const long long int* P, const long long int* Q, float* x11,
             const long long int* ldx11, float* x12, const long long int* ldx12,
             float* x21, const long long int* ldx21, float* x22,
             const long long int* ldx22, float* theta, float* phi, float* taup1,
             float* taup2, float* tauq1, float* tauq2,
             float* work, const long long int* lwork, long long int* info);

void SORBDB_( const char* trans, const char* signs, const long long int* M,
              const long long int* P, const long long int* Q, float* x11,
              const long long int* ldx11, float* x12, const long long int* ldx12,
              float* x21, const long long int* ldx21, float* x22,
              const long long int* ldx22, float* theta, float* phi, float* taup1,
              float* taup2, float* tauq1, float* tauq2,
              float* work, const long long int* lwork, long long int* info);

void sorbdb( const char* trans, const char* signs, const long long int* M,
             const long long int* P, const long long int* Q, float* x11,
             const long long int* ldx11, float* x12, const long long int* ldx12,
             float* x21, const long long int* ldx21, float* x22,
             const long long int* ldx22, float* theta, float* phi, float* taup1,
             float* taup2, float* tauq1, float* tauq2,
             float* work, const long long int* lwork, long long int* info);

void sorbdb_( const char* trans, const char* signs, const long long int* M,
              const long long int* P, const long long int* Q, float* x11,
              const long long int* ldx11, float* x12, const long long int* ldx12,
              float* x21, const long long int* ldx21, float* x22,
              const long long int* ldx22, float* theta, float* phi, float* taup1,
              float* taup2, float* tauq1, float* tauq2,
              float* work, const long long int* lwork, long long int* info);

void DORBDB( const char* trans, const char* signs, const long long int* M,
             const long long int* P, const long long int* Q, double* x11,
             const long long int* ldx11, double* x12, const long long int* ldx12,
             double* x21, const long long int* ldx21, double* x22,
             const long long int* ldx22, double* theta, double* phi, double* taup1,
             double* taup2, double* tauq1, double* tauq2,
             double* work, const long long int* lwork, long long int* info);

void DORBDB_( const char* trans, const char* signs, const long long int* M,
              const long long int* P, const long long int* Q, double* x11,
              const long long int* ldx11, double* x12, const long long int* ldx12,
              double* x21, const long long int* ldx21, double* x22,
              const long long int* ldx22, double* theta, double* phi, double* taup1,
              double* taup2, double* tauq1, double* tauq2,
              double* work, const long long int* lwork, long long int* info);

void dorbdb( const char* trans, const char* signs, const long long int* M,
             const long long int* P, const long long int* Q, double* x11,
             const long long int* ldx11, double* x12, const long long int* ldx12,
             double* x21, const long long int* ldx21, double* x22,
             const long long int* ldx22, double* theta, double* phi, double* taup1,
             double* taup2, double* tauq1, double* tauq2,
             double* work, const long long int* lwork, long long int* info);

void dorbdb_( const char* trans, const char* signs, const long long int* M,
              const long long int* P, const long long int* Q, double* x11,
              const long long int* ldx11, double* x12, const long long int* ldx12,
              double* x21, const long long int* ldx21, double* x22,
              const long long int* ldx22, double* theta, double* phi, double* taup1,
              double* taup2, double* tauq1, double* tauq2,
              double* work, const long long int* lwork, long long int* info);

void CUNCSD( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const char* signs,
             const long long int* M, const long long int* P, const long long int* Q,
             MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x12,
             const long long int* ldx12, MKL_Complex8* x21, const long long int* ldx21,
             MKL_Complex8* x22, const long long int* ldx22, float* theta,
             MKL_Complex8* u1, const long long int* ldu1, MKL_Complex8* u2,
             const long long int* ldu2, MKL_Complex8* v1t, const long long int* ldv1t,
             MKL_Complex8* v2t, const long long int* ldv2t, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, long long int* info);

void CUNCSD_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const char* signs,
              const long long int* M, const long long int* P, const long long int* Q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x12,
              const long long int* ldx12, MKL_Complex8* x21, const long long int* ldx21,
              MKL_Complex8* x22, const long long int* ldx22, float* theta,
              MKL_Complex8* u1, const long long int* ldu1, MKL_Complex8* u2,
              const long long int* ldu2, MKL_Complex8* v1t, const long long int* ldv1t,
              MKL_Complex8* v2t, const long long int* ldv2t, MKL_Complex8* work,
              const long long int* lwork, float* rwork, const long long int* lrwork,
              long long int* iwork, long long int* info);

void cuncsd( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const char* signs,
             const long long int* M, const long long int* P, const long long int* Q,
             MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x12,
             const long long int* ldx12, MKL_Complex8* x21, const long long int* ldx21,
             MKL_Complex8* x22, const long long int* ldx22, float* theta,
             MKL_Complex8* u1, const long long int* ldu1, MKL_Complex8* u2,
             const long long int* ldu2, MKL_Complex8* v1t, const long long int* ldv1t,
             MKL_Complex8* v2t, const long long int* ldv2t, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, long long int* info);

void cuncsd_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const char* signs,
              const long long int* M, const long long int* P, const long long int* Q,
              MKL_Complex8* x11, const long long int* ldx11, MKL_Complex8* x12,
              const long long int* ldx12, MKL_Complex8* x21, const long long int* ldx21,
              MKL_Complex8* x22, const long long int* ldx22, float* theta,
              MKL_Complex8* u1, const long long int* ldu1, MKL_Complex8* u2,
              const long long int* ldu2, MKL_Complex8* v1t, const long long int* ldv1t,
              MKL_Complex8* v2t, const long long int* ldv2t, MKL_Complex8* work,
              const long long int* lwork, float* rwork, const long long int* lrwork,
              long long int* iwork, long long int* info);

void ZUNCSD( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const char* signs,
             const long long int* M, const long long int* P, const long long int* Q,
             MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x12,
             const long long int* ldx12, MKL_Complex16* x21, const long long int* ldx21,
             MKL_Complex16* x22, const long long int* ldx22, double* theta,
             MKL_Complex16* u1, const long long int* ldu1, MKL_Complex16* u2,
             const long long int* ldu2, MKL_Complex16* v1t, const long long int* ldv1t,
             MKL_Complex16* v2t, const long long int* ldv2t, MKL_Complex16* work,
             const long long int* lwork, double* rwork, const long long int* lrwork,
             long long int* iwork, long long int* info);

void ZUNCSD_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const char* signs,
              const long long int* M, const long long int* P, const long long int* Q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x12,
              const long long int* ldx12, MKL_Complex16* x21, const long long int* ldx21,
              MKL_Complex16* x22, const long long int* ldx22, double* theta,
              MKL_Complex16* u1, const long long int* ldu1, MKL_Complex16* u2,
              const long long int* ldu2, MKL_Complex16* v1t, const long long int* ldv1t,
              MKL_Complex16* v2t, const long long int* ldv2t, MKL_Complex16* work,
              const long long int* lwork, double* rwork, const long long int* lrwork,
              long long int* iwork, long long int* info);

void zuncsd( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const char* signs,
             const long long int* M, const long long int* P, const long long int* Q,
             MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x12,
             const long long int* ldx12, MKL_Complex16* x21, const long long int* ldx21,
             MKL_Complex16* x22, const long long int* ldx22, double* theta,
             MKL_Complex16* u1, const long long int* ldu1, MKL_Complex16* u2,
             const long long int* ldu2, MKL_Complex16* v1t, const long long int* ldv1t,
             MKL_Complex16* v2t, const long long int* ldv2t, MKL_Complex16* work,
             const long long int* lwork, double* rwork, const long long int* lrwork,
             long long int* iwork, long long int* info);

void zuncsd_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const char* signs,
              const long long int* M, const long long int* P, const long long int* Q,
              MKL_Complex16* x11, const long long int* ldx11, MKL_Complex16* x12,
              const long long int* ldx12, MKL_Complex16* x21, const long long int* ldx21,
              MKL_Complex16* x22, const long long int* ldx22, double* theta,
              MKL_Complex16* u1, const long long int* ldu1, MKL_Complex16* u2,
              const long long int* ldu2, MKL_Complex16* v1t, const long long int* ldv1t,
              MKL_Complex16* v2t, const long long int* ldv2t, MKL_Complex16* work,
              const long long int* lwork, double* rwork, const long long int* lrwork,
              long long int* iwork, long long int* info);

void SORCSD( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const char* signs,
             const long long int* M, const long long int* P, const long long int* Q,
             float* x11, const long long int* ldx11, float* x12,
             const long long int* ldx12, float* x21, const long long int* ldx21,
             float* x22, const long long int* ldx22, float* theta,
             float* u1, const long long int* ldu1, float* u2,
             const long long int* ldu2, float* v1t, const long long int* ldv1t,
             float* v2t, const long long int* ldv2t, float* work,
             const long long int* lwork, long long int* iwork, long long int* info);

void SORCSD_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const char* signs,
              const long long int* M, const long long int* P, const long long int* Q,
              float* x11, const long long int* ldx11, float* x12,
              const long long int* ldx12, float* x21, const long long int* ldx21,
              float* x22, const long long int* ldx22, float* theta,
              float* u1, const long long int* ldu1, float* u2,
              const long long int* ldu2, float* v1t, const long long int* ldv1t,
              float* v2t, const long long int* ldv2t, float* work,
              const long long int* lwork, long long int* iwork, long long int* info);

void sorcsd( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const char* signs,
             const long long int* M, const long long int* P, const long long int* Q,
             float* x11, const long long int* ldx11, float* x12,
             const long long int* ldx12, float* x21, const long long int* ldx21,
             float* x22, const long long int* ldx22, float* theta,
             float* u1, const long long int* ldu1, float* u2,
             const long long int* ldu2, float* v1t, const long long int* ldv1t,
             float* v2t, const long long int* ldv2t, float* work,
             const long long int* lwork, long long int* iwork, long long int* info);

void sorcsd_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const char* signs,
              const long long int* M, const long long int* P, const long long int* Q,
              float* x11, const long long int* ldx11, float* x12,
              const long long int* ldx12, float* x21, const long long int* ldx21,
              float* x22, const long long int* ldx22, float* theta,
              float* u1, const long long int* ldu1, float* u2,
              const long long int* ldu2, float* v1t, const long long int* ldv1t,
              float* v2t, const long long int* ldv2t, float* work,
              const long long int* lwork, long long int* iwork, long long int* info);

void DORCSD( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const char* signs,
             const long long int* M, const long long int* P, const long long int* Q,
             double* x11, const long long int* ldx11, double* x12,
             const long long int* ldx12, double* x21, const long long int* ldx21,
             double* x22, const long long int* ldx22, double* theta,
             double* u1, const long long int* ldu1, double* u2,
             const long long int* ldu2, double* v1t, const long long int* ldv1t,
             double* v2t, const long long int* ldv2t, double* work,
             const long long int* lwork, long long int* iwork, long long int* info);

void DORCSD_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const char* signs,
              const long long int* M, const long long int* P, const long long int* Q,
              double* x11, const long long int* ldx11, double* x12,
              const long long int* ldx12, double* x21, const long long int* ldx21,
              double* x22, const long long int* ldx22, double* theta,
              double* u1, const long long int* ldu1, double* u2,
              const long long int* ldu2, double* v1t, const long long int* ldv1t,
              double* v2t, const long long int* ldv2t, double* work,
              const long long int* lwork, long long int* iwork, long long int* info);

void dorcsd( const char* jobu1, const char* jobu2, const char* jobv1t,
             const char* jobv2t, const char* trans, const char* signs,
             const long long int* M, const long long int* P, const long long int* Q,
             double* x11, const long long int* ldx11, double* x12,
             const long long int* ldx12, double* x21, const long long int* ldx21,
             double* x22, const long long int* ldx22, double* theta,
             double* u1, const long long int* ldu1, double* u2,
             const long long int* ldu2, double* v1t, const long long int* ldv1t,
             double* v2t, const long long int* ldv2t, double* work,
             const long long int* lwork, long long int* iwork, long long int* info);

void dorcsd_( const char* jobu1, const char* jobu2, const char* jobv1t,
              const char* jobv2t, const char* trans, const char* signs,
              const long long int* M, const long long int* P, const long long int* Q,
              double* x11, const long long int* ldx11, double* x12,
              const long long int* ldx12, double* x21, const long long int* ldx21,
              double* x22, const long long int* ldx22, double* theta,
              double* u1, const long long int* ldu1, double* u2,
              const long long int* ldu2, double* v1t, const long long int* ldv1t,
              double* v2t, const long long int* ldv2t, double* work,
              const long long int* lwork, long long int* iwork, long long int* info);


void CLAPMR( const long long int* forwrd, const long long int* m, const long long int* n,
             MKL_Complex8* x, const long long int* ldx, long long int* k );
void CLAPMR_( const long long int* forwrd, const long long int* m, const long long int* n,
              MKL_Complex8* x, const long long int* ldx, long long int* k );
void clapmr( const long long int* forwrd, const long long int* m, const long long int* n,
             MKL_Complex8* x, const long long int* ldx, long long int* k );
void clapmr_( const long long int* forwrd, const long long int* m, const long long int* n,
              MKL_Complex8* x, const long long int* ldx, long long int* k );

void DLAPMR( const long long int* forwrd, const long long int* m, const long long int* n,
             double* x, const long long int* ldx, long long int* k );
void DLAPMR_( const long long int* forwrd, const long long int* m, const long long int* n,
              double* x, const long long int* ldx, long long int* k );
void dlapmr( const long long int* forwrd, const long long int* m, const long long int* n,
             double* x, const long long int* ldx, long long int* k );
void dlapmr_( const long long int* forwrd, const long long int* m, const long long int* n,
              double* x, const long long int* ldx, long long int* k );

void ZLAPMR( const long long int* forwrd, const long long int* m, const long long int* n,
             MKL_Complex16* x, const long long int* ldx, long long int* k );
void ZLAPMR_( const long long int* forwrd, const long long int* m, const long long int* n,
              MKL_Complex16* x, const long long int* ldx, long long int* k );
void zlapmr( const long long int* forwrd, const long long int* m, const long long int* n,
             MKL_Complex16* x, const long long int* ldx, long long int* k );
void zlapmr_( const long long int* forwrd, const long long int* m, const long long int* n,
              MKL_Complex16* x, const long long int* ldx, long long int* k );

void SLAPMR( const long long int* forwrd, const long long int* m, const long long int* n,
             float* x, const long long int* ldx, long long int* k );
void SLAPMR_( const long long int* forwrd, const long long int* m, const long long int* n,
              float* x, const long long int* ldx, long long int* k );
void slapmr( const long long int* forwrd, const long long int* m, const long long int* n,
             float* x, const long long int* ldx, long long int* k );
void slapmr_( const long long int* forwrd, const long long int* m, const long long int* n,
              float* x, const long long int* ldx, long long int* k );

void CSYCONV( const char* uplo, const char* way, const long long int* n,
             MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* work, long long int* info );
void CSYCONV_( const char* uplo, const char* way, const long long int* n,
             MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* work, long long int* info );
void csyconv( const char* uplo, const char* way, const long long int* n,
             MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* work, long long int* info );
void csyconv_( const char* uplo, const char* way, const long long int* n,
             MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* work, long long int* info );

void ZSYCONV( const char* uplo, const char* way, const long long int* n,
             MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* work, long long int* info );
void ZSYCONV_( const char* uplo, const char* way, const long long int* n,
             MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* work, long long int* info );
void zsyconv( const char* uplo, const char* way, const long long int* n,
             MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* work, long long int* info );
void zsyconv_( const char* uplo, const char* way, const long long int* n,
             MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* work, long long int* info );

void SSYCONV( const char* uplo, const char* way, const long long int* n,
             float* a, const long long int* lda, const long long int* ipiv,
             float* work, long long int* info );
void SSYCONV_( const char* uplo, const char* way, const long long int* n,
             float* a, const long long int* lda, const long long int* ipiv,
             float* work, long long int* info );
void ssyconv( const char* uplo, const char* way, const long long int* n,
             float* a, const long long int* lda, const long long int* ipiv,
             float* work, long long int* info );
void ssyconv_( const char* uplo, const char* way, const long long int* n,
             float* a, const long long int* lda, const long long int* ipiv,
             float* work, long long int* info );

void DSYCONV( const char* uplo, const char* way, const long long int* n,
             double* a, const long long int* lda, const long long int* ipiv,
             double* work, long long int* info );
void DSYCONV_( const char* uplo, const char* way, const long long int* n,
             double* a, const long long int* lda, const long long int* ipiv,
             double* work, long long int* info );
void dsyconv( const char* uplo, const char* way, const long long int* n,
             double* a, const long long int* lda, const long long int* ipiv,
             double* work, long long int* info );
void dsyconv_( const char* uplo, const char* way, const long long int* n,
             double* a, const long long int* lda, const long long int* ipiv,
             double* work, long long int* info );

void CSYSWAPR( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void CSYSWAPR_( const char* uplo, const long long int* n, MKL_Complex8* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );
void csyswapr( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void csyswapr_( const char* uplo, const long long int* n, MKL_Complex8* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );

void ZSYSWAPR( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void ZSYSWAPR_( const char* uplo, const long long int* n, MKL_Complex16* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );
void zsyswapr( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void zsyswapr_( const char* uplo, const long long int* n, MKL_Complex16* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );

void SSYSWAPR( const char* uplo, const long long int* n, float* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void SSYSWAPR_( const char* uplo, const long long int* n, float* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );
void ssyswapr( const char* uplo, const long long int* n, float* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void ssyswapr_( const char* uplo, const long long int* n, float* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );

void DSYSWAPR( const char* uplo, const long long int* n, double* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void DSYSWAPR_( const char* uplo, const long long int* n, double* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );
void dsyswapr( const char* uplo, const long long int* n, double* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void dsyswapr_( const char* uplo, const long long int* n, double* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );

void CSYTRI2( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void CSYTRI2_( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
               const long long int* lwork, long long int* info );
void csytri2( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void csytri2_( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
               const long long int* lwork, long long int* info );

void ZSYTRI2( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void ZSYTRI2_( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
               const long long int* lwork, long long int* info );
void zsytri2( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zsytri2_( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
               const long long int* lwork, long long int* info );

void SSYTRI2( const char* uplo, const long long int* n, float* a,
              const long long int* lda, const long long int* ipiv, float* work,
              const long long int* lwork, long long int* info );
void SSYTRI2_( const char* uplo, const long long int* n, float* a,
               const long long int* lda, const long long int* ipiv, float* work,
               const long long int* lwork, long long int* info );
void ssytri2( const char* uplo, const long long int* n, float* a,
              const long long int* lda, const long long int* ipiv, float* work,
              const long long int* lwork, long long int* info );
void ssytri2_( const char* uplo, const long long int* n, float* a,
               const long long int* lda, const long long int* ipiv, float* work,
               const long long int* lwork, long long int* info );

void DSYTRI2( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const long long int* ipiv, double* work,
              const long long int* lwork, long long int* info );
void DSYTRI2_( const char* uplo, const long long int* n, double* a,
               const long long int* lda, const long long int* ipiv, double* work,
               const long long int* lwork, long long int* info );
void dsytri2( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const long long int* ipiv, double* work,
              const long long int* lwork, long long int* info );
void dsytri2_( const char* uplo, const long long int* n, double* a,
               const long long int* lda, const long long int* ipiv, double* work,
               const long long int* lwork, long long int* info );

void CSYTRI2X( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              long long int* nb, long long int* info );
void CSYTRI2X_( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
               long long int* nb, long long int* info );
void csytri2x( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              long long int* nb, long long int* info );
void csytri2x_( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
               long long int* nb, long long int* info );

void ZSYTRI2X( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              long long int* nb, long long int* info );
void ZSYTRI2X_( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
               long long int* nb, long long int* info );
void zsytri2x( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              long long int* nb, long long int* info );
void zsytri2x_( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
               long long int* nb, long long int* info );

void SSYTRI2X( const char* uplo, const long long int* n, float* a,
              const long long int* lda, const long long int* ipiv, float* work,
              long long int* nb, long long int* info );
void SSYTRI2X_( const char* uplo, const long long int* n, float* a,
               const long long int* lda, const long long int* ipiv, float* work,
               long long int* nb, long long int* info );
void ssytri2x( const char* uplo, const long long int* n, float* a,
              const long long int* lda, const long long int* ipiv, float* work,
              long long int* nb, long long int* info );
void ssytri2x_( const char* uplo, const long long int* n, float* a,
               const long long int* lda, const long long int* ipiv, float* work,
               long long int* nb, long long int* info );

void DSYTRI2X( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const long long int* ipiv, double* work,
              long long int* nb, long long int* info );
void DSYTRI2X_( const char* uplo, const long long int* n, double* a,
               const long long int* lda, const long long int* ipiv, double* work,
               long long int* nb, long long int* info );
void dsytri2x( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const long long int* ipiv, double* work,
              long long int* nb, long long int* info );
void dsytri2x_( const char* uplo, const long long int* n, double* a,
               const long long int* lda, const long long int* ipiv, double* work,
               long long int* nb, long long int* info );

void SLARTGP( float* f, float* g, float* cs, float* sn, float* r );
void SLARTGP_( float* f, float* g, float* cs, float* sn, float* r );
void slartgp( float* f, float* g, float* cs, float* sn, float* r );
void slartgp_( float* f, float* g, float* cs, float* sn, float* r );

void DLARTGP( double* f, double* g, double* cs, double* sn, double* r );
void DLARTGP_( double* f, double* g, double* cs, double* sn, double* r );
void dlartgp( double* f, double* g, double* cs, double* sn, double* r );
void dlartgp_( double* f, double* g, double* cs, double* sn, double* r );

void SLARTGS( float* x, float* y, float* sigma, float* cs, float* sn );
void SLARTGS_( float* x, float* y, float* sigma, float* cs, float* sn );
void slartgs( float* x, float* y, float* sigma, float* cs, float* sn );
void slartgs_( float* x, float* y, float* sigma, float* cs, float* sn );

void DLARTGS( double* x, double* y, double* sigma, double* cs, double* sn );
void DLARTGS_( double* x, double* y, double* sigma, double* cs, double* sn );
void dlartgs( double* x, double* y, double* sigma, double* cs, double* sn );
void dlartgs_( double* x, double* y, double* sigma, double* cs, double* sn );

void CSYTRS2( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work, long long int* info );
void CSYTRS2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work, long long int* info );
void csytrs2( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work, long long int* info );
void csytrs2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work, long long int* info );

void ZSYTRS2( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work, long long int* info );
void ZSYTRS2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work, long long int* info );
void zsytrs2( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work, long long int* info );
void zsytrs2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work, long long int* info );

void SSYTRS2( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const long long int* ipiv,
             float* b, const long long int* ldb, float* work, long long int* info );
void SSYTRS2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const long long int* ipiv,
             float* b, const long long int* ldb, float* work, long long int* info );
void ssytrs2( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const long long int* ipiv,
             float* b, const long long int* ldb, float* work, long long int* info );
void ssytrs2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const long long int* ipiv,
             float* b, const long long int* ldb, float* work, long long int* info );

void DSYTRS2( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const long long int* ipiv,
             double* b, const long long int* ldb, double* work, long long int* info );
void DSYTRS2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const long long int* ipiv,
             double* b, const long long int* ldb, double* work, long long int* info );
void dsytrs2( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const long long int* ipiv,
             double* b, const long long int* ldb, double* work, long long int* info );
void dsytrs2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const long long int* ipiv,
             double* b, const long long int* ldb, double* work, long long int* info );

void CHETRS2( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
              long long int* info );
void CHETRS2_( const char* uplo, const long long int* n, const long long int* nrhs,
               const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
               MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
               long long int* info );
void chetrs2( const char* uplo, const long long int* n, const long long int* nrhs,
               const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
               MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
               long long int* info );
void chetrs2_( const char* uplo, const long long int* n, const long long int* nrhs,
               const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
               MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
               long long int* info );

void ZHETRS2( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work, long long int* info );
void ZHETRS2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work, long long int* info );
void zhetrs2( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work, long long int* info );
void zhetrs2_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work, long long int* info );



void CBDSQR( const char* uplo, const long long int* n, const long long int* ncvt,
             const long long int* nru, const long long int* ncc, float* d, float* e,
             MKL_Complex8* vt, const long long int* ldvt, MKL_Complex8* u,
             const long long int* ldu, MKL_Complex8* c, const long long int* ldc,
             float* rwork, long long int* info );
void CBDSQR_( const char* uplo, const long long int* n, const long long int* ncvt,
              const long long int* nru, const long long int* ncc, float* d, float* e,
              MKL_Complex8* vt, const long long int* ldvt, MKL_Complex8* u,
              const long long int* ldu, MKL_Complex8* c, const long long int* ldc,
              float* rwork, long long int* info );
void cbdsqr( const char* uplo, const long long int* n, const long long int* ncvt,
             const long long int* nru, const long long int* ncc, float* d, float* e,
             MKL_Complex8* vt, const long long int* ldvt, MKL_Complex8* u,
             const long long int* ldu, MKL_Complex8* c, const long long int* ldc,
             float* rwork, long long int* info );
void cbdsqr_( const char* uplo, const long long int* n, const long long int* ncvt,
              const long long int* nru, const long long int* ncc, float* d, float* e,
              MKL_Complex8* vt, const long long int* ldvt, MKL_Complex8* u,
              const long long int* ldu, MKL_Complex8* c, const long long int* ldc,
              float* rwork, long long int* info );

void CGBBRD( const char* vect, const long long int* m, const long long int* n,
             const long long int* ncc, const long long int* kl, const long long int* ku,
             MKL_Complex8* ab, const long long int* ldab, float* d, float* e,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* pt,
             const long long int* ldpt, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, float* rwork, long long int* info );
void CGBBRD_( const char* vect, const long long int* m, const long long int* n,
              const long long int* ncc, const long long int* kl, const long long int* ku,
              MKL_Complex8* ab, const long long int* ldab, float* d, float* e,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* pt,
              const long long int* ldpt, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, float* rwork, long long int* info );
void cgbbrd( const char* vect, const long long int* m, const long long int* n,
             const long long int* ncc, const long long int* kl, const long long int* ku,
             MKL_Complex8* ab, const long long int* ldab, float* d, float* e,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* pt,
             const long long int* ldpt, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, float* rwork, long long int* info );
void cgbbrd_( const char* vect, const long long int* m, const long long int* n,
              const long long int* ncc, const long long int* kl, const long long int* ku,
              MKL_Complex8* ab, const long long int* ldab, float* d, float* e,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* pt,
              const long long int* ldpt, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, float* rwork, long long int* info );

void CGBCON( const char* norm, const long long int* n, const long long int* kl,
             const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
             const long long int* ipiv, const float* anorm, float* rcond,
             MKL_Complex8* work, float* rwork, long long int* info );
void CGBCON_( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
              const long long int* ipiv, const float* anorm, float* rcond,
              MKL_Complex8* work, float* rwork, long long int* info );
void cgbcon( const char* norm, const long long int* n, const long long int* kl,
             const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
             const long long int* ipiv, const float* anorm, float* rcond,
             MKL_Complex8* work, float* rwork, long long int* info );
void cgbcon_( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
              const long long int* ipiv, const float* anorm, float* rcond,
              MKL_Complex8* work, float* rwork, long long int* info );

void CGBEQUB( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
              float* r, float* c, float* rowcnd, float* colcnd, float* amax,
              long long int* info );
void CGBEQUB_( const long long int* m, const long long int* n, const long long int* kl,
               const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
               float* r, float* c, float* rowcnd, float* colcnd, float* amax,
               long long int* info );
void cgbequb( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
              float* r, float* c, float* rowcnd, float* colcnd, float* amax,
              long long int* info );
void cgbequb_( const long long int* m, const long long int* n, const long long int* kl,
               const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
               float* r, float* c, float* rowcnd, float* colcnd, float* amax,
               long long int* info );

void CGBEQU( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
             float* r, float* c, float* rowcnd, float* colcnd, float* amax,
             long long int* info );
void CGBEQU_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
              float* r, float* c, float* rowcnd, float* colcnd, float* amax,
              long long int* info );
void cgbequ( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
             float* r, float* c, float* rowcnd, float* colcnd, float* amax,
             long long int* info );
void cgbequ_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
              float* r, float* c, float* rowcnd, float* colcnd, float* amax,
              long long int* info );

void CGBRFS( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const MKL_Complex8* ab,
             const long long int* ldab, const MKL_Complex8* afb,
             const long long int* ldafb, const long long int* ipiv, const MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
             float* ferr, float* berr, MKL_Complex8* work, float* rwork,
             long long int* info );
void CGBRFS_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const MKL_Complex8* ab,
              const long long int* ldab, const MKL_Complex8* afb,
              const long long int* ldafb, const long long int* ipiv, const MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* ferr, float* berr, MKL_Complex8* work, float* rwork,
              long long int* info );
void cgbrfs( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const MKL_Complex8* ab,
             const long long int* ldab, const MKL_Complex8* afb,
             const long long int* ldafb, const long long int* ipiv, const MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
             float* ferr, float* berr, MKL_Complex8* work, float* rwork,
             long long int* info );
void cgbrfs_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const MKL_Complex8* ab,
              const long long int* ldab, const MKL_Complex8* afb,
              const long long int* ldafb, const long long int* ipiv, const MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* ferr, float* berr, MKL_Complex8* work, float* rwork,
              long long int* info );

void CGBRFSX( const char* trans, const char* equed, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              const MKL_Complex8* ab, const long long int* ldab,
              const MKL_Complex8* afb, const long long int* ldafb,
              const long long int* ipiv, const float* r, const float* c,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void CGBRFSX_( const char* trans, const char* equed, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               const MKL_Complex8* ab, const long long int* ldab,
               const MKL_Complex8* afb, const long long int* ldafb,
               const long long int* ipiv, const float* r, const float* c,
               const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );
void cgbrfsx( const char* trans, const char* equed, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              const MKL_Complex8* ab, const long long int* ldab,
              const MKL_Complex8* afb, const long long int* ldafb,
              const long long int* ipiv, const float* r, const float* c,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void cgbrfsx_( const char* trans, const char* equed, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               const MKL_Complex8* ab, const long long int* ldab,
               const MKL_Complex8* afb, const long long int* ldafb,
               const long long int* ipiv, const float* r, const float* c,
               const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );

void CGBSV( const long long int* n, const long long int* kl, const long long int* ku,
            const long long int* nrhs, MKL_Complex8* ab, const long long int* ldab,
            long long int* ipiv, MKL_Complex8* b, const long long int* ldb,
            long long int* info );
void CGBSV_( const long long int* n, const long long int* kl, const long long int* ku,
             const long long int* nrhs, MKL_Complex8* ab, const long long int* ldab,
             long long int* ipiv, MKL_Complex8* b, const long long int* ldb,
             long long int* info );
void cgbsv( const long long int* n, const long long int* kl, const long long int* ku,
            const long long int* nrhs, MKL_Complex8* ab, const long long int* ldab,
            long long int* ipiv, MKL_Complex8* b, const long long int* ldb,
            long long int* info );
void cgbsv_( const long long int* n, const long long int* kl, const long long int* ku,
             const long long int* nrhs, MKL_Complex8* ab, const long long int* ldab,
             long long int* ipiv, MKL_Complex8* b, const long long int* ldb,
             long long int* info );

void CGBSVX( const char* fact, const char* trans, const long long int* n,
             const long long int* kl, const long long int* ku, const long long int* nrhs,
             MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* afb,
             const long long int* ldafb, long long int* ipiv, char* equed, float* r,
             float* c, MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void CGBSVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, float* r,
              float* c, MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              MKL_Complex8* work, float* rwork, long long int* info );
void cgbsvx( const char* fact, const char* trans, const long long int* n,
             const long long int* kl, const long long int* ku, const long long int* nrhs,
             MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* afb,
             const long long int* ldafb, long long int* ipiv, char* equed, float* r,
             float* c, MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void cgbsvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, float* r,
              float* c, MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              MKL_Complex8* work, float* rwork, long long int* info );

void CGBSVXX( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, float* r,
              float* c, MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void CGBSVXX_( const char* fact, const char* trans, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* afb,
               const long long int* ldafb, long long int* ipiv, char* equed, float* r,
               float* c, MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );
void cgbsvxx( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, float* r,
              float* c, MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void cgbsvxx_( const char* fact, const char* trans, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* afb,
               const long long int* ldafb, long long int* ipiv, char* equed, float* r,
               float* c, MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );

void CGBTF2( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
             long long int* ipiv, long long int* info );
void CGBTF2_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );
void cgbtf2( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
             long long int* ipiv, long long int* info );
void cgbtf2_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );

void CGBTRF( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
             long long int* ipiv, long long int* info );
void CGBTRF_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );
void cgbtrf( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
             long long int* ipiv, long long int* info );
void cgbtrf_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );

void CGBTRS( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const MKL_Complex8* ab,
             const long long int* ldab, const long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CGBTRS_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const MKL_Complex8* ab,
              const long long int* ldab, const long long int* ipiv, MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void cgbtrs( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const MKL_Complex8* ab,
             const long long int* ldab, const long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void cgbtrs_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const MKL_Complex8* ab,
              const long long int* ldab, const long long int* ipiv, MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CGEBAK( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const float* scale,
             const long long int* m, MKL_Complex8* v, const long long int* ldv,
             long long int* info );
void CGEBAK_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const float* scale,
              const long long int* m, MKL_Complex8* v, const long long int* ldv,
              long long int* info );
void cgebak( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const float* scale,
             const long long int* m, MKL_Complex8* v, const long long int* ldv,
             long long int* info );
void cgebak_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const float* scale,
              const long long int* m, MKL_Complex8* v, const long long int* ldv,
              long long int* info );

void CGEBAL( const char* job, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ilo, long long int* ihi, float* scale,
             long long int* info );
void CGEBAL_( const char* job, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ilo, long long int* ihi, float* scale,
              long long int* info );
void cgebal( const char* job, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ilo, long long int* ihi, float* scale,
             long long int* info );
void cgebal_( const char* job, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ilo, long long int* ihi, float* scale,
              long long int* info );

void CGEBD2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, float* d, float* e, MKL_Complex8* tauq,
             MKL_Complex8* taup, MKL_Complex8* work, long long int* info );
void CGEBD2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, float* d, float* e, MKL_Complex8* tauq,
              MKL_Complex8* taup, MKL_Complex8* work, long long int* info );
void cgebd2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, float* d, float* e, MKL_Complex8* tauq,
             MKL_Complex8* taup, MKL_Complex8* work, long long int* info );
void cgebd2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, float* d, float* e, MKL_Complex8* tauq,
              MKL_Complex8* taup, MKL_Complex8* work, long long int* info );

void CGEBRD( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, float* d, float* e, MKL_Complex8* tauq,
             MKL_Complex8* taup, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CGEBRD_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, float* d, float* e, MKL_Complex8* tauq,
              MKL_Complex8* taup, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cgebrd( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, float* d, float* e, MKL_Complex8* tauq,
             MKL_Complex8* taup, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cgebrd_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, float* d, float* e, MKL_Complex8* tauq,
              MKL_Complex8* taup, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CGECON( const char* norm, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const float* anorm, float* rcond,
             MKL_Complex8* work, float* rwork, long long int* info );
void CGECON_( const char* norm, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const float* anorm, float* rcond,
              MKL_Complex8* work, float* rwork, long long int* info );
void cgecon( const char* norm, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const float* anorm, float* rcond,
             MKL_Complex8* work, float* rwork, long long int* info );
void cgecon_( const char* norm, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const float* anorm, float* rcond,
              MKL_Complex8* work, float* rwork, long long int* info );

void CGEEQUB( const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* r, float* c, float* rowcnd,
              float* colcnd, float* amax, long long int* info );
void CGEEQUB_( const long long int* m, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* r, float* c, float* rowcnd,
               float* colcnd, float* amax, long long int* info );
void cgeequb( const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* r, float* c, float* rowcnd,
              float* colcnd, float* amax, long long int* info );
void cgeequb_( const long long int* m, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* r, float* c, float* rowcnd,
               float* colcnd, float* amax, long long int* info );

void CGEEQU( const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, float* r, float* c, float* rowcnd,
             float* colcnd, float* amax, long long int* info );
void CGEEQU_( const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* r, float* c, float* rowcnd,
              float* colcnd, float* amax, long long int* info );
void cgeequ( const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, float* r, float* c, float* rowcnd,
             float* colcnd, float* amax, long long int* info );
void cgeequ_( const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* r, float* c, float* rowcnd,
              float* colcnd, float* amax, long long int* info );

void CGEES( const char* jobvs, const char* sort,
            MKL_C_SELECT_FUNCTION_1 select, const long long int* n, MKL_Complex8* a,
            const long long int* lda, long long int* sdim, MKL_Complex8* w,
            MKL_Complex8* vs, const long long int* ldvs, MKL_Complex8* work,
            const long long int* lwork, float* rwork, long long int* bwork,
            long long int* info );
void CGEES_( const char* jobvs, const char* sort,
             MKL_C_SELECT_FUNCTION_1 select, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* sdim, MKL_Complex8* w,
             MKL_Complex8* vs, const long long int* ldvs, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* bwork,
             long long int* info );
void cgees( const char* jobvs, const char* sort,
            MKL_C_SELECT_FUNCTION_1 select, const long long int* n, MKL_Complex8* a,
            const long long int* lda, long long int* sdim, MKL_Complex8* w,
            MKL_Complex8* vs, const long long int* ldvs, MKL_Complex8* work,
            const long long int* lwork, float* rwork, long long int* bwork,
            long long int* info );
void cgees_( const char* jobvs, const char* sort,
             MKL_C_SELECT_FUNCTION_1 select, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* sdim, MKL_Complex8* w,
             MKL_Complex8* vs, const long long int* ldvs, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* bwork,
             long long int* info );

void CGEESX( const char* jobvs, const char* sort,
             MKL_C_SELECT_FUNCTION_1 select, const char* sense,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* sdim, MKL_Complex8* w, MKL_Complex8* vs,
             const long long int* ldvs, float* rconde, float* rcondv,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* bwork, long long int* info );
void CGEESX_( const char* jobvs, const char* sort,
              MKL_C_SELECT_FUNCTION_1 select, const char* sense,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* sdim, MKL_Complex8* w, MKL_Complex8* vs,
              const long long int* ldvs, float* rconde, float* rcondv,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* bwork, long long int* info );
void cgeesx( const char* jobvs, const char* sort,
             MKL_C_SELECT_FUNCTION_1 select, const char* sense,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* sdim, MKL_Complex8* w, MKL_Complex8* vs,
             const long long int* ldvs, float* rconde, float* rcondv,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* bwork, long long int* info );
void cgeesx_( const char* jobvs, const char* sort,
              MKL_C_SELECT_FUNCTION_1 select, const char* sense,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* sdim, MKL_Complex8* w, MKL_Complex8* vs,
              const long long int* ldvs, float* rconde, float* rcondv,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* bwork, long long int* info );

void CGEEV( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* w,
            MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
            const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* info );
void CGEEV_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* w,
             MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
             const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void cgeev( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* w,
            MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
            const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* info );
void cgeev_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* w,
             MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
             const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );

void CGEEVX( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* w, MKL_Complex8* vl,
             const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, float* scale, float* abnrm,
             float* rconde, float* rcondv, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* info );
void CGEEVX_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* w, MKL_Complex8* vl,
              const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, float* scale, float* abnrm,
              float* rconde, float* rcondv, MKL_Complex8* work,
              const long long int* lwork, float* rwork, long long int* info );
void cgeevx( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* w, MKL_Complex8* vl,
             const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, float* scale, float* abnrm,
             float* rconde, float* rcondv, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* info );
void cgeevx_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* w, MKL_Complex8* vl,
              const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, float* scale, float* abnrm,
              float* rconde, float* rcondv, MKL_Complex8* work,
              const long long int* lwork, float* rwork, long long int* info );

void CGEGS( const char* jobvsl, const char* jobvsr, const long long int* n,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
            const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
            MKL_Complex8* vsl, const long long int* ldvsl, MKL_Complex8* vsr,
            const long long int* ldvsr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* info );
void CGEGS_( const char* jobvsl, const char* jobvsr, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* vsl, const long long int* ldvsl, MKL_Complex8* vsr,
             const long long int* ldvsr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void cgegs( const char* jobvsl, const char* jobvsr, const long long int* n,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
            const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
            MKL_Complex8* vsl, const long long int* ldvsl, MKL_Complex8* vsr,
            const long long int* ldvsr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* info );
void cgegs_( const char* jobvsl, const char* jobvsr, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* vsl, const long long int* ldvsl, MKL_Complex8* vsr,
             const long long int* ldvsr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );

void CGEGV( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
            const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
            MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
            const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* info );
void CGEGV_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
             const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void cgegv( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
            const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
            MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
            const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* info );
void cgegv_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
             const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );

void CGEHD2( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void CGEHD2_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );
void cgehd2( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void cgehd2_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );

void CGEHRD( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CGEHRD_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cgehrd( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cgehrd_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CGELQ2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             long long int* info );
void CGELQ2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );
void cgelq2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             long long int* info );
void cgelq2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );

void CGELQF( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CGELQF_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void cgelqf( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void cgelqf_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );

void CGELSD( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, float* s, const float* rcond, long long int* rank,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* iwork, long long int* info );
void CGELSD_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, float* s, const float* rcond, long long int* rank,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* iwork, long long int* info );
void cgelsd( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, float* s, const float* rcond, long long int* rank,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* iwork, long long int* info );
void cgelsd_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, float* s, const float* rcond, long long int* rank,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* iwork, long long int* info );

void CGELS( const char* trans, const long long int* m, const long long int* n,
            const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
            MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
            const long long int* lwork, long long int* info );
void CGELS_( const char* trans, const long long int* m, const long long int* n,
             const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void cgels( const char* trans, const long long int* m, const long long int* n,
            const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
            MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
            const long long int* lwork, long long int* info );
void cgels_( const char* trans, const long long int* m, const long long int* n,
             const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
             const long long int* lwork, long long int* info );

void CGELSS( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, float* s, const float* rcond, long long int* rank,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* info );
void CGELSS_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, float* s, const float* rcond, long long int* rank,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* info );
void cgelss( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, float* s, const float* rcond, long long int* rank,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* info );
void cgelss_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, float* s, const float* rcond, long long int* rank,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* info );

void CGELSX( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, long long int* jpvt, const float* rcond,
             long long int* rank, MKL_Complex8* work, float* rwork, long long int* info );
void CGELSX_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, long long int* jpvt, const float* rcond,
              long long int* rank, MKL_Complex8* work, float* rwork, long long int* info );
void cgelsx( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, long long int* jpvt, const float* rcond,
             long long int* rank, MKL_Complex8* work, float* rwork, long long int* info );
void cgelsx_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, long long int* jpvt, const float* rcond,
              long long int* rank, MKL_Complex8* work, float* rwork, long long int* info );

void CGELSY( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, long long int* jpvt, const float* rcond,
             long long int* rank, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void CGELSY_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, long long int* jpvt, const float* rcond,
              long long int* rank, MKL_Complex8* work, const long long int* lwork,
              float* rwork, long long int* info );
void cgelsy( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, long long int* jpvt, const float* rcond,
             long long int* rank, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void cgelsy_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, long long int* jpvt, const float* rcond,
              long long int* rank, MKL_Complex8* work, const long long int* lwork,
              float* rwork, long long int* info );

void CGEQL2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             long long int* info );
void CGEQL2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );
void cgeql2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             long long int* info );
void cgeql2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );

void CGEQLF( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CGEQLF_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void cgeqlf( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void cgeqlf_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );

void CGEQP3( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* jpvt, MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* info );
void CGEQP3_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* jpvt, MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* info );
void cgeqp3( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* jpvt, MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* info );
void cgeqp3_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* jpvt, MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* info );

void CGEQPF( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* jpvt, MKL_Complex8* tau,
             MKL_Complex8* work, float* rwork, long long int* info );
void CGEQPF_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* jpvt, MKL_Complex8* tau,
              MKL_Complex8* work, float* rwork, long long int* info );
void cgeqpf( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* jpvt, MKL_Complex8* tau,
             MKL_Complex8* work, float* rwork, long long int* info );
void cgeqpf_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* jpvt, MKL_Complex8* tau,
              MKL_Complex8* work, float* rwork, long long int* info );

void CGEQR2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             long long int* info );
void CGEQR2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );
void cgeqr2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             long long int* info );
void cgeqr2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );

void CGEQR2P( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );
void CGEQR2P_( const long long int* m, const long long int* n, MKL_Complex8* a,
               const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
               long long int* info );
void cgeqr2p( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );
void cgeqr2p_( const long long int* m, const long long int* n, MKL_Complex8* a,
               const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
               long long int* info );

void CGEQRF( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CGEQRF_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void cgeqrf( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void cgeqrf_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );

void CGEQRFP( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void CGEQRFP_( const long long int* m, const long long int* n, MKL_Complex8* a,
               const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
               const long long int* lwork, long long int* info );
void cgeqrfp( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void cgeqrfp_( const long long int* m, const long long int* n, MKL_Complex8* a,
               const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
               const long long int* lwork, long long int* info );

void CGERFS( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* af,
             const long long int* ldaf, const long long int* ipiv, const MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
             float* ferr, float* berr, MKL_Complex8* work, float* rwork,
             long long int* info );
void CGERFS_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void cgerfs( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* af,
             const long long int* ldaf, const long long int* ipiv, const MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
             float* ferr, float* berr, MKL_Complex8* work, float* rwork,
             long long int* info );
void cgerfs_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CGERFSX( const char* trans, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const float* r, const float* c, const MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* rcond, float* berr, const long long int* n_err_bnds,
              float* err_bnds_norm, float* err_bnds_comp,
              const long long int* nparams, float* params, MKL_Complex8* work,
              float* rwork, long long int* info );
void CGERFSX_( const char* trans, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
               const MKL_Complex8* af, const long long int* ldaf,
               const long long int* ipiv, const float* r, const float* c,
               const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );
void cgerfsx( const char* trans, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const float* r, const float* c, const MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* rcond, float* berr, const long long int* n_err_bnds,
              float* err_bnds_norm, float* err_bnds_comp,
              const long long int* nparams, float* params, MKL_Complex8* work,
              float* rwork, long long int* info );
void cgerfsx_( const char* trans, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
               const MKL_Complex8* af, const long long int* ldaf,
               const long long int* ipiv, const float* r, const float* c,
               const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );

void CGERQ2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             long long int* info );
void CGERQ2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );
void cgerq2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             long long int* info );
void cgerq2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              long long int* info );

void CGERQF( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CGERQF_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void cgerqf( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void cgerqf_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );

void CGESC2( const long long int* n, const MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* rhs, const long long int* ipiv, const long long int* jpiv,
             float* scale );
void CGESC2_( const long long int* n, const MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* rhs, const long long int* ipiv, const long long int* jpiv,
              float* scale );
void cgesc2( const long long int* n, const MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* rhs, const long long int* ipiv, const long long int* jpiv,
             float* scale );
void cgesc2_( const long long int* n, const MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* rhs, const long long int* ipiv, const long long int* jpiv,
              float* scale );

void CGESDD( const char* jobz, const long long int* m, const long long int* n,
             MKL_Complex8* a, const long long int* lda, float* s, MKL_Complex8* u,
             const long long int* ldu, MKL_Complex8* vt, const long long int* ldvt,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* iwork, long long int* info );
void CGESDD_( const char* jobz, const long long int* m, const long long int* n,
              MKL_Complex8* a, const long long int* lda, float* s, MKL_Complex8* u,
              const long long int* ldu, MKL_Complex8* vt, const long long int* ldvt,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* iwork, long long int* info );
void cgesdd( const char* jobz, const long long int* m, const long long int* n,
             MKL_Complex8* a, const long long int* lda, float* s, MKL_Complex8* u,
             const long long int* ldu, MKL_Complex8* vt, const long long int* ldvt,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* iwork, long long int* info );
void cgesdd_( const char* jobz, const long long int* m, const long long int* n,
              MKL_Complex8* a, const long long int* lda, float* s, MKL_Complex8* u,
              const long long int* ldu, MKL_Complex8* vt, const long long int* ldvt,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* iwork, long long int* info );

void CGESVD( const char* jobu, const char* jobvt, const long long int* m,
             const long long int* n, MKL_Complex8* a, const long long int* lda, float* s,
             MKL_Complex8* u, const long long int* ldu, MKL_Complex8* vt,
             const long long int* ldvt, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void CGESVD_( const char* jobu, const char* jobvt, const long long int* m,
              const long long int* n, MKL_Complex8* a, const long long int* lda, float* s,
              MKL_Complex8* u, const long long int* ldu, MKL_Complex8* vt,
              const long long int* ldvt, MKL_Complex8* work, const long long int* lwork,
              float* rwork, long long int* info );
void cgesvd( const char* jobu, const char* jobvt, const long long int* m,
             const long long int* n, MKL_Complex8* a, const long long int* lda, float* s,
             MKL_Complex8* u, const long long int* ldu, MKL_Complex8* vt,
             const long long int* ldvt, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void cgesvd_( const char* jobu, const char* jobvt, const long long int* m,
              const long long int* n, MKL_Complex8* a, const long long int* lda, float* s,
              MKL_Complex8* u, const long long int* ldu, MKL_Complex8* vt,
              const long long int* ldvt, MKL_Complex8* work, const long long int* lwork,
              float* rwork, long long int* info );

void CGESV( const long long int* n, const long long int* nrhs, MKL_Complex8* a,
            const long long int* lda, long long int* ipiv, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void CGESV_( const long long int* n, const long long int* nrhs, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void cgesv( const long long int* n, const long long int* nrhs, MKL_Complex8* a,
            const long long int* lda, long long int* ipiv, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void cgesv_( const long long int* n, const long long int* nrhs, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );

void CGESVX( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* af, const long long int* ldaf, long long int* ipiv, char* equed,
             float* r, float* c, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void CGESVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              char* equed, float* r, float* c, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* rcond, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void cgesvx( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* af, const long long int* ldaf, long long int* ipiv, char* equed,
             float* r, float* c, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cgesvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              char* equed, float* r, float* c, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* rcond, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CGESVXX( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              char* equed, float* r, float* c, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void CGESVXX_( const char* fact, const char* trans, const long long int* n,
               const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
               char* equed, float* r, float* c, MKL_Complex8* b,
               const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
               float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );
void cgesvxx( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              char* equed, float* r, float* c, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void cgesvxx_( const char* fact, const char* trans, const long long int* n,
               const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
               char* equed, float* r, float* c, MKL_Complex8* b,
               const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
               float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );

void CGETC2( const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* ipiv, long long int* jpiv, long long int* info );
void CGETC2_( const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* ipiv, long long int* jpiv, long long int* info );
void cgetc2( const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* ipiv, long long int* jpiv, long long int* info );
void cgetc2_( const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* ipiv, long long int* jpiv, long long int* info );

void CGETF2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void CGETF2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void cgetf2( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void cgetf2_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void CGETRF( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void CGETRF_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void cgetrf( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void cgetrf_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void MKL_CGETRFNPI( const long long int* m, const long long int* n, const long long int* nfact,
                    MKL_Complex8* a, const long long int* lda, long long int* info );
void MKL_CGETRFNPI_( const long long int* m, const long long int* n, const long long int* nfact,
                     MKL_Complex8* a, const long long int* lda, long long int* info );
void mkl_cgetrfnpi( const long long int* m, const long long int* n, const long long int* nfact,
                    MKL_Complex8* a, const long long int* lda, long long int* info );
void mkl_cgetrfnpi_( const long long int* m, const long long int* n, const long long int* nfact,
                     MKL_Complex8* a, const long long int* lda, long long int* info );

void CGETRI( const long long int* n, MKL_Complex8* a, const long long int* lda,
             const long long int* ipiv, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CGETRI_( const long long int* n, MKL_Complex8* a, const long long int* lda,
              const long long int* ipiv, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cgetri( const long long int* n, MKL_Complex8* a, const long long int* lda,
             const long long int* ipiv, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cgetri_( const long long int* n, MKL_Complex8* a, const long long int* lda,
              const long long int* ipiv, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CGETRS( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void CGETRS_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex8* b, const long long int* ldb, long long int* info );
void cgetrs( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void cgetrs_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex8* b, const long long int* ldb, long long int* info );

void CGGBAK( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const float* lscale,
             const float* rscale, const long long int* m, MKL_Complex8* v,
             const long long int* ldv, long long int* info );
void CGGBAK_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const float* lscale,
              const float* rscale, const long long int* m, MKL_Complex8* v,
              const long long int* ldv, long long int* info );
void cggbak( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const float* lscale,
             const float* rscale, const long long int* m, MKL_Complex8* v,
             const long long int* ldv, long long int* info );
void cggbak_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const float* lscale,
              const float* rscale, const long long int* m, MKL_Complex8* v,
              const long long int* ldv, long long int* info );

void CGGBAL( const char* job, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             long long int* ilo, long long int* ihi, float* lscale, float* rscale,
             float* work, long long int* info );
void CGGBAL_( const char* job, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              long long int* ilo, long long int* ihi, float* lscale, float* rscale,
              float* work, long long int* info );
void cggbal( const char* job, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             long long int* ilo, long long int* ihi, float* lscale, float* rscale,
             float* work, long long int* info );
void cggbal_( const char* job, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              long long int* ilo, long long int* ihi, float* lscale, float* rscale,
              float* work, long long int* info );

void CGGES( const char* jobvsl, const char* jobvsr, const char* sort,
            MKL_C_SELECT_FUNCTION_2 selctg, const long long int* n, MKL_Complex8* a,
            const long long int* lda, MKL_Complex8* b, const long long int* ldb,
            long long int* sdim, MKL_Complex8* alpha, MKL_Complex8* beta,
            MKL_Complex8* vsl, const long long int* ldvsl, MKL_Complex8* vsr,
            const long long int* ldvsr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* bwork, long long int* info );
void CGGES_( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_C_SELECT_FUNCTION_2 selctg, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             long long int* sdim, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* vsl, const long long int* ldvsl, MKL_Complex8* vsr,
             const long long int* ldvsr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* bwork, long long int* info );
void cgges( const char* jobvsl, const char* jobvsr, const char* sort,
            MKL_C_SELECT_FUNCTION_2 selctg, const long long int* n, MKL_Complex8* a,
            const long long int* lda, MKL_Complex8* b, const long long int* ldb,
            long long int* sdim, MKL_Complex8* alpha, MKL_Complex8* beta,
            MKL_Complex8* vsl, const long long int* ldvsl, MKL_Complex8* vsr,
            const long long int* ldvsr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* bwork, long long int* info );
void cgges_( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_C_SELECT_FUNCTION_2 selctg, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             long long int* sdim, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* vsl, const long long int* ldvsl, MKL_Complex8* vsr,
             const long long int* ldvsr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* bwork, long long int* info );

void CGGESX( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_C_SELECT_FUNCTION_2 selctg, const char* sense,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb, long long int* sdim,
             MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* vsl,
             const long long int* ldvsl, MKL_Complex8* vsr, const long long int* ldvsr,
             float* rconde, float* rcondv, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* iwork,
             const long long int* liwork, long long int* bwork, long long int* info );
void CGGESX_( const char* jobvsl, const char* jobvsr, const char* sort,
              MKL_C_SELECT_FUNCTION_2 selctg, const char* sense,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb, long long int* sdim,
              MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* vsl,
              const long long int* ldvsl, MKL_Complex8* vsr, const long long int* ldvsr,
              float* rconde, float* rcondv, MKL_Complex8* work,
              const long long int* lwork, float* rwork, long long int* iwork,
              const long long int* liwork, long long int* bwork, long long int* info );
void cggesx( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_C_SELECT_FUNCTION_2 selctg, const char* sense,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb, long long int* sdim,
             MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* vsl,
             const long long int* ldvsl, MKL_Complex8* vsr, const long long int* ldvsr,
             float* rconde, float* rcondv, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* iwork,
             const long long int* liwork, long long int* bwork, long long int* info );
void cggesx_( const char* jobvsl, const char* jobvsr, const char* sort,
              MKL_C_SELECT_FUNCTION_2 selctg, const char* sense,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb, long long int* sdim,
              MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* vsl,
              const long long int* ldvsl, MKL_Complex8* vsr, const long long int* ldvsr,
              float* rconde, float* rcondv, MKL_Complex8* work,
              const long long int* lwork, float* rwork, long long int* iwork,
              const long long int* liwork, long long int* bwork, long long int* info );

void CGGEV( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
            const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
            MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
            const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* info );
void CGGEV_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
             const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void cggev( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
            const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
            MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
            const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
            float* rwork, long long int* info );
void cggev_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
             const long long int* ldvr, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );

void CGGEVX( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* vl,
             const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, float* lscale, float* rscale,
             float* abnrm, float* bbnrm, float* rconde, float* rcondv,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* iwork, long long int* bwork, long long int* info );
void CGGEVX_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* vl,
              const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, float* lscale, float* rscale,
              float* abnrm, float* bbnrm, float* rconde, float* rcondv,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* iwork, long long int* bwork, long long int* info );
void cggevx( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* vl,
             const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, float* lscale, float* rscale,
             float* abnrm, float* bbnrm, float* rconde, float* rcondv,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* iwork, long long int* bwork, long long int* info );
void cggevx_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* vl,
              const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, float* lscale, float* rscale,
              float* abnrm, float* bbnrm, float* rconde, float* rcondv,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* iwork, long long int* bwork, long long int* info );

void CGGGLM( const long long int* n, const long long int* m, const long long int* p,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* d, MKL_Complex8* x,
             MKL_Complex8* y, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CGGGLM_( const long long int* n, const long long int* m, const long long int* p,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* d, MKL_Complex8* x,
              MKL_Complex8* y, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cggglm( const long long int* n, const long long int* m, const long long int* p,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* d, MKL_Complex8* x,
             MKL_Complex8* y, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cggglm_( const long long int* n, const long long int* m, const long long int* p,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* d, MKL_Complex8* x,
              MKL_Complex8* y, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CGGHRD( const char* compq, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* z,
             const long long int* ldz, long long int* info );
void CGGHRD_( const char* compq, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* z,
              const long long int* ldz, long long int* info );
void cgghrd( const char* compq, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* z,
             const long long int* ldz, long long int* info );
void cgghrd_( const char* compq, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* z,
              const long long int* ldz, long long int* info );

void CGGLSE( const long long int* m, const long long int* n, const long long int* p,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* c, MKL_Complex8* d,
             MKL_Complex8* x, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CGGLSE_( const long long int* m, const long long int* n, const long long int* p,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* c, MKL_Complex8* d,
              MKL_Complex8* x, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cgglse( const long long int* m, const long long int* n, const long long int* p,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* c, MKL_Complex8* d,
             MKL_Complex8* x, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cgglse_( const long long int* m, const long long int* n, const long long int* p,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* c, MKL_Complex8* d,
              MKL_Complex8* x, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CGGQRF( const long long int* n, const long long int* m, const long long int* p,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* taua,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* taub,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CGGQRF_( const long long int* n, const long long int* m, const long long int* p,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* taua,
              MKL_Complex8* b, const long long int* ldb, MKL_Complex8* taub,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cggqrf( const long long int* n, const long long int* m, const long long int* p,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* taua,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* taub,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cggqrf_( const long long int* n, const long long int* m, const long long int* p,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* taua,
              MKL_Complex8* b, const long long int* ldb, MKL_Complex8* taub,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CGGRQF( const long long int* m, const long long int* p, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* taua,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* taub,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CGGRQF_( const long long int* m, const long long int* p, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* taua,
              MKL_Complex8* b, const long long int* ldb, MKL_Complex8* taub,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cggrqf( const long long int* m, const long long int* p, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* taua,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* taub,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cggrqf_( const long long int* m, const long long int* p, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* taua,
              MKL_Complex8* b, const long long int* ldb, MKL_Complex8* taub,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CGGSVD( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* n, const long long int* p, long long int* k,
             long long int* l, MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, float* alpha, float* beta, MKL_Complex8* u,
             const long long int* ldu, MKL_Complex8* v, const long long int* ldv,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* work,
             float* rwork, long long int* iwork, long long int* info );
void CGGSVD_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* n, const long long int* p, long long int* k,
              long long int* l, MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, float* alpha, float* beta, MKL_Complex8* u,
              const long long int* ldu, MKL_Complex8* v, const long long int* ldv,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* work,
              float* rwork, long long int* iwork, long long int* info );
void cggsvd( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* n, const long long int* p, long long int* k,
             long long int* l, MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, float* alpha, float* beta, MKL_Complex8* u,
             const long long int* ldu, MKL_Complex8* v, const long long int* ldv,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* work,
             float* rwork, long long int* iwork, long long int* info );
void cggsvd_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* n, const long long int* p, long long int* k,
              long long int* l, MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, float* alpha, float* beta, MKL_Complex8* u,
              const long long int* ldu, MKL_Complex8* v, const long long int* ldv,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* work,
              float* rwork, long long int* iwork, long long int* info );

void CGGSVP( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, const float* tola, const float* tolb,
             long long int* k, long long int* l, MKL_Complex8* u, const long long int* ldu,
             MKL_Complex8* v, const long long int* ldv, MKL_Complex8* q,
             const long long int* ldq, long long int* iwork, float* rwork,
             MKL_Complex8* tau, MKL_Complex8* work, long long int* info );
void CGGSVP_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, const float* tola, const float* tolb,
              long long int* k, long long int* l, MKL_Complex8* u, const long long int* ldu,
              MKL_Complex8* v, const long long int* ldv, MKL_Complex8* q,
              const long long int* ldq, long long int* iwork, float* rwork,
              MKL_Complex8* tau, MKL_Complex8* work, long long int* info );
void cggsvp( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, const float* tola, const float* tolb,
             long long int* k, long long int* l, MKL_Complex8* u, const long long int* ldu,
             MKL_Complex8* v, const long long int* ldv, MKL_Complex8* q,
             const long long int* ldq, long long int* iwork, float* rwork,
             MKL_Complex8* tau, MKL_Complex8* work, long long int* info );
void cggsvp_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, const float* tola, const float* tolb,
              long long int* k, long long int* l, MKL_Complex8* u, const long long int* ldu,
              MKL_Complex8* v, const long long int* ldv, MKL_Complex8* q,
              const long long int* ldq, long long int* iwork, float* rwork,
              MKL_Complex8* tau, MKL_Complex8* work, long long int* info );

void CGTCON( const char* norm, const long long int* n, const MKL_Complex8* dl,
             const MKL_Complex8* d, const MKL_Complex8* du,
             const MKL_Complex8* du2, const long long int* ipiv, const float* anorm,
             float* rcond, MKL_Complex8* work, long long int* info );
void CGTCON_( const char* norm, const long long int* n, const MKL_Complex8* dl,
              const MKL_Complex8* d, const MKL_Complex8* du,
              const MKL_Complex8* du2, const long long int* ipiv, const float* anorm,
              float* rcond, MKL_Complex8* work, long long int* info );
void cgtcon( const char* norm, const long long int* n, const MKL_Complex8* dl,
             const MKL_Complex8* d, const MKL_Complex8* du,
             const MKL_Complex8* du2, const long long int* ipiv, const float* anorm,
             float* rcond, MKL_Complex8* work, long long int* info );
void cgtcon_( const char* norm, const long long int* n, const MKL_Complex8* dl,
              const MKL_Complex8* d, const MKL_Complex8* du,
              const MKL_Complex8* du2, const long long int* ipiv, const float* anorm,
              float* rcond, MKL_Complex8* work, long long int* info );

void CGTRFS( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* dl, const MKL_Complex8* d,
             const MKL_Complex8* du, const MKL_Complex8* dlf,
             const MKL_Complex8* df, const MKL_Complex8* duf,
             const MKL_Complex8* du2, const long long int* ipiv,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void CGTRFS_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* dl, const MKL_Complex8* d,
              const MKL_Complex8* du, const MKL_Complex8* dlf,
              const MKL_Complex8* df, const MKL_Complex8* duf,
              const MKL_Complex8* du2, const long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void cgtrfs( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* dl, const MKL_Complex8* d,
             const MKL_Complex8* du, const MKL_Complex8* dlf,
             const MKL_Complex8* df, const MKL_Complex8* duf,
             const MKL_Complex8* du2, const long long int* ipiv,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void cgtrfs_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* dl, const MKL_Complex8* d,
              const MKL_Complex8* du, const MKL_Complex8* dlf,
              const MKL_Complex8* df, const MKL_Complex8* duf,
              const MKL_Complex8* du2, const long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CGTSV( const long long int* n, const long long int* nrhs, MKL_Complex8* dl,
            MKL_Complex8* d, MKL_Complex8* du, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void CGTSV_( const long long int* n, const long long int* nrhs, MKL_Complex8* dl,
             MKL_Complex8* d, MKL_Complex8* du, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void cgtsv( const long long int* n, const long long int* nrhs, MKL_Complex8* dl,
            MKL_Complex8* d, MKL_Complex8* du, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void cgtsv_( const long long int* n, const long long int* nrhs, MKL_Complex8* dl,
             MKL_Complex8* d, MKL_Complex8* du, MKL_Complex8* b,
             const long long int* ldb, long long int* info );

void CGTSVX( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* dl,
             const MKL_Complex8* d, const MKL_Complex8* du, MKL_Complex8* dlf,
             MKL_Complex8* df, MKL_Complex8* duf, MKL_Complex8* du2,
             long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void CGTSVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* dl,
              const MKL_Complex8* d, const MKL_Complex8* du, MKL_Complex8* dlf,
              MKL_Complex8* df, MKL_Complex8* duf, MKL_Complex8* du2,
              long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cgtsvx( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* dl,
             const MKL_Complex8* d, const MKL_Complex8* du, MKL_Complex8* dlf,
             MKL_Complex8* df, MKL_Complex8* duf, MKL_Complex8* du2,
             long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cgtsvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* dl,
              const MKL_Complex8* d, const MKL_Complex8* du, MKL_Complex8* dlf,
              MKL_Complex8* df, MKL_Complex8* duf, MKL_Complex8* du2,
              long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );

void CGTTRF( const long long int* n, MKL_Complex8* dl, MKL_Complex8* d,
             MKL_Complex8* du, MKL_Complex8* du2, long long int* ipiv,
             long long int* info );
void CGTTRF_( const long long int* n, MKL_Complex8* dl, MKL_Complex8* d,
              MKL_Complex8* du, MKL_Complex8* du2, long long int* ipiv,
              long long int* info );
void cgttrf( const long long int* n, MKL_Complex8* dl, MKL_Complex8* d,
             MKL_Complex8* du, MKL_Complex8* du2, long long int* ipiv,
             long long int* info );
void cgttrf_( const long long int* n, MKL_Complex8* dl, MKL_Complex8* d,
              MKL_Complex8* du, MKL_Complex8* du2, long long int* ipiv,
              long long int* info );

void CGTTRS( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* dl, const MKL_Complex8* d,
             const MKL_Complex8* du, const MKL_Complex8* du2,
             const long long int* ipiv, MKL_Complex8* b, const long long int* ldb,
             long long int* info );
void CGTTRS_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* dl, const MKL_Complex8* d,
              const MKL_Complex8* du, const MKL_Complex8* du2,
              const long long int* ipiv, MKL_Complex8* b, const long long int* ldb,
              long long int* info );
void cgttrs( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* dl, const MKL_Complex8* d,
             const MKL_Complex8* du, const MKL_Complex8* du2,
             const long long int* ipiv, MKL_Complex8* b, const long long int* ldb,
             long long int* info );
void cgttrs_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* dl, const MKL_Complex8* d,
              const MKL_Complex8* du, const MKL_Complex8* du2,
              const long long int* ipiv, MKL_Complex8* b, const long long int* ldb,
              long long int* info );

void CGTTS2( const long long int* itrans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* dl, const MKL_Complex8* d,
             const MKL_Complex8* du, const MKL_Complex8* du2,
             const long long int* ipiv, MKL_Complex8* b, const long long int* ldb );
void CGTTS2_( const long long int* itrans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* dl, const MKL_Complex8* d,
              const MKL_Complex8* du, const MKL_Complex8* du2,
              const long long int* ipiv, MKL_Complex8* b, const long long int* ldb );
void cgtts2( const long long int* itrans, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* dl, const MKL_Complex8* d,
             const MKL_Complex8* du, const MKL_Complex8* du2,
             const long long int* ipiv, MKL_Complex8* b, const long long int* ldb );
void cgtts2_( const long long int* itrans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* dl, const MKL_Complex8* d,
              const MKL_Complex8* du, const MKL_Complex8* du2,
              const long long int* ipiv, MKL_Complex8* b, const long long int* ldb );

void CHBEVD( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
             float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void CHBEVD_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
              float* w, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void chbevd( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
             float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void chbevd_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
              float* w, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void CHBEV( const char* jobz, const char* uplo, const long long int* n,
            const long long int* kd, MKL_Complex8* ab, const long long int* ldab, float* w,
            MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
            float* rwork, long long int* info );
void CHBEV_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
             float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* info );
void chbev( const char* jobz, const char* uplo, const long long int* n,
            const long long int* kd, MKL_Complex8* ab, const long long int* ldab, float* w,
            MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
            float* rwork, long long int* info );
void chbev_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
             float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* info );

void CHBEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* kd, MKL_Complex8* ab,
             const long long int* ldab, MKL_Complex8* q, const long long int* ldq,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* iwork, long long int* ifail, long long int* info );
void CHBEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* kd, MKL_Complex8* ab,
              const long long int* ldab, MKL_Complex8* q, const long long int* ldq,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              float* rwork, long long int* iwork, long long int* ifail, long long int* info );
void chbevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* kd, MKL_Complex8* ab,
             const long long int* ldab, MKL_Complex8* q, const long long int* ldq,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* iwork, long long int* ifail, long long int* info );
void chbevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* kd, MKL_Complex8* ab,
              const long long int* ldab, MKL_Complex8* q, const long long int* ldq,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              float* rwork, long long int* iwork, long long int* ifail, long long int* info );

void CHBGST( const char* vect, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex8* ab,
             const long long int* ldab, const MKL_Complex8* bb, const long long int* ldbb,
             MKL_Complex8* x, const long long int* ldx, MKL_Complex8* work,
             float* rwork, long long int* info );
void CHBGST_( const char* vect, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, MKL_Complex8* ab,
              const long long int* ldab, const MKL_Complex8* bb, const long long int* ldbb,
              MKL_Complex8* x, const long long int* ldx, MKL_Complex8* work,
              float* rwork, long long int* info );
void chbgst( const char* vect, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex8* ab,
             const long long int* ldab, const MKL_Complex8* bb, const long long int* ldbb,
             MKL_Complex8* x, const long long int* ldx, MKL_Complex8* work,
             float* rwork, long long int* info );
void chbgst_( const char* vect, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, MKL_Complex8* ab,
              const long long int* ldab, const MKL_Complex8* bb, const long long int* ldbb,
              MKL_Complex8* x, const long long int* ldx, MKL_Complex8* work,
              float* rwork, long long int* info );

void CHBGVD( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex8* ab,
             const long long int* ldab, MKL_Complex8* bb, const long long int* ldbb,
             float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void CHBGVD_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, MKL_Complex8* ab,
              const long long int* ldab, MKL_Complex8* bb, const long long int* ldbb,
              float* w, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void chbgvd( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex8* ab,
             const long long int* ldab, MKL_Complex8* bb, const long long int* ldbb,
             float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void chbgvd_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, MKL_Complex8* ab,
              const long long int* ldab, MKL_Complex8* bb, const long long int* ldbb,
              float* w, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void CHBGV( const char* jobz, const char* uplo, const long long int* n,
            const long long int* ka, const long long int* kb, MKL_Complex8* ab,
            const long long int* ldab, MKL_Complex8* bb, const long long int* ldbb,
            float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
            float* rwork, long long int* info );
void CHBGV_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex8* ab,
             const long long int* ldab, MKL_Complex8* bb, const long long int* ldbb,
             float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* info );
void chbgv( const char* jobz, const char* uplo, const long long int* n,
            const long long int* ka, const long long int* kb, MKL_Complex8* ab,
            const long long int* ldab, MKL_Complex8* bb, const long long int* ldbb,
            float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
            float* rwork, long long int* info );
void chbgv_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex8* ab,
             const long long int* ldab, MKL_Complex8* bb, const long long int* ldbb,
             float* w, MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* info );

void CHBGVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* ka, const long long int* kb,
             MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* bb,
             const long long int* ldbb, MKL_Complex8* q, const long long int* ldq,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* iwork, long long int* ifail, long long int* info );
void CHBGVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* ka, const long long int* kb,
              MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* bb,
              const long long int* ldbb, MKL_Complex8* q, const long long int* ldq,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              float* rwork, long long int* iwork, long long int* ifail, long long int* info );
void chbgvx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* ka, const long long int* kb,
             MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* bb,
             const long long int* ldbb, MKL_Complex8* q, const long long int* ldq,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* iwork, long long int* ifail, long long int* info );
void chbgvx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* ka, const long long int* kb,
              MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* bb,
              const long long int* ldbb, MKL_Complex8* q, const long long int* ldq,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              float* rwork, long long int* iwork, long long int* ifail, long long int* info );

void CHBTRD( const char* vect, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
             float* d, float* e, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* work, long long int* info );
void CHBTRD_( const char* vect, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
              float* d, float* e, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* work, long long int* info );
void chbtrd( const char* vect, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
             float* d, float* e, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* work, long long int* info );
void chbtrd_( const char* vect, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex8* ab, const long long int* ldab,
              float* d, float* e, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* work, long long int* info );

void CHECON( const char* uplo, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const long long int* ipiv, const float* anorm,
             float* rcond, MKL_Complex8* work, long long int* info );
void CHECON_( const char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, const float* anorm,
              float* rcond, MKL_Complex8* work, long long int* info );
void checon( const char* uplo, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const long long int* ipiv, const float* anorm,
             float* rcond, MKL_Complex8* work, long long int* info );
void checon_( const char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, const float* anorm,
              float* rcond, MKL_Complex8* work, long long int* info );

void CHEEQUB( char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* s, float* scond, float* amax,
              MKL_Complex8* work, long long int* info );
void CHEEQUB_( char* uplo, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* s, float* scond, float* amax,
               MKL_Complex8* work, long long int* info );
void cheequb( char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* s, float* scond, float* amax,
              MKL_Complex8* work, long long int* info );
void cheequb_( char* uplo, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* s, float* scond, float* amax,
               MKL_Complex8* work, long long int* info );

void CHEEVD( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex8* a, const long long int* lda, float* w, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void CHEEVD_( const char* jobz, const char* uplo, const long long int* n,
              MKL_Complex8* a, const long long int* lda, float* w,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void cheevd( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex8* a, const long long int* lda, float* w, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void cheevd_( const char* jobz, const char* uplo, const long long int* n,
              MKL_Complex8* a, const long long int* lda, float* w,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void CHEEV( const char* jobz, const char* uplo, const long long int* n,
            MKL_Complex8* a, const long long int* lda, float* w, MKL_Complex8* work,
            const long long int* lwork, float* rwork, long long int* info );
void CHEEV_( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex8* a, const long long int* lda, float* w, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* info );
void cheev( const char* jobz, const char* uplo, const long long int* n,
            MKL_Complex8* a, const long long int* lda, float* w, MKL_Complex8* work,
            const long long int* lwork, float* rwork, long long int* info );
void cheev_( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex8* a, const long long int* lda, float* w, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* info );

void CHEEVR( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, long long int* isuppz,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void CHEEVR_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, long long int* isuppz,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void cheevr( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, long long int* isuppz,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void cheevr_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, long long int* isuppz,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void CHEEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void CHEEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              const long long int* lwork, float* rwork, long long int* iwork,
              long long int* ifail, long long int* info );
void cheevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void cheevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              const long long int* lwork, float* rwork, long long int* iwork,
              long long int* ifail, long long int* info );

void CHEGS2( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CHEGS2_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void chegs2( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void chegs2_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CHEGST( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CHEGST_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void chegst( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void chegst_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CHEGVD( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb, float* w, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void CHEGVD_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb, float* w,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void chegvd( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb, float* w, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void chegvd_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* b, const long long int* ldb, float* w,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void CHEGV( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, MKL_Complex8* a, const long long int* lda,
            MKL_Complex8* b, const long long int* ldb, float* w, MKL_Complex8* work,
            const long long int* lwork, float* rwork, long long int* info );
void CHEGV_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb, float* w, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* info );
void chegv( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, MKL_Complex8* a, const long long int* lda,
            MKL_Complex8* b, const long long int* ldb, float* w, MKL_Complex8* work,
            const long long int* lwork, float* rwork, long long int* info );
void chegv_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* b, const long long int* ldb, float* w, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* info );

void CHEGVX( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void CHEGVX_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              const long long int* lwork, float* rwork, long long int* iwork,
              long long int* ifail, long long int* info );
void chegvx( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void chegvx_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              const long long int* lwork, float* rwork, long long int* iwork,
              long long int* ifail, long long int* info );

void CHERFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* af,
             const long long int* ldaf, const long long int* ipiv, const MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
             float* ferr, float* berr, MKL_Complex8* work, float* rwork,
             long long int* info );
void CHERFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void cherfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* af,
             const long long int* ldaf, const long long int* ipiv, const MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
             float* ferr, float* berr, MKL_Complex8* work, float* rwork,
             long long int* info );
void cherfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CHERFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const float* s, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void CHERFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
               const MKL_Complex8* af, const long long int* ldaf,
               const long long int* ipiv, const float* s, const MKL_Complex8* b,
               const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
               float* rcond, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, MKL_Complex8* work,
               float* rwork, long long int* info );
void cherfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const float* s, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void cherfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
               const MKL_Complex8* af, const long long int* ldaf,
               const long long int* ipiv, const float* s, const MKL_Complex8* b,
               const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
               float* rcond, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, MKL_Complex8* work,
               float* rwork, long long int* info );

void CHESV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* a, const long long int* lda, long long int* ipiv,
            MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
            const long long int* lwork, long long int* info );
void CHESV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void chesv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* a, const long long int* lda, long long int* ipiv,
            MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
            const long long int* lwork, long long int* info );
void chesv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
             const long long int* lwork, long long int* info );

void CHESVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* info );
void CHESVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* info );
void chesvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* info );
void chesvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* info );

void CHESVXX( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* rpvgrw,
              float* berr, const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void CHESVXX_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
               char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
               MKL_Complex8* x, const long long int* ldx, float* rcond,
               float* rpvgrw, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, MKL_Complex8* work,
               float* rwork, long long int* info );
void chesvxx( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* rpvgrw,
              float* berr, const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void chesvxx_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
               char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
               MKL_Complex8* x, const long long int* ldx, float* rcond,
               float* rpvgrw, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, MKL_Complex8* work,
               float* rwork, long long int* info );

void CHETD2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, float* d, float* e, MKL_Complex8* tau,
             long long int* info );
void CHETD2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, float* d, float* e, MKL_Complex8* tau,
              long long int* info );
void chetd2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, float* d, float* e, MKL_Complex8* tau,
             long long int* info );
void chetd2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, float* d, float* e, MKL_Complex8* tau,
              long long int* info );

void CHETF2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void CHETF2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void chetf2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void chetf2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void CHETRD( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, float* d, float* e, MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CHETRD_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, float* d, float* e, MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void chetrd( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, float* d, float* e, MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void chetrd_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, float* d, float* e, MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CHETRF( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CHETRF_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void chetrf( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void chetrf_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, MKL_Complex8* work,
              const long long int* lwork, long long int* info );

void CHETRI( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
             long long int* info );
void CHETRI_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              long long int* info );
void chetri( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
             long long int* info );
void chetri_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              long long int* info );

void CHETRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void CHETRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex8* b, const long long int* ldb, long long int* info );
void chetrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void chetrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex8* b, const long long int* ldb, long long int* info );

void CHFRK( const char* transr, const char* uplo, const char* trans,
            const long long int* n, const long long int* k, const float* alpha,
            const MKL_Complex8* a, const long long int* lda, const float* beta,
            MKL_Complex8* c );
void CHFRK_( const char* transr, const char* uplo, const char* trans,
             const long long int* n, const long long int* k, const float* alpha,
             const MKL_Complex8* a, const long long int* lda, const float* beta,
             MKL_Complex8* c );
void chfrk( const char* transr, const char* uplo, const char* trans,
            const long long int* n, const long long int* k, const float* alpha,
            const MKL_Complex8* a, const long long int* lda, const float* beta,
            MKL_Complex8* c );
void chfrk_( const char* transr, const char* uplo, const char* trans,
             const long long int* n, const long long int* k, const float* alpha,
             const MKL_Complex8* a, const long long int* lda, const float* beta,
             MKL_Complex8* c );

void CHGEQZ( const char* job, const char* compq, const char* compz,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex8* h, const long long int* ldh, MKL_Complex8* t,
             const long long int* ldt, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* z,
             const long long int* ldz, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void CHGEQZ_( const char* job, const char* compq, const char* compz,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex8* h, const long long int* ldh, MKL_Complex8* t,
              const long long int* ldt, MKL_Complex8* alpha, MKL_Complex8* beta,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* z,
              const long long int* ldz, MKL_Complex8* work, const long long int* lwork,
              float* rwork, long long int* info );
void chgeqz( const char* job, const char* compq, const char* compz,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex8* h, const long long int* ldh, MKL_Complex8* t,
             const long long int* ldt, MKL_Complex8* alpha, MKL_Complex8* beta,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* z,
             const long long int* ldz, MKL_Complex8* work, const long long int* lwork,
             float* rwork, long long int* info );
void chgeqz_( const char* job, const char* compq, const char* compz,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex8* h, const long long int* ldh, MKL_Complex8* t,
              const long long int* ldt, MKL_Complex8* alpha, MKL_Complex8* beta,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* z,
              const long long int* ldz, MKL_Complex8* work, const long long int* lwork,
              float* rwork, long long int* info );

char CHLA_TRANSTYPE( const long long int* trans );
char CHLA_TRANSTYPE_( const long long int* trans );
char chla_transtype( const long long int* trans );
char chla_transtype_( const long long int* trans );

void CHPCON( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             const long long int* ipiv, const float* anorm, float* rcond,
             MKL_Complex8* work, long long int* info );
void CHPCON_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              const long long int* ipiv, const float* anorm, float* rcond,
              MKL_Complex8* work, long long int* info );
void chpcon( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             const long long int* ipiv, const float* anorm, float* rcond,
             MKL_Complex8* work, long long int* info );
void chpcon_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              const long long int* ipiv, const float* anorm, float* rcond,
              MKL_Complex8* work, long long int* info );

void CHPEVD( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex8* ap, float* w, MKL_Complex8* z, const long long int* ldz,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void CHPEVD_( const char* jobz, const char* uplo, const long long int* n,
              MKL_Complex8* ap, float* w, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void chpevd( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex8* ap, float* w, MKL_Complex8* z, const long long int* ldz,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void chpevd_( const char* jobz, const char* uplo, const long long int* n,
              MKL_Complex8* ap, float* w, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void CHPEV( const char* jobz, const char* uplo, const long long int* n,
            MKL_Complex8* ap, float* w, MKL_Complex8* z, const long long int* ldz,
            MKL_Complex8* work, float* rwork, long long int* info );
void CHPEV_( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex8* ap, float* w, MKL_Complex8* z, const long long int* ldz,
             MKL_Complex8* work, float* rwork, long long int* info );
void chpev( const char* jobz, const char* uplo, const long long int* n,
            MKL_Complex8* ap, float* w, MKL_Complex8* z, const long long int* ldz,
            MKL_Complex8* work, float* rwork, long long int* info );
void chpev_( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex8* ap, float* w, MKL_Complex8* z, const long long int* ldz,
             MKL_Complex8* work, float* rwork, long long int* info );

void CHPEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex8* ap, const float* vl,
             const float* vu, const long long int* il, const long long int* iu,
             const float* abstol, long long int* m, float* w, MKL_Complex8* z,
             const long long int* ldz, MKL_Complex8* work, float* rwork,
             long long int* iwork, long long int* ifail, long long int* info );
void CHPEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex8* ap, const float* vl,
              const float* vu, const long long int* il, const long long int* iu,
              const float* abstol, long long int* m, float* w, MKL_Complex8* z,
              const long long int* ldz, MKL_Complex8* work, float* rwork,
              long long int* iwork, long long int* ifail, long long int* info );
void chpevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex8* ap, const float* vl,
             const float* vu, const long long int* il, const long long int* iu,
             const float* abstol, long long int* m, float* w, MKL_Complex8* z,
             const long long int* ldz, MKL_Complex8* work, float* rwork,
             long long int* iwork, long long int* ifail, long long int* info );
void chpevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex8* ap, const float* vl,
              const float* vu, const long long int* il, const long long int* iu,
              const float* abstol, long long int* m, float* w, MKL_Complex8* z,
              const long long int* ldz, MKL_Complex8* work, float* rwork,
              long long int* iwork, long long int* ifail, long long int* info );

void CHPGST( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex8* ap, const MKL_Complex8* bp, long long int* info );
void CHPGST_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex8* ap, const MKL_Complex8* bp, long long int* info );
void chpgst( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex8* ap, const MKL_Complex8* bp, long long int* info );
void chpgst_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex8* ap, const MKL_Complex8* bp, long long int* info );

void CHPGVD( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex8* ap, MKL_Complex8* bp, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void CHPGVD_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, MKL_Complex8* ap, MKL_Complex8* bp, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              const long long int* lwork, float* rwork, const long long int* lrwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void chpgvd( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex8* ap, MKL_Complex8* bp, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void chpgvd_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, MKL_Complex8* ap, MKL_Complex8* bp, float* w,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              const long long int* lwork, float* rwork, const long long int* lrwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void CHPGV( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, MKL_Complex8* ap, MKL_Complex8* bp, float* w,
            MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
            float* rwork, long long int* info );
void CHPGV_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex8* ap, MKL_Complex8* bp, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* info );
void chpgv( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, MKL_Complex8* ap, MKL_Complex8* bp, float* w,
            MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
            float* rwork, long long int* info );
void chpgv_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex8* ap, MKL_Complex8* bp, float* w,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             float* rwork, long long int* info );

void CHPGVX( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, MKL_Complex8* ap,
             MKL_Complex8* bp, const float* vl, const float* vu,
             const long long int* il, const long long int* iu, const float* abstol,
             long long int* m, float* w, MKL_Complex8* z, const long long int* ldz,
             MKL_Complex8* work, float* rwork, long long int* iwork, long long int* ifail,
             long long int* info );
void CHPGVX_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, MKL_Complex8* ap,
              MKL_Complex8* bp, const float* vl, const float* vu,
              const long long int* il, const long long int* iu, const float* abstol,
              long long int* m, float* w, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, float* rwork, long long int* iwork, long long int* ifail,
              long long int* info );
void chpgvx( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, MKL_Complex8* ap,
             MKL_Complex8* bp, const float* vl, const float* vu,
             const long long int* il, const long long int* iu, const float* abstol,
             long long int* m, float* w, MKL_Complex8* z, const long long int* ldz,
             MKL_Complex8* work, float* rwork, long long int* iwork, long long int* ifail,
             long long int* info );
void chpgvx_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, MKL_Complex8* ap,
              MKL_Complex8* bp, const float* vl, const float* vu,
              const long long int* il, const long long int* iu, const float* abstol,
              long long int* m, float* w, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, float* rwork, long long int* iwork, long long int* ifail,
              long long int* info );

void CHPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const MKL_Complex8* afp,
             const long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void CHPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const MKL_Complex8* afp,
              const long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
              MKL_Complex8* work, float* rwork, long long int* info );
void chprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const MKL_Complex8* afp,
             const long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void chprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const MKL_Complex8* afp,
              const long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
              MKL_Complex8* work, float* rwork, long long int* info );

void CHPSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* ap, long long int* ipiv, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void CHPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* ap, long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void chpsv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* ap, long long int* ipiv, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void chpsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* ap, long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );

void CHPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* ap, MKL_Complex8* afp,
             long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void CHPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* ap, MKL_Complex8* afp,
              long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void chpsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* ap, MKL_Complex8* afp,
             long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void chpsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* ap, MKL_Complex8* afp,
              long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );

void CHPTRD( const char* uplo, const long long int* n, MKL_Complex8* ap, float* d,
             float* e, MKL_Complex8* tau, long long int* info );
void CHPTRD_( const char* uplo, const long long int* n, MKL_Complex8* ap, float* d,
              float* e, MKL_Complex8* tau, long long int* info );
void chptrd( const char* uplo, const long long int* n, MKL_Complex8* ap, float* d,
             float* e, MKL_Complex8* tau, long long int* info );
void chptrd_( const char* uplo, const long long int* n, MKL_Complex8* ap, float* d,
              float* e, MKL_Complex8* tau, long long int* info );

void CHPTRF( const char* uplo, const long long int* n, MKL_Complex8* ap,
             long long int* ipiv, long long int* info );
void CHPTRF_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              long long int* ipiv, long long int* info );
void chptrf( const char* uplo, const long long int* n, MKL_Complex8* ap,
             long long int* ipiv, long long int* info );
void chptrf_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              long long int* ipiv, long long int* info );

void CHPTRI( const char* uplo, const long long int* n, MKL_Complex8* ap,
             const long long int* ipiv, MKL_Complex8* work, long long int* info );
void CHPTRI_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              const long long int* ipiv, MKL_Complex8* work, long long int* info );
void chptri( const char* uplo, const long long int* n, MKL_Complex8* ap,
             const long long int* ipiv, MKL_Complex8* work, long long int* info );
void chptri_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              const long long int* ipiv, MKL_Complex8* work, long long int* info );

void CHPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CHPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const long long int* ipiv, MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void chptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void chptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const long long int* ipiv, MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CHSEIN( const char* side, const char* eigsrc, const char* initv,
             const long long int* select, const long long int* n, const MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, MKL_Complex8* vl,
             const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, MKL_Complex8* work, float* rwork,
             long long int* ifaill, long long int* ifailr, long long int* info );
void CHSEIN_( const char* side, const char* eigsrc, const char* initv,
              const long long int* select, const long long int* n, const MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, MKL_Complex8* vl,
              const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, MKL_Complex8* work, float* rwork,
              long long int* ifaill, long long int* ifailr, long long int* info );
void chsein( const char* side, const char* eigsrc, const char* initv,
             const long long int* select, const long long int* n, const MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, MKL_Complex8* vl,
             const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, MKL_Complex8* work, float* rwork,
             long long int* ifaill, long long int* ifailr, long long int* info );
void chsein_( const char* side, const char* eigsrc, const char* initv,
              const long long int* select, const long long int* n, const MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, MKL_Complex8* vl,
              const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, MKL_Complex8* work, float* rwork,
              long long int* ifaill, long long int* ifailr, long long int* info );

void CHSEQR( const char* job, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, MKL_Complex8* z,
             const long long int* ldz, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CHSEQR_( const char* job, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, MKL_Complex8* z,
              const long long int* ldz, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void chseqr( const char* job, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, MKL_Complex8* z,
             const long long int* ldz, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void chseqr_( const char* job, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, MKL_Complex8* z,
              const long long int* ldz, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CLABRD( const long long int* m, const long long int* n, const long long int* nb,
             MKL_Complex8* a, const long long int* lda, float* d, float* e,
             MKL_Complex8* tauq, MKL_Complex8* taup, MKL_Complex8* x,
             const long long int* ldx, MKL_Complex8* y, const long long int* ldy );
void CLABRD_( const long long int* m, const long long int* n, const long long int* nb,
              MKL_Complex8* a, const long long int* lda, float* d, float* e,
              MKL_Complex8* tauq, MKL_Complex8* taup, MKL_Complex8* x,
              const long long int* ldx, MKL_Complex8* y, const long long int* ldy );
void clabrd( const long long int* m, const long long int* n, const long long int* nb,
             MKL_Complex8* a, const long long int* lda, float* d, float* e,
             MKL_Complex8* tauq, MKL_Complex8* taup, MKL_Complex8* x,
             const long long int* ldx, MKL_Complex8* y, const long long int* ldy );
void clabrd_( const long long int* m, const long long int* n, const long long int* nb,
              MKL_Complex8* a, const long long int* lda, float* d, float* e,
              MKL_Complex8* tauq, MKL_Complex8* taup, MKL_Complex8* x,
              const long long int* ldx, MKL_Complex8* y, const long long int* ldy );

void CLACGV( const long long int* n, MKL_Complex8* x, const long long int* incx );
void CLACGV_( const long long int* n, MKL_Complex8* x, const long long int* incx );
void clacgv( const long long int* n, MKL_Complex8* x, const long long int* incx );
void clacgv_( const long long int* n, MKL_Complex8* x, const long long int* incx );

void CLACN2( const long long int* n, MKL_Complex8* v, MKL_Complex8* x, float* est,
             long long int* kase, long long int* isave );
void CLACN2_( const long long int* n, MKL_Complex8* v, MKL_Complex8* x, float* est,
              long long int* kase, long long int* isave );
void clacn2( const long long int* n, MKL_Complex8* v, MKL_Complex8* x, float* est,
             long long int* kase, long long int* isave );
void clacn2_( const long long int* n, MKL_Complex8* v, MKL_Complex8* x, float* est,
              long long int* kase, long long int* isave );

void CLACON( const long long int* n, MKL_Complex8* v, MKL_Complex8* x, float* est,
             long long int* kase );
void CLACON_( const long long int* n, MKL_Complex8* v, MKL_Complex8* x, float* est,
              long long int* kase );
void clacon( const long long int* n, MKL_Complex8* v, MKL_Complex8* x, float* est,
             long long int* kase );
void clacon_( const long long int* n, MKL_Complex8* v, MKL_Complex8* x, float* est,
              long long int* kase );

void CLACP2( const char* uplo, const long long int* m, const long long int* n,
             const float* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb );
void CLACP2_( const char* uplo, const long long int* m, const long long int* n,
              const float* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb );
void clacp2( const char* uplo, const long long int* m, const long long int* n,
             const float* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb );
void clacp2_( const char* uplo, const long long int* m, const long long int* n,
              const float* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb );

void CLACPY( const char* uplo, const long long int* m, const long long int* n,
             const MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb );
void CLACPY_( const char* uplo, const long long int* m, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb );
void clacpy( const char* uplo, const long long int* m, const long long int* n,
             const MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb );
void clacpy_( const char* uplo, const long long int* m, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb );

void CLACRM( const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const float* b, const long long int* ldb,
             const MKL_Complex8* c, const long long int* ldc, float* rwork );
void CLACRM_( const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const float* b, const long long int* ldb,
              const MKL_Complex8* c, const long long int* ldc, float* rwork );
void clacrm( const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const float* b, const long long int* ldb,
             const MKL_Complex8* c, const long long int* ldc, float* rwork );
void clacrm_( const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const float* b, const long long int* ldb,
              const MKL_Complex8* c, const long long int* ldc, float* rwork );

void CLACRT( const long long int* n, MKL_Complex8* cx, const long long int* incx,
             MKL_Complex8* cy, const long long int* incy, const MKL_Complex8* c,
             const MKL_Complex8* s );
void CLACRT_( const long long int* n, MKL_Complex8* cx, const long long int* incx,
              MKL_Complex8* cy, const long long int* incy, const MKL_Complex8* c,
              const MKL_Complex8* s );
void clacrt( const long long int* n, MKL_Complex8* cx, const long long int* incx,
             MKL_Complex8* cy, const long long int* incy, const MKL_Complex8* c,
             const MKL_Complex8* s );
void clacrt_( const long long int* n, MKL_Complex8* cx, const long long int* incx,
              MKL_Complex8* cy, const long long int* incy, const MKL_Complex8* c,
              const MKL_Complex8* s );

void CLADIV( MKL_Complex8* ret_value, const MKL_Complex8* x,
             const MKL_Complex8* y );
void CLADIV_( MKL_Complex8* ret_value, const MKL_Complex8* x,
              const MKL_Complex8* y );
void cladiv( MKL_Complex8* ret_value, const MKL_Complex8* x,
             const MKL_Complex8* y );
void cladiv_( MKL_Complex8* ret_value, const MKL_Complex8* x,
              const MKL_Complex8* y );

void CLAED0( const long long int* qsiz, const long long int* n, float* d, float* e,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* qstore,
             const long long int* ldqs, float* rwork, long long int* iwork,
             long long int* info );
void CLAED0_( const long long int* qsiz, const long long int* n, float* d, float* e,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* qstore,
              const long long int* ldqs, float* rwork, long long int* iwork,
              long long int* info );
void claed0( const long long int* qsiz, const long long int* n, float* d, float* e,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* qstore,
             const long long int* ldqs, float* rwork, long long int* iwork,
             long long int* info );
void claed0_( const long long int* qsiz, const long long int* n, float* d, float* e,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* qstore,
              const long long int* ldqs, float* rwork, long long int* iwork,
              long long int* info );

void CLAED7( const long long int* n, const long long int* cutpnt, const long long int* qsiz,
             const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, float* d, MKL_Complex8* q,
             const long long int* ldq, const float* rho, long long int* indxq,
             float* qstore, long long int* qptr, const long long int* prmptr,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const float* givnum, MKL_Complex8* work, float* rwork,
             long long int* iwork, long long int* info );
void CLAED7_( const long long int* n, const long long int* cutpnt, const long long int* qsiz,
              const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, float* d, MKL_Complex8* q,
              const long long int* ldq, const float* rho, long long int* indxq,
              float* qstore, long long int* qptr, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const float* givnum, MKL_Complex8* work,
              float* rwork, long long int* iwork, long long int* info );
void claed7( const long long int* n, const long long int* cutpnt, const long long int* qsiz,
             const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, float* d, MKL_Complex8* q,
             const long long int* ldq, const float* rho, long long int* indxq,
             float* qstore, long long int* qptr, const long long int* prmptr,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const float* givnum, MKL_Complex8* work, float* rwork,
             long long int* iwork, long long int* info );
void claed7_( const long long int* n, const long long int* cutpnt, const long long int* qsiz,
              const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, float* d, MKL_Complex8* q,
              const long long int* ldq, const float* rho, long long int* indxq,
              float* qstore, long long int* qptr, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const float* givnum, MKL_Complex8* work,
              float* rwork, long long int* iwork, long long int* info );

void CLAED8( long long int* k, const long long int* n, const long long int* qsiz,
             MKL_Complex8* q, const long long int* ldq, float* d, float* rho,
             const long long int* cutpnt, const float* z, float* dlamda,
             MKL_Complex8* q2, const long long int* ldq2, float* w, long long int* indxp,
             long long int* indx, const long long int* indxq, long long int* perm,
             long long int* givptr, long long int* givcol, float* givnum, long long int* info );
void CLAED8_( long long int* k, const long long int* n, const long long int* qsiz,
              MKL_Complex8* q, const long long int* ldq, float* d, float* rho,
              const long long int* cutpnt, const float* z, float* dlamda,
              MKL_Complex8* q2, const long long int* ldq2, float* w, long long int* indxp,
              long long int* indx, const long long int* indxq, long long int* perm,
              long long int* givptr, long long int* givcol, float* givnum, long long int* info );
void claed8( long long int* k, const long long int* n, const long long int* qsiz,
             MKL_Complex8* q, const long long int* ldq, float* d, float* rho,
             const long long int* cutpnt, const float* z, float* dlamda,
             MKL_Complex8* q2, const long long int* ldq2, float* w, long long int* indxp,
             long long int* indx, const long long int* indxq, long long int* perm,
             long long int* givptr, long long int* givcol, float* givnum, long long int* info );
void claed8_( long long int* k, const long long int* n, const long long int* qsiz,
              MKL_Complex8* q, const long long int* ldq, float* d, float* rho,
              const long long int* cutpnt, const float* z, float* dlamda,
              MKL_Complex8* q2, const long long int* ldq2, float* w, long long int* indxp,
              long long int* indx, const long long int* indxq, long long int* perm,
              long long int* givptr, long long int* givcol, float* givnum, long long int* info );

void CLAEIN( const long long int* rightv, const long long int* noinit, const long long int* n,
             const MKL_Complex8* h, const long long int* ldh, const MKL_Complex8* w,
             MKL_Complex8* v, MKL_Complex8* b, const long long int* ldb,
             float* rwork, const float* eps3, const float* smlnum,
             long long int* info );
void CLAEIN_( const long long int* rightv, const long long int* noinit, const long long int* n,
              const MKL_Complex8* h, const long long int* ldh, const MKL_Complex8* w,
              MKL_Complex8* v, MKL_Complex8* b, const long long int* ldb,
              float* rwork, const float* eps3, const float* smlnum,
              long long int* info );
void claein( const long long int* rightv, const long long int* noinit, const long long int* n,
             const MKL_Complex8* h, const long long int* ldh, const MKL_Complex8* w,
             MKL_Complex8* v, MKL_Complex8* b, const long long int* ldb,
             float* rwork, const float* eps3, const float* smlnum,
             long long int* info );
void claein_( const long long int* rightv, const long long int* noinit, const long long int* n,
              const MKL_Complex8* h, const long long int* ldh, const MKL_Complex8* w,
              MKL_Complex8* v, MKL_Complex8* b, const long long int* ldb,
              float* rwork, const float* eps3, const float* smlnum,
              long long int* info );

void CLAESY( const MKL_Complex8* a, const MKL_Complex8* b,
             const MKL_Complex8* c, MKL_Complex8* rt1, MKL_Complex8* rt2,
             MKL_Complex8* evscal, MKL_Complex8* cs1, MKL_Complex8* sn1 );
void CLAESY_( const MKL_Complex8* a, const MKL_Complex8* b,
              const MKL_Complex8* c, MKL_Complex8* rt1, MKL_Complex8* rt2,
              MKL_Complex8* evscal, MKL_Complex8* cs1, MKL_Complex8* sn1 );
void claesy( const MKL_Complex8* a, const MKL_Complex8* b,
             const MKL_Complex8* c, MKL_Complex8* rt1, MKL_Complex8* rt2,
             MKL_Complex8* evscal, MKL_Complex8* cs1, MKL_Complex8* sn1 );
void claesy_( const MKL_Complex8* a, const MKL_Complex8* b,
              const MKL_Complex8* c, MKL_Complex8* rt1, MKL_Complex8* rt2,
              MKL_Complex8* evscal, MKL_Complex8* cs1, MKL_Complex8* sn1 );

void CLAEV2( const MKL_Complex8* a, const MKL_Complex8* b,
             const MKL_Complex8* c, float* rt1, float* rt2, float* cs1,
             MKL_Complex8* sn1 );
void CLAEV2_( const MKL_Complex8* a, const MKL_Complex8* b,
              const MKL_Complex8* c, float* rt1, float* rt2, float* cs1,
              MKL_Complex8* sn1 );
void claev2( const MKL_Complex8* a, const MKL_Complex8* b,
             const MKL_Complex8* c, float* rt1, float* rt2, float* cs1,
             MKL_Complex8* sn1 );
void claev2_( const MKL_Complex8* a, const MKL_Complex8* b,
              const MKL_Complex8* c, float* rt1, float* rt2, float* cs1,
              MKL_Complex8* sn1 );

void CLAG2Z( const long long int* m, const long long int* n, const MKL_Complex8* sa,
             const long long int* ldsa, MKL_Complex16* a, const long long int* lda,
             long long int* info );
void CLAG2Z_( const long long int* m, const long long int* n, const MKL_Complex8* sa,
              const long long int* ldsa, MKL_Complex16* a, const long long int* lda,
              long long int* info );
void clag2z( const long long int* m, const long long int* n, const MKL_Complex8* sa,
             const long long int* ldsa, MKL_Complex16* a, const long long int* lda,
             long long int* info );
void clag2z_( const long long int* m, const long long int* n, const MKL_Complex8* sa,
              const long long int* ldsa, MKL_Complex16* a, const long long int* lda,
              long long int* info );

void CLAGS2( const long long int* upper, const float* a1, const MKL_Complex8* a2,
             const float* a3, const float* b1, const MKL_Complex8* b2,
             const float* b3, float* csu, MKL_Complex8* snu, float* csv,
             MKL_Complex8* snv, float* csq, MKL_Complex8* snq );
void CLAGS2_( const long long int* upper, const float* a1, const MKL_Complex8* a2,
              const float* a3, const float* b1, const MKL_Complex8* b2,
              const float* b3, float* csu, MKL_Complex8* snu, float* csv,
              MKL_Complex8* snv, float* csq, MKL_Complex8* snq );
void clags2( const long long int* upper, const float* a1, const MKL_Complex8* a2,
             const float* a3, const float* b1, const MKL_Complex8* b2,
             const float* b3, float* csu, MKL_Complex8* snu, float* csv,
             MKL_Complex8* snv, float* csq, MKL_Complex8* snq );
void clags2_( const long long int* upper, const float* a1, const MKL_Complex8* a2,
              const float* a3, const float* b1, const MKL_Complex8* b2,
              const float* b3, float* csu, MKL_Complex8* snu, float* csv,
              MKL_Complex8* snv, float* csq, MKL_Complex8* snq );

void CLAGTM( const char* trans, const long long int* n, const long long int* nrhs,
             const float* alpha, const MKL_Complex8* dl, const MKL_Complex8* d,
             const MKL_Complex8* du, const MKL_Complex8* x, const long long int* ldx,
             const float* beta, MKL_Complex8* b, const long long int* ldb );
void CLAGTM_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* alpha, const MKL_Complex8* dl,
              const MKL_Complex8* d, const MKL_Complex8* du,
              const MKL_Complex8* x, const long long int* ldx, const float* beta,
              MKL_Complex8* b, const long long int* ldb );
void clagtm( const char* trans, const long long int* n, const long long int* nrhs,
             const float* alpha, const MKL_Complex8* dl, const MKL_Complex8* d,
             const MKL_Complex8* du, const MKL_Complex8* x, const long long int* ldx,
             const float* beta, MKL_Complex8* b, const long long int* ldb );
void clagtm_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* alpha, const MKL_Complex8* dl,
              const MKL_Complex8* d, const MKL_Complex8* du,
              const MKL_Complex8* x, const long long int* ldx, const float* beta,
              MKL_Complex8* b, const long long int* ldb );

void CLAHEF( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
             MKL_Complex8* w, const long long int* ldw, long long int* info );
void CLAHEF_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
              MKL_Complex8* w, const long long int* ldw, long long int* info );
void clahef( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
             MKL_Complex8* w, const long long int* ldw, long long int* info );
void clahef_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
              MKL_Complex8* w, const long long int* ldw, long long int* info );

void CLAHQR( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, const long long int* iloz,
             const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
             long long int* info );
void CLAHQR_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, const long long int* iloz,
              const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              long long int* info );
void clahqr( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, const long long int* iloz,
             const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
             long long int* info );
void clahqr_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, const long long int* iloz,
              const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              long long int* info );

void CLAHR2( const long long int* n, const long long int* k, const long long int* nb,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* t, const long long int* ldt, MKL_Complex8* y,
             const long long int* ldy );
void CLAHR2_( const long long int* n, const long long int* k, const long long int* nb,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* t, const long long int* ldt, MKL_Complex8* y,
              const long long int* ldy );
void clahr2( const long long int* n, const long long int* k, const long long int* nb,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* t, const long long int* ldt, MKL_Complex8* y,
             const long long int* ldy );
void clahr2_( const long long int* n, const long long int* k, const long long int* nb,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* t, const long long int* ldt, MKL_Complex8* y,
              const long long int* ldy );

void CLAHRD( const long long int* n, const long long int* k, const long long int* nb,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* t, const long long int* ldt, MKL_Complex8* y,
             const long long int* ldy );
void CLAHRD_( const long long int* n, const long long int* k, const long long int* nb,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* t, const long long int* ldt, MKL_Complex8* y,
              const long long int* ldy );
void clahrd( const long long int* n, const long long int* k, const long long int* nb,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* t, const long long int* ldt, MKL_Complex8* y,
             const long long int* ldy );
void clahrd_( const long long int* n, const long long int* k, const long long int* nb,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* t, const long long int* ldt, MKL_Complex8* y,
              const long long int* ldy );

void CLAIC1( const long long int* job, const long long int* j, const MKL_Complex8* x,
             const float* sest, const MKL_Complex8* w,
             const MKL_Complex8* gamma, float* sestpr, MKL_Complex8* s,
             MKL_Complex8* c );
void CLAIC1_( const long long int* job, const long long int* j, const MKL_Complex8* x,
              const float* sest, const MKL_Complex8* w,
              const MKL_Complex8* gamma, float* sestpr, MKL_Complex8* s,
              MKL_Complex8* c );
void claic1( const long long int* job, const long long int* j, const MKL_Complex8* x,
             const float* sest, const MKL_Complex8* w,
             const MKL_Complex8* gamma, float* sestpr, MKL_Complex8* s,
             MKL_Complex8* c );
void claic1_( const long long int* job, const long long int* j, const MKL_Complex8* x,
              const float* sest, const MKL_Complex8* w,
              const MKL_Complex8* gamma, float* sestpr, MKL_Complex8* s,
              MKL_Complex8* c );

void CLALS0( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, const long long int* nrhs, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* bx, const long long int* ldbx,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const float* givnum, const long long int* ldgnum,
             const float* poles, const float* difl, const float* difr,
             const float* z, const long long int* k, const float* c, const float* s,
             float* rwork, long long int* info );
void CLALS0_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, const long long int* nrhs, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* bx, const long long int* ldbx,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const float* givnum, const long long int* ldgnum, const float* poles,
              const float* difl, const float* difr, const float* z,
              const long long int* k, const float* c, const float* s, float* rwork,
              long long int* info );
void clals0( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, const long long int* nrhs, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* bx, const long long int* ldbx,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const float* givnum, const long long int* ldgnum,
             const float* poles, const float* difl, const float* difr,
             const float* z, const long long int* k, const float* c, const float* s,
             float* rwork, long long int* info );
void clals0_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, const long long int* nrhs, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* bx, const long long int* ldbx,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const float* givnum, const long long int* ldgnum, const float* poles,
              const float* difl, const float* difr, const float* z,
              const long long int* k, const float* c, const float* s, float* rwork,
              long long int* info );

void CLALSA( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* bx, const long long int* ldbx, const float* u,
             const long long int* ldu, const float* vt, const long long int* k,
             const float* difl, const float* difr, const float* z,
             const float* poles, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const long long int* perm, const float* givnum,
             const float* c, const float* s, float* rwork, long long int* iwork,
             long long int* info );
void CLALSA_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* bx, const long long int* ldbx, const float* u,
              const long long int* ldu, const float* vt, const long long int* k,
              const float* difl, const float* difr, const float* z,
              const float* poles, const long long int* givptr, const long long int* givcol,
              const long long int* ldgcol, const long long int* perm, const float* givnum,
              const float* c, const float* s, float* rwork, long long int* iwork,
              long long int* info );
void clalsa( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* bx, const long long int* ldbx, const float* u,
             const long long int* ldu, const float* vt, const long long int* k,
             const float* difl, const float* difr, const float* z,
             const float* poles, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const long long int* perm, const float* givnum,
             const float* c, const float* s, float* rwork, long long int* iwork,
             long long int* info );
void clalsa_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* bx, const long long int* ldbx, const float* u,
              const long long int* ldu, const float* vt, const long long int* k,
              const float* difl, const float* difr, const float* z,
              const float* poles, const long long int* givptr, const long long int* givcol,
              const long long int* ldgcol, const long long int* perm, const float* givnum,
              const float* c, const float* s, float* rwork, long long int* iwork,
              long long int* info );

void CLALSD( const char* uplo, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, float* d, float* e, MKL_Complex8* b,
             const long long int* ldb, const float* rcond, long long int* rank,
             MKL_Complex8* work, float* rwork, long long int* iwork, long long int* info );
void CLALSD_( const char* uplo, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, float* d, float* e, MKL_Complex8* b,
              const long long int* ldb, const float* rcond, long long int* rank,
              MKL_Complex8* work, float* rwork, long long int* iwork,
              long long int* info );
void clalsd( const char* uplo, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, float* d, float* e, MKL_Complex8* b,
             const long long int* ldb, const float* rcond, long long int* rank,
             MKL_Complex8* work, float* rwork, long long int* iwork, long long int* info );
void clalsd_( const char* uplo, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, float* d, float* e, MKL_Complex8* b,
              const long long int* ldb, const float* rcond, long long int* rank,
              MKL_Complex8* work, float* rwork, long long int* iwork,
              long long int* info );

float CLANGB( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
              float* work );
float CLANGB_( const char* norm, const long long int* n, const long long int* kl,
               const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
               float* work );
float clangb( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
              float* work );
float clangb_( const char* norm, const long long int* n, const long long int* kl,
               const long long int* ku, const MKL_Complex8* ab, const long long int* ldab,
               float* work );

float CLANGE( const char* norm, const long long int* m, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, float* work );
float CLANGE_( const char* norm, const long long int* m, const long long int* n,
               const MKL_Complex8* a, const long long int* lda, float* work );
float clange( const char* norm, const long long int* m, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, float* work );
float clange_( const char* norm, const long long int* m, const long long int* n,
               const MKL_Complex8* a, const long long int* lda, float* work );

float CLANGT( const char* norm, const long long int* n, const MKL_Complex8* dl,
              const MKL_Complex8* d, const MKL_Complex8* du );
float CLANGT_( const char* norm, const long long int* n, const MKL_Complex8* dl,
               const MKL_Complex8* d, const MKL_Complex8* du );
float clangt( const char* norm, const long long int* n, const MKL_Complex8* dl,
              const MKL_Complex8* d, const MKL_Complex8* du );
float clangt_( const char* norm, const long long int* n, const MKL_Complex8* dl,
               const MKL_Complex8* d, const MKL_Complex8* du );

float CLANHB( const char* norm, const char* uplo, const long long int* n,
              const long long int* k, const MKL_Complex8* ab, const long long int* ldab,
              float* work );
float CLANHB_( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const MKL_Complex8* ab, const long long int* ldab,
               float* work );
float clanhb( const char* norm, const char* uplo, const long long int* n,
              const long long int* k, const MKL_Complex8* ab, const long long int* ldab,
              float* work );
float clanhb_( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const MKL_Complex8* ab, const long long int* ldab,
               float* work );

float CLANHE( const char* norm, const char* uplo, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, float* work );
float CLANHE_( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex8* a, const long long int* lda, float* work );
float clanhe( const char* norm, const char* uplo, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, float* work );
float clanhe_( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex8* a, const long long int* lda, float* work );

float CLANHF( const char* norm, const char* transr, const char* uplo,
              const long long int* n, const MKL_Complex8* a, float* work );
float CLANHF_( const char* norm, const char* transr, const char* uplo,
               const long long int* n, const MKL_Complex8* a, float* work );
float clanhf( const char* norm, const char* transr, const char* uplo,
              const long long int* n, const MKL_Complex8* a, float* work );
float clanhf_( const char* norm, const char* transr, const char* uplo,
               const long long int* n, const MKL_Complex8* a, float* work );

float CLANHP( const char* norm, const char* uplo, const long long int* n,
              const MKL_Complex8* ap, float* work );
float CLANHP_( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex8* ap, float* work );
float clanhp( const char* norm, const char* uplo, const long long int* n,
              const MKL_Complex8* ap, float* work );
float clanhp_( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex8* ap, float* work );

float CLANHS( const char* norm, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* work );
float CLANHS_( const char* norm, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* work );
float clanhs( const char* norm, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* work );
float clanhs_( const char* norm, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* work );

float CLANHT( const char* norm, const long long int* n, const float* d,
              const MKL_Complex8* e );
float CLANHT_( const char* norm, const long long int* n, const float* d,
               const MKL_Complex8* e );
float clanht( const char* norm, const long long int* n, const float* d,
              const MKL_Complex8* e );
float clanht_( const char* norm, const long long int* n, const float* d,
               const MKL_Complex8* e );

float CLANSB( const char* norm, const char* uplo, const long long int* n,
              const long long int* k, const MKL_Complex8* ab, const long long int* ldab,
              float* work );
float CLANSB_( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const MKL_Complex8* ab, const long long int* ldab,
               float* work );
float clansb( const char* norm, const char* uplo, const long long int* n,
              const long long int* k, const MKL_Complex8* ab, const long long int* ldab,
              float* work );
float clansb_( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const MKL_Complex8* ab, const long long int* ldab,
               float* work );

float CLANSP( const char* norm, const char* uplo, const long long int* n,
              const MKL_Complex8* ap, float* work );
float CLANSP_( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex8* ap, float* work );
float clansp( const char* norm, const char* uplo, const long long int* n,
              const MKL_Complex8* ap, float* work );
float clansp_( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex8* ap, float* work );

float CLANSY( const char* norm, const char* uplo, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, float* work );
float CLANSY_( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex8* a, const long long int* lda, float* work );
float clansy( const char* norm, const char* uplo, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, float* work );
float clansy_( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex8* a, const long long int* lda, float* work );

float CLANTB( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* k, const MKL_Complex8* ab,
              const long long int* ldab, float* work );
float CLANTB_( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const long long int* k, const MKL_Complex8* ab,
               const long long int* ldab, float* work );
float clantb( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* k, const MKL_Complex8* ab,
              const long long int* ldab, float* work );
float clantb_( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const long long int* k, const MKL_Complex8* ab,
               const long long int* ldab, float* work );

float CLANTP( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex8* ap, float* work );
float CLANTP_( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const MKL_Complex8* ap, float* work );
float clantp( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex8* ap, float* work );
float clantp_( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const MKL_Complex8* ap, float* work );

float CLANTR( const char* norm, const char* uplo, const char* diag,
              const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* work );
float CLANTR_( const char* norm, const char* uplo, const char* diag,
               const long long int* m, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* work );
float clantr( const char* norm, const char* uplo, const char* diag,
              const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* work );
float clantr_( const char* norm, const char* uplo, const char* diag,
               const long long int* m, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* work );

void CLAPLL( const long long int* n, MKL_Complex8* x, const long long int* incx,
             MKL_Complex8* y, const long long int* incy, float* ssmin );
void CLAPLL_( const long long int* n, MKL_Complex8* x, const long long int* incx,
              MKL_Complex8* y, const long long int* incy, float* ssmin );
void clapll( const long long int* n, MKL_Complex8* x, const long long int* incx,
             MKL_Complex8* y, const long long int* incy, float* ssmin );
void clapll_( const long long int* n, MKL_Complex8* x, const long long int* incx,
              MKL_Complex8* y, const long long int* incy, float* ssmin );

void CLAPMT( const long long int* forwrd, const long long int* m, const long long int* n,
             MKL_Complex8* x, const long long int* ldx, long long int* k );
void CLAPMT_( const long long int* forwrd, const long long int* m, const long long int* n,
              MKL_Complex8* x, const long long int* ldx, long long int* k );
void clapmt( const long long int* forwrd, const long long int* m, const long long int* n,
             MKL_Complex8* x, const long long int* ldx, long long int* k );
void clapmt_( const long long int* forwrd, const long long int* m, const long long int* n,
              MKL_Complex8* x, const long long int* ldx, long long int* k );

void CLAQGB( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
             const float* r, const float* c, const float* rowcnd,
             const float* colcnd, const float* amax, char* equed );
void CLAQGB_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
              const float* r, const float* c, const float* rowcnd,
              const float* colcnd, const float* amax, char* equed );
void claqgb( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
             const float* r, const float* c, const float* rowcnd,
             const float* colcnd, const float* amax, char* equed );
void claqgb_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex8* ab, const long long int* ldab,
              const float* r, const float* c, const float* rowcnd,
              const float* colcnd, const float* amax, char* equed );

void CLAQGE( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const float* r, const float* c,
             const float* rowcnd, const float* colcnd, const float* amax,
             char* equed );
void CLAQGE_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const float* r, const float* c,
              const float* rowcnd, const float* colcnd, const float* amax,
              char* equed );
void claqge( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const float* r, const float* c,
             const float* rowcnd, const float* colcnd, const float* amax,
             char* equed );
void claqge_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const float* r, const float* c,
              const float* rowcnd, const float* colcnd, const float* amax,
              char* equed );

void CLAQHB( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, float* s,
             const float* scond, const float* amax, char* equed );
void CLAQHB_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, float* s,
              const float* scond, const float* amax, char* equed );
void claqhb( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, float* s,
             const float* scond, const float* amax, char* equed );
void claqhb_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, float* s,
              const float* scond, const float* amax, char* equed );

void CLAQHE( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const float* s, const float* scond,
             const float* amax, char* equed );
void CLAQHE_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const float* s, const float* scond,
              const float* amax, char* equed );
void claqhe( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const float* s, const float* scond,
             const float* amax, char* equed );
void claqhe_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const float* s, const float* scond,
              const float* amax, char* equed );

void CLAQHP( const char* uplo, const long long int* n, MKL_Complex8* ap,
             const float* s, const float* scond, const float* amax,
             char* equed );
void CLAQHP_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              const float* s, const float* scond, const float* amax,
              char* equed );
void claqhp( const char* uplo, const long long int* n, MKL_Complex8* ap,
             const float* s, const float* scond, const float* amax,
             char* equed );
void claqhp_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              const float* s, const float* scond, const float* amax,
              char* equed );

void CLAQP2( const long long int* m, const long long int* n, const long long int* offset,
             MKL_Complex8* a, const long long int* lda, long long int* jpvt,
             MKL_Complex8* tau, float* vn1, float* vn2, MKL_Complex8* work );
void CLAQP2_( const long long int* m, const long long int* n, const long long int* offset,
              MKL_Complex8* a, const long long int* lda, long long int* jpvt,
              MKL_Complex8* tau, float* vn1, float* vn2, MKL_Complex8* work );
void claqp2( const long long int* m, const long long int* n, const long long int* offset,
             MKL_Complex8* a, const long long int* lda, long long int* jpvt,
             MKL_Complex8* tau, float* vn1, float* vn2, MKL_Complex8* work );
void claqp2_( const long long int* m, const long long int* n, const long long int* offset,
              MKL_Complex8* a, const long long int* lda, long long int* jpvt,
              MKL_Complex8* tau, float* vn1, float* vn2, MKL_Complex8* work );

void CLAQPS( const long long int* m, const long long int* n, const long long int* offset,
             const long long int* nb, long long int* kb, MKL_Complex8* a,
             const long long int* lda, long long int* jpvt, MKL_Complex8* tau, float* vn1,
             float* vn2, MKL_Complex8* auxv, MKL_Complex8* f,
             const long long int* ldf );
void CLAQPS_( const long long int* m, const long long int* n, const long long int* offset,
              const long long int* nb, long long int* kb, MKL_Complex8* a,
              const long long int* lda, long long int* jpvt, MKL_Complex8* tau, float* vn1,
              float* vn2, MKL_Complex8* auxv, MKL_Complex8* f,
              const long long int* ldf );
void claqps( const long long int* m, const long long int* n, const long long int* offset,
             const long long int* nb, long long int* kb, MKL_Complex8* a,
             const long long int* lda, long long int* jpvt, MKL_Complex8* tau, float* vn1,
             float* vn2, MKL_Complex8* auxv, MKL_Complex8* f,
             const long long int* ldf );
void claqps_( const long long int* m, const long long int* n, const long long int* offset,
              const long long int* nb, long long int* kb, MKL_Complex8* a,
              const long long int* lda, long long int* jpvt, MKL_Complex8* tau, float* vn1,
              float* vn2, MKL_Complex8* auxv, MKL_Complex8* f,
              const long long int* ldf );

void CLAQR0( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, long long int* iloz, long long int* ihiz,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CLAQR0_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, long long int* iloz,
              long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void claqr0( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, long long int* iloz, long long int* ihiz,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void claqr0_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, long long int* iloz,
              long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CLAQR1( const long long int* n, const MKL_Complex8* h, const long long int* ldh,
             const MKL_Complex8* s1, MKL_Complex8* s2, MKL_Complex8* v );
void CLAQR1_( const long long int* n, const MKL_Complex8* h, const long long int* ldh,
              const MKL_Complex8* s1, MKL_Complex8* s2, MKL_Complex8* v );
void claqr1( const long long int* n, const MKL_Complex8* h, const long long int* ldh,
             const MKL_Complex8* s1, MKL_Complex8* s2, MKL_Complex8* v );
void claqr1_( const long long int* n, const MKL_Complex8* h, const long long int* ldh,
              const MKL_Complex8* s1, MKL_Complex8* s2, MKL_Complex8* v );

void CLAQR2( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
             long long int* ns, long long int* nd, MKL_Complex8* sh, MKL_Complex8* v,
             const long long int* ldv, const long long int* nh, MKL_Complex8* t,
             const long long int* ldt, const long long int* nv, MKL_Complex8* wv,
             const long long int* ldwv, MKL_Complex8* work, const long long int* lwork );
void CLAQR2_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              long long int* ns, long long int* nd, MKL_Complex8* sh, MKL_Complex8* v,
              const long long int* ldv, const long long int* nh, MKL_Complex8* t,
              const long long int* ldt, const long long int* nv, MKL_Complex8* wv,
              const long long int* ldwv, MKL_Complex8* work, const long long int* lwork );
void claqr2( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
             long long int* ns, long long int* nd, MKL_Complex8* sh, MKL_Complex8* v,
             const long long int* ldv, const long long int* nh, MKL_Complex8* t,
             const long long int* ldt, const long long int* nv, MKL_Complex8* wv,
             const long long int* ldwv, MKL_Complex8* work, const long long int* lwork );
void claqr2_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              long long int* ns, long long int* nd, MKL_Complex8* sh, MKL_Complex8* v,
              const long long int* ldv, const long long int* nh, MKL_Complex8* t,
              const long long int* ldt, const long long int* nv, MKL_Complex8* wv,
              const long long int* ldwv, MKL_Complex8* work, const long long int* lwork );

void CLAQR3( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
             long long int* ns, long long int* nd, MKL_Complex8* sh, MKL_Complex8* v,
             const long long int* ldv, const long long int* nh, MKL_Complex8* t,
             const long long int* ldt, const long long int* nv, MKL_Complex8* wv,
             const long long int* ldwv, MKL_Complex8* work, const long long int* lwork );
void CLAQR3_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              long long int* ns, long long int* nd, MKL_Complex8* sh, MKL_Complex8* v,
              const long long int* ldv, const long long int* nh, MKL_Complex8* t,
              const long long int* ldt, const long long int* nv, MKL_Complex8* wv,
              const long long int* ldwv, MKL_Complex8* work, const long long int* lwork );
void claqr3( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
             long long int* ns, long long int* nd, MKL_Complex8* sh, MKL_Complex8* v,
             const long long int* ldv, const long long int* nh, MKL_Complex8* t,
             const long long int* ldt, const long long int* nv, MKL_Complex8* wv,
             const long long int* ldwv, MKL_Complex8* work, const long long int* lwork );
void claqr3_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              long long int* ns, long long int* nd, MKL_Complex8* sh, MKL_Complex8* v,
              const long long int* ldv, const long long int* nh, MKL_Complex8* t,
              const long long int* ldt, const long long int* nv, MKL_Complex8* wv,
              const long long int* ldwv, MKL_Complex8* work, const long long int* lwork );

void CLAQR4( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, long long int* iloz, long long int* ihiz,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CLAQR4_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, long long int* iloz,
              long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void claqr4( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
             const long long int* ldh, MKL_Complex8* w, long long int* iloz, long long int* ihiz,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void claqr4_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex8* h,
              const long long int* ldh, MKL_Complex8* w, long long int* iloz,
              long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CLAQR5( const long long int* wantt, const long long int* wantz, const long long int* kacc22,
             const long long int* n, const long long int* ktop, const long long int* kbot,
             const long long int* nshfts, MKL_Complex8* s, MKL_Complex8* h,
             const long long int* ldh, const long long int* iloz, const long long int* ihiz,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* v,
             const long long int* ldv, MKL_Complex8* u, const long long int* ldu,
             const long long int* nv, MKL_Complex8* wv, const long long int* ldwv,
             const long long int* nh, MKL_Complex8* wh, const long long int* ldwh );
void CLAQR5_( const long long int* wantt, const long long int* wantz,
              const long long int* kacc22, const long long int* n, const long long int* ktop,
              const long long int* kbot, const long long int* nshfts, MKL_Complex8* s,
              MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* v, const long long int* ldv, MKL_Complex8* u,
              const long long int* ldu, const long long int* nv, MKL_Complex8* wv,
              const long long int* ldwv, const long long int* nh, MKL_Complex8* wh,
              const long long int* ldwh );
void claqr5( const long long int* wantt, const long long int* wantz, const long long int* kacc22,
             const long long int* n, const long long int* ktop, const long long int* kbot,
             const long long int* nshfts, MKL_Complex8* s, MKL_Complex8* h,
             const long long int* ldh, const long long int* iloz, const long long int* ihiz,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* v,
             const long long int* ldv, MKL_Complex8* u, const long long int* ldu,
             const long long int* nv, MKL_Complex8* wv, const long long int* ldwv,
             const long long int* nh, MKL_Complex8* wh, const long long int* ldwh );
void claqr5_( const long long int* wantt, const long long int* wantz,
              const long long int* kacc22, const long long int* n, const long long int* ktop,
              const long long int* kbot, const long long int* nshfts, MKL_Complex8* s,
              MKL_Complex8* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* v, const long long int* ldv, MKL_Complex8* u,
              const long long int* ldu, const long long int* nv, MKL_Complex8* wv,
              const long long int* ldwv, const long long int* nh, MKL_Complex8* wh,
              const long long int* ldwh );

void CLAQSB( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, const float* s,
             const float* scond, const float* amax, char* equed );
void CLAQSB_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, const float* s,
              const float* scond, const float* amax, char* equed );
void claqsb( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, const float* s,
             const float* scond, const float* amax, char* equed );
void claqsb_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, const float* s,
              const float* scond, const float* amax, char* equed );

void CLAQSP( const char* uplo, const long long int* n, MKL_Complex8* ap,
             const float* s, const float* scond, const float* amax,
             char* equed );
void CLAQSP_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              const float* s, const float* scond, const float* amax,
              char* equed );
void claqsp( const char* uplo, const long long int* n, MKL_Complex8* ap,
             const float* s, const float* scond, const float* amax,
             char* equed );
void claqsp_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              const float* s, const float* scond, const float* amax,
              char* equed );

void CLAQSY( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const float* s, const float* scond,
             const float* amax, char* equed );
void CLAQSY_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const float* s, const float* scond,
              const float* amax, char* equed );
void claqsy( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const float* s, const float* scond,
             const float* amax, char* equed );
void claqsy_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const float* s, const float* scond,
              const float* amax, char* equed );

void CLAR1V( const long long int* n, const long long int* b1, const long long int* bn,
             const float* lambda, const float* d, const float* l,
             const float* ld, const float* lld, const float* pivmin,
             const float* gaptol, MKL_Complex8* z, const long long int* wantnc,
             long long int* negcnt, float* ztz, float* mingma, long long int* r,
             long long int* isuppz, float* nrminv, float* resid, float* rqcorr,
             float* work );
void CLAR1V_( const long long int* n, const long long int* b1, const long long int* bn,
              const float* lambda, const float* d, const float* l,
              const float* ld, const float* lld, const float* pivmin,
              const float* gaptol, MKL_Complex8* z, const long long int* wantnc,
              long long int* negcnt, float* ztz, float* mingma, long long int* r,
              long long int* isuppz, float* nrminv, float* resid, float* rqcorr,
              float* work );
void clar1v( const long long int* n, const long long int* b1, const long long int* bn,
             const float* lambda, const float* d, const float* l,
             const float* ld, const float* lld, const float* pivmin,
             const float* gaptol, MKL_Complex8* z, const long long int* wantnc,
             long long int* negcnt, float* ztz, float* mingma, long long int* r,
             long long int* isuppz, float* nrminv, float* resid, float* rqcorr,
             float* work );
void clar1v_( const long long int* n, const long long int* b1, const long long int* bn,
              const float* lambda, const float* d, const float* l,
              const float* ld, const float* lld, const float* pivmin,
              const float* gaptol, MKL_Complex8* z, const long long int* wantnc,
              long long int* negcnt, float* ztz, float* mingma, long long int* r,
              long long int* isuppz, float* nrminv, float* resid, float* rqcorr,
              float* work );

void CLAR2V( const long long int* n, MKL_Complex8* x, MKL_Complex8* y,
             MKL_Complex8* z, const long long int* incx, const float* c,
             const MKL_Complex8* s, const long long int* incc );
void CLAR2V_( const long long int* n, MKL_Complex8* x, MKL_Complex8* y,
              MKL_Complex8* z, const long long int* incx, const float* c,
              const MKL_Complex8* s, const long long int* incc );
void clar2v( const long long int* n, MKL_Complex8* x, MKL_Complex8* y,
             MKL_Complex8* z, const long long int* incx, const float* c,
             const MKL_Complex8* s, const long long int* incc );
void clar2v_( const long long int* n, MKL_Complex8* x, MKL_Complex8* y,
              MKL_Complex8* z, const long long int* incx, const float* c,
              const MKL_Complex8* s, const long long int* incc );

void CLARCM( const long long int* m, const long long int* n, const float* a,
             const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
             const MKL_Complex8* c, const long long int* ldc, float* rwork );
void CLARCM_( const long long int* m, const long long int* n, const float* a,
              const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
              const MKL_Complex8* c, const long long int* ldc, float* rwork );
void clarcm( const long long int* m, const long long int* n, const float* a,
             const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
             const MKL_Complex8* c, const long long int* ldc, float* rwork );
void clarcm_( const long long int* m, const long long int* n, const float* a,
              const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
              const MKL_Complex8* c, const long long int* ldc, float* rwork );

void CLARFB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const MKL_Complex8* v, const long long int* ldv,
             const MKL_Complex8* t, const long long int* ldt, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* ldwork );
void CLARFB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* t, const long long int* ldt, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* ldwork );
void clarfb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const MKL_Complex8* v, const long long int* ldv,
             const MKL_Complex8* t, const long long int* ldt, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* ldwork );
void clarfb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* t, const long long int* ldt, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* ldwork );

void CLARF( const char* side, const long long int* m, const long long int* n,
            const MKL_Complex8* v, const long long int* incv,
            const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
            MKL_Complex8* work );
void CLARF_( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex8* v, const long long int* incv,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work );
void clarf( const char* side, const long long int* m, const long long int* n,
            const MKL_Complex8* v, const long long int* incv,
            const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
            MKL_Complex8* work );
void clarf_( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex8* v, const long long int* incv,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work );

void CLARFG( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
             const long long int* incx, MKL_Complex8* tau );
void CLARFG_( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
              const long long int* incx, MKL_Complex8* tau );
void clarfg( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
             const long long int* incx, MKL_Complex8* tau );
void clarfg_( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
              const long long int* incx, MKL_Complex8* tau );

void CLARFGP( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
              const long long int* incx, MKL_Complex8* tau );
void CLARFGP_( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
               const long long int* incx, MKL_Complex8* tau );
void clarfgp( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
              const long long int* incx, MKL_Complex8* tau );
void clarfgp_( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
               const long long int* incx, MKL_Complex8* tau );

void CLARFP( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
             const long long int* incx, MKL_Complex8* tau );
void CLARFP_( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
              const long long int* incx, MKL_Complex8* tau );
void clarfp( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
             const long long int* incx, MKL_Complex8* tau );
void clarfp_( const long long int* n, MKL_Complex8* alpha, MKL_Complex8* x,
              const long long int* incx, MKL_Complex8* tau );

void CLARFT( const char* direct, const char* storev, const long long int* n,
             const long long int* k, MKL_Complex8* v, const long long int* ldv,
             const MKL_Complex8* tau, MKL_Complex8* t, const long long int* ldt );
void CLARFT_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* tau, MKL_Complex8* t, const long long int* ldt );
void clarft( const char* direct, const char* storev, const long long int* n,
             const long long int* k, MKL_Complex8* v, const long long int* ldv,
             const MKL_Complex8* tau, MKL_Complex8* t, const long long int* ldt );
void clarft_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* tau, MKL_Complex8* t, const long long int* ldt );

void CLARFX( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex8* v, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work );
void CLARFX_( const char* side, const long long int* m, const long long int* n,
              const MKL_Complex8* v, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work );
void clarfx( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex8* v, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work );
void clarfx_( const char* side, const long long int* m, const long long int* n,
              const MKL_Complex8* v, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work );

void CLARGV( const long long int* n, MKL_Complex8* x, const long long int* incx,
             MKL_Complex8* y, const long long int* incy, float* c,
             const long long int* incc );
void CLARGV_( const long long int* n, MKL_Complex8* x, const long long int* incx,
              MKL_Complex8* y, const long long int* incy, float* c,
              const long long int* incc );
void clargv( const long long int* n, MKL_Complex8* x, const long long int* incx,
             MKL_Complex8* y, const long long int* incy, float* c,
             const long long int* incc );
void clargv_( const long long int* n, MKL_Complex8* x, const long long int* incx,
              MKL_Complex8* y, const long long int* incy, float* c,
              const long long int* incc );

void CLARNV( const long long int* idist, long long int* iseed, const long long int* n,
             MKL_Complex8* x );
void CLARNV_( const long long int* idist, long long int* iseed, const long long int* n,
              MKL_Complex8* x );
void clarnv( const long long int* idist, long long int* iseed, const long long int* n,
             MKL_Complex8* x );
void clarnv_( const long long int* idist, long long int* iseed, const long long int* n,
              MKL_Complex8* x );

void CLARRV( const long long int* n, const float* vl, const float* vu, float* d,
             float* l, float* pivmin, const long long int* isplit, const long long int* m,
             const long long int* dol, const long long int* dou, const float* minrgp,
             const float* rtol1, const float* rtol2, float* w, float* werr,
             float* wgap, const long long int* iblock, const long long int* indexw,
             const float* gers, MKL_Complex8* z, const long long int* ldz,
             long long int* isuppz, float* work, long long int* iwork, long long int* info );
void CLARRV_( const long long int* n, const float* vl, const float* vu, float* d,
              float* l, float* pivmin, const long long int* isplit, const long long int* m,
              const long long int* dol, const long long int* dou, const float* minrgp,
              const float* rtol1, const float* rtol2, float* w, float* werr,
              float* wgap, const long long int* iblock, const long long int* indexw,
              const float* gers, MKL_Complex8* z, const long long int* ldz,
              long long int* isuppz, float* work, long long int* iwork, long long int* info );
void clarrv( const long long int* n, const float* vl, const float* vu, float* d,
             float* l, float* pivmin, const long long int* isplit, const long long int* m,
             const long long int* dol, const long long int* dou, const float* minrgp,
             const float* rtol1, const float* rtol2, float* w, float* werr,
             float* wgap, const long long int* iblock, const long long int* indexw,
             const float* gers, MKL_Complex8* z, const long long int* ldz,
             long long int* isuppz, float* work, long long int* iwork, long long int* info );
void clarrv_( const long long int* n, const float* vl, const float* vu, float* d,
              float* l, float* pivmin, const long long int* isplit, const long long int* m,
              const long long int* dol, const long long int* dou, const float* minrgp,
              const float* rtol1, const float* rtol2, float* w, float* werr,
              float* wgap, const long long int* iblock, const long long int* indexw,
              const float* gers, MKL_Complex8* z, const long long int* ldz,
              long long int* isuppz, float* work, long long int* iwork, long long int* info );

void CLARSCL2( const long long int* m, const long long int* n, const float* d, MKL_Complex8* x,
               const long long int* ldx );
void CLARSCL2_( const long long int* m, const long long int* n, const float* d, MKL_Complex8* x,
                const long long int* ldx );
void clarscl2( const long long int* m, const long long int* n, const float* d, MKL_Complex8* x,
               const long long int* ldx );
void clarscl2_( const long long int* m, const long long int* n, const float* d, MKL_Complex8* x,
               const long long int* ldx );

void CLARTG( const MKL_Complex8* f, const MKL_Complex8* g, float* cs,
             MKL_Complex8* sn, MKL_Complex8* r );
void CLARTG_( const MKL_Complex8* f, const MKL_Complex8* g, float* cs,
              MKL_Complex8* sn, MKL_Complex8* r );
void clartg( const MKL_Complex8* f, const MKL_Complex8* g, float* cs,
             MKL_Complex8* sn, MKL_Complex8* r );
void clartg_( const MKL_Complex8* f, const MKL_Complex8* g, float* cs,
              MKL_Complex8* sn, MKL_Complex8* r );

void CLARTV( const long long int* n, MKL_Complex8* x, const long long int* incx,
             MKL_Complex8* y, const long long int* incy, const float* c,
             const MKL_Complex8* s, const long long int* incc );
void CLARTV_( const long long int* n, MKL_Complex8* x, const long long int* incx,
              MKL_Complex8* y, const long long int* incy, const float* c,
              const MKL_Complex8* s, const long long int* incc );
void clartv( const long long int* n, MKL_Complex8* x, const long long int* incx,
             MKL_Complex8* y, const long long int* incy, const float* c,
             const MKL_Complex8* s, const long long int* incc );
void clartv_( const long long int* n, MKL_Complex8* x, const long long int* incx,
              MKL_Complex8* y, const long long int* incy, const float* c,
              const MKL_Complex8* s, const long long int* incc );

void CLARZB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const MKL_Complex8* v,
             const long long int* ldv, const MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* c, const long long int* ldc, MKL_Complex8* work,
             const long long int* ldwork );
void CLARZB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const MKL_Complex8* v,
              const long long int* ldv, const MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* c, const long long int* ldc, MKL_Complex8* work,
              const long long int* ldwork );
void clarzb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const MKL_Complex8* v,
             const long long int* ldv, const MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* c, const long long int* ldc, MKL_Complex8* work,
             const long long int* ldwork );
void clarzb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const MKL_Complex8* v,
              const long long int* ldv, const MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* c, const long long int* ldc, MKL_Complex8* work,
              const long long int* ldwork );

void CLARZ( const char* side, const long long int* m, const long long int* n,
            const long long int* l, const MKL_Complex8* v, const long long int* incv,
            const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
            MKL_Complex8* work );
void CLARZ_( const char* side, const long long int* m, const long long int* n,
             const long long int* l, const MKL_Complex8* v, const long long int* incv,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work );
void clarz( const char* side, const long long int* m, const long long int* n,
            const long long int* l, const MKL_Complex8* v, const long long int* incv,
            const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
            MKL_Complex8* work );
void clarz_( const char* side, const long long int* m, const long long int* n,
             const long long int* l, const MKL_Complex8* v, const long long int* incv,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work );

void CLARZT( const char* direct, const char* storev, const long long int* n,
             const long long int* k, MKL_Complex8* v, const long long int* ldv,
             const MKL_Complex8* tau, MKL_Complex8* t, const long long int* ldt );
void CLARZT_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* tau, MKL_Complex8* t, const long long int* ldt );
void clarzt( const char* direct, const char* storev, const long long int* n,
             const long long int* k, MKL_Complex8* v, const long long int* ldv,
             const MKL_Complex8* tau, MKL_Complex8* t, const long long int* ldt );
void clarzt_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, MKL_Complex8* v, const long long int* ldv,
              const MKL_Complex8* tau, MKL_Complex8* t, const long long int* ldt );

void CLASCL( const char* type, const long long int* kl, const long long int* ku,
             const float* cfrom, const float* cto, const long long int* m,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* info );
void CLASCL_( const char* type, const long long int* kl, const long long int* ku,
              const float* cfrom, const float* cto, const long long int* m,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* info );
void clascl( const char* type, const long long int* kl, const long long int* ku,
             const float* cfrom, const float* cto, const long long int* m,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* info );
void clascl_( const char* type, const long long int* kl, const long long int* ku,
              const float* cfrom, const float* cto, const long long int* m,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* info );

void CLASCL2( const long long int* m, const long long int* n, const float* d, MKL_Complex8* x,
              const long long int* ldx );
void CLASCL2_( const long long int* m, const long long int* n, const float* d, MKL_Complex8* x,
               const long long int* ldx );
void clascl2( const long long int* m, const long long int* n, const float* d, MKL_Complex8* x,
              const long long int* ldx );
void clascl2_( const long long int* m, const long long int* n, const float* d, MKL_Complex8* x,
               const long long int* ldx );

void CLASET( const char* uplo, const long long int* m, const long long int* n,
             const MKL_Complex8* alpha, const MKL_Complex8* beta,
             MKL_Complex8* a, const long long int* lda );
void CLASET_( const char* uplo, const long long int* m, const long long int* n,
              const MKL_Complex8* alpha, const MKL_Complex8* beta,
              MKL_Complex8* a, const long long int* lda );
void claset( const char* uplo, const long long int* m, const long long int* n,
             const MKL_Complex8* alpha, const MKL_Complex8* beta,
             MKL_Complex8* a, const long long int* lda );
void claset_( const char* uplo, const long long int* m, const long long int* n,
              const MKL_Complex8* alpha, const MKL_Complex8* beta,
              MKL_Complex8* a, const long long int* lda );

void CLASR( const char* side, const char* pivot, const char* direct,
            const long long int* m, const long long int* n, const float* c, const float* s,
            MKL_Complex8* a, const long long int* lda );
void CLASR_( const char* side, const char* pivot, const char* direct,
             const long long int* m, const long long int* n, const float* c,
             const float* s, MKL_Complex8* a, const long long int* lda );
void clasr( const char* side, const char* pivot, const char* direct,
            const long long int* m, const long long int* n, const float* c, const float* s,
            MKL_Complex8* a, const long long int* lda );
void clasr_( const char* side, const char* pivot, const char* direct,
             const long long int* m, const long long int* n, const float* c,
             const float* s, MKL_Complex8* a, const long long int* lda );

void CLASSQ( const long long int* n, const MKL_Complex8* x, const long long int* incx,
             float* scale, float* sumsq );
void CLASSQ_( const long long int* n, const MKL_Complex8* x, const long long int* incx,
              float* scale, float* sumsq );
void classq( const long long int* n, const MKL_Complex8* x, const long long int* incx,
             float* scale, float* sumsq );
void classq_( const long long int* n, const MKL_Complex8* x, const long long int* incx,
              float* scale, float* sumsq );

void CLASWP( const long long int* n, MKL_Complex8* a, const long long int* lda,
             const long long int* k1, const long long int* k2, const long long int* ipiv,
             const long long int* incx );
void CLASWP_( const long long int* n, MKL_Complex8* a, const long long int* lda,
              const long long int* k1, const long long int* k2, const long long int* ipiv,
              const long long int* incx );
void claswp( const long long int* n, MKL_Complex8* a, const long long int* lda,
             const long long int* k1, const long long int* k2, const long long int* ipiv,
             const long long int* incx );
void claswp_( const long long int* n, MKL_Complex8* a, const long long int* lda,
              const long long int* k1, const long long int* k2, const long long int* ipiv,
              const long long int* incx );

void CLASYF( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
             MKL_Complex8* w, const long long int* ldw, long long int* info );
void CLASYF_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
              MKL_Complex8* w, const long long int* ldw, long long int* info );
void clasyf( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
             MKL_Complex8* w, const long long int* ldw, long long int* info );
void clasyf_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, MKL_Complex8* a, const long long int* lda, long long int* ipiv,
              MKL_Complex8* w, const long long int* ldw, long long int* info );

void CLATBS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const long long int* kd,
             const MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* x,
             float* scale, float* cnorm, long long int* info );
void CLATBS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const long long int* kd,
              const MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* x,
              float* scale, float* cnorm, long long int* info );
void clatbs( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const long long int* kd,
             const MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* x,
             float* scale, float* cnorm, long long int* info );
void clatbs_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const long long int* kd,
              const MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* x,
              float* scale, float* cnorm, long long int* info );

void CLATDF( const long long int* ijob, const long long int* n, const MKL_Complex8* z,
             const long long int* ldz, MKL_Complex8* rhs, float* rdsum,
             float* rdscal, const long long int* ipiv, const long long int* jpiv );
void CLATDF_( const long long int* ijob, const long long int* n, const MKL_Complex8* z,
              const long long int* ldz, MKL_Complex8* rhs, float* rdsum,
              float* rdscal, const long long int* ipiv, const long long int* jpiv );
void clatdf( const long long int* ijob, const long long int* n, const MKL_Complex8* z,
             const long long int* ldz, MKL_Complex8* rhs, float* rdsum,
             float* rdscal, const long long int* ipiv, const long long int* jpiv );
void clatdf_( const long long int* ijob, const long long int* n, const MKL_Complex8* z,
              const long long int* ldz, MKL_Complex8* rhs, float* rdsum,
              float* rdscal, const long long int* ipiv, const long long int* jpiv );

void CLATPS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const MKL_Complex8* ap,
             MKL_Complex8* x, float* scale, float* cnorm, long long int* info );
void CLATPS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const MKL_Complex8* ap,
              MKL_Complex8* x, float* scale, float* cnorm, long long int* info );
void clatps( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const MKL_Complex8* ap,
             MKL_Complex8* x, float* scale, float* cnorm, long long int* info );
void clatps_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const MKL_Complex8* ap,
              MKL_Complex8* x, float* scale, float* cnorm, long long int* info );

void CLATRD( const char* uplo, const long long int* n, const long long int* nb,
             MKL_Complex8* a, const long long int* lda, float* e, MKL_Complex8* tau,
             MKL_Complex8* w, const long long int* ldw );
void CLATRD_( const char* uplo, const long long int* n, const long long int* nb,
              MKL_Complex8* a, const long long int* lda, float* e, MKL_Complex8* tau,
              MKL_Complex8* w, const long long int* ldw );
void clatrd( const char* uplo, const long long int* n, const long long int* nb,
             MKL_Complex8* a, const long long int* lda, float* e, MKL_Complex8* tau,
             MKL_Complex8* w, const long long int* ldw );
void clatrd_( const char* uplo, const long long int* n, const long long int* nb,
              MKL_Complex8* a, const long long int* lda, float* e, MKL_Complex8* tau,
              MKL_Complex8* w, const long long int* ldw );

void CLATRS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* x, float* scale, float* cnorm,
             long long int* info );
void CLATRS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* x, float* scale, float* cnorm,
              long long int* info );
void clatrs( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* x, float* scale, float* cnorm,
             long long int* info );
void clatrs_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* x, float* scale, float* cnorm,
              long long int* info );

void CLATRZ( const long long int* m, const long long int* n, const long long int* l,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* work );
void CLATRZ_( const long long int* m, const long long int* n, const long long int* l,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* work );
void clatrz( const long long int* m, const long long int* n, const long long int* l,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
             MKL_Complex8* work );
void clatrz_( const long long int* m, const long long int* n, const long long int* l,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* tau,
              MKL_Complex8* work );

void CLATZM( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex8* v, const long long int* incv,
             const MKL_Complex8* tau, MKL_Complex8* c1, MKL_Complex8* c2,
             const long long int* ldc, MKL_Complex8* work );
void CLATZM_( const char* side, const long long int* m, const long long int* n,
              const MKL_Complex8* v, const long long int* incv,
              const MKL_Complex8* tau, MKL_Complex8* c1, MKL_Complex8* c2,
              const long long int* ldc, MKL_Complex8* work );
void clatzm( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex8* v, const long long int* incv,
             const MKL_Complex8* tau, MKL_Complex8* c1, MKL_Complex8* c2,
             const long long int* ldc, MKL_Complex8* work );
void clatzm_( const char* side, const long long int* m, const long long int* n,
              const MKL_Complex8* v, const long long int* incv,
              const MKL_Complex8* tau, MKL_Complex8* c1, MKL_Complex8* c2,
              const long long int* ldc, MKL_Complex8* work );

void CLAUU2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void CLAUU2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );
void clauu2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void clauu2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );

void CLAUUM( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void CLAUUM_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );
void clauum( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void clauum_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );

void CPBCON( const char* uplo, const long long int* n, const long long int* kd,
             const MKL_Complex8* ab, const long long int* ldab, const float* anorm,
             float* rcond, MKL_Complex8* work, float* rwork, long long int* info );
void CPBCON_( const char* uplo, const long long int* n, const long long int* kd,
              const MKL_Complex8* ab, const long long int* ldab, const float* anorm,
              float* rcond, MKL_Complex8* work, float* rwork, long long int* info );
void cpbcon( const char* uplo, const long long int* n, const long long int* kd,
             const MKL_Complex8* ab, const long long int* ldab, const float* anorm,
             float* rcond, MKL_Complex8* work, float* rwork, long long int* info );
void cpbcon_( const char* uplo, const long long int* n, const long long int* kd,
              const MKL_Complex8* ab, const long long int* ldab, const float* anorm,
              float* rcond, MKL_Complex8* work, float* rwork, long long int* info );

void CPBEQU( const char* uplo, const long long int* n, const long long int* kd,
             const MKL_Complex8* ab, const long long int* ldab, float* s,
             float* scond, float* amax, long long int* info );
void CPBEQU_( const char* uplo, const long long int* n, const long long int* kd,
              const MKL_Complex8* ab, const long long int* ldab, float* s,
              float* scond, float* amax, long long int* info );
void cpbequ( const char* uplo, const long long int* n, const long long int* kd,
             const MKL_Complex8* ab, const long long int* ldab, float* s,
             float* scond, float* amax, long long int* info );
void cpbequ_( const char* uplo, const long long int* n, const long long int* kd,
              const MKL_Complex8* ab, const long long int* ldab, float* s,
              float* scond, float* amax, long long int* info );

void CPBRFS( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const MKL_Complex8* ab, const long long int* ldab,
             const MKL_Complex8* afb, const long long int* ldafb,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void CPBRFS_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const MKL_Complex8* ab, const long long int* ldab,
              const MKL_Complex8* afb, const long long int* ldafb,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void cpbrfs( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const MKL_Complex8* ab, const long long int* ldab,
             const MKL_Complex8* afb, const long long int* ldafb,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void cpbrfs_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const MKL_Complex8* ab, const long long int* ldab,
              const MKL_Complex8* afb, const long long int* ldafb,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CPBSTF( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, long long int* info );
void CPBSTF_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, long long int* info );
void cpbstf( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, long long int* info );
void cpbstf_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, long long int* info );

void CPBSV( const char* uplo, const long long int* n, const long long int* kd,
            const long long int* nrhs, MKL_Complex8* ab, const long long int* ldab,
            MKL_Complex8* b, const long long int* ldb, long long int* info );
void CPBSV_( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, MKL_Complex8* ab, const long long int* ldab,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void cpbsv( const char* uplo, const long long int* n, const long long int* kd,
            const long long int* nrhs, MKL_Complex8* ab, const long long int* ldab,
            MKL_Complex8* b, const long long int* ldb, long long int* info );
void cpbsv_( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, MKL_Complex8* ab, const long long int* ldab,
             MKL_Complex8* b, const long long int* ldb, long long int* info );

void CPBSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* kd, const long long int* nrhs, MKL_Complex8* ab,
             const long long int* ldab, MKL_Complex8* afb, const long long int* ldafb,
             char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void CPBSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* kd, const long long int* nrhs, MKL_Complex8* ab,
              const long long int* ldab, MKL_Complex8* afb, const long long int* ldafb,
              char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cpbsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* kd, const long long int* nrhs, MKL_Complex8* ab,
             const long long int* ldab, MKL_Complex8* afb, const long long int* ldafb,
             char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cpbsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* kd, const long long int* nrhs, MKL_Complex8* ab,
              const long long int* ldab, MKL_Complex8* afb, const long long int* ldafb,
              char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );

void CPBTF2( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, long long int* info );
void CPBTF2_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, long long int* info );
void cpbtf2( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, long long int* info );
void cpbtf2_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, long long int* info );

void CPBTRF( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, long long int* info );
void CPBTRF_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, long long int* info );
void cpbtrf( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex8* ab, const long long int* ldab, long long int* info );
void cpbtrf_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex8* ab, const long long int* ldab, long long int* info );

void CPBTRS( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const MKL_Complex8* ab, const long long int* ldab,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void CPBTRS_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const MKL_Complex8* ab, const long long int* ldab,
              MKL_Complex8* b, const long long int* ldb, long long int* info );
void cpbtrs( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const MKL_Complex8* ab, const long long int* ldab,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void cpbtrs_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const MKL_Complex8* ab, const long long int* ldab,
              MKL_Complex8* b, const long long int* ldb, long long int* info );

void CPFTRF( const char* transr, const char* uplo, const long long int* n,
             MKL_Complex8* a, long long int* info );
void CPFTRF_( const char* transr, const char* uplo, const long long int* n,
              MKL_Complex8* a, long long int* info );
void cpftrf( const char* transr, const char* uplo, const long long int* n,
             MKL_Complex8* a, long long int* info );
void cpftrf_( const char* transr, const char* uplo, const long long int* n,
              MKL_Complex8* a, long long int* info );

void CPFTRI( const char* transr, const char* uplo, const long long int* n,
             MKL_Complex8* a, long long int* info );
void CPFTRI_( const char* transr, const char* uplo, const long long int* n,
              MKL_Complex8* a, long long int* info );
void cpftri( const char* transr, const char* uplo, const long long int* n,
             MKL_Complex8* a, long long int* info );
void cpftri_( const char* transr, const char* uplo, const long long int* n,
              MKL_Complex8* a, long long int* info );

void CPFTRS( const char* transr, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* a, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CPFTRS_( const char* transr, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void cpftrs( const char* transr, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* a, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void cpftrs_( const char* transr, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CPOCON( const char* uplo, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const float* anorm, float* rcond,
             MKL_Complex8* work, float* rwork, long long int* info );
void CPOCON_( const char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const float* anorm, float* rcond,
              MKL_Complex8* work, float* rwork, long long int* info );
void cpocon( const char* uplo, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const float* anorm, float* rcond,
             MKL_Complex8* work, float* rwork, long long int* info );
void cpocon_( const char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const float* anorm, float* rcond,
              MKL_Complex8* work, float* rwork, long long int* info );

void CPOEQUB( const long long int* n, const MKL_Complex8* a, const long long int* lda,
              float* s, float* scond, float* amax, long long int* info );
void CPOEQUB_( const long long int* n, const MKL_Complex8* a, const long long int* lda,
               float* s, float* scond, float* amax, long long int* info );
void cpoequb( const long long int* n, const MKL_Complex8* a, const long long int* lda,
              float* s, float* scond, float* amax, long long int* info );
void cpoequb_( const long long int* n, const MKL_Complex8* a, const long long int* lda,
               float* s, float* scond, float* amax, long long int* info );

void CPOEQU( const long long int* n, const MKL_Complex8* a, const long long int* lda,
             float* s, float* scond, float* amax, long long int* info );
void CPOEQU_( const long long int* n, const MKL_Complex8* a, const long long int* lda,
              float* s, float* scond, float* amax, long long int* info );
void cpoequ( const long long int* n, const MKL_Complex8* a, const long long int* lda,
             float* s, float* scond, float* amax, long long int* info );
void cpoequ_( const long long int* n, const MKL_Complex8* a, const long long int* lda,
              float* s, float* scond, float* amax, long long int* info );

void CPORFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* af,
             const long long int* ldaf, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void CPORFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void cporfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* af,
             const long long int* ldaf, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void cporfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CPORFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const float* s,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void CPORFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
               const MKL_Complex8* af, const long long int* ldaf, const float* s,
               const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );
void cporfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const float* s,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void cporfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
               const MKL_Complex8* af, const long long int* ldaf, const float* s,
               const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );

void CPOSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void CPOSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void cposv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void cposv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, long long int* info );

void CPOSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* af, const long long int* ldaf, char* equed, float* s,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void CPOSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, char* equed, float* s,
              MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              MKL_Complex8* work, float* rwork, long long int* info );
void cposvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* af, const long long int* ldaf, char* equed, float* s,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void cposvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, char* equed, float* s,
              MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              MKL_Complex8* work, float* rwork, long long int* info );

void CPOSVXX( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, char* equed, float* s,
              MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void CPOSVXX_( const char* fact, const char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* af, const long long int* ldaf, char* equed, float* s,
               MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );
void cposvxx( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, char* equed, float* s,
              MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void cposvxx_( const char* fact, const char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* af, const long long int* ldaf, char* equed, float* s,
               MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
               const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               MKL_Complex8* work, float* rwork, long long int* info );

void CPOTF2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void CPOTF2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );
void cpotf2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void cpotf2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );

void CPOTRF( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void CPOTRF_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );
void cpotrf( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void cpotrf_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );

void CPOTRI( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void CPOTRI_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );
void cpotri( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* info );
void cpotri_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* info );

void CPOTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CPOTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void cpotrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void cpotrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CPPCON( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             const float* anorm, float* rcond, MKL_Complex8* work,
             float* rwork, long long int* info );
void CPPCON_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              const float* anorm, float* rcond, MKL_Complex8* work,
              float* rwork, long long int* info );
void cppcon( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             const float* anorm, float* rcond, MKL_Complex8* work,
             float* rwork, long long int* info );
void cppcon_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              const float* anorm, float* rcond, MKL_Complex8* work,
              float* rwork, long long int* info );

void CPPEQU( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             float* s, float* scond, float* amax, long long int* info );
void CPPEQU_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              float* s, float* scond, float* amax, long long int* info );
void cppequ( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             float* s, float* scond, float* amax, long long int* info );
void cppequ_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              float* s, float* scond, float* amax, long long int* info );

void CPPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const MKL_Complex8* afp,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void CPPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const MKL_Complex8* afp,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void cpprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const MKL_Complex8* afp,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void cpprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const MKL_Complex8* afp,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CPPSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* ap, MKL_Complex8* b, const long long int* ldb,
            long long int* info );
void CPPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* ap, MKL_Complex8* b, const long long int* ldb,
             long long int* info );
void cppsv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* ap, MKL_Complex8* b, const long long int* ldb,
            long long int* info );
void cppsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* ap, MKL_Complex8* b, const long long int* ldb,
             long long int* info );

void CPPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, MKL_Complex8* ap, MKL_Complex8* afp,
             char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void CPPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* ap, MKL_Complex8* afp,
              char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cppsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, MKL_Complex8* ap, MKL_Complex8* afp,
             char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cppsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* ap, MKL_Complex8* afp,
              char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );

void CPPTRF( const char* uplo, const long long int* n, MKL_Complex8* ap,
             long long int* info );
void CPPTRF_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              long long int* info );
void cpptrf( const char* uplo, const long long int* n, MKL_Complex8* ap,
             long long int* info );
void cpptrf_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              long long int* info );

void CPPTRI( const char* uplo, const long long int* n, MKL_Complex8* ap,
             long long int* info );
void CPPTRI_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              long long int* info );
void cpptri( const char* uplo, const long long int* n, MKL_Complex8* ap,
             long long int* info );
void cpptri_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              long long int* info );

void CPPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, MKL_Complex8* b, const long long int* ldb,
             long long int* info );
void CPPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, MKL_Complex8* b, const long long int* ldb,
              long long int* info );
void cpptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, MKL_Complex8* b, const long long int* ldb,
             long long int* info );
void cpptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, MKL_Complex8* b, const long long int* ldb,
              long long int* info );

void CPSTF2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* piv, long long int* rank, const float* tol,
             float* work, long long int* info );
void CPSTF2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const float* tol, float* work, long long int* info );
void cpstf2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* piv, long long int* rank, const float* tol,
             float* work, long long int* info );
void cpstf2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const float* tol, float* work, long long int* info );

void CPSTRF( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* piv, long long int* rank, const float* tol,
             float* work, long long int* info );
void CPSTRF_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const float* tol, float* work, long long int* info );
void cpstrf( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* piv, long long int* rank, const float* tol,
             float* work, long long int* info );
void cpstrf_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const float* tol, float* work, long long int* info );

void CPTCON( const long long int* n, const float* d, const MKL_Complex8* e,
             const float* anorm, float* rcond, float* rwork, long long int* info );
void CPTCON_( const long long int* n, const float* d, const MKL_Complex8* e,
              const float* anorm, float* rcond, float* rwork, long long int* info );
void cptcon( const long long int* n, const float* d, const MKL_Complex8* e,
             const float* anorm, float* rcond, float* rwork, long long int* info );
void cptcon_( const long long int* n, const float* d, const MKL_Complex8* e,
              const float* anorm, float* rcond, float* rwork, long long int* info );

void CPTEQR( const char* compz, const long long int* n, float* d, float* e,
             MKL_Complex8* z, const long long int* ldz, float* work, long long int* info );
void CPTEQR_( const char* compz, const long long int* n, float* d, float* e,
              MKL_Complex8* z, const long long int* ldz, float* work,
              long long int* info );
void cpteqr( const char* compz, const long long int* n, float* d, float* e,
             MKL_Complex8* z, const long long int* ldz, float* work, long long int* info );
void cpteqr_( const char* compz, const long long int* n, float* d, float* e,
              MKL_Complex8* z, const long long int* ldz, float* work,
              long long int* info );

void CPTRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* d, const MKL_Complex8* e, const float* df,
             const MKL_Complex8* ef, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void CPTRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* d, const MKL_Complex8* e, const float* df,
              const MKL_Complex8* ef, const MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* ferr, float* berr, MKL_Complex8* work, float* rwork,
              long long int* info );
void cptrfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* d, const MKL_Complex8* e, const float* df,
             const MKL_Complex8* ef, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void cptrfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* d, const MKL_Complex8* e, const float* df,
              const MKL_Complex8* ef, const MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
              float* ferr, float* berr, MKL_Complex8* work, float* rwork,
              long long int* info );

void CPTSV( const long long int* n, const long long int* nrhs, float* d, MKL_Complex8* e,
            MKL_Complex8* b, const long long int* ldb, long long int* info );
void CPTSV_( const long long int* n, const long long int* nrhs, float* d, MKL_Complex8* e,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void cptsv( const long long int* n, const long long int* nrhs, float* d, MKL_Complex8* e,
            MKL_Complex8* b, const long long int* ldb, long long int* info );
void cptsv_( const long long int* n, const long long int* nrhs, float* d, MKL_Complex8* e,
             MKL_Complex8* b, const long long int* ldb, long long int* info );

void CPTSVX( const char* fact, const long long int* n, const long long int* nrhs,
             const float* d, const MKL_Complex8* e, float* df,
             MKL_Complex8* ef, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void CPTSVX_( const char* fact, const long long int* n, const long long int* nrhs,
              const float* d, const MKL_Complex8* e, float* df,
              MKL_Complex8* ef, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cptsvx( const char* fact, const long long int* n, const long long int* nrhs,
             const float* d, const MKL_Complex8* e, float* df,
             MKL_Complex8* ef, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cptsvx_( const char* fact, const long long int* n, const long long int* nrhs,
              const float* d, const MKL_Complex8* e, float* df,
              MKL_Complex8* ef, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );

void CPTTRF( const long long int* n, float* d, MKL_Complex8* e, long long int* info );
void CPTTRF_( const long long int* n, float* d, MKL_Complex8* e, long long int* info );
void cpttrf( const long long int* n, float* d, MKL_Complex8* e, long long int* info );
void cpttrf_( const long long int* n, float* d, MKL_Complex8* e, long long int* info );

void CPTTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* d, const MKL_Complex8* e, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CPTTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* d, const MKL_Complex8* e, MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void cpttrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* d, const MKL_Complex8* e, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void cpttrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* d, const MKL_Complex8* e, MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CPTTS2( const long long int* iuplo, const long long int* n, const long long int* nrhs,
             const float* d, const MKL_Complex8* e, MKL_Complex8* b,
             const long long int* ldb );
void CPTTS2_( const long long int* iuplo, const long long int* n, const long long int* nrhs,
              const float* d, const MKL_Complex8* e, MKL_Complex8* b,
              const long long int* ldb );
void cptts2( const long long int* iuplo, const long long int* n, const long long int* nrhs,
             const float* d, const MKL_Complex8* e, MKL_Complex8* b,
             const long long int* ldb );
void cptts2_( const long long int* iuplo, const long long int* n, const long long int* nrhs,
              const float* d, const MKL_Complex8* e, MKL_Complex8* b,
              const long long int* ldb );

void CROT( const long long int* n, MKL_Complex8* cx, const long long int* incx,
           MKL_Complex8* cy, const long long int* incy, const float* c,
           const MKL_Complex8* s );
void CROT_( const long long int* n, MKL_Complex8* cx, const long long int* incx,
            MKL_Complex8* cy, const long long int* incy, const float* c,
            const MKL_Complex8* s );
void crot( const long long int* n, MKL_Complex8* cx, const long long int* incx,
           MKL_Complex8* cy, const long long int* incy, const float* c,
           const MKL_Complex8* s );
void crot_( const long long int* n, MKL_Complex8* cx, const long long int* incx,
            MKL_Complex8* cy, const long long int* incy, const float* c,
            const MKL_Complex8* s );

void CSPCON( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             const long long int* ipiv, const float* anorm, float* rcond,
             MKL_Complex8* work, long long int* info );
void CSPCON_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              const long long int* ipiv, const float* anorm, float* rcond,
              MKL_Complex8* work, long long int* info );
void cspcon( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             const long long int* ipiv, const float* anorm, float* rcond,
             MKL_Complex8* work, long long int* info );
void cspcon_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              const long long int* ipiv, const float* anorm, float* rcond,
              MKL_Complex8* work, long long int* info );

void CSPMV( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
            const MKL_Complex8* ap, const MKL_Complex8* x, const long long int* incx,
            const MKL_Complex8* beta, MKL_Complex8* y, const long long int* incy );
void CSPMV_( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
             const MKL_Complex8* ap, const MKL_Complex8* x,
             const long long int* incx, const MKL_Complex8* beta, MKL_Complex8* y,
             const long long int* incy );
void cspmv( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
            const MKL_Complex8* ap, const MKL_Complex8* x, const long long int* incx,
            const MKL_Complex8* beta, MKL_Complex8* y, const long long int* incy );
void cspmv_( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
             const MKL_Complex8* ap, const MKL_Complex8* x,
             const long long int* incx, const MKL_Complex8* beta, MKL_Complex8* y,
             const long long int* incy );

void CSPR( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
           const MKL_Complex8* x, const long long int* incx, MKL_Complex8* ap );
void CSPR_( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
            const MKL_Complex8* x, const long long int* incx, MKL_Complex8* ap );
void cspr( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
           const MKL_Complex8* x, const long long int* incx, MKL_Complex8* ap );
void cspr_( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
            const MKL_Complex8* x, const long long int* incx, MKL_Complex8* ap );

void CSPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const MKL_Complex8* afp,
             const long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void CSPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const MKL_Complex8* afp,
              const long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
              MKL_Complex8* work, float* rwork, long long int* info );
void csprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const MKL_Complex8* afp,
             const long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
             MKL_Complex8* work, float* rwork, long long int* info );
void csprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const MKL_Complex8* afp,
              const long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* ferr, float* berr,
              MKL_Complex8* work, float* rwork, long long int* info );

void CSPSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* ap, long long int* ipiv, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void CSPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* ap, long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void cspsv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* ap, long long int* ipiv, MKL_Complex8* b,
            const long long int* ldb, long long int* info );
void cspsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* ap, long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );

void CSPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* ap, MKL_Complex8* afp,
             long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void CSPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* ap, MKL_Complex8* afp,
              long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cspsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* ap, MKL_Complex8* afp,
             long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void cspsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* ap, MKL_Complex8* afp,
              long long int* ipiv, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );

void CSPTRF( const char* uplo, const long long int* n, MKL_Complex8* ap,
             long long int* ipiv, long long int* info );
void CSPTRF_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              long long int* ipiv, long long int* info );
void csptrf( const char* uplo, const long long int* n, MKL_Complex8* ap,
             long long int* ipiv, long long int* info );
void csptrf_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              long long int* ipiv, long long int* info );

void CSPTRI( const char* uplo, const long long int* n, MKL_Complex8* ap,
             const long long int* ipiv, MKL_Complex8* work, long long int* info );
void CSPTRI_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              const long long int* ipiv, MKL_Complex8* work, long long int* info );
void csptri( const char* uplo, const long long int* n, MKL_Complex8* ap,
             const long long int* ipiv, MKL_Complex8* work, long long int* info );
void csptri_( const char* uplo, const long long int* n, MKL_Complex8* ap,
              const long long int* ipiv, MKL_Complex8* work, long long int* info );

void CSPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CSPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const long long int* ipiv, MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void csptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* ap, const long long int* ipiv, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void csptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* ap, const long long int* ipiv, MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CSRSCL( const long long int* n, const float* sa, MKL_Complex8* sx,
             const long long int* incx );
void CSRSCL_( const long long int* n, const float* sa, MKL_Complex8* sx,
              const long long int* incx );
void csrscl( const long long int* n, const float* sa, MKL_Complex8* sx,
             const long long int* incx );
void csrscl_( const long long int* n, const float* sa, MKL_Complex8* sx,
              const long long int* incx );

void CSTEDC( const char* compz, const long long int* n, float* d, float* e,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void CSTEDC_( const char* compz, const long long int* n, float* d, float* e,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              const long long int* lwork, float* rwork, const long long int* lrwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void cstedc( const char* compz, const long long int* n, float* d, float* e,
             MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
             const long long int* lwork, float* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void cstedc_( const char* compz, const long long int* n, float* d, float* e,
              MKL_Complex8* z, const long long int* ldz, MKL_Complex8* work,
              const long long int* lwork, float* rwork, const long long int* lrwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void CSTEGR( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, long long int* isuppz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void CSTEGR_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, long long int* isuppz,
              float* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );
void cstegr( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             MKL_Complex8* z, const long long int* ldz, long long int* isuppz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void cstegr_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              MKL_Complex8* z, const long long int* ldz, long long int* isuppz,
              float* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );

void CSTEIN( const long long int* n, const float* d, const float* e,
             const long long int* m, const float* w, const long long int* iblock,
             const long long int* isplit, MKL_Complex8* z, const long long int* ldz,
             float* work, long long int* iwork, long long int* ifail, long long int* info );
void CSTEIN_( const long long int* n, const float* d, const float* e,
              const long long int* m, const float* w, const long long int* iblock,
              const long long int* isplit, MKL_Complex8* z, const long long int* ldz,
              float* work, long long int* iwork, long long int* ifail, long long int* info );
void cstein( const long long int* n, const float* d, const float* e,
             const long long int* m, const float* w, const long long int* iblock,
             const long long int* isplit, MKL_Complex8* z, const long long int* ldz,
             float* work, long long int* iwork, long long int* ifail, long long int* info );
void cstein_( const long long int* n, const float* d, const float* e,
              const long long int* m, const float* w, const long long int* iblock,
              const long long int* isplit, MKL_Complex8* z, const long long int* ldz,
              float* work, long long int* iwork, long long int* ifail, long long int* info );

void CSTEMR( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, long long int* m, float* w, MKL_Complex8* z,
             const long long int* ldz, const long long int* nzc, long long int* isuppz,
             long long int* tryrac, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void CSTEMR_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, long long int* m, float* w, MKL_Complex8* z,
              const long long int* ldz, const long long int* nzc, long long int* isuppz,
              long long int* tryrac, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void cstemr( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, long long int* m, float* w, MKL_Complex8* z,
             const long long int* ldz, const long long int* nzc, long long int* isuppz,
             long long int* tryrac, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void cstemr_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, long long int* m, float* w, MKL_Complex8* z,
              const long long int* ldz, const long long int* nzc, long long int* isuppz,
              long long int* tryrac, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void CSTEQR( const char* compz, const long long int* n, float* d, float* e,
             MKL_Complex8* z, const long long int* ldz, float* work, long long int* info );
void CSTEQR_( const char* compz, const long long int* n, float* d, float* e,
              MKL_Complex8* z, const long long int* ldz, float* work,
              long long int* info );
void csteqr( const char* compz, const long long int* n, float* d, float* e,
             MKL_Complex8* z, const long long int* ldz, float* work, long long int* info );
void csteqr_( const char* compz, const long long int* n, float* d, float* e,
              MKL_Complex8* z, const long long int* ldz, float* work,
              long long int* info );

void CSYCON( const char* uplo, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const long long int* ipiv, const float* anorm,
             float* rcond, MKL_Complex8* work, long long int* info );
void CSYCON_( const char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, const float* anorm,
              float* rcond, MKL_Complex8* work, long long int* info );
void csycon( const char* uplo, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const long long int* ipiv, const float* anorm,
             float* rcond, MKL_Complex8* work, long long int* info );
void csycon_( const char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, const float* anorm,
              float* rcond, MKL_Complex8* work, long long int* info );

void CSYEQUB( char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* s, float* scond, float* amax,
              MKL_Complex8* work, long long int* info );
void CSYEQUB_( char* uplo, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* s, float* scond, float* amax,
               MKL_Complex8* work, long long int* info );
void csyequb( char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, float* s, float* scond, float* amax,
              MKL_Complex8* work, long long int* info );
void csyequb_( char* uplo, const long long int* n, const MKL_Complex8* a,
               const long long int* lda, float* s, float* scond, float* amax,
               MKL_Complex8* work, long long int* info );

void CSYMV( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
            const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* x,
            const long long int* incx, const MKL_Complex8* beta, MKL_Complex8* y,
            const long long int* incy );
void CSYMV_( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* x,
             const long long int* incx, const MKL_Complex8* beta, MKL_Complex8* y,
             const long long int* incy );
void csymv( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
            const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* x,
            const long long int* incx, const MKL_Complex8* beta, MKL_Complex8* y,
            const long long int* incy );
void csymv_( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* x,
             const long long int* incx, const MKL_Complex8* beta, MKL_Complex8* y,
             const long long int* incy );

void CSYR( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
           const MKL_Complex8* x, const long long int* incx, MKL_Complex8* a,
           const long long int* lda );
void CSYR_( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
            const MKL_Complex8* x, const long long int* incx, MKL_Complex8* a,
            const long long int* lda );
void csyr( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
           const MKL_Complex8* x, const long long int* incx, MKL_Complex8* a,
           const long long int* lda );
void csyr_( const char* uplo, const long long int* n, const MKL_Complex8* alpha,
            const MKL_Complex8* x, const long long int* incx, MKL_Complex8* a,
            const long long int* lda );

void CSYRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* af,
             const long long int* ldaf, const long long int* ipiv, const MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
             float* ferr, float* berr, MKL_Complex8* work, float* rwork,
             long long int* info );
void CSYRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void csyrfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const MKL_Complex8* af,
             const long long int* ldaf, const long long int* ipiv, const MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
             float* ferr, float* berr, MKL_Complex8* work, float* rwork,
             long long int* info );
void csyrfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CSYRFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const float* s, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void CSYRFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
               const MKL_Complex8* af, const long long int* ldaf,
               const long long int* ipiv, const float* s, const MKL_Complex8* b,
               const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
               float* rcond, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, MKL_Complex8* work,
               float* rwork, long long int* info );
void csyrfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* af, const long long int* ldaf, const long long int* ipiv,
              const float* s, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void csyrfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
               const MKL_Complex8* af, const long long int* ldaf,
               const long long int* ipiv, const float* s, const MKL_Complex8* b,
               const long long int* ldb, MKL_Complex8* x, const long long int* ldx,
               float* rcond, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, MKL_Complex8* work,
               float* rwork, long long int* info );

void CSYSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* a, const long long int* lda, long long int* ipiv,
            MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
            const long long int* lwork, long long int* info );
void CSYSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void csysv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex8* a, const long long int* lda, long long int* ipiv,
            MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
            const long long int* lwork, long long int* info );
void csysv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex8* a, const long long int* lda, long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, MKL_Complex8* work,
             const long long int* lwork, long long int* info );

void CSYSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* info );
void CSYSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* info );
void csysvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             MKL_Complex8* work, const long long int* lwork, float* rwork,
             long long int* info );
void csysvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              MKL_Complex8* work, const long long int* lwork, float* rwork,
              long long int* info );

void CSYSVXX( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* rpvgrw,
              float* berr, const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void CSYSVXX_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
               char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
               MKL_Complex8* x, const long long int* ldx, float* rcond,
               float* rpvgrw, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, MKL_Complex8* work,
               float* rwork, long long int* info );
void csysvxx( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
              char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* x, const long long int* ldx, float* rcond, float* rpvgrw,
              float* berr, const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              MKL_Complex8* work, float* rwork, long long int* info );
void csysvxx_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex8* a, const long long int* lda,
               MKL_Complex8* af, const long long int* ldaf, long long int* ipiv,
               char* equed, float* s, MKL_Complex8* b, const long long int* ldb,
               MKL_Complex8* x, const long long int* ldx, float* rcond,
               float* rpvgrw, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, MKL_Complex8* work,
               float* rwork, long long int* info );

void CSYTF2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void CSYTF2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void csytf2( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void csytf2_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void CSYTRF( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CSYTRF_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void csytrf( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, long long int* ipiv, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void csytrf_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, long long int* ipiv, MKL_Complex8* work,
              const long long int* lwork, long long int* info );

void CSYTRI( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
             long long int* info );
void CSYTRI_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              long long int* info );
void csytri( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
             long long int* info );
void csytri_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              long long int* info );

void CSYTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void CSYTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex8* b, const long long int* ldb, long long int* info );
void csytrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void csytrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex8* b, const long long int* ldb, long long int* info );

void CTBCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const long long int* kd, const MKL_Complex8* ab,
             const long long int* ldab, float* rcond, MKL_Complex8* work,
             float* rwork, long long int* info );
void CTBCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* kd, const MKL_Complex8* ab,
              const long long int* ldab, float* rcond, MKL_Complex8* work,
              float* rwork, long long int* info );
void ctbcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const long long int* kd, const MKL_Complex8* ab,
             const long long int* ldab, float* rcond, MKL_Complex8* work,
             float* rwork, long long int* info );
void ctbcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* kd, const MKL_Complex8* ab,
              const long long int* ldab, float* rcond, MKL_Complex8* work,
              float* rwork, long long int* info );

void CTBRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const MKL_Complex8* ab, const long long int* ldab,
             const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void CTBRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const MKL_Complex8* ab, const long long int* ldab,
              const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void ctbrfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const MKL_Complex8* ab, const long long int* ldab,
             const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void ctbrfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const MKL_Complex8* ab, const long long int* ldab,
              const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CTBTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CTBTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void ctbtrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void ctbtrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const MKL_Complex8* ab, const long long int* ldab, MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CTFSM( const char* transr, const char* side, const char* uplo,
            const char* trans, const char* diag, const long long int* m,
            const long long int* n, const MKL_Complex8* alpha, const MKL_Complex8* a,
            MKL_Complex8* b, const long long int* ldb );
void CTFSM_( const char* transr, const char* side, const char* uplo,
             const char* trans, const char* diag, const long long int* m,
             const long long int* n, const MKL_Complex8* alpha,
             const MKL_Complex8* a, MKL_Complex8* b, const long long int* ldb );
void ctfsm( const char* transr, const char* side, const char* uplo,
            const char* trans, const char* diag, const long long int* m,
            const long long int* n, const MKL_Complex8* alpha, const MKL_Complex8* a,
            MKL_Complex8* b, const long long int* ldb );
void ctfsm_( const char* transr, const char* side, const char* uplo,
             const char* trans, const char* diag, const long long int* m,
             const long long int* n, const MKL_Complex8* alpha,
             const MKL_Complex8* a, MKL_Complex8* b, const long long int* ldb );

void CTFTRI( const char* transr, const char* uplo, const char* diag,
             const long long int* n, MKL_Complex8* a, long long int* info );
void CTFTRI_( const char* transr, const char* uplo, const char* diag,
              const long long int* n, MKL_Complex8* a, long long int* info );
void ctftri( const char* transr, const char* uplo, const char* diag,
             const long long int* n, MKL_Complex8* a, long long int* info );
void ctftri_( const char* transr, const char* uplo, const char* diag,
              const long long int* n, MKL_Complex8* a, long long int* info );

void CTFTTP( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex8* arf, MKL_Complex8* ap, long long int* info );
void CTFTTP_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex8* arf, MKL_Complex8* ap, long long int* info );
void ctfttp( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex8* arf, MKL_Complex8* ap, long long int* info );
void ctfttp_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex8* arf, MKL_Complex8* ap, long long int* info );

void CTFTTR( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex8* arf, MKL_Complex8* a, const long long int* lda,
             long long int* info );
void CTFTTR_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex8* arf, MKL_Complex8* a, const long long int* lda,
              long long int* info );
void ctfttr( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex8* arf, MKL_Complex8* a, const long long int* lda,
             long long int* info );
void ctfttr_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex8* arf, MKL_Complex8* a, const long long int* lda,
              long long int* info );

void CTGEVC( const char* side, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex8* s, const long long int* lds,
             const MKL_Complex8* p, const long long int* ldp, MKL_Complex8* vl,
             const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, MKL_Complex8* work, float* rwork,
             long long int* info );
void CTGEVC_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex8* s, const long long int* lds,
              const MKL_Complex8* p, const long long int* ldp, MKL_Complex8* vl,
              const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, MKL_Complex8* work, float* rwork,
              long long int* info );
void ctgevc( const char* side, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex8* s, const long long int* lds,
             const MKL_Complex8* p, const long long int* ldp, MKL_Complex8* vl,
             const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, MKL_Complex8* work, float* rwork,
             long long int* info );
void ctgevc_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex8* s, const long long int* lds,
              const MKL_Complex8* p, const long long int* ldp, MKL_Complex8* vl,
              const long long int* ldvl, MKL_Complex8* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, MKL_Complex8* work, float* rwork,
              long long int* info );

void CTGEX2( const long long int* wantq, const long long int* wantz, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* z, const long long int* ldz, const long long int* j1,
             long long int* info );
void CTGEX2_( const long long int* wantq, const long long int* wantz, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* z, const long long int* ldz, const long long int* j1,
              long long int* info );
void ctgex2( const long long int* wantq, const long long int* wantz, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* z, const long long int* ldz, const long long int* j1,
             long long int* info );
void ctgex2_( const long long int* wantq, const long long int* wantz, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* z, const long long int* ldz, const long long int* j1,
              long long int* info );

void CTGEXC( const long long int* wantq, const long long int* wantz, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* z, const long long int* ldz, const long long int* ifst,
             long long int* ilst, long long int* info );
void CTGEXC_( const long long int* wantq, const long long int* wantz, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* z, const long long int* ldz, const long long int* ifst,
              long long int* ilst, long long int* info );
void ctgexc( const long long int* wantq, const long long int* wantz, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* z, const long long int* ldz, const long long int* ifst,
             long long int* ilst, long long int* info );
void ctgexc_( const long long int* wantq, const long long int* wantz, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* z, const long long int* ldz, const long long int* ifst,
              long long int* ilst, long long int* info );

void CTGSEN( const long long int* ijob, const long long int* wantq, const long long int* wantz,
             const long long int* select, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* q,
             const long long int* ldq, MKL_Complex8* z, const long long int* ldz,
             long long int* m, float* pl, float* pr, float* dif, MKL_Complex8* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void CTGSEN_( const long long int* ijob, const long long int* wantq, const long long int* wantz,
              const long long int* select, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* q,
              const long long int* ldq, MKL_Complex8* z, const long long int* ldz,
              long long int* m, float* pl, float* pr, float* dif, MKL_Complex8* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void ctgsen( const long long int* ijob, const long long int* wantq, const long long int* wantz,
             const long long int* select, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* q,
             const long long int* ldq, MKL_Complex8* z, const long long int* ldz,
             long long int* m, float* pl, float* pr, float* dif, MKL_Complex8* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void ctgsen_( const long long int* ijob, const long long int* wantq, const long long int* wantz,
              const long long int* select, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* alpha, MKL_Complex8* beta, MKL_Complex8* q,
              const long long int* ldq, MKL_Complex8* z, const long long int* ldz,
              long long int* m, float* pl, float* pr, float* dif, MKL_Complex8* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void CTGSJA( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             const long long int* k, const long long int* l, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             const float* tola, const float* tolb, float* alpha, float* beta,
             MKL_Complex8* u, const long long int* ldu, MKL_Complex8* v,
             const long long int* ldv, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* work, long long int* ncycle, long long int* info );
void CTGSJA_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              const long long int* k, const long long int* l, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              const float* tola, const float* tolb, float* alpha, float* beta,
              MKL_Complex8* u, const long long int* ldu, MKL_Complex8* v,
              const long long int* ldv, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* work, long long int* ncycle, long long int* info );
void ctgsja( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             const long long int* k, const long long int* l, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             const float* tola, const float* tolb, float* alpha, float* beta,
             MKL_Complex8* u, const long long int* ldu, MKL_Complex8* v,
             const long long int* ldv, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* work, long long int* ncycle, long long int* info );
void ctgsja_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              const long long int* k, const long long int* l, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              const float* tola, const float* tolb, float* alpha, float* beta,
              MKL_Complex8* u, const long long int* ldu, MKL_Complex8* v,
              const long long int* ldv, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* work, long long int* ncycle, long long int* info );

void CTGSNA( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* vl,
             const long long int* ldvl, const MKL_Complex8* vr, const long long int* ldvr,
             float* s, float* dif, const long long int* mm, long long int* m,
             MKL_Complex8* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void CTGSNA_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* b, const long long int* ldb,
              const MKL_Complex8* vl, const long long int* ldvl,
              const MKL_Complex8* vr, const long long int* ldvr, float* s,
              float* dif, const long long int* mm, long long int* m, MKL_Complex8* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void ctgsna( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* vl,
             const long long int* ldvl, const MKL_Complex8* vr, const long long int* ldvr,
             float* s, float* dif, const long long int* mm, long long int* m,
             MKL_Complex8* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void ctgsna_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* b, const long long int* ldb,
              const MKL_Complex8* vl, const long long int* ldvl,
              const MKL_Complex8* vr, const long long int* ldvr, float* s,
              float* dif, const long long int* mm, long long int* m, MKL_Complex8* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void CTGSY2( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* c,
             const long long int* ldc, const MKL_Complex8* d, const long long int* ldd,
             const MKL_Complex8* e, const long long int* lde, MKL_Complex8* f,
             const long long int* ldf, float* scale, float* rdsum, float* rdscal,
             long long int* info );
void CTGSY2_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* c,
              const long long int* ldc, const MKL_Complex8* d, const long long int* ldd,
              const MKL_Complex8* e, const long long int* lde, MKL_Complex8* f,
              const long long int* ldf, float* scale, float* rdsum, float* rdscal,
              long long int* info );
void ctgsy2( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* c,
             const long long int* ldc, const MKL_Complex8* d, const long long int* ldd,
             const MKL_Complex8* e, const long long int* lde, MKL_Complex8* f,
             const long long int* ldf, float* scale, float* rdsum, float* rdscal,
             long long int* info );
void ctgsy2_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* c,
              const long long int* ldc, const MKL_Complex8* d, const long long int* ldd,
              const MKL_Complex8* e, const long long int* lde, MKL_Complex8* f,
              const long long int* ldf, float* scale, float* rdsum, float* rdscal,
              long long int* info );

void CTGSYL( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* c,
             const long long int* ldc, const MKL_Complex8* d, const long long int* ldd,
             const MKL_Complex8* e, const long long int* lde, MKL_Complex8* f,
             const long long int* ldf, float* scale, float* dif, MKL_Complex8* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void CTGSYL_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* c,
              const long long int* ldc, const MKL_Complex8* d, const long long int* ldd,
              const MKL_Complex8* e, const long long int* lde, MKL_Complex8* f,
              const long long int* ldf, float* scale, float* dif, MKL_Complex8* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void ctgsyl( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* c,
             const long long int* ldc, const MKL_Complex8* d, const long long int* ldd,
             const MKL_Complex8* e, const long long int* lde, MKL_Complex8* f,
             const long long int* ldf, float* scale, float* dif, MKL_Complex8* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void ctgsyl_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* b, const long long int* ldb, MKL_Complex8* c,
              const long long int* ldc, const MKL_Complex8* d, const long long int* ldd,
              const MKL_Complex8* e, const long long int* lde, MKL_Complex8* f,
              const long long int* ldf, float* scale, float* dif, MKL_Complex8* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void CTPCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const MKL_Complex8* ap, float* rcond,
             MKL_Complex8* work, float* rwork, long long int* info );
void CTPCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex8* ap, float* rcond,
              MKL_Complex8* work, float* rwork, long long int* info );
void ctpcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const MKL_Complex8* ap, float* rcond,
             MKL_Complex8* work, float* rwork, long long int* info );
void ctpcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex8* ap, float* rcond,
              MKL_Complex8* work, float* rwork, long long int* info );

void CTPRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex8* ap,
             const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void CTPRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex8* ap,
              const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );
void ctprfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex8* ap,
             const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* x,
             const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
             float* rwork, long long int* info );
void ctprfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex8* ap,
              const MKL_Complex8* b, const long long int* ldb, const MKL_Complex8* x,
              const long long int* ldx, float* ferr, float* berr, MKL_Complex8* work,
              float* rwork, long long int* info );

void CTPTRI( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex8* ap, long long int* info );
void CTPTRI_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex8* ap, long long int* info );
void ctptri( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex8* ap, long long int* info );
void ctptri_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex8* ap, long long int* info );

void CTPTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex8* ap,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void CTPTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex8* ap,
              MKL_Complex8* b, const long long int* ldb, long long int* info );
void ctptrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex8* ap,
             MKL_Complex8* b, const long long int* ldb, long long int* info );
void ctptrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex8* ap,
              MKL_Complex8* b, const long long int* ldb, long long int* info );

void CTPTTF( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex8* ap, MKL_Complex8* arf, long long int* info );
void CTPTTF_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex8* ap, MKL_Complex8* arf, long long int* info );
void ctpttf( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex8* ap, MKL_Complex8* arf, long long int* info );
void ctpttf_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex8* ap, MKL_Complex8* arf, long long int* info );

void CTPTTR( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             MKL_Complex8* a, const long long int* lda, long long int* info );
void CTPTTR_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              MKL_Complex8* a, const long long int* lda, long long int* info );
void ctpttr( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             MKL_Complex8* a, const long long int* lda, long long int* info );
void ctpttr_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              MKL_Complex8* a, const long long int* lda, long long int* info );

void CTRCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const MKL_Complex8* a, const long long int* lda,
             float* rcond, MKL_Complex8* work, float* rwork, long long int* info );
void CTRCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex8* a, const long long int* lda,
              float* rcond, MKL_Complex8* work, float* rwork, long long int* info );
void ctrcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const MKL_Complex8* a, const long long int* lda,
             float* rcond, MKL_Complex8* work, float* rwork, long long int* info );
void ctrcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex8* a, const long long int* lda,
              float* rcond, MKL_Complex8* work, float* rwork, long long int* info );

void CTREVC( const char* side, const char* howmny, const long long int* select,
             const long long int* n, MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
             const long long int* ldvr, const long long int* mm, long long int* m,
             MKL_Complex8* work, float* rwork, long long int* info );
void CTREVC_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
              const long long int* ldvr, const long long int* mm, long long int* m,
              MKL_Complex8* work, float* rwork, long long int* info );
void ctrevc( const char* side, const char* howmny, const long long int* select,
             const long long int* n, MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
             const long long int* ldvr, const long long int* mm, long long int* m,
             MKL_Complex8* work, float* rwork, long long int* info );
void ctrevc_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* vl, const long long int* ldvl, MKL_Complex8* vr,
              const long long int* ldvr, const long long int* mm, long long int* m,
              MKL_Complex8* work, float* rwork, long long int* info );

void CTREXC( const char* compq, const long long int* n, MKL_Complex8* t,
             const long long int* ldt, MKL_Complex8* q, const long long int* ldq,
             const long long int* ifst, const long long int* ilst, long long int* info );
void CTREXC_( const char* compq, const long long int* n, MKL_Complex8* t,
              const long long int* ldt, MKL_Complex8* q, const long long int* ldq,
              const long long int* ifst, const long long int* ilst, long long int* info );
void ctrexc( const char* compq, const long long int* n, MKL_Complex8* t,
             const long long int* ldt, MKL_Complex8* q, const long long int* ldq,
             const long long int* ifst, const long long int* ilst, long long int* info );
void ctrexc_( const char* compq, const long long int* n, MKL_Complex8* t,
              const long long int* ldt, MKL_Complex8* q, const long long int* ldq,
              const long long int* ifst, const long long int* ilst, long long int* info );

void CTRRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
             const MKL_Complex8* x, const long long int* ldx, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void CTRRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
              const MKL_Complex8* x, const long long int* ldx, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void ctrrfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
             const MKL_Complex8* x, const long long int* ldx, float* ferr,
             float* berr, MKL_Complex8* work, float* rwork, long long int* info );
void ctrrfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
              const MKL_Complex8* x, const long long int* ldx, float* ferr,
              float* berr, MKL_Complex8* work, float* rwork, long long int* info );

void CTRSEN( const char* job, const char* compq, const long long int* select,
             const long long int* n, MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* w, long long int* m,
             float* s, float* sep, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CTRSEN_( const char* job, const char* compq, const long long int* select,
              const long long int* n, MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* w, long long int* m,
              float* s, float* sep, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void ctrsen( const char* job, const char* compq, const long long int* select,
             const long long int* n, MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* q, const long long int* ldq, MKL_Complex8* w, long long int* m,
             float* s, float* sep, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void ctrsen_( const char* job, const char* compq, const long long int* select,
              const long long int* n, MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* q, const long long int* ldq, MKL_Complex8* w, long long int* m,
              float* s, float* sep, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CTRSNA( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex8* t, const long long int* ldt,
             const MKL_Complex8* vl, const long long int* ldvl,
             const MKL_Complex8* vr, const long long int* ldvr, float* s, float* sep,
             const long long int* mm, long long int* m, MKL_Complex8* work,
             const long long int* ldwork, float* rwork, long long int* info );
void CTRSNA_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex8* t, const long long int* ldt,
              const MKL_Complex8* vl, const long long int* ldvl,
              const MKL_Complex8* vr, const long long int* ldvr, float* s,
              float* sep, const long long int* mm, long long int* m, MKL_Complex8* work,
              const long long int* ldwork, float* rwork, long long int* info );
void ctrsna( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex8* t, const long long int* ldt,
             const MKL_Complex8* vl, const long long int* ldvl,
             const MKL_Complex8* vr, const long long int* ldvr, float* s, float* sep,
             const long long int* mm, long long int* m, MKL_Complex8* work,
             const long long int* ldwork, float* rwork, long long int* info );
void ctrsna_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex8* t, const long long int* ldt,
              const MKL_Complex8* vl, const long long int* ldvl,
              const MKL_Complex8* vr, const long long int* ldvr, float* s,
              float* sep, const long long int* mm, long long int* m, MKL_Complex8* work,
              const long long int* ldwork, float* rwork, long long int* info );

void CTRSYL( const char* trana, const char* tranb, const long long int* isgn,
             const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* c, const long long int* ldc, float* scale,
             long long int* info );
void CTRSYL_( const char* trana, const char* tranb, const long long int* isgn,
              const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* c, const long long int* ldc, float* scale,
              long long int* info );
void ctrsyl( const char* trana, const char* tranb, const long long int* isgn,
             const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
             MKL_Complex8* c, const long long int* ldc, float* scale,
             long long int* info );
void ctrsyl_( const char* trana, const char* tranb, const long long int* isgn,
              const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* b, const long long int* ldb,
              MKL_Complex8* c, const long long int* ldc, float* scale,
              long long int* info );

void CTRTI2( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex8* a, const long long int* lda, long long int* info );
void CTRTI2_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex8* a, const long long int* lda, long long int* info );
void ctrti2( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex8* a, const long long int* lda, long long int* info );
void ctrti2_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex8* a, const long long int* lda, long long int* info );

void CTRTRI( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex8* a, const long long int* lda, long long int* info );
void CTRTRI_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex8* a, const long long int* lda, long long int* info );
void ctrtri( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex8* a, const long long int* lda, long long int* info );
void ctrtri_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex8* a, const long long int* lda, long long int* info );

void CTRTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             long long int* info );
void CTRTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              long long int* info );
void ctrtrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, const long long int* ldb,
             long long int* info );
void ctrtrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, const long long int* ldb,
              long long int* info );

void CTRTTF( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex8* a, const long long int* lda, MKL_Complex8* arf,
             long long int* info );
void CTRTTF_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, MKL_Complex8* arf,
              long long int* info );
void ctrttf( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex8* a, const long long int* lda, MKL_Complex8* arf,
             long long int* info );
void ctrttf_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex8* a, const long long int* lda, MKL_Complex8* arf,
              long long int* info );

void CTRTTP( const char* uplo, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* ap, long long int* info );
void CTRTTP_( const char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* ap, long long int* info );
void ctrttp( const char* uplo, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* ap, long long int* info );
void ctrttp_( const char* uplo, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* ap, long long int* info );

void CTZRQF( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, long long int* info );
void CTZRQF_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, long long int* info );
void ctzrqf( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, long long int* info );
void ctzrqf_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, long long int* info );

void CTZRZF( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CTZRZF_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void ctzrzf( const long long int* m, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void ctzrzf_( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );

void CUNG2L( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void CUNG2L_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );
void cung2l( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void cung2l_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );

void CUNG2R( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void CUNG2R_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );
void cung2r( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void cung2r_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );

void CUNGBR( const char* vect, const long long int* m, const long long int* n,
             const long long int* k, MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CUNGBR_( const char* vect, const long long int* m, const long long int* n,
              const long long int* k, MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void cungbr( const char* vect, const long long int* m, const long long int* n,
             const long long int* k, MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cungbr_( const char* vect, const long long int* m, const long long int* n,
              const long long int* k, MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );

void CUNGHR( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNGHR_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunghr( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunghr_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNGL2( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void CUNGL2_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );
void cungl2( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void cungl2_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );

void CUNGLQ( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNGLQ_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunglq( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunglq_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNGQL( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNGQL_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cungql( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cungql_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNGQR( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNGQR_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cungqr( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cungqr_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNGR2( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void CUNGR2_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );
void cungr2( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, long long int* info );
void cungr2_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, long long int* info );

void CUNGRQ( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNGRQ_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cungrq( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cungrq_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex8* a, const long long int* lda, const MKL_Complex8* tau,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNGTR( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void CUNGTR_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void cungtr( const char* uplo, const long long int* n, MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* work,
             const long long int* lwork, long long int* info );
void cungtr_( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* work,
              const long long int* lwork, long long int* info );

void CUNM2L( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, long long int* info );
void CUNM2L_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, long long int* info );
void cunm2l( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, long long int* info );
void cunm2l_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, long long int* info );

void CUNM2R( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, long long int* info );
void CUNM2R_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, long long int* info );
void cunm2r( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, long long int* info );
void cunm2r_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, long long int* info );

void CUNMBR( const char* vect, const char* side, const char* trans,
             const long long int* m, const long long int* n, const long long int* k,
             const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNMBR_( const char* vect, const char* side, const char* trans,
              const long long int* m, const long long int* n, const long long int* k,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunmbr( const char* vect, const char* side, const char* trans,
             const long long int* m, const long long int* n, const long long int* k,
             const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunmbr_( const char* vect, const char* side, const char* trans,
              const long long int* m, const long long int* n, const long long int* k,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNMHR( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNMHR_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunmhr( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunmhr_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNML2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, long long int* info );
void CUNML2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, long long int* info );
void cunml2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, long long int* info );
void cunml2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, long long int* info );

void CUNMLQ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CUNMLQ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cunmlq( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cunmlq_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CUNMQL( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CUNMQL_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cunmql( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cunmql_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CUNMQR( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CUNMQR_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cunmqr( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cunmqr_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CUNMR2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, long long int* info );
void CUNMR2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, long long int* info );
void cunmr2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, long long int* info );
void cunmr2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, long long int* info );

void CUNMR3( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, long long int* info );
void CUNMR3_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, long long int* info );
void cunmr3( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, long long int* info );
void cunmr3_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, long long int* info );

void CUNMRQ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CUNMRQ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cunmrq( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cunmrq_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CUNMRZ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CUNMRZ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunmrz( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const MKL_Complex8* a, const long long int* lda,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cunmrz_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const MKL_Complex8* a, const long long int* lda,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void CUNMTR( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void CUNMTR_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );
void cunmtr( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
             const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
             long long int* info );
void cunmtr_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* tau, MKL_Complex8* c,
              const long long int* ldc, MKL_Complex8* work, const long long int* lwork,
              long long int* info );

void CUPGTR( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             const MKL_Complex8* tau, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* work, long long int* info );
void CUPGTR_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              const MKL_Complex8* tau, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* work, long long int* info );
void cupgtr( const char* uplo, const long long int* n, const MKL_Complex8* ap,
             const MKL_Complex8* tau, MKL_Complex8* q, const long long int* ldq,
             MKL_Complex8* work, long long int* info );
void cupgtr_( const char* uplo, const long long int* n, const MKL_Complex8* ap,
              const MKL_Complex8* tau, MKL_Complex8* q, const long long int* ldq,
              MKL_Complex8* work, long long int* info );

void CUPMTR( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const MKL_Complex8* ap,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, long long int* info );
void CUPMTR_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const MKL_Complex8* ap,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, long long int* info );
void cupmtr( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const MKL_Complex8* ap,
             const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* work, long long int* info );
void cupmtr_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const MKL_Complex8* ap,
              const MKL_Complex8* tau, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* work, long long int* info );

void DBDSDC( const char* uplo, const char* compq, const long long int* n, double* d,
             double* e, double* u, const long long int* ldu, double* vt,
             const long long int* ldvt, double* q, long long int* iq, double* work,
             long long int* iwork, long long int* info );
void DBDSDC_( const char* uplo, const char* compq, const long long int* n, double* d,
              double* e, double* u, const long long int* ldu, double* vt,
              const long long int* ldvt, double* q, long long int* iq, double* work,
              long long int* iwork, long long int* info );
void dbdsdc( const char* uplo, const char* compq, const long long int* n, double* d,
             double* e, double* u, const long long int* ldu, double* vt,
             const long long int* ldvt, double* q, long long int* iq, double* work,
             long long int* iwork, long long int* info );
void dbdsdc_( const char* uplo, const char* compq, const long long int* n, double* d,
              double* e, double* u, const long long int* ldu, double* vt,
              const long long int* ldvt, double* q, long long int* iq, double* work,
              long long int* iwork, long long int* info );

void DBDSQR( const char* uplo, const long long int* n, const long long int* ncvt,
             const long long int* nru, const long long int* ncc, double* d, double* e,
             double* vt, const long long int* ldvt, double* u, const long long int* ldu,
             double* c, const long long int* ldc, double* work, long long int* info );
void DBDSQR_( const char* uplo, const long long int* n, const long long int* ncvt,
              const long long int* nru, const long long int* ncc, double* d, double* e,
              double* vt, const long long int* ldvt, double* u, const long long int* ldu,
              double* c, const long long int* ldc, double* work, long long int* info );
void dbdsqr( const char* uplo, const long long int* n, const long long int* ncvt,
             const long long int* nru, const long long int* ncc, double* d, double* e,
             double* vt, const long long int* ldvt, double* u, const long long int* ldu,
             double* c, const long long int* ldc, double* work, long long int* info );
void dbdsqr_( const char* uplo, const long long int* n, const long long int* ncvt,
              const long long int* nru, const long long int* ncc, double* d, double* e,
              double* vt, const long long int* ldvt, double* u, const long long int* ldu,
              double* c, const long long int* ldc, double* work, long long int* info );

void DDISNA( const char* job, const long long int* m, const long long int* n,
             const double* d, double* sep, long long int* info );
void DDISNA_( const char* job, const long long int* m, const long long int* n,
              const double* d, double* sep, long long int* info );
void ddisna( const char* job, const long long int* m, const long long int* n,
             const double* d, double* sep, long long int* info );
void ddisna_( const char* job, const long long int* m, const long long int* n,
              const double* d, double* sep, long long int* info );

void DGBBRD( const char* vect, const long long int* m, const long long int* n,
             const long long int* ncc, const long long int* kl, const long long int* ku,
             double* ab, const long long int* ldab, double* d, double* e, double* q,
             const long long int* ldq, double* pt, const long long int* ldpt, double* c,
             const long long int* ldc, double* work, long long int* info );
void DGBBRD_( const char* vect, const long long int* m, const long long int* n,
              const long long int* ncc, const long long int* kl, const long long int* ku,
              double* ab, const long long int* ldab, double* d, double* e, double* q,
              const long long int* ldq, double* pt, const long long int* ldpt, double* c,
              const long long int* ldc, double* work, long long int* info );
void dgbbrd( const char* vect, const long long int* m, const long long int* n,
             const long long int* ncc, const long long int* kl, const long long int* ku,
             double* ab, const long long int* ldab, double* d, double* e, double* q,
             const long long int* ldq, double* pt, const long long int* ldpt, double* c,
             const long long int* ldc, double* work, long long int* info );
void dgbbrd_( const char* vect, const long long int* m, const long long int* n,
              const long long int* ncc, const long long int* kl, const long long int* ku,
              double* ab, const long long int* ldab, double* d, double* e, double* q,
              const long long int* ldq, double* pt, const long long int* ldpt, double* c,
              const long long int* ldc, double* work, long long int* info );

void DGBCON( const char* norm, const long long int* n, const long long int* kl,
             const long long int* ku, const double* ab, const long long int* ldab,
             const long long int* ipiv, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void DGBCON_( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const double* ab, const long long int* ldab,
              const long long int* ipiv, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );
void dgbcon( const char* norm, const long long int* n, const long long int* kl,
             const long long int* ku, const double* ab, const long long int* ldab,
             const long long int* ipiv, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void dgbcon_( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const double* ab, const long long int* ldab,
              const long long int* ipiv, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );

void DGBEQUB( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const double* ab, const long long int* ldab,
              double* r, double* c, double* rowcnd, double* colcnd,
              double* amax, long long int* info );
void DGBEQUB_( const long long int* m, const long long int* n, const long long int* kl,
               const long long int* ku, const double* ab, const long long int* ldab,
               double* r, double* c, double* rowcnd, double* colcnd,
               double* amax, long long int* info );
void dgbequb( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const double* ab, const long long int* ldab,
              double* r, double* c, double* rowcnd, double* colcnd,
              double* amax, long long int* info );
void dgbequb_( const long long int* m, const long long int* n, const long long int* kl,
               const long long int* ku, const double* ab, const long long int* ldab,
               double* r, double* c, double* rowcnd, double* colcnd,
               double* amax, long long int* info );

void DGBEQU( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const double* ab, const long long int* ldab,
             double* r, double* c, double* rowcnd, double* colcnd,
             double* amax, long long int* info );
void DGBEQU_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const double* ab, const long long int* ldab,
              double* r, double* c, double* rowcnd, double* colcnd,
              double* amax, long long int* info );
void dgbequ( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const double* ab, const long long int* ldab,
             double* r, double* c, double* rowcnd, double* colcnd,
             double* amax, long long int* info );
void dgbequ_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const double* ab, const long long int* ldab,
              double* r, double* c, double* rowcnd, double* colcnd,
              double* amax, long long int* info );

void DGBRFS( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const double* ab,
             const long long int* ldab, const double* afb, const long long int* ldafb,
             const long long int* ipiv, const double* b, const long long int* ldb,
             double* x, const long long int* ldx, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void DGBRFS_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const double* ab,
              const long long int* ldab, const double* afb, const long long int* ldafb,
              const long long int* ipiv, const double* b, const long long int* ldb,
              double* x, const long long int* ldx, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );
void dgbrfs( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const double* ab,
             const long long int* ldab, const double* afb, const long long int* ldafb,
             const long long int* ipiv, const double* b, const long long int* ldb,
             double* x, const long long int* ldx, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void dgbrfs_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const double* ab,
              const long long int* ldab, const double* afb, const long long int* ldafb,
              const long long int* ipiv, const double* b, const long long int* ldb,
              double* x, const long long int* ldx, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );

void DGBRFSX( const char* trans, const char* equed, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              const double* ab, const long long int* ldab, const double* afb,
              const long long int* ldafb, const long long int* ipiv, const double* r,
              const double* c, const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void DGBRFSX_( const char* trans, const char* equed, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               const double* ab, const long long int* ldab, const double* afb,
               const long long int* ldafb, const long long int* ipiv, const double* r,
               const double* c, const double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );
void dgbrfsx( const char* trans, const char* equed, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              const double* ab, const long long int* ldab, const double* afb,
              const long long int* ldafb, const long long int* ipiv, const double* r,
              const double* c, const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void dgbrfsx_( const char* trans, const char* equed, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               const double* ab, const long long int* ldab, const double* afb,
               const long long int* ldafb, const long long int* ipiv, const double* r,
               const double* c, const double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );

void DGBSV( const long long int* n, const long long int* kl, const long long int* ku,
            const long long int* nrhs, double* ab, const long long int* ldab,
            long long int* ipiv, double* b, const long long int* ldb, long long int* info );
void DGBSV_( const long long int* n, const long long int* kl, const long long int* ku,
             const long long int* nrhs, double* ab, const long long int* ldab,
             long long int* ipiv, double* b, const long long int* ldb, long long int* info );
void dgbsv( const long long int* n, const long long int* kl, const long long int* ku,
            const long long int* nrhs, double* ab, const long long int* ldab,
            long long int* ipiv, double* b, const long long int* ldb, long long int* info );
void dgbsv_( const long long int* n, const long long int* kl, const long long int* ku,
             const long long int* nrhs, double* ab, const long long int* ldab,
             long long int* ipiv, double* b, const long long int* ldb, long long int* info );

void DGBSVX( const char* fact, const char* trans, const long long int* n,
             const long long int* kl, const long long int* ku, const long long int* nrhs,
             double* ab, const long long int* ldab, double* afb,
             const long long int* ldafb, long long int* ipiv, char* equed, double* r,
             double* c, double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void DGBSVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              double* ab, const long long int* ldab, double* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, double* r,
              double* c, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );
void dgbsvx( const char* fact, const char* trans, const long long int* n,
             const long long int* kl, const long long int* ku, const long long int* nrhs,
             double* ab, const long long int* ldab, double* afb,
             const long long int* ldafb, long long int* ipiv, char* equed, double* r,
             double* c, double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void dgbsvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              double* ab, const long long int* ldab, double* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, double* r,
              double* c, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );

void DGBSVXX( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              double* ab, const long long int* ldab, double* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, double* r,
              double* c, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void DGBSVXX_( const char* fact, const char* trans, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               double* ab, const long long int* ldab, double* afb,
               const long long int* ldafb, long long int* ipiv, char* equed, double* r,
               double* c, double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );
void dgbsvxx( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              double* ab, const long long int* ldab, double* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, double* r,
              double* c, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void dgbsvxx_( const char* fact, const char* trans, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               double* ab, const long long int* ldab, double* afb,
               const long long int* ldafb, long long int* ipiv, char* equed, double* r,
               double* c, double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );

void DGBTF2( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, double* ab, const long long int* ldab, long long int* ipiv,
             long long int* info );
void DGBTF2_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, double* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );
void dgbtf2( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, double* ab, const long long int* ldab, long long int* ipiv,
             long long int* info );
void dgbtf2_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, double* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );

void DGBTRF( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, double* ab, const long long int* ldab, long long int* ipiv,
             long long int* info );
void DGBTRF_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, double* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );
void dgbtrf( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, double* ab, const long long int* ldab, long long int* ipiv,
             long long int* info );
void dgbtrf_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, double* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );

void DGBTRS( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const double* ab,
             const long long int* ldab, const long long int* ipiv, double* b,
             const long long int* ldb, long long int* info );
void DGBTRS_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const double* ab,
              const long long int* ldab, const long long int* ipiv, double* b,
              const long long int* ldb, long long int* info );
void dgbtrs( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const double* ab,
             const long long int* ldab, const long long int* ipiv, double* b,
             const long long int* ldb, long long int* info );
void dgbtrs_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const double* ab,
              const long long int* ldab, const long long int* ipiv, double* b,
              const long long int* ldb, long long int* info );

void DGEBAK( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const double* scale,
             const long long int* m, double* v, const long long int* ldv, long long int* info );
void DGEBAK_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const double* scale,
              const long long int* m, double* v, const long long int* ldv, long long int* info );
void dgebak( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const double* scale,
             const long long int* m, double* v, const long long int* ldv, long long int* info );
void dgebak_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const double* scale,
              const long long int* m, double* v, const long long int* ldv, long long int* info );

void DGEBAL( const char* job, const long long int* n, double* a, const long long int* lda,
             long long int* ilo, long long int* ihi, double* scale, long long int* info );
void DGEBAL_( const char* job, const long long int* n, double* a, const long long int* lda,
              long long int* ilo, long long int* ihi, double* scale, long long int* info );
void dgebal( const char* job, const long long int* n, double* a, const long long int* lda,
             long long int* ilo, long long int* ihi, double* scale, long long int* info );
void dgebal_( const char* job, const long long int* n, double* a, const long long int* lda,
              long long int* ilo, long long int* ihi, double* scale, long long int* info );

void DGEBD2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* d, double* e, double* tauq, double* taup, double* work,
             long long int* info );
void DGEBD2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* d, double* e, double* tauq,
              double* taup, double* work, long long int* info );
void dgebd2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* d, double* e, double* tauq, double* taup, double* work,
             long long int* info );
void dgebd2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* d, double* e, double* tauq,
              double* taup, double* work, long long int* info );

void DGEBRD( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* d, double* e, double* tauq, double* taup, double* work,
             const long long int* lwork, long long int* info );
void DGEBRD_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* d, double* e, double* tauq,
              double* taup, double* work, const long long int* lwork,
              long long int* info );
void dgebrd( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* d, double* e, double* tauq, double* taup, double* work,
             const long long int* lwork, long long int* info );
void dgebrd_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* d, double* e, double* tauq,
              double* taup, double* work, const long long int* lwork,
              long long int* info );

void DGECON( const char* norm, const long long int* n, const double* a,
             const long long int* lda, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void DGECON_( const char* norm, const long long int* n, const double* a,
              const long long int* lda, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );
void dgecon( const char* norm, const long long int* n, const double* a,
             const long long int* lda, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void dgecon_( const char* norm, const long long int* n, const double* a,
              const long long int* lda, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );

void DGEEQUB( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, double* r, double* c, double* rowcnd,
              double* colcnd, double* amax, long long int* info );
void DGEEQUB_( const long long int* m, const long long int* n, const double* a,
               const long long int* lda, double* r, double* c, double* rowcnd,
               double* colcnd, double* amax, long long int* info );
void dgeequb( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, double* r, double* c, double* rowcnd,
              double* colcnd, double* amax, long long int* info );
void dgeequb_( const long long int* m, const long long int* n, const double* a,
               const long long int* lda, double* r, double* c, double* rowcnd,
               double* colcnd, double* amax, long long int* info );

void DGEEQU( const long long int* m, const long long int* n, const double* a,
             const long long int* lda, double* r, double* c, double* rowcnd,
             double* colcnd, double* amax, long long int* info );
void DGEEQU_( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, double* r, double* c, double* rowcnd,
              double* colcnd, double* amax, long long int* info );
void dgeequ( const long long int* m, const long long int* n, const double* a,
             const long long int* lda, double* r, double* c, double* rowcnd,
             double* colcnd, double* amax, long long int* info );
void dgeequ_( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, double* r, double* c, double* rowcnd,
              double* colcnd, double* amax, long long int* info );

void DGEES( const char* jobvs, const char* sort,
            MKL_D_SELECT_FUNCTION_2 select, const long long int* n, double* a,
            const long long int* lda, long long int* sdim, double* wr, double* wi,
            double* vs, const long long int* ldvs, double* work,
            const long long int* lwork, long long int* bwork, long long int* info );
void DGEES_( const char* jobvs, const char* sort,
             MKL_D_SELECT_FUNCTION_2 select, const long long int* n, double* a,
             const long long int* lda, long long int* sdim, double* wr, double* wi,
             double* vs, const long long int* ldvs, double* work,
             const long long int* lwork, long long int* bwork, long long int* info );
void dgees( const char* jobvs, const char* sort,
            MKL_D_SELECT_FUNCTION_2 select, const long long int* n, double* a,
            const long long int* lda, long long int* sdim, double* wr, double* wi,
            double* vs, const long long int* ldvs, double* work,
            const long long int* lwork, long long int* bwork, long long int* info );
void dgees_( const char* jobvs, const char* sort,
             MKL_D_SELECT_FUNCTION_2 select, const long long int* n, double* a,
             const long long int* lda, long long int* sdim, double* wr, double* wi,
             double* vs, const long long int* ldvs, double* work,
             const long long int* lwork, long long int* bwork, long long int* info );

void DGEESX( const char* jobvs, const char* sort,
             MKL_D_SELECT_FUNCTION_2 select, const char* sense,
             const long long int* n, double* a, const long long int* lda, long long int* sdim,
             double* wr, double* wi, double* vs, const long long int* ldvs,
             double* rconde, double* rcondv, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* bwork, long long int* info );
void DGEESX_( const char* jobvs, const char* sort,
              MKL_D_SELECT_FUNCTION_2 select, const char* sense,
              const long long int* n, double* a, const long long int* lda, long long int* sdim,
              double* wr, double* wi, double* vs, const long long int* ldvs,
              double* rconde, double* rcondv, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* bwork, long long int* info );
void dgeesx( const char* jobvs, const char* sort,
             MKL_D_SELECT_FUNCTION_2 select, const char* sense,
             const long long int* n, double* a, const long long int* lda, long long int* sdim,
             double* wr, double* wi, double* vs, const long long int* ldvs,
             double* rconde, double* rcondv, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* bwork, long long int* info );
void dgeesx_( const char* jobvs, const char* sort,
              MKL_D_SELECT_FUNCTION_2 select, const char* sense,
              const long long int* n, double* a, const long long int* lda, long long int* sdim,
              double* wr, double* wi, double* vs, const long long int* ldvs,
              double* rconde, double* rcondv, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* bwork, long long int* info );

void DGEEV( const char* jobvl, const char* jobvr, const long long int* n, double* a,
            const long long int* lda, double* wr, double* wi, double* vl,
            const long long int* ldvl, double* vr, const long long int* ldvr, double* work,
            const long long int* lwork, long long int* info );
void DGEEV_( const char* jobvl, const char* jobvr, const long long int* n, double* a,
             const long long int* lda, double* wr, double* wi, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             double* work, const long long int* lwork, long long int* info );
void dgeev( const char* jobvl, const char* jobvr, const long long int* n, double* a,
            const long long int* lda, double* wr, double* wi, double* vl,
            const long long int* ldvl, double* vr, const long long int* ldvr, double* work,
            const long long int* lwork, long long int* info );
void dgeev_( const char* jobvl, const char* jobvr, const long long int* n, double* a,
             const long long int* lda, double* wr, double* wi, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             double* work, const long long int* lwork, long long int* info );

void DGEEVX( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, double* a,
             const long long int* lda, double* wr, double* wi, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, double* scale, double* abnrm,
             double* rconde, double* rcondv, double* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void DGEEVX_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, double* a,
              const long long int* lda, double* wr, double* wi, double* vl,
              const long long int* ldvl, double* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, double* scale, double* abnrm,
              double* rconde, double* rcondv, double* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void dgeevx( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, double* a,
             const long long int* lda, double* wr, double* wi, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, double* scale, double* abnrm,
             double* rconde, double* rcondv, double* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void dgeevx_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, double* a,
              const long long int* lda, double* wr, double* wi, double* vl,
              const long long int* ldvl, double* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, double* scale, double* abnrm,
              double* rconde, double* rcondv, double* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void DGEGS( const char* jobvsl, const char* jobvsr, const long long int* n,
            double* a, const long long int* lda, double* b, const long long int* ldb,
            double* alphar, double* alphai, double* beta, double* vsl,
            const long long int* ldvsl, double* vsr, const long long int* ldvsr,
            double* work, const long long int* lwork, long long int* info );
void DGEGS_( const char* jobvsl, const char* jobvsr, const long long int* n,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* alphar, double* alphai, double* beta, double* vsl,
             const long long int* ldvsl, double* vsr, const long long int* ldvsr,
             double* work, const long long int* lwork, long long int* info );
void dgegs( const char* jobvsl, const char* jobvsr, const long long int* n,
            double* a, const long long int* lda, double* b, const long long int* ldb,
            double* alphar, double* alphai, double* beta, double* vsl,
            const long long int* ldvsl, double* vsr, const long long int* ldvsr,
            double* work, const long long int* lwork, long long int* info );
void dgegs_( const char* jobvsl, const char* jobvsr, const long long int* n,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* alphar, double* alphai, double* beta, double* vsl,
             const long long int* ldvsl, double* vsr, const long long int* ldvsr,
             double* work, const long long int* lwork, long long int* info );

void DGEGV( const char* jobvl, const char* jobvr, const long long int* n, double* a,
            const long long int* lda, double* b, const long long int* ldb, double* alphar,
            double* alphai, double* beta, double* vl, const long long int* ldvl,
            double* vr, const long long int* ldvr, double* work,
            const long long int* lwork, long long int* info );
void DGEGV_( const char* jobvl, const char* jobvr, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* alphar,
             double* alphai, double* beta, double* vl, const long long int* ldvl,
             double* vr, const long long int* ldvr, double* work,
             const long long int* lwork, long long int* info );
void dgegv( const char* jobvl, const char* jobvr, const long long int* n, double* a,
            const long long int* lda, double* b, const long long int* ldb, double* alphar,
            double* alphai, double* beta, double* vl, const long long int* ldvl,
            double* vr, const long long int* ldvr, double* work,
            const long long int* lwork, long long int* info );
void dgegv_( const char* jobvl, const char* jobvr, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* alphar,
             double* alphai, double* beta, double* vl, const long long int* ldvl,
             double* vr, const long long int* ldvr, double* work,
             const long long int* lwork, long long int* info );

void DGEHD2( const long long int* n, const long long int* ilo, const long long int* ihi,
             double* a, const long long int* lda, double* tau, double* work,
             long long int* info );
void DGEHD2_( const long long int* n, const long long int* ilo, const long long int* ihi,
              double* a, const long long int* lda, double* tau, double* work,
              long long int* info );
void dgehd2( const long long int* n, const long long int* ilo, const long long int* ihi,
             double* a, const long long int* lda, double* tau, double* work,
             long long int* info );
void dgehd2_( const long long int* n, const long long int* ilo, const long long int* ihi,
              double* a, const long long int* lda, double* tau, double* work,
              long long int* info );

void DGEHRD( const long long int* n, const long long int* ilo, const long long int* ihi,
             double* a, const long long int* lda, double* tau, double* work,
             const long long int* lwork, long long int* info );
void DGEHRD_( const long long int* n, const long long int* ilo, const long long int* ihi,
              double* a, const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );
void dgehrd( const long long int* n, const long long int* ilo, const long long int* ihi,
             double* a, const long long int* lda, double* tau, double* work,
             const long long int* lwork, long long int* info );
void dgehrd_( const long long int* n, const long long int* ilo, const long long int* ihi,
              double* a, const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );

void DGEJSV( char* joba, char* jobu, char* jobv, char* jobr, char* jobt,
             char* jobp, const long long int* m, const long long int* n, double* a,
             const long long int* lda, double* sva, double* u, const long long int* ldu,
             double* v, const long long int* ldv, double* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void DGEJSV_( char* joba, char* jobu, char* jobv, char* jobr, char* jobt,
              char* jobp, const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* sva, double* u, const long long int* ldu,
              double* v, const long long int* ldv, double* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void dgejsv( char* joba, char* jobu, char* jobv, char* jobr, char* jobt,
             char* jobp, const long long int* m, const long long int* n, double* a,
             const long long int* lda, double* sva, double* u, const long long int* ldu,
             double* v, const long long int* ldv, double* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void dgejsv_( char* joba, char* jobu, char* jobv, char* jobr, char* jobt,
              char* jobp, const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* sva, double* u, const long long int* ldu,
              double* v, const long long int* ldv, double* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void DGELQ2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, long long int* info );
void DGELQ2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work, long long int* info );
void dgelq2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, long long int* info );
void dgelq2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work, long long int* info );

void DGELQF( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void DGELQF_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );
void dgelqf( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void dgelqf_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );

void DGELSD( const long long int* m, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, double* b,
             const long long int* ldb, double* s, const double* rcond, long long int* rank,
             double* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void DGELSD_( const long long int* m, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, double* b,
              const long long int* ldb, double* s, const double* rcond,
              long long int* rank, double* work, const long long int* lwork,
              long long int* iwork, long long int* info );
void dgelsd( const long long int* m, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, double* b,
             const long long int* ldb, double* s, const double* rcond, long long int* rank,
             double* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void dgelsd_( const long long int* m, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, double* b,
              const long long int* ldb, double* s, const double* rcond,
              long long int* rank, double* work, const long long int* lwork,
              long long int* iwork, long long int* info );

void DGELS( const char* trans, const long long int* m, const long long int* n,
            const long long int* nrhs, double* a, const long long int* lda, double* b,
            const long long int* ldb, double* work, const long long int* lwork,
            long long int* info );
void DGELS_( const char* trans, const long long int* m, const long long int* n,
             const long long int* nrhs, double* a, const long long int* lda, double* b,
             const long long int* ldb, double* work, const long long int* lwork,
             long long int* info );
void dgels( const char* trans, const long long int* m, const long long int* n,
            const long long int* nrhs, double* a, const long long int* lda, double* b,
            const long long int* ldb, double* work, const long long int* lwork,
            long long int* info );
void dgels_( const char* trans, const long long int* m, const long long int* n,
             const long long int* nrhs, double* a, const long long int* lda, double* b,
             const long long int* ldb, double* work, const long long int* lwork,
             long long int* info );

void DGELSS( const long long int* m, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* s, const double* rcond, long long int* rank, double* work,
             const long long int* lwork, long long int* info );
void DGELSS_( const long long int* m, const long long int* n, const long long int* nrhs,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* s, const double* rcond, long long int* rank, double* work,
              const long long int* lwork, long long int* info );
void dgelss( const long long int* m, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* s, const double* rcond, long long int* rank, double* work,
             const long long int* lwork, long long int* info );
void dgelss_( const long long int* m, const long long int* n, const long long int* nrhs,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* s, const double* rcond, long long int* rank, double* work,
              const long long int* lwork, long long int* info );

void DGELSX( const long long int* m, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             long long int* jpvt, const double* rcond, long long int* rank, double* work,
             long long int* info );
void DGELSX_( const long long int* m, const long long int* n, const long long int* nrhs,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              long long int* jpvt, const double* rcond, long long int* rank, double* work,
              long long int* info );
void dgelsx( const long long int* m, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             long long int* jpvt, const double* rcond, long long int* rank, double* work,
             long long int* info );
void dgelsx_( const long long int* m, const long long int* n, const long long int* nrhs,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              long long int* jpvt, const double* rcond, long long int* rank, double* work,
              long long int* info );

void DGELSY( const long long int* m, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             long long int* jpvt, const double* rcond, long long int* rank, double* work,
             const long long int* lwork, long long int* info );
void DGELSY_( const long long int* m, const long long int* n, const long long int* nrhs,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              long long int* jpvt, const double* rcond, long long int* rank, double* work,
              const long long int* lwork, long long int* info );
void dgelsy( const long long int* m, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             long long int* jpvt, const double* rcond, long long int* rank, double* work,
             const long long int* lwork, long long int* info );
void dgelsy_( const long long int* m, const long long int* n, const long long int* nrhs,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              long long int* jpvt, const double* rcond, long long int* rank, double* work,
              const long long int* lwork, long long int* info );

void DGEQL2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, long long int* info );
void DGEQL2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work, long long int* info );
void dgeql2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, long long int* info );
void dgeql2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work, long long int* info );

void DGEQLF( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void DGEQLF_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );
void dgeqlf( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void dgeqlf_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );

void DGEQP3( const long long int* m, const long long int* n, double* a, const long long int* lda,
             long long int* jpvt, double* tau, double* work, const long long int* lwork,
             long long int* info );
void DGEQP3_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, long long int* jpvt, double* tau, double* work,
              const long long int* lwork, long long int* info );
void dgeqp3( const long long int* m, const long long int* n, double* a, const long long int* lda,
             long long int* jpvt, double* tau, double* work, const long long int* lwork,
             long long int* info );
void dgeqp3_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, long long int* jpvt, double* tau, double* work,
              const long long int* lwork, long long int* info );

void DGEQPF( const long long int* m, const long long int* n, double* a, const long long int* lda,
             long long int* jpvt, double* tau, double* work, long long int* info );
void DGEQPF_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, long long int* jpvt, double* tau, double* work,
              long long int* info );
void dgeqpf( const long long int* m, const long long int* n, double* a, const long long int* lda,
             long long int* jpvt, double* tau, double* work, long long int* info );
void dgeqpf_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, long long int* jpvt, double* tau, double* work,
              long long int* info );

void DGEQR2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, long long int* info );
void DGEQR2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work, long long int* info );
void dgeqr2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, long long int* info );
void dgeqr2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work, long long int* info );

void DGEQR2P( const long long int* m, const long long int* n, double* a, const long long int* lda,
              double* tau, double* work, long long int* info );
void DGEQR2P_( const long long int* m, const long long int* n, double* a,
               const long long int* lda, double* tau, double* work, long long int* info );
void dgeqr2p( const long long int* m, const long long int* n, double* a, const long long int* lda,
              double* tau, double* work, long long int* info );
void dgeqr2p_( const long long int* m, const long long int* n, double* a,
               const long long int* lda, double* tau, double* work, long long int* info );

void DGEQRF( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void DGEQRF_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );
void dgeqrf( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void dgeqrf_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );

void DGEQRFP( const long long int* m, const long long int* n, double* a, const long long int* lda,
              double* tau, double* work, const long long int* lwork, long long int* info );
void DGEQRFP_( const long long int* m, const long long int* n, double* a,
               const long long int* lda, double* tau, double* work,
               const long long int* lwork, long long int* info );
void dgeqrfp( const long long int* m, const long long int* n, double* a, const long long int* lda,
              double* tau, double* work, const long long int* lwork, long long int* info );
void dgeqrfp_( const long long int* m, const long long int* n, double* a,
               const long long int* lda, double* tau, double* work,
               const long long int* lwork, long long int* info );

void DGERFS( const char* trans, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const double* af,
             const long long int* ldaf, const long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void DGERFS_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const double* af,
              const long long int* ldaf, const long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );
void dgerfs( const char* trans, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const double* af,
             const long long int* ldaf, const long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void dgerfs_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const double* af,
              const long long int* ldaf, const long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );

void DGERFSX( const char* trans, const char* equed, const long long int* n,
              const long long int* nrhs, const double* a, const long long int* lda,
              const double* af, const long long int* ldaf, const long long int* ipiv,
              const double* r, const double* c, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* rcond,
              double* berr, const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void DGERFSX_( const char* trans, const char* equed, const long long int* n,
               const long long int* nrhs, const double* a, const long long int* lda,
               const double* af, const long long int* ldaf, const long long int* ipiv,
               const double* r, const double* c, const double* b,
               const long long int* ldb, double* x, const long long int* ldx,
               double* rcond, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, double* work,
               long long int* iwork, long long int* info );
void dgerfsx( const char* trans, const char* equed, const long long int* n,
              const long long int* nrhs, const double* a, const long long int* lda,
              const double* af, const long long int* ldaf, const long long int* ipiv,
              const double* r, const double* c, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* rcond,
              double* berr, const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void dgerfsx_( const char* trans, const char* equed, const long long int* n,
               const long long int* nrhs, const double* a, const long long int* lda,
               const double* af, const long long int* ldaf, const long long int* ipiv,
               const double* r, const double* c, const double* b,
               const long long int* ldb, double* x, const long long int* ldx,
               double* rcond, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, double* work,
               long long int* iwork, long long int* info );

void DGERQ2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, long long int* info );
void DGERQ2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work, long long int* info );
void dgerq2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, long long int* info );
void dgerq2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work, long long int* info );

void DGERQF( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void DGERQF_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );
void dgerqf( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void dgerqf_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );

void DGESC2( const long long int* n, const double* a, const long long int* lda,
             double* rhs, const long long int* ipiv, const long long int* jpiv,
             double* scale );
void DGESC2_( const long long int* n, const double* a, const long long int* lda,
              double* rhs, const long long int* ipiv, const long long int* jpiv,
              double* scale );
void dgesc2( const long long int* n, const double* a, const long long int* lda,
             double* rhs, const long long int* ipiv, const long long int* jpiv,
             double* scale );
void dgesc2_( const long long int* n, const double* a, const long long int* lda,
              double* rhs, const long long int* ipiv, const long long int* jpiv,
              double* scale );

void DGESDD( const char* jobz, const long long int* m, const long long int* n, double* a,
             const long long int* lda, double* s, double* u, const long long int* ldu,
             double* vt, const long long int* ldvt, double* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void DGESDD_( const char* jobz, const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* s, double* u, const long long int* ldu,
              double* vt, const long long int* ldvt, double* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void dgesdd( const char* jobz, const long long int* m, const long long int* n, double* a,
             const long long int* lda, double* s, double* u, const long long int* ldu,
             double* vt, const long long int* ldvt, double* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void dgesdd_( const char* jobz, const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* s, double* u, const long long int* ldu,
              double* vt, const long long int* ldvt, double* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void DGESVD( const char* jobu, const char* jobvt, const long long int* m,
             const long long int* n, double* a, const long long int* lda, double* s,
             double* u, const long long int* ldu, double* vt, const long long int* ldvt,
             double* work, const long long int* lwork, long long int* info );
void DGESVD_( const char* jobu, const char* jobvt, const long long int* m,
              const long long int* n, double* a, const long long int* lda, double* s,
              double* u, const long long int* ldu, double* vt, const long long int* ldvt,
              double* work, const long long int* lwork, long long int* info );
void dgesvd( const char* jobu, const char* jobvt, const long long int* m,
             const long long int* n, double* a, const long long int* lda, double* s,
             double* u, const long long int* ldu, double* vt, const long long int* ldvt,
             double* work, const long long int* lwork, long long int* info );
void dgesvd_( const char* jobu, const char* jobvt, const long long int* m,
              const long long int* n, double* a, const long long int* lda, double* s,
              double* u, const long long int* ldu, double* vt, const long long int* ldvt,
              double* work, const long long int* lwork, long long int* info );

void DGESV( const long long int* n, const long long int* nrhs, double* a,
            const long long int* lda, long long int* ipiv, double* b, const long long int* ldb,
            long long int* info );
void DGESV_( const long long int* n, const long long int* nrhs, double* a,
             const long long int* lda, long long int* ipiv, double* b, const long long int* ldb,
             long long int* info );
void dgesv( const long long int* n, const long long int* nrhs, double* a,
            const long long int* lda, long long int* ipiv, double* b, const long long int* ldb,
            long long int* info );
void dgesv_( const long long int* n, const long long int* nrhs, double* a,
             const long long int* lda, long long int* ipiv, double* b, const long long int* ldb,
             long long int* info );

void DGESVJ( const char* joba, const char* jobu, const char* jobv,
             const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* sva, const long long int* mv, double* v, const long long int* ldv,
             double* work, long long int* lwork, long long int* info );
void DGESVJ_( const char* joba, const char* jobu, const char* jobv,
              const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* sva, const long long int* mv, double* v,
              const long long int* ldv, double* work, long long int* lwork,
              long long int* info );
void dgesvj( const char* joba, const char* jobu, const char* jobv,
             const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* sva, const long long int* mv, double* v, const long long int* ldv,
             double* work, long long int* lwork, long long int* info );
void dgesvj_( const char* joba, const char* jobu, const char* jobv,
              const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* sva, const long long int* mv, double* v,
              const long long int* ldv, double* work, long long int* lwork,
              long long int* info );

void DGESVX( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, double* a, const long long int* lda, double* af,
             const long long int* ldaf, long long int* ipiv, char* equed, double* r,
             double* c, double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void DGESVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, long long int* ipiv, char* equed, double* r,
              double* c, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );
void dgesvx( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, double* a, const long long int* lda, double* af,
             const long long int* ldaf, long long int* ipiv, char* equed, double* r,
             double* c, double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void dgesvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, long long int* ipiv, char* equed, double* r,
              double* c, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );

void DGESVXX( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, long long int* ipiv, char* equed, double* r,
              double* c, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void DGESVXX_( const char* fact, const char* trans, const long long int* n,
               const long long int* nrhs, double* a, const long long int* lda, double* af,
               const long long int* ldaf, long long int* ipiv, char* equed, double* r,
               double* c, double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );
void dgesvxx( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, long long int* ipiv, char* equed, double* r,
              double* c, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void dgesvxx_( const char* fact, const char* trans, const long long int* n,
               const long long int* nrhs, double* a, const long long int* lda, double* af,
               const long long int* ldaf, long long int* ipiv, char* equed, double* r,
               double* c, double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );

void DGETC2( const long long int* n, double* a, const long long int* lda, long long int* ipiv,
             long long int* jpiv, long long int* info );
void DGETC2_( const long long int* n, double* a, const long long int* lda, long long int* ipiv,
              long long int* jpiv, long long int* info );
void dgetc2( const long long int* n, double* a, const long long int* lda, long long int* ipiv,
             long long int* jpiv, long long int* info );
void dgetc2_( const long long int* n, double* a, const long long int* lda, long long int* ipiv,
              long long int* jpiv, long long int* info );

void DGETF2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void DGETF2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void dgetf2( const long long int* m, const long long int* n, double* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void dgetf2_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void DGETRF( const long long int* m, const long long int* n, double* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void DGETRF_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void dgetrf( const long long int* m, const long long int* n, double* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void dgetrf_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void MKL_DGETRFNPI( const long long int* m, const long long int* n, const long long int* nfact,
                    double* a, const long long int* lda, long long int* info );
void MKL_DGETRFNPI_( const long long int* m, const long long int* n, const long long int* nfact,
                     double* a, const long long int* lda, long long int* info );
void mkl_dgetrfnpi( const long long int* m, const long long int* n, const long long int* nfact,
                    double* a, const long long int* lda, long long int* info );
void mkl_dgetrfnpi_( const long long int* m, const long long int* n, const long long int* nfact,
                     double* a, const long long int* lda, long long int* info );

void DGETRI( const long long int* n, double* a, const long long int* lda,
             const long long int* ipiv, double* work, const long long int* lwork,
             long long int* info );
void DGETRI_( const long long int* n, double* a, const long long int* lda,
              const long long int* ipiv, double* work, const long long int* lwork,
              long long int* info );
void dgetri( const long long int* n, double* a, const long long int* lda,
             const long long int* ipiv, double* work, const long long int* lwork,
             long long int* info );
void dgetri_( const long long int* n, double* a, const long long int* lda,
              const long long int* ipiv, double* work, const long long int* lwork,
              long long int* info );

void DGETRS( const char* trans, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const long long int* ipiv,
             double* b, const long long int* ldb, long long int* info );
void DGETRS_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const long long int* ipiv,
              double* b, const long long int* ldb, long long int* info );
void dgetrs( const char* trans, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const long long int* ipiv,
             double* b, const long long int* ldb, long long int* info );
void dgetrs_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const long long int* ipiv,
              double* b, const long long int* ldb, long long int* info );

void DGGBAK( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const double* lscale,
             const double* rscale, const long long int* m, double* v,
             const long long int* ldv, long long int* info );
void DGGBAK_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const double* lscale,
              const double* rscale, const long long int* m, double* v,
              const long long int* ldv, long long int* info );
void dggbak( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const double* lscale,
             const double* rscale, const long long int* m, double* v,
             const long long int* ldv, long long int* info );
void dggbak_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const double* lscale,
              const double* rscale, const long long int* m, double* v,
              const long long int* ldv, long long int* info );

void DGGBAL( const char* job, const long long int* n, double* a, const long long int* lda,
             double* b, const long long int* ldb, long long int* ilo, long long int* ihi,
             double* lscale, double* rscale, double* work, long long int* info );
void DGGBAL_( const char* job, const long long int* n, double* a, const long long int* lda,
              double* b, const long long int* ldb, long long int* ilo, long long int* ihi,
              double* lscale, double* rscale, double* work, long long int* info );
void dggbal( const char* job, const long long int* n, double* a, const long long int* lda,
             double* b, const long long int* ldb, long long int* ilo, long long int* ihi,
             double* lscale, double* rscale, double* work, long long int* info );
void dggbal_( const char* job, const long long int* n, double* a, const long long int* lda,
              double* b, const long long int* ldb, long long int* ilo, long long int* ihi,
              double* lscale, double* rscale, double* work, long long int* info );

void DGGES( const char* jobvsl, const char* jobvsr, const char* sort,
            MKL_D_SELECT_FUNCTION_3 selctg, const long long int* n, double* a,
            const long long int* lda, double* b, const long long int* ldb, long long int* sdim,
            double* alphar, double* alphai, double* beta, double* vsl,
            const long long int* ldvsl, double* vsr, const long long int* ldvsr,
            double* work, const long long int* lwork, long long int* bwork,
            long long int* info );
void DGGES_( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_D_SELECT_FUNCTION_3 selctg, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, long long int* sdim,
             double* alphar, double* alphai, double* beta, double* vsl,
             const long long int* ldvsl, double* vsr, const long long int* ldvsr,
             double* work, const long long int* lwork, long long int* bwork,
             long long int* info );
void dgges( const char* jobvsl, const char* jobvsr, const char* sort,
            MKL_D_SELECT_FUNCTION_3 selctg, const long long int* n, double* a,
            const long long int* lda, double* b, const long long int* ldb, long long int* sdim,
            double* alphar, double* alphai, double* beta, double* vsl,
            const long long int* ldvsl, double* vsr, const long long int* ldvsr,
            double* work, const long long int* lwork, long long int* bwork,
            long long int* info );
void dgges_( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_D_SELECT_FUNCTION_3 selctg, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, long long int* sdim,
             double* alphar, double* alphai, double* beta, double* vsl,
             const long long int* ldvsl, double* vsr, const long long int* ldvsr,
             double* work, const long long int* lwork, long long int* bwork,
             long long int* info );

void DGGESX( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_D_SELECT_FUNCTION_3 selctg, const char* sense,
             const long long int* n, double* a, const long long int* lda, double* b,
             const long long int* ldb, long long int* sdim, double* alphar, double* alphai,
             double* beta, double* vsl, const long long int* ldvsl, double* vsr,
             const long long int* ldvsr, double* rconde, double* rcondv,
             double* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* bwork, long long int* info );
void DGGESX_( const char* jobvsl, const char* jobvsr, const char* sort,
              MKL_D_SELECT_FUNCTION_3 selctg, const char* sense,
              const long long int* n, double* a, const long long int* lda, double* b,
              const long long int* ldb, long long int* sdim, double* alphar,
              double* alphai, double* beta, double* vsl, const long long int* ldvsl,
              double* vsr, const long long int* ldvsr, double* rconde,
              double* rcondv, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* bwork,
              long long int* info );
void dggesx( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_D_SELECT_FUNCTION_3 selctg, const char* sense,
             const long long int* n, double* a, const long long int* lda, double* b,
             const long long int* ldb, long long int* sdim, double* alphar, double* alphai,
             double* beta, double* vsl, const long long int* ldvsl, double* vsr,
             const long long int* ldvsr, double* rconde, double* rcondv,
             double* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* bwork, long long int* info );
void dggesx_( const char* jobvsl, const char* jobvsr, const char* sort,
              MKL_D_SELECT_FUNCTION_3 selctg, const char* sense,
              const long long int* n, double* a, const long long int* lda, double* b,
              const long long int* ldb, long long int* sdim, double* alphar,
              double* alphai, double* beta, double* vsl, const long long int* ldvsl,
              double* vsr, const long long int* ldvsr, double* rconde,
              double* rcondv, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* bwork,
              long long int* info );

void DGGEV( const char* jobvl, const char* jobvr, const long long int* n, double* a,
            const long long int* lda, double* b, const long long int* ldb, double* alphar,
            double* alphai, double* beta, double* vl, const long long int* ldvl,
            double* vr, const long long int* ldvr, double* work,
            const long long int* lwork, long long int* info );
void DGGEV_( const char* jobvl, const char* jobvr, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* alphar,
             double* alphai, double* beta, double* vl, const long long int* ldvl,
             double* vr, const long long int* ldvr, double* work,
             const long long int* lwork, long long int* info );
void dggev( const char* jobvl, const char* jobvr, const long long int* n, double* a,
            const long long int* lda, double* b, const long long int* ldb, double* alphar,
            double* alphai, double* beta, double* vl, const long long int* ldvl,
            double* vr, const long long int* ldvr, double* work,
            const long long int* lwork, long long int* info );
void dggev_( const char* jobvl, const char* jobvr, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* alphar,
             double* alphai, double* beta, double* vl, const long long int* ldvl,
             double* vr, const long long int* ldvr, double* work,
             const long long int* lwork, long long int* info );

void DGGEVX( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* alphar,
             double* alphai, double* beta, double* vl, const long long int* ldvl,
             double* vr, const long long int* ldvr, long long int* ilo, long long int* ihi,
             double* lscale, double* rscale, double* abnrm, double* bbnrm,
             double* rconde, double* rcondv, double* work,
             const long long int* lwork, long long int* iwork, long long int* bwork,
             long long int* info );
void DGGEVX_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              double* alphar, double* alphai, double* beta, double* vl,
              const long long int* ldvl, double* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, double* lscale, double* rscale,
              double* abnrm, double* bbnrm, double* rconde, double* rcondv,
              double* work, const long long int* lwork, long long int* iwork,
              long long int* bwork, long long int* info );
void dggevx( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* alphar,
             double* alphai, double* beta, double* vl, const long long int* ldvl,
             double* vr, const long long int* ldvr, long long int* ilo, long long int* ihi,
             double* lscale, double* rscale, double* abnrm, double* bbnrm,
             double* rconde, double* rcondv, double* work,
             const long long int* lwork, long long int* iwork, long long int* bwork,
             long long int* info );
void dggevx_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              double* alphar, double* alphai, double* beta, double* vl,
              const long long int* ldvl, double* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, double* lscale, double* rscale,
              double* abnrm, double* bbnrm, double* rconde, double* rcondv,
              double* work, const long long int* lwork, long long int* iwork,
              long long int* bwork, long long int* info );

void DGGGLM( const long long int* n, const long long int* m, const long long int* p, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* d,
             double* x, double* y, double* work, const long long int* lwork,
             long long int* info );
void DGGGLM_( const long long int* n, const long long int* m, const long long int* p, double* a,
              const long long int* lda, double* b, const long long int* ldb, double* d,
              double* x, double* y, double* work, const long long int* lwork,
              long long int* info );
void dggglm( const long long int* n, const long long int* m, const long long int* p, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* d,
             double* x, double* y, double* work, const long long int* lwork,
             long long int* info );
void dggglm_( const long long int* n, const long long int* m, const long long int* p, double* a,
              const long long int* lda, double* b, const long long int* ldb, double* d,
              double* x, double* y, double* work, const long long int* lwork,
              long long int* info );

void DGGHRD( const char* compq, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* q,
             const long long int* ldq, double* z, const long long int* ldz,
             long long int* info );
void DGGHRD_( const char* compq, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* a,
              const long long int* lda, double* b, const long long int* ldb, double* q,
              const long long int* ldq, double* z, const long long int* ldz,
              long long int* info );
void dgghrd( const char* compq, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* q,
             const long long int* ldq, double* z, const long long int* ldz,
             long long int* info );
void dgghrd_( const char* compq, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* a,
              const long long int* lda, double* b, const long long int* ldb, double* q,
              const long long int* ldq, double* z, const long long int* ldz,
              long long int* info );

void DGGLSE( const long long int* m, const long long int* n, const long long int* p, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* c,
             double* d, double* x, double* work, const long long int* lwork,
             long long int* info );
void DGGLSE_( const long long int* m, const long long int* n, const long long int* p, double* a,
              const long long int* lda, double* b, const long long int* ldb, double* c,
              double* d, double* x, double* work, const long long int* lwork,
              long long int* info );
void dgglse( const long long int* m, const long long int* n, const long long int* p, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* c,
             double* d, double* x, double* work, const long long int* lwork,
             long long int* info );
void dgglse_( const long long int* m, const long long int* n, const long long int* p, double* a,
              const long long int* lda, double* b, const long long int* ldb, double* c,
              double* d, double* x, double* work, const long long int* lwork,
              long long int* info );

void DGGQRF( const long long int* n, const long long int* m, const long long int* p, double* a,
             const long long int* lda, double* taua, double* b, const long long int* ldb,
             double* taub, double* work, const long long int* lwork, long long int* info );
void DGGQRF_( const long long int* n, const long long int* m, const long long int* p, double* a,
              const long long int* lda, double* taua, double* b, const long long int* ldb,
              double* taub, double* work, const long long int* lwork,
              long long int* info );
void dggqrf( const long long int* n, const long long int* m, const long long int* p, double* a,
             const long long int* lda, double* taua, double* b, const long long int* ldb,
             double* taub, double* work, const long long int* lwork, long long int* info );
void dggqrf_( const long long int* n, const long long int* m, const long long int* p, double* a,
              const long long int* lda, double* taua, double* b, const long long int* ldb,
              double* taub, double* work, const long long int* lwork,
              long long int* info );

void DGGRQF( const long long int* m, const long long int* p, const long long int* n, double* a,
             const long long int* lda, double* taua, double* b, const long long int* ldb,
             double* taub, double* work, const long long int* lwork, long long int* info );
void DGGRQF_( const long long int* m, const long long int* p, const long long int* n, double* a,
              const long long int* lda, double* taua, double* b, const long long int* ldb,
              double* taub, double* work, const long long int* lwork,
              long long int* info );
void dggrqf( const long long int* m, const long long int* p, const long long int* n, double* a,
             const long long int* lda, double* taua, double* b, const long long int* ldb,
             double* taub, double* work, const long long int* lwork, long long int* info );
void dggrqf_( const long long int* m, const long long int* p, const long long int* n, double* a,
              const long long int* lda, double* taua, double* b, const long long int* ldb,
              double* taub, double* work, const long long int* lwork,
              long long int* info );

void DGGSVD( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* n, const long long int* p, long long int* k,
             long long int* l, double* a, const long long int* lda, double* b,
             const long long int* ldb, double* alpha, double* beta, double* u,
             const long long int* ldu, double* v, const long long int* ldv, double* q,
             const long long int* ldq, double* work, long long int* iwork, long long int* info );
void DGGSVD_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* n, const long long int* p, long long int* k,
              long long int* l, double* a, const long long int* lda, double* b,
              const long long int* ldb, double* alpha, double* beta, double* u,
              const long long int* ldu, double* v, const long long int* ldv, double* q,
              const long long int* ldq, double* work, long long int* iwork,
              long long int* info );
void dggsvd( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* n, const long long int* p, long long int* k,
             long long int* l, double* a, const long long int* lda, double* b,
             const long long int* ldb, double* alpha, double* beta, double* u,
             const long long int* ldu, double* v, const long long int* ldv, double* q,
             const long long int* ldq, double* work, long long int* iwork, long long int* info );
void dggsvd_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* n, const long long int* p, long long int* k,
              long long int* l, double* a, const long long int* lda, double* b,
              const long long int* ldb, double* alpha, double* beta, double* u,
              const long long int* ldu, double* v, const long long int* ldv, double* q,
              const long long int* ldq, double* work, long long int* iwork,
              long long int* info );

void DGGSVP( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb,
             const double* tola, const double* tolb, long long int* k, long long int* l,
             double* u, const long long int* ldu, double* v, const long long int* ldv,
             double* q, const long long int* ldq, long long int* iwork, double* tau,
             double* work, long long int* info );
void DGGSVP_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              const double* tola, const double* tolb, long long int* k, long long int* l,
              double* u, const long long int* ldu, double* v, const long long int* ldv,
              double* q, const long long int* ldq, long long int* iwork, double* tau,
              double* work, long long int* info );
void dggsvp( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb,
             const double* tola, const double* tolb, long long int* k, long long int* l,
             double* u, const long long int* ldu, double* v, const long long int* ldv,
             double* q, const long long int* ldq, long long int* iwork, double* tau,
             double* work, long long int* info );
void dggsvp_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              const double* tola, const double* tolb, long long int* k, long long int* l,
              double* u, const long long int* ldu, double* v, const long long int* ldv,
              double* q, const long long int* ldq, long long int* iwork, double* tau,
              double* work, long long int* info );

void DGSVJ0( const char* jobv, const long long int* m, const long long int* n, double* a,
             const long long int* lda, double* d, double* sva, const long long int* mv,
             double* v, const long long int* ldv, const double* eps,
             const double* sfmin, const double* tol, const long long int* nsweep,
             double* work, const long long int* lwork, long long int* info );
void DGSVJ0_( const char* jobv, const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* d, double* sva, const long long int* mv,
              double* v, const long long int* ldv, const double* eps,
              const double* sfmin, const double* tol, const long long int* nsweep,
              double* work, const long long int* lwork, long long int* info );
void dgsvj0( const char* jobv, const long long int* m, const long long int* n, double* a,
             const long long int* lda, double* d, double* sva, const long long int* mv,
             double* v, const long long int* ldv, const double* eps,
             const double* sfmin, const double* tol, const long long int* nsweep,
             double* work, const long long int* lwork, long long int* info );
void dgsvj0_( const char* jobv, const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* d, double* sva, const long long int* mv,
              double* v, const long long int* ldv, const double* eps,
              const double* sfmin, const double* tol, const long long int* nsweep,
              double* work, const long long int* lwork, long long int* info );

void DGSVJ1( const char* jobv, const long long int* m, const long long int* n,
             const long long int* n1, double* a, const long long int* lda, double* d,
             double* sva, const long long int* mv, double* v, const long long int* ldv,
             const double* eps, const double* sfmin, const double* tol,
             const long long int* nsweep, double* work, const long long int* lwork,
             long long int* info );
void DGSVJ1_( const char* jobv, const long long int* m, const long long int* n,
              const long long int* n1, double* a, const long long int* lda, double* d,
              double* sva, const long long int* mv, double* v, const long long int* ldv,
              const double* eps, const double* sfmin, const double* tol,
              const long long int* nsweep, double* work, const long long int* lwork,
              long long int* info );
void dgsvj1( const char* jobv, const long long int* m, const long long int* n,
             const long long int* n1, double* a, const long long int* lda, double* d,
             double* sva, const long long int* mv, double* v, const long long int* ldv,
             const double* eps, const double* sfmin, const double* tol,
             const long long int* nsweep, double* work, const long long int* lwork,
             long long int* info );
void dgsvj1_( const char* jobv, const long long int* m, const long long int* n,
              const long long int* n1, double* a, const long long int* lda, double* d,
              double* sva, const long long int* mv, double* v, const long long int* ldv,
              const double* eps, const double* sfmin, const double* tol,
              const long long int* nsweep, double* work, const long long int* lwork,
              long long int* info );

void DGTCON( const char* norm, const long long int* n, const double* dl,
             const double* d, const double* du, const double* du2,
             const long long int* ipiv, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void DGTCON_( const char* norm, const long long int* n, const double* dl,
              const double* d, const double* du, const double* du2,
              const long long int* ipiv, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );
void dgtcon( const char* norm, const long long int* n, const double* dl,
             const double* d, const double* du, const double* du2,
             const long long int* ipiv, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void dgtcon_( const char* norm, const long long int* n, const double* dl,
              const double* d, const double* du, const double* du2,
              const long long int* ipiv, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );

void DGTRFS( const char* trans, const long long int* n, const long long int* nrhs,
             const double* dl, const double* d, const double* du,
             const double* dlf, const double* df, const double* duf,
             const double* du2, const long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void DGTRFS_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* dl, const double* d, const double* du,
              const double* dlf, const double* df, const double* duf,
              const double* du2, const long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );
void dgtrfs( const char* trans, const long long int* n, const long long int* nrhs,
             const double* dl, const double* d, const double* du,
             const double* dlf, const double* df, const double* duf,
             const double* du2, const long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void dgtrfs_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* dl, const double* d, const double* du,
              const double* dlf, const double* df, const double* duf,
              const double* du2, const long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );

void DGTSV( const long long int* n, const long long int* nrhs, double* dl, double* d,
            double* du, double* b, const long long int* ldb, long long int* info );
void DGTSV_( const long long int* n, const long long int* nrhs, double* dl, double* d,
             double* du, double* b, const long long int* ldb, long long int* info );
void dgtsv( const long long int* n, const long long int* nrhs, double* dl, double* d,
            double* du, double* b, const long long int* ldb, long long int* info );
void dgtsv_( const long long int* n, const long long int* nrhs, double* dl, double* d,
             double* du, double* b, const long long int* ldb, long long int* info );

void DGTSVX( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, const double* dl, const double* d,
             const double* du, double* dlf, double* df, double* duf,
             double* du2, long long int* ipiv, const double* b, const long long int* ldb,
             double* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void DGTSVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, const double* dl, const double* d,
              const double* du, double* dlf, double* df, double* duf,
              double* du2, long long int* ipiv, const double* b, const long long int* ldb,
              double* x, const long long int* ldx, double* rcond, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );
void dgtsvx( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, const double* dl, const double* d,
             const double* du, double* dlf, double* df, double* duf,
             double* du2, long long int* ipiv, const double* b, const long long int* ldb,
             double* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void dgtsvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, const double* dl, const double* d,
              const double* du, double* dlf, double* df, double* duf,
              double* du2, long long int* ipiv, const double* b, const long long int* ldb,
              double* x, const long long int* ldx, double* rcond, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );

void DGTTRF( const long long int* n, double* dl, double* d, double* du, double* du2,
             long long int* ipiv, long long int* info );
void DGTTRF_( const long long int* n, double* dl, double* d, double* du, double* du2,
              long long int* ipiv, long long int* info );
void dgttrf( const long long int* n, double* dl, double* d, double* du, double* du2,
             long long int* ipiv, long long int* info );
void dgttrf_( const long long int* n, double* dl, double* d, double* du, double* du2,
              long long int* ipiv, long long int* info );

void DGTTRS( const char* trans, const long long int* n, const long long int* nrhs,
             const double* dl, const double* d, const double* du,
             const double* du2, const long long int* ipiv, double* b,
             const long long int* ldb, long long int* info );
void DGTTRS_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* dl, const double* d, const double* du,
              const double* du2, const long long int* ipiv, double* b,
              const long long int* ldb, long long int* info );
void dgttrs( const char* trans, const long long int* n, const long long int* nrhs,
             const double* dl, const double* d, const double* du,
             const double* du2, const long long int* ipiv, double* b,
             const long long int* ldb, long long int* info );
void dgttrs_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* dl, const double* d, const double* du,
              const double* du2, const long long int* ipiv, double* b,
              const long long int* ldb, long long int* info );

void DGTTS2( const long long int* itrans, const long long int* n, const long long int* nrhs,
             const double* dl, const double* d, const double* du,
             const double* du2, const long long int* ipiv, double* b,
             const long long int* ldb );
void DGTTS2_( const long long int* itrans, const long long int* n, const long long int* nrhs,
              const double* dl, const double* d, const double* du,
              const double* du2, const long long int* ipiv, double* b,
              const long long int* ldb );
void dgtts2( const long long int* itrans, const long long int* n, const long long int* nrhs,
             const double* dl, const double* d, const double* du,
             const double* du2, const long long int* ipiv, double* b,
             const long long int* ldb );
void dgtts2_( const long long int* itrans, const long long int* n, const long long int* nrhs,
              const double* dl, const double* d, const double* du,
              const double* du2, const long long int* ipiv, double* b,
              const long long int* ldb );

void DHGEQZ( const char* job, const char* compq, const char* compz,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             double* h, const long long int* ldh, double* t, const long long int* ldt,
             double* alphar, double* alphai, double* beta, double* q,
             const long long int* ldq, double* z, const long long int* ldz, double* work,
             const long long int* lwork, long long int* info );
void DHGEQZ_( const char* job, const char* compq, const char* compz,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              double* h, const long long int* ldh, double* t, const long long int* ldt,
              double* alphar, double* alphai, double* beta, double* q,
              const long long int* ldq, double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* info );
void dhgeqz( const char* job, const char* compq, const char* compz,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             double* h, const long long int* ldh, double* t, const long long int* ldt,
             double* alphar, double* alphai, double* beta, double* q,
             const long long int* ldq, double* z, const long long int* ldz, double* work,
             const long long int* lwork, long long int* info );
void dhgeqz_( const char* job, const char* compq, const char* compz,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              double* h, const long long int* ldh, double* t, const long long int* ldt,
              double* alphar, double* alphai, double* beta, double* q,
              const long long int* ldq, double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* info );

void DHSEIN( const char* side, const char* eigsrc, const char* initv,
             long long int* select, const long long int* n, const double* h,
             const long long int* ldh, double* wr, const double* wi, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, double* work, long long int* ifaill,
             long long int* ifailr, long long int* info );
void DHSEIN_( const char* side, const char* eigsrc, const char* initv,
              long long int* select, const long long int* n, const double* h,
              const long long int* ldh, double* wr, const double* wi, double* vl,
              const long long int* ldvl, double* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, double* work, long long int* ifaill,
              long long int* ifailr, long long int* info );
void dhsein( const char* side, const char* eigsrc, const char* initv,
             long long int* select, const long long int* n, const double* h,
             const long long int* ldh, double* wr, const double* wi, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, double* work, long long int* ifaill,
             long long int* ifailr, long long int* info );
void dhsein_( const char* side, const char* eigsrc, const char* initv,
              long long int* select, const long long int* n, const double* h,
              const long long int* ldh, double* wr, const double* wi, double* vl,
              const long long int* ldvl, double* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, double* work, long long int* ifaill,
              long long int* ifailr, long long int* info );

void DHSEQR( const char* job, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* h,
             const long long int* ldh, double* wr, double* wi, double* z,
             const long long int* ldz, double* work, const long long int* lwork,
             long long int* info );
void DHSEQR_( const char* job, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* h,
              const long long int* ldh, double* wr, double* wi, double* z,
              const long long int* ldz, double* work, const long long int* lwork,
              long long int* info );
void dhseqr( const char* job, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* h,
             const long long int* ldh, double* wr, double* wi, double* z,
             const long long int* ldz, double* work, const long long int* lwork,
             long long int* info );
void dhseqr_( const char* job, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* h,
              const long long int* ldh, double* wr, double* wi, double* z,
              const long long int* ldz, double* work, const long long int* lwork,
              long long int* info );

long long int DISNAN( const double* din );
long long int DISNAN_( const double* din );
long long int disnan( const double* din );
long long int disnan_( const double* din );

void DLABAD( double* smallx, double* large );
void DLABAD_( double* smallx, double* large );
void dlabad( double* smallx, double* large );
void dlabad_( double* smallx, double* large );

void DLABRD( const long long int* m, const long long int* n, const long long int* nb, double* a,
             const long long int* lda, double* d, double* e, double* tauq,
             double* taup, double* x, const long long int* ldx, double* y,
             const long long int* ldy );
void DLABRD_( const long long int* m, const long long int* n, const long long int* nb, double* a,
              const long long int* lda, double* d, double* e, double* tauq,
              double* taup, double* x, const long long int* ldx, double* y,
              const long long int* ldy );
void dlabrd( const long long int* m, const long long int* n, const long long int* nb, double* a,
             const long long int* lda, double* d, double* e, double* tauq,
             double* taup, double* x, const long long int* ldx, double* y,
             const long long int* ldy );
void dlabrd_( const long long int* m, const long long int* n, const long long int* nb, double* a,
              const long long int* lda, double* d, double* e, double* tauq,
              double* taup, double* x, const long long int* ldx, double* y,
              const long long int* ldy );

void DLACN2( const long long int* n, double* v, double* x, long long int* isgn,
             double* est, long long int* kase, long long int* isave );
void DLACN2_( const long long int* n, double* v, double* x, long long int* isgn,
              double* est, long long int* kase, long long int* isave );
void dlacn2( const long long int* n, double* v, double* x, long long int* isgn,
             double* est, long long int* kase, long long int* isave );
void dlacn2_( const long long int* n, double* v, double* x, long long int* isgn,
              double* est, long long int* kase, long long int* isave );

void DLACON( const long long int* n, double* v, double* x, long long int* isgn,
             double* est, long long int* kase );
void DLACON_( const long long int* n, double* v, double* x, long long int* isgn,
              double* est, long long int* kase );
void dlacon( const long long int* n, double* v, double* x, long long int* isgn,
             double* est, long long int* kase );
void dlacon_( const long long int* n, double* v, double* x, long long int* isgn,
              double* est, long long int* kase );

void DLACPY( const char* uplo, const long long int* m, const long long int* n,
             const double* a, const long long int* lda, double* b,
             const long long int* ldb );
void DLACPY_( const char* uplo, const long long int* m, const long long int* n,
              const double* a, const long long int* lda, double* b,
              const long long int* ldb );
void dlacpy( const char* uplo, const long long int* m, const long long int* n,
             const double* a, const long long int* lda, double* b,
             const long long int* ldb );
void dlacpy_( const char* uplo, const long long int* m, const long long int* n,
              const double* a, const long long int* lda, double* b,
              const long long int* ldb );

void DLADIV( const double* a, const double* b, const double* c,
             const double* d, double* p, double* q );
void DLADIV_( const double* a, const double* b, const double* c,
              const double* d, double* p, double* q );
void dladiv( const double* a, const double* b, const double* c,
             const double* d, double* p, double* q );
void dladiv_( const double* a, const double* b, const double* c,
              const double* d, double* p, double* q );

void DLAE2( const double* a, const double* b, const double* c, double* rt1,
            double* rt2 );
void DLAE2_( const double* a, const double* b, const double* c, double* rt1,
             double* rt2 );
void dlae2( const double* a, const double* b, const double* c, double* rt1,
            double* rt2 );
void dlae2_( const double* a, const double* b, const double* c, double* rt1,
             double* rt2 );

void DLAEBZ( const long long int* ijob, const long long int* nitmax, const long long int* n,
             const long long int* mmax, const long long int* minp, const long long int* nbmin,
             const double* abstol, const double* reltol, const double* pivmin,
             const double* d, const double* e, const double* e2, long long int* nval,
             double* ab, double* c, long long int* mout, long long int* nab, double* work,
             long long int* iwork, long long int* info );
void DLAEBZ_( const long long int* ijob, const long long int* nitmax, const long long int* n,
              const long long int* mmax, const long long int* minp, const long long int* nbmin,
              const double* abstol, const double* reltol, const double* pivmin,
              const double* d, const double* e, const double* e2,
              long long int* nval, double* ab, double* c, long long int* mout,
              long long int* nab, double* work, long long int* iwork, long long int* info );
void dlaebz( const long long int* ijob, const long long int* nitmax, const long long int* n,
             const long long int* mmax, const long long int* minp, const long long int* nbmin,
             const double* abstol, const double* reltol, const double* pivmin,
             const double* d, const double* e, const double* e2, long long int* nval,
             double* ab, double* c, long long int* mout, long long int* nab, double* work,
             long long int* iwork, long long int* info );
void dlaebz_( const long long int* ijob, const long long int* nitmax, const long long int* n,
              const long long int* mmax, const long long int* minp, const long long int* nbmin,
              const double* abstol, const double* reltol, const double* pivmin,
              const double* d, const double* e, const double* e2,
              long long int* nval, double* ab, double* c, long long int* mout,
              long long int* nab, double* work, long long int* iwork, long long int* info );

void DLAED0( const long long int* icompq, const long long int* qsiz, const long long int* n,
             double* d, const double* e, double* q, const long long int* ldq,
             double* qstore, const long long int* ldqs, double* work, long long int* iwork,
             long long int* info );
void DLAED0_( const long long int* icompq, const long long int* qsiz, const long long int* n,
              double* d, const double* e, double* q, const long long int* ldq,
              double* qstore, const long long int* ldqs, double* work,
              long long int* iwork, long long int* info );
void dlaed0( const long long int* icompq, const long long int* qsiz, const long long int* n,
             double* d, const double* e, double* q, const long long int* ldq,
             double* qstore, const long long int* ldqs, double* work, long long int* iwork,
             long long int* info );
void dlaed0_( const long long int* icompq, const long long int* qsiz, const long long int* n,
              double* d, const double* e, double* q, const long long int* ldq,
              double* qstore, const long long int* ldqs, double* work,
              long long int* iwork, long long int* info );

void DLAED1( const long long int* n, double* d, double* q, const long long int* ldq,
             long long int* indxq, const double* rho, const long long int* cutpnt,
             double* work, long long int* iwork, long long int* info );
void DLAED1_( const long long int* n, double* d, double* q, const long long int* ldq,
              long long int* indxq, const double* rho, const long long int* cutpnt,
              double* work, long long int* iwork, long long int* info );
void dlaed1( const long long int* n, double* d, double* q, const long long int* ldq,
             long long int* indxq, const double* rho, const long long int* cutpnt,
             double* work, long long int* iwork, long long int* info );
void dlaed1_( const long long int* n, double* d, double* q, const long long int* ldq,
              long long int* indxq, const double* rho, const long long int* cutpnt,
              double* work, long long int* iwork, long long int* info );

void DLAED2( long long int* k, const long long int* n, const long long int* n1, double* d,
             double* q, const long long int* ldq, long long int* indxq, double* rho,
             const double* z, double* dlamda, double* w, double* q2,
             long long int* indx, long long int* indxc, long long int* indxp, long long int* coltyp,
             long long int* info );
void DLAED2_( long long int* k, const long long int* n, const long long int* n1, double* d,
              double* q, const long long int* ldq, long long int* indxq, double* rho,
              const double* z, double* dlamda, double* w, double* q2,
              long long int* indx, long long int* indxc, long long int* indxp, long long int* coltyp,
              long long int* info );
void dlaed2( long long int* k, const long long int* n, const long long int* n1, double* d,
             double* q, const long long int* ldq, long long int* indxq, double* rho,
             const double* z, double* dlamda, double* w, double* q2,
             long long int* indx, long long int* indxc, long long int* indxp, long long int* coltyp,
             long long int* info );
void dlaed2_( long long int* k, const long long int* n, const long long int* n1, double* d,
              double* q, const long long int* ldq, long long int* indxq, double* rho,
              const double* z, double* dlamda, double* w, double* q2,
              long long int* indx, long long int* indxc, long long int* indxp, long long int* coltyp,
              long long int* info );

void DLAED3( const long long int* k, const long long int* n, const long long int* n1, double* d,
             double* q, const long long int* ldq, const double* rho, double* dlamda,
             const double* q2, const long long int* indx, const long long int* ctot,
             double* w, double* s, long long int* info );
void DLAED3_( const long long int* k, const long long int* n, const long long int* n1, double* d,
              double* q, const long long int* ldq, const double* rho, double* dlamda,
              const double* q2, const long long int* indx, const long long int* ctot,
              double* w, double* s, long long int* info );
void dlaed3( const long long int* k, const long long int* n, const long long int* n1, double* d,
             double* q, const long long int* ldq, const double* rho, double* dlamda,
             const double* q2, const long long int* indx, const long long int* ctot,
             double* w, double* s, long long int* info );
void dlaed3_( const long long int* k, const long long int* n, const long long int* n1, double* d,
              double* q, const long long int* ldq, const double* rho, double* dlamda,
              const double* q2, const long long int* indx, const long long int* ctot,
              double* w, double* s, long long int* info );

void DLAED4( const long long int* n, const long long int* i, const double* d,
             const double* z, double* delta, const double* rho, double* dlam,
             long long int* info );
void DLAED4_( const long long int* n, const long long int* i, const double* d,
              const double* z, double* delta, const double* rho, double* dlam,
              long long int* info );
void dlaed4( const long long int* n, const long long int* i, const double* d,
             const double* z, double* delta, const double* rho, double* dlam,
             long long int* info );
void dlaed4_( const long long int* n, const long long int* i, const double* d,
              const double* z, double* delta, const double* rho, double* dlam,
              long long int* info );

void DLAED5( const long long int* i, const double* d, const double* z, double* delta,
             const double* rho, double* dlam );
void DLAED5_( const long long int* i, const double* d, const double* z,
              double* delta, const double* rho, double* dlam );
void dlaed5( const long long int* i, const double* d, const double* z, double* delta,
             const double* rho, double* dlam );
void dlaed5_( const long long int* i, const double* d, const double* z,
              double* delta, const double* rho, double* dlam );

void DLAED6( const long long int* kniter, const long long int* orgati, const double* rho,
             const double* d, const double* z, const double* finit,
             double* tau, long long int* info );
void DLAED6_( const long long int* kniter, const long long int* orgati, const double* rho,
              const double* d, const double* z, const double* finit,
              double* tau, long long int* info );
void dlaed6( const long long int* kniter, const long long int* orgati, const double* rho,
             const double* d, const double* z, const double* finit,
             double* tau, long long int* info );
void dlaed6_( const long long int* kniter, const long long int* orgati, const double* rho,
              const double* d, const double* z, const double* finit,
              double* tau, long long int* info );

void DLAED7( const long long int* icompq, const long long int* n, const long long int* qsiz,
             const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, double* d, double* q, const long long int* ldq,
             long long int* indxq, const double* rho, const long long int* cutpnt,
             double* qstore, long long int* qptr, const long long int* prmptr,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const double* givnum, double* work, long long int* iwork,
             long long int* info );
void DLAED7_( const long long int* icompq, const long long int* n, const long long int* qsiz,
              const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, double* d, double* q, const long long int* ldq,
              long long int* indxq, const double* rho, const long long int* cutpnt,
              double* qstore, long long int* qptr, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const double* givnum, double* work,
              long long int* iwork, long long int* info );
void dlaed7( const long long int* icompq, const long long int* n, const long long int* qsiz,
             const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, double* d, double* q, const long long int* ldq,
             long long int* indxq, const double* rho, const long long int* cutpnt,
             double* qstore, long long int* qptr, const long long int* prmptr,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const double* givnum, double* work, long long int* iwork,
             long long int* info );
void dlaed7_( const long long int* icompq, const long long int* n, const long long int* qsiz,
              const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, double* d, double* q, const long long int* ldq,
              long long int* indxq, const double* rho, const long long int* cutpnt,
              double* qstore, long long int* qptr, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const double* givnum, double* work,
              long long int* iwork, long long int* info );

void DLAED8( const long long int* icompq, long long int* k, const long long int* n,
             const long long int* qsiz, double* d, double* q, const long long int* ldq,
             const long long int* indxq, double* rho, const long long int* cutpnt,
             const double* z, double* dlamda, double* q2, const long long int* ldq2,
             double* w, long long int* perm, long long int* givptr, long long int* givcol,
             double* givnum, long long int* indxp, long long int* indx, long long int* info );
void DLAED8_( const long long int* icompq, long long int* k, const long long int* n,
              const long long int* qsiz, double* d, double* q, const long long int* ldq,
              const long long int* indxq, double* rho, const long long int* cutpnt,
              const double* z, double* dlamda, double* q2, const long long int* ldq2,
              double* w, long long int* perm, long long int* givptr, long long int* givcol,
              double* givnum, long long int* indxp, long long int* indx, long long int* info );
void dlaed8( const long long int* icompq, long long int* k, const long long int* n,
             const long long int* qsiz, double* d, double* q, const long long int* ldq,
             const long long int* indxq, double* rho, const long long int* cutpnt,
             const double* z, double* dlamda, double* q2, const long long int* ldq2,
             double* w, long long int* perm, long long int* givptr, long long int* givcol,
             double* givnum, long long int* indxp, long long int* indx, long long int* info );
void dlaed8_( const long long int* icompq, long long int* k, const long long int* n,
              const long long int* qsiz, double* d, double* q, const long long int* ldq,
              const long long int* indxq, double* rho, const long long int* cutpnt,
              const double* z, double* dlamda, double* q2, const long long int* ldq2,
              double* w, long long int* perm, long long int* givptr, long long int* givcol,
              double* givnum, long long int* indxp, long long int* indx, long long int* info );

void DLAED9( const long long int* k, const long long int* kstart, const long long int* kstop,
             const long long int* n, double* d, double* q, const long long int* ldq,
             const double* rho, const double* dlamda, const double* w,
             double* s, const long long int* lds, long long int* info );
void DLAED9_( const long long int* k, const long long int* kstart, const long long int* kstop,
              const long long int* n, double* d, double* q, const long long int* ldq,
              const double* rho, const double* dlamda, const double* w,
              double* s, const long long int* lds, long long int* info );
void dlaed9( const long long int* k, const long long int* kstart, const long long int* kstop,
             const long long int* n, double* d, double* q, const long long int* ldq,
             const double* rho, const double* dlamda, const double* w,
             double* s, const long long int* lds, long long int* info );
void dlaed9_( const long long int* k, const long long int* kstart, const long long int* kstop,
              const long long int* n, double* d, double* q, const long long int* ldq,
              const double* rho, const double* dlamda, const double* w,
              double* s, const long long int* lds, long long int* info );

void DLAEDA( const long long int* n, const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, const long long int* prmptr, const long long int* perm,
             const long long int* givptr, const long long int* givcol,
             const double* givnum, const double* q, const long long int* qptr,
             double* z, double* ztemp, long long int* info );
void DLAEDA_( const long long int* n, const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const double* givnum, const double* q,
              const long long int* qptr, double* z, double* ztemp, long long int* info );
void dlaeda( const long long int* n, const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, const long long int* prmptr, const long long int* perm,
             const long long int* givptr, const long long int* givcol,
             const double* givnum, const double* q, const long long int* qptr,
             double* z, double* ztemp, long long int* info );
void dlaeda_( const long long int* n, const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const double* givnum, const double* q,
              const long long int* qptr, double* z, double* ztemp, long long int* info );

void DLAEIN( const long long int* rightv, const long long int* noinit, const long long int* n,
             const double* h, const long long int* ldh, const double* wr,
             const double* wi, double* vr, double* vi, double* b,
             const long long int* ldb, double* work, const double* eps3,
             const double* smlnum, const double* bignum, long long int* info );
void DLAEIN_( const long long int* rightv, const long long int* noinit, const long long int* n,
              const double* h, const long long int* ldh, const double* wr,
              const double* wi, double* vr, double* vi, double* b,
              const long long int* ldb, double* work, const double* eps3,
              const double* smlnum, const double* bignum, long long int* info );
void dlaein( const long long int* rightv, const long long int* noinit, const long long int* n,
             const double* h, const long long int* ldh, const double* wr,
             const double* wi, double* vr, double* vi, double* b,
             const long long int* ldb, double* work, const double* eps3,
             const double* smlnum, const double* bignum, long long int* info );
void dlaein_( const long long int* rightv, const long long int* noinit, const long long int* n,
              const double* h, const long long int* ldh, const double* wr,
              const double* wi, double* vr, double* vi, double* b,
              const long long int* ldb, double* work, const double* eps3,
              const double* smlnum, const double* bignum, long long int* info );

void DLAEV2( const double* a, const double* b, const double* c, double* rt1,
             double* rt2, double* cs1, double* sn1 );
void DLAEV2_( const double* a, const double* b, const double* c, double* rt1,
              double* rt2, double* cs1, double* sn1 );
void dlaev2( const double* a, const double* b, const double* c, double* rt1,
             double* rt2, double* cs1, double* sn1 );
void dlaev2_( const double* a, const double* b, const double* c, double* rt1,
              double* rt2, double* cs1, double* sn1 );

void DLAEXC( const long long int* wantq, const long long int* n, double* t,
             const long long int* ldt, double* q, const long long int* ldq,
             const long long int* j1, const long long int* n1, const long long int* n2,
             double* work, long long int* info );
void DLAEXC_( const long long int* wantq, const long long int* n, double* t,
              const long long int* ldt, double* q, const long long int* ldq,
              const long long int* j1, const long long int* n1, const long long int* n2,
              double* work, long long int* info );
void dlaexc( const long long int* wantq, const long long int* n, double* t,
             const long long int* ldt, double* q, const long long int* ldq,
             const long long int* j1, const long long int* n1, const long long int* n2,
             double* work, long long int* info );
void dlaexc_( const long long int* wantq, const long long int* n, double* t,
              const long long int* ldt, double* q, const long long int* ldq,
              const long long int* j1, const long long int* n1, const long long int* n2,
              double* work, long long int* info );

void DLAG2( const double* a, const long long int* lda, const double* b,
            const long long int* ldb, const double* safmin, double* scale1,
            double* scale2, double* wr1, double* wr2, double* wi );
void DLAG2_( const double* a, const long long int* lda, const double* b,
             const long long int* ldb, const double* safmin, double* scale1,
             double* scale2, double* wr1, double* wr2, double* wi );
void dlag2( const double* a, const long long int* lda, const double* b,
            const long long int* ldb, const double* safmin, double* scale1,
            double* scale2, double* wr1, double* wr2, double* wi );
void dlag2_( const double* a, const long long int* lda, const double* b,
             const long long int* ldb, const double* safmin, double* scale1,
             double* scale2, double* wr1, double* wr2, double* wi );

void DLAG2S( const long long int* m, const long long int* n, const double* a,
             const long long int* lda, float* sa, const long long int* ldsa,
             long long int* info );
void DLAG2S_( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, float* sa, const long long int* ldsa,
              long long int* info );
void dlag2s( const long long int* m, const long long int* n, const double* a,
             const long long int* lda, float* sa, const long long int* ldsa,
             long long int* info );
void dlag2s_( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, float* sa, const long long int* ldsa,
              long long int* info );

void DLAGS2( const long long int* upper, const double* a1, const double* a2,
             const double* a3, const double* b1, const double* b2,
             const double* b3, double* csu, double* snu, double* csv,
             double* snv, double* csq, double* snq );
void DLAGS2_( const long long int* upper, const double* a1, const double* a2,
              const double* a3, const double* b1, const double* b2,
              const double* b3, double* csu, double* snu, double* csv,
              double* snv, double* csq, double* snq );
void dlags2( const long long int* upper, const double* a1, const double* a2,
             const double* a3, const double* b1, const double* b2,
             const double* b3, double* csu, double* snu, double* csv,
             double* snv, double* csq, double* snq );
void dlags2_( const long long int* upper, const double* a1, const double* a2,
              const double* a3, const double* b1, const double* b2,
              const double* b3, double* csu, double* snu, double* csv,
              double* snv, double* csq, double* snq );

void DLAGTF( const long long int* n, double* a, const double* lambda, double* b,
             double* c, const double* tol, double* d, long long int* in,
             long long int* info );
void DLAGTF_( const long long int* n, double* a, const double* lambda, double* b,
              double* c, const double* tol, double* d, long long int* in,
              long long int* info );
void dlagtf( const long long int* n, double* a, const double* lambda, double* b,
             double* c, const double* tol, double* d, long long int* in,
             long long int* info );
void dlagtf_( const long long int* n, double* a, const double* lambda, double* b,
              double* c, const double* tol, double* d, long long int* in,
              long long int* info );

void DLAGTM( const char* trans, const long long int* n, const long long int* nrhs,
             const double* alpha, const double* dl, const double* d,
             const double* du, const double* x, const long long int* ldx,
             const double* beta, double* b, const long long int* ldb );
void DLAGTM_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* alpha, const double* dl, const double* d,
              const double* du, const double* x, const long long int* ldx,
              const double* beta, double* b, const long long int* ldb );
void dlagtm( const char* trans, const long long int* n, const long long int* nrhs,
             const double* alpha, const double* dl, const double* d,
             const double* du, const double* x, const long long int* ldx,
             const double* beta, double* b, const long long int* ldb );
void dlagtm_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* alpha, const double* dl, const double* d,
              const double* du, const double* x, const long long int* ldx,
              const double* beta, double* b, const long long int* ldb );

void DLAGTS( const long long int* job, const long long int* n, const double* a,
             const double* b, const double* c, const double* d,
             const long long int* in, double* y, double* tol, long long int* info );
void DLAGTS_( const long long int* job, const long long int* n, const double* a,
              const double* b, const double* c, const double* d,
              const long long int* in, double* y, double* tol, long long int* info );
void dlagts( const long long int* job, const long long int* n, const double* a,
             const double* b, const double* c, const double* d,
             const long long int* in, double* y, double* tol, long long int* info );
void dlagts_( const long long int* job, const long long int* n, const double* a,
              const double* b, const double* c, const double* d,
              const long long int* in, double* y, double* tol, long long int* info );

void DLAGV2( double* a, const long long int* lda, double* b, const long long int* ldb,
             double* alphar, double* alphai, double* beta, double* csl,
             double* snl, double* csr, double* snr );
void DLAGV2_( double* a, const long long int* lda, double* b, const long long int* ldb,
              double* alphar, double* alphai, double* beta, double* csl,
              double* snl, double* csr, double* snr );
void dlagv2( double* a, const long long int* lda, double* b, const long long int* ldb,
             double* alphar, double* alphai, double* beta, double* csl,
             double* snl, double* csr, double* snr );
void dlagv2_( double* a, const long long int* lda, double* b, const long long int* ldb,
              double* alphar, double* alphai, double* beta, double* csl,
              double* snl, double* csr, double* snr );

void DLAHQR( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* h,
             const long long int* ldh, double* wr, double* wi, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz,
             long long int* info );
void DLAHQR_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* h,
              const long long int* ldh, double* wr, double* wi, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz,
              long long int* info );
void dlahqr( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* h,
             const long long int* ldh, double* wr, double* wi, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz,
             long long int* info );
void dlahqr_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* h,
              const long long int* ldh, double* wr, double* wi, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz,
              long long int* info );

void DLAHR2( const long long int* n, const long long int* k, const long long int* nb, double* a,
             const long long int* lda, double* tau, double* t, const long long int* ldt,
             double* y, const long long int* ldy );
void DLAHR2_( const long long int* n, const long long int* k, const long long int* nb, double* a,
              const long long int* lda, double* tau, double* t, const long long int* ldt,
              double* y, const long long int* ldy );
void dlahr2( const long long int* n, const long long int* k, const long long int* nb, double* a,
             const long long int* lda, double* tau, double* t, const long long int* ldt,
             double* y, const long long int* ldy );
void dlahr2_( const long long int* n, const long long int* k, const long long int* nb, double* a,
              const long long int* lda, double* tau, double* t, const long long int* ldt,
              double* y, const long long int* ldy );

void DLAHRD( const long long int* n, const long long int* k, const long long int* nb, double* a,
             const long long int* lda, double* tau, double* t, const long long int* ldt,
             double* y, const long long int* ldy );
void DLAHRD_( const long long int* n, const long long int* k, const long long int* nb, double* a,
              const long long int* lda, double* tau, double* t, const long long int* ldt,
              double* y, const long long int* ldy );
void dlahrd( const long long int* n, const long long int* k, const long long int* nb, double* a,
             const long long int* lda, double* tau, double* t, const long long int* ldt,
             double* y, const long long int* ldy );
void dlahrd_( const long long int* n, const long long int* k, const long long int* nb, double* a,
              const long long int* lda, double* tau, double* t, const long long int* ldt,
              double* y, const long long int* ldy );

void DLAIC1( const long long int* job, const long long int* j, const double* x,
             const double* sest, const double* w, const double* gamma,
             double* sestpr, double* s, double* c );
void DLAIC1_( const long long int* job, const long long int* j, const double* x,
              const double* sest, const double* w, const double* gamma,
              double* sestpr, double* s, double* c );
void dlaic1( const long long int* job, const long long int* j, const double* x,
             const double* sest, const double* w, const double* gamma,
             double* sestpr, double* s, double* c );
void dlaic1_( const long long int* job, const long long int* j, const double* x,
              const double* sest, const double* w, const double* gamma,
              double* sestpr, double* s, double* c );

long long int DLAISNAN( const double* din1, const double* din2 );
long long int DLAISNAN_( const double* din1, const double* din2 );
long long int dlaisnan( const double* din1, const double* din2 );
long long int dlaisnan_( const double* din1, const double* din2 );

void DLALN2( const long long int* ltrans, const long long int* na, const long long int* nw,
             const double* smin, const double* ca, const double* a,
             const long long int* lda, const double* d1, const double* d2,
             const double* b, const long long int* ldb, const double* wr,
             const double* wi, double* x, const long long int* ldx, double* scale,
             double* xnorm, long long int* info );
void DLALN2_( const long long int* ltrans, const long long int* na, const long long int* nw,
              const double* smin, const double* ca, const double* a,
              const long long int* lda, const double* d1, const double* d2,
              const double* b, const long long int* ldb, const double* wr,
              const double* wi, double* x, const long long int* ldx, double* scale,
              double* xnorm, long long int* info );
void dlaln2( const long long int* ltrans, const long long int* na, const long long int* nw,
             const double* smin, const double* ca, const double* a,
             const long long int* lda, const double* d1, const double* d2,
             const double* b, const long long int* ldb, const double* wr,
             const double* wi, double* x, const long long int* ldx, double* scale,
             double* xnorm, long long int* info );
void dlaln2_( const long long int* ltrans, const long long int* na, const long long int* nw,
              const double* smin, const double* ca, const double* a,
              const long long int* lda, const double* d1, const double* d2,
              const double* b, const long long int* ldb, const double* wr,
              const double* wi, double* x, const long long int* ldx, double* scale,
              double* xnorm, long long int* info );

void DLALS0( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, const long long int* nrhs, double* b,
             const long long int* ldb, double* bx, const long long int* ldbx,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const double* givnum,
             const long long int* ldgnum, const double* poles, const double* difl,
             const double* difr, const double* z, const long long int* k,
             const double* c, const double* s, double* work, long long int* info );
void DLALS0_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, const long long int* nrhs, double* b,
              const long long int* ldb, double* bx, const long long int* ldbx,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const double* givnum, const long long int* ldgnum, const double* poles,
              const double* difl, const double* difr, const double* z,
              const long long int* k, const double* c, const double* s, double* work,
              long long int* info );
void dlals0( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, const long long int* nrhs, double* b,
             const long long int* ldb, double* bx, const long long int* ldbx,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const double* givnum,
             const long long int* ldgnum, const double* poles, const double* difl,
             const double* difr, const double* z, const long long int* k,
             const double* c, const double* s, double* work, long long int* info );
void dlals0_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, const long long int* nrhs, double* b,
              const long long int* ldb, double* bx, const long long int* ldbx,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const double* givnum, const long long int* ldgnum, const double* poles,
              const double* difl, const double* difr, const double* z,
              const long long int* k, const double* c, const double* s, double* work,
              long long int* info );

void DLALSA( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, double* b, const long long int* ldb, double* bx,
             const long long int* ldbx, const double* u, const long long int* ldu,
             const double* vt, const long long int* k, const double* difl,
             const double* difr, const double* z, const double* poles,
             const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const long long int* perm, const double* givnum,
             const double* c, const double* s, double* work, long long int* iwork,
             long long int* info );
void DLALSA_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, double* b, const long long int* ldb, double* bx,
              const long long int* ldbx, const double* u, const long long int* ldu,
              const double* vt, const long long int* k, const double* difl,
              const double* difr, const double* z, const double* poles,
              const long long int* givptr, const long long int* givcol,
              const long long int* ldgcol, const long long int* perm, const double* givnum,
              const double* c, const double* s, double* work, long long int* iwork,
              long long int* info );
void dlalsa( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, double* b, const long long int* ldb, double* bx,
             const long long int* ldbx, const double* u, const long long int* ldu,
             const double* vt, const long long int* k, const double* difl,
             const double* difr, const double* z, const double* poles,
             const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const long long int* perm, const double* givnum,
             const double* c, const double* s, double* work, long long int* iwork,
             long long int* info );
void dlalsa_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, double* b, const long long int* ldb, double* bx,
              const long long int* ldbx, const double* u, const long long int* ldu,
              const double* vt, const long long int* k, const double* difl,
              const double* difr, const double* z, const double* poles,
              const long long int* givptr, const long long int* givcol,
              const long long int* ldgcol, const long long int* perm, const double* givnum,
              const double* c, const double* s, double* work, long long int* iwork,
              long long int* info );

void DLALSD( const char* uplo, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, double* d, double* e, double* b,
             const long long int* ldb, const double* rcond, long long int* rank,
             double* work, long long int* iwork, long long int* info );
void DLALSD_( const char* uplo, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, double* d, double* e, double* b,
              const long long int* ldb, const double* rcond, long long int* rank,
              double* work, long long int* iwork, long long int* info );
void dlalsd( const char* uplo, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, double* d, double* e, double* b,
             const long long int* ldb, const double* rcond, long long int* rank,
             double* work, long long int* iwork, long long int* info );
void dlalsd_( const char* uplo, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, double* d, double* e, double* b,
              const long long int* ldb, const double* rcond, long long int* rank,
              double* work, long long int* iwork, long long int* info );

double DLAMCH( const char* cmach );
double DLAMCH_( const char* cmach );
double dlamch( const char* cmach );
double dlamch_( const char* cmach );

void DLAMC1( long long int* beta, long long int* t, long long int* rnd, long long int* ieee1 );
void DLAMC1_( long long int* beta, long long int* t, long long int* rnd, long long int* ieee1 );
void dlamc1( long long int* beta, long long int* t, long long int* rnd, long long int* ieee1 );
void dlamc1_( long long int* beta, long long int* t, long long int* rnd, long long int* ieee1 );

void DLAMC2( long long int* beta, long long int* t, long long int* rnd, double* eps,
             long long int* emin, double* rmin, long long int* emax, double* rmax );
void DLAMC2_( long long int* beta, long long int* t, long long int* rnd, double* eps,
              long long int* emin, double* rmin, long long int* emax, double* rmax );
void dlamc2( long long int* beta, long long int* t, long long int* rnd, double* eps,
             long long int* emin, double* rmin, long long int* emax, double* rmax );
void dlamc2_( long long int* beta, long long int* t, long long int* rnd, double* eps,
              long long int* emin, double* rmin, long long int* emax, double* rmax );

double DLAMC3( const double* a, const double* b );
double DLAMC3_( const double* a, const double* b );
double dlamc3( const double* a, const double* b );
double dlamc3_( const double* a, const double* b );

void DLAMC4( long long int* emin, const double* start, const long long int* base );
void DLAMC4_( long long int* emin, const double* start, const long long int* base );
void dlamc4( long long int* emin, const double* start, const long long int* base );
void dlamc4_( long long int* emin, const double* start, const long long int* base );

void DLAMC5( const long long int* beta, const long long int* p, const long long int* emin,
             const long long int* ieee, long long int* emax, double* rmax );
void DLAMC5_( const long long int* beta, const long long int* p, const long long int* emin,
              const long long int* ieee, long long int* emax, double* rmax );
void dlamc5( const long long int* beta, const long long int* p, const long long int* emin,
             const long long int* ieee, long long int* emax, double* rmax );
void dlamc5_( const long long int* beta, const long long int* p, const long long int* emin,
              const long long int* ieee, long long int* emax, double* rmax );

void DLAMRG( const long long int* n1, const long long int* n2, const double* a,
             const long long int* dtrd1, const long long int* dtrd2, long long int* index );
void DLAMRG_( const long long int* n1, const long long int* n2, const double* a,
              const long long int* dtrd1, const long long int* dtrd2, long long int* index );
void dlamrg( const long long int* n1, const long long int* n2, const double* a,
             const long long int* dtrd1, const long long int* dtrd2, long long int* index );
void dlamrg_( const long long int* n1, const long long int* n2, const double* a,
              const long long int* dtrd1, const long long int* dtrd2, long long int* index );

long long int DLANEG( const long long int* n, const double* d, const double* lld,
                const double* sigma, const double* pivmin, const long long int* r );
long long int DLANEG_( const long long int* n, const double* d, const double* lld,
                 const double* sigma, const double* pivmin, const long long int* r );
long long int dlaneg( const long long int* n, const double* d, const double* lld,
                const double* sigma, const double* pivmin, const long long int* r );
long long int dlaneg_( const long long int* n, const double* d, const double* lld,
                 const double* sigma, const double* pivmin, const long long int* r );

double DLANGB( const char* norm, const long long int* n, const long long int* kl,
               const long long int* ku, const double* ab, const long long int* ldab,
               double* work );
double DLANGB_( const char* norm, const long long int* n, const long long int* kl,
                const long long int* ku, const double* ab, const long long int* ldab,
                double* work );
double dlangb( const char* norm, const long long int* n, const long long int* kl,
               const long long int* ku, const double* ab, const long long int* ldab,
               double* work );
double dlangb_( const char* norm, const long long int* n, const long long int* kl,
                const long long int* ku, const double* ab, const long long int* ldab,
                double* work );

double DLANGE( const char* norm, const long long int* m, const long long int* n,
               const double* a, const long long int* lda, double* work );
double DLANGE_( const char* norm, const long long int* m, const long long int* n,
                const double* a, const long long int* lda, double* work );
double dlange( const char* norm, const long long int* m, const long long int* n,
               const double* a, const long long int* lda, double* work );
double dlange_( const char* norm, const long long int* m, const long long int* n,
                const double* a, const long long int* lda, double* work );

double DLANGT( const char* norm, const long long int* n, const double* dl,
               const double* d, const double* du );
double DLANGT_( const char* norm, const long long int* n, const double* dl,
                const double* d, const double* du );
double dlangt( const char* norm, const long long int* n, const double* dl,
               const double* d, const double* du );
double dlangt_( const char* norm, const long long int* n, const double* dl,
                const double* d, const double* du );

double DLANHS( const char* norm, const long long int* n, const double* a,
               const long long int* lda, double* work );
double DLANHS_( const char* norm, const long long int* n, const double* a,
                const long long int* lda, double* work );
double dlanhs( const char* norm, const long long int* n, const double* a,
               const long long int* lda, double* work );
double dlanhs_( const char* norm, const long long int* n, const double* a,
                const long long int* lda, double* work );

double DLANSB( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const double* ab, const long long int* ldab,
               double* work );
double DLANSB_( const char* norm, const char* uplo, const long long int* n,
                const long long int* k, const double* ab, const long long int* ldab,
                double* work );
double dlansb( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const double* ab, const long long int* ldab,
               double* work );
double dlansb_( const char* norm, const char* uplo, const long long int* n,
                const long long int* k, const double* ab, const long long int* ldab,
                double* work );

double DLANSF( const char* norm, const char* transr, const char* uplo,
               const long long int* n, const double* a, double* work );
double DLANSF_( const char* norm, const char* transr, const char* uplo,
                const long long int* n, const double* a, double* work );
double dlansf( const char* norm, const char* transr, const char* uplo,
               const long long int* n, const double* a, double* work );
double dlansf_( const char* norm, const char* transr, const char* uplo,
                const long long int* n, const double* a, double* work );

double DLANSP( const char* norm, const char* uplo, const long long int* n,
               const double* ap, double* work );
double DLANSP_( const char* norm, const char* uplo, const long long int* n,
                const double* ap, double* work );
double dlansp( const char* norm, const char* uplo, const long long int* n,
               const double* ap, double* work );
double dlansp_( const char* norm, const char* uplo, const long long int* n,
                const double* ap, double* work );

double DLANST( const char* norm, const long long int* n, const double* d,
               const double* e );
double DLANST_( const char* norm, const long long int* n, const double* d,
                const double* e );
double dlanst( const char* norm, const long long int* n, const double* d,
               const double* e );
double dlanst_( const char* norm, const long long int* n, const double* d,
                const double* e );

double DLANSY( const char* norm, const char* uplo, const long long int* n,
               const double* a, const long long int* lda, double* work );
double DLANSY_( const char* norm, const char* uplo, const long long int* n,
                const double* a, const long long int* lda, double* work );
double dlansy( const char* norm, const char* uplo, const long long int* n,
               const double* a, const long long int* lda, double* work );
double dlansy_( const char* norm, const char* uplo, const long long int* n,
                const double* a, const long long int* lda, double* work );

double DLANTB( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const long long int* k, const double* ab,
               const long long int* ldab, double* work );
double DLANTB_( const char* norm, const char* uplo, const char* diag,
                const long long int* n, const long long int* k, const double* ab,
                const long long int* ldab, double* work );
double dlantb( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const long long int* k, const double* ab,
               const long long int* ldab, double* work );
double dlantb_( const char* norm, const char* uplo, const char* diag,
                const long long int* n, const long long int* k, const double* ab,
                const long long int* ldab, double* work );

double DLANTP( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const double* ap, double* work );
double DLANTP_( const char* norm, const char* uplo, const char* diag,
                const long long int* n, const double* ap, double* work );
double dlantp( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const double* ap, double* work );
double dlantp_( const char* norm, const char* uplo, const char* diag,
                const long long int* n, const double* ap, double* work );

double DLANTR( const char* norm, const char* uplo, const char* diag,
               const long long int* m, const long long int* n, const double* a,
               const long long int* lda, double* work );
double DLANTR_( const char* norm, const char* uplo, const char* diag,
                const long long int* m, const long long int* n, const double* a,
                const long long int* lda, double* work );
double dlantr( const char* norm, const char* uplo, const char* diag,
               const long long int* m, const long long int* n, const double* a,
               const long long int* lda, double* work );
double dlantr_( const char* norm, const char* uplo, const char* diag,
                const long long int* m, const long long int* n, const double* a,
                const long long int* lda, double* work );

void DLANV2( double* a, double* b, double* c, double* d, double* rt1r,
             double* rt1i, double* rt2r, double* rt2i, double* cs,
             double* sn );
void DLANV2_( double* a, double* b, double* c, double* d, double* rt1r,
              double* rt1i, double* rt2r, double* rt2i, double* cs,
              double* sn );
void dlanv2( double* a, double* b, double* c, double* d, double* rt1r,
             double* rt1i, double* rt2r, double* rt2i, double* cs,
             double* sn );
void dlanv2_( double* a, double* b, double* c, double* d, double* rt1r,
              double* rt1i, double* rt2r, double* rt2i, double* cs,
              double* sn );

void DLAPLL( const long long int* n, double* x, const long long int* incx, double* y,
             const long long int* incy, double* ssmin );
void DLAPLL_( const long long int* n, double* x, const long long int* incx, double* y,
              const long long int* incy, double* ssmin );
void dlapll( const long long int* n, double* x, const long long int* incx, double* y,
             const long long int* incy, double* ssmin );
void dlapll_( const long long int* n, double* x, const long long int* incx, double* y,
              const long long int* incy, double* ssmin );

void DLAPMT( const long long int* forwrd, const long long int* m, const long long int* n,
             double* x, const long long int* ldx, long long int* k );
void DLAPMT_( const long long int* forwrd, const long long int* m, const long long int* n,
              double* x, const long long int* ldx, long long int* k );
void dlapmt( const long long int* forwrd, const long long int* m, const long long int* n,
             double* x, const long long int* ldx, long long int* k );
void dlapmt_( const long long int* forwrd, const long long int* m, const long long int* n,
              double* x, const long long int* ldx, long long int* k );

double DLAPY2( const double* x, const double* y );
double DLAPY2_( const double* x, const double* y );
double dlapy2( const double* x, const double* y );
double dlapy2_( const double* x, const double* y );

double DLAPY3( const double* x, const double* y, const double* z );
double DLAPY3_( const double* x, const double* y, const double* z );
double dlapy3( const double* x, const double* y, const double* z );
double dlapy3_( const double* x, const double* y, const double* z );

void DLAQGB( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, double* ab, const long long int* ldab,
             const double* r, const double* c, const double* rowcnd,
             const double* colcnd, const double* amax, char* equed );
void DLAQGB_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, double* ab, const long long int* ldab,
              const double* r, const double* c, const double* rowcnd,
              const double* colcnd, const double* amax, char* equed );
void dlaqgb( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, double* ab, const long long int* ldab,
             const double* r, const double* c, const double* rowcnd,
             const double* colcnd, const double* amax, char* equed );
void dlaqgb_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, double* ab, const long long int* ldab,
              const double* r, const double* c, const double* rowcnd,
              const double* colcnd, const double* amax, char* equed );

void DLAQGE( const long long int* m, const long long int* n, double* a, const long long int* lda,
             const double* r, const double* c, const double* rowcnd,
             const double* colcnd, const double* amax, char* equed );
void DLAQGE_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, const double* r, const double* c,
              const double* rowcnd, const double* colcnd, const double* amax,
              char* equed );
void dlaqge( const long long int* m, const long long int* n, double* a, const long long int* lda,
             const double* r, const double* c, const double* rowcnd,
             const double* colcnd, const double* amax, char* equed );
void dlaqge_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, const double* r, const double* c,
              const double* rowcnd, const double* colcnd, const double* amax,
              char* equed );

void DLAQP2( const long long int* m, const long long int* n, const long long int* offset,
             double* a, const long long int* lda, long long int* jpvt, double* tau,
             double* vn1, double* vn2, double* work );
void DLAQP2_( const long long int* m, const long long int* n, const long long int* offset,
              double* a, const long long int* lda, long long int* jpvt, double* tau,
              double* vn1, double* vn2, double* work );
void dlaqp2( const long long int* m, const long long int* n, const long long int* offset,
             double* a, const long long int* lda, long long int* jpvt, double* tau,
             double* vn1, double* vn2, double* work );
void dlaqp2_( const long long int* m, const long long int* n, const long long int* offset,
              double* a, const long long int* lda, long long int* jpvt, double* tau,
              double* vn1, double* vn2, double* work );

void DLAQPS( const long long int* m, const long long int* n, const long long int* offset,
             const long long int* nb, long long int* kb, double* a, const long long int* lda,
             long long int* jpvt, double* tau, double* vn1, double* vn2,
             double* auxv, double* f, const long long int* ldf );
void DLAQPS_( const long long int* m, const long long int* n, const long long int* offset,
              const long long int* nb, long long int* kb, double* a, const long long int* lda,
              long long int* jpvt, double* tau, double* vn1, double* vn2,
              double* auxv, double* f, const long long int* ldf );
void dlaqps( const long long int* m, const long long int* n, const long long int* offset,
             const long long int* nb, long long int* kb, double* a, const long long int* lda,
             long long int* jpvt, double* tau, double* vn1, double* vn2,
             double* auxv, double* f, const long long int* ldf );
void dlaqps_( const long long int* m, const long long int* n, const long long int* offset,
              const long long int* nb, long long int* kb, double* a, const long long int* lda,
              long long int* jpvt, double* tau, double* vn1, double* vn2,
              double* auxv, double* f, const long long int* ldf );

void DLAQR0( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* h,
             const long long int* ldh, double* wr, double* wi, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz, double* work,
             const long long int* lwork, long long int* info );
void DLAQR0_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* h,
              const long long int* ldh, double* wr, double* wi, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* info );
void dlaqr0( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* h,
             const long long int* ldh, double* wr, double* wi, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz, double* work,
             const long long int* lwork, long long int* info );
void dlaqr0_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* h,
              const long long int* ldh, double* wr, double* wi, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* info );

void DLAQR1( const long long int* n, const double* h, const long long int* ldh,
             const double* sr1, double* si1, double* sr2, double* si2,
             double* v );
void DLAQR1_( const long long int* n, const double* h, const long long int* ldh,
              const double* sr1, double* si1, double* sr2, double* si2,
              double* v );
void dlaqr1( const long long int* n, const double* h, const long long int* ldh,
             const double* sr1, double* si1, double* sr2, double* si2,
             double* v );
void dlaqr1_( const long long int* n, const double* h, const long long int* ldh,
              const double* sr1, double* si1, double* sr2, double* si2,
              double* v );

void DLAQR2( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             double* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz, long long int* ns,
             long long int* nd, double* sr, double* si, double* v,
             const long long int* ldv, const long long int* nh, double* t,
             const long long int* ldt, const long long int* nv, double* wv,
             const long long int* ldwv, double* work, const long long int* lwork );
void DLAQR2_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              double* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, long long int* ns,
              long long int* nd, double* sr, double* si, double* v,
              const long long int* ldv, const long long int* nh, double* t,
              const long long int* ldt, const long long int* nv, double* wv,
              const long long int* ldwv, double* work, const long long int* lwork );
void dlaqr2( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             double* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz, long long int* ns,
             long long int* nd, double* sr, double* si, double* v,
             const long long int* ldv, const long long int* nh, double* t,
             const long long int* ldt, const long long int* nv, double* wv,
             const long long int* ldwv, double* work, const long long int* lwork );
void dlaqr2_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              double* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, long long int* ns,
              long long int* nd, double* sr, double* si, double* v,
              const long long int* ldv, const long long int* nh, double* t,
              const long long int* ldt, const long long int* nv, double* wv,
              const long long int* ldwv, double* work, const long long int* lwork );

void DLAQR3( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             double* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz, long long int* ns,
             long long int* nd, double* sr, double* si, double* v,
             const long long int* ldv, const long long int* nh, double* t,
             const long long int* ldt, const long long int* nv, double* wv,
             const long long int* ldwv, double* work, const long long int* lwork );
void DLAQR3_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              double* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, long long int* ns,
              long long int* nd, double* sr, double* si, double* v,
              const long long int* ldv, const long long int* nh, double* t,
              const long long int* ldt, const long long int* nv, double* wv,
              const long long int* ldwv, double* work, const long long int* lwork );
void dlaqr3( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             double* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz, long long int* ns,
             long long int* nd, double* sr, double* si, double* v,
             const long long int* ldv, const long long int* nh, double* t,
             const long long int* ldt, const long long int* nv, double* wv,
             const long long int* ldwv, double* work, const long long int* lwork );
void dlaqr3_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              double* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, long long int* ns,
              long long int* nd, double* sr, double* si, double* v,
              const long long int* ldv, const long long int* nh, double* t,
              const long long int* ldt, const long long int* nv, double* wv,
              const long long int* ldwv, double* work, const long long int* lwork );

void DLAQR4( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* h,
             const long long int* ldh, double* wr, double* wi, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz, double* work,
             const long long int* lwork, long long int* info );
void DLAQR4_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* h,
              const long long int* ldh, double* wr, double* wi, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* info );
void dlaqr4( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, double* h,
             const long long int* ldh, double* wr, double* wi, const long long int* iloz,
             const long long int* ihiz, double* z, const long long int* ldz, double* work,
             const long long int* lwork, long long int* info );
void dlaqr4_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, double* h,
              const long long int* ldh, double* wr, double* wi, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* info );

void DLAQR5( const long long int* wantt, const long long int* wantz, const long long int* kacc22,
             const long long int* n, const long long int* ktop, const long long int* kbot,
             const long long int* nshfts, double* sr, double* si, double* h,
             const long long int* ldh, const long long int* iloz, const long long int* ihiz,
             double* z, const long long int* ldz, double* v, const long long int* ldv,
             double* u, const long long int* ldu, const long long int* nv, double* wv,
             const long long int* ldwv, const long long int* nh, double* wh,
             const long long int* ldwh );
void DLAQR5_( const long long int* wantt, const long long int* wantz,
              const long long int* kacc22, const long long int* n, const long long int* ktop,
              const long long int* kbot, const long long int* nshfts, double* sr,
              double* si, double* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, double* v,
              const long long int* ldv, double* u, const long long int* ldu,
              const long long int* nv, double* wv, const long long int* ldwv,
              const long long int* nh, double* wh, const long long int* ldwh );
void dlaqr5( const long long int* wantt, const long long int* wantz, const long long int* kacc22,
             const long long int* n, const long long int* ktop, const long long int* kbot,
             const long long int* nshfts, double* sr, double* si, double* h,
             const long long int* ldh, const long long int* iloz, const long long int* ihiz,
             double* z, const long long int* ldz, double* v, const long long int* ldv,
             double* u, const long long int* ldu, const long long int* nv, double* wv,
             const long long int* ldwv, const long long int* nh, double* wh,
             const long long int* ldwh );
void dlaqr5_( const long long int* wantt, const long long int* wantz,
              const long long int* kacc22, const long long int* n, const long long int* ktop,
              const long long int* kbot, const long long int* nshfts, double* sr,
              double* si, double* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, double* z, const long long int* ldz, double* v,
              const long long int* ldv, double* u, const long long int* ldu,
              const long long int* nv, double* wv, const long long int* ldwv,
              const long long int* nh, double* wh, const long long int* ldwh );

void DLAQSB( const char* uplo, const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, const double* s, const double* scond,
             const double* amax, char* equed );
void DLAQSB_( const char* uplo, const long long int* n, const long long int* kd,
              double* ab, const long long int* ldab, const double* s,
              const double* scond, const double* amax, char* equed );
void dlaqsb( const char* uplo, const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, const double* s, const double* scond,
             const double* amax, char* equed );
void dlaqsb_( const char* uplo, const long long int* n, const long long int* kd,
              double* ab, const long long int* ldab, const double* s,
              const double* scond, const double* amax, char* equed );

void DLAQSP( const char* uplo, const long long int* n, double* ap, const double* s,
             const double* scond, const double* amax, char* equed );
void DLAQSP_( const char* uplo, const long long int* n, double* ap, const double* s,
              const double* scond, const double* amax, char* equed );
void dlaqsp( const char* uplo, const long long int* n, double* ap, const double* s,
             const double* scond, const double* amax, char* equed );
void dlaqsp_( const char* uplo, const long long int* n, double* ap, const double* s,
              const double* scond, const double* amax, char* equed );

void DLAQSY( const char* uplo, const long long int* n, double* a, const long long int* lda,
             const double* s, const double* scond, const double* amax,
             char* equed );
void DLAQSY_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const double* s, const double* scond,
              const double* amax, char* equed );
void dlaqsy( const char* uplo, const long long int* n, double* a, const long long int* lda,
             const double* s, const double* scond, const double* amax,
             char* equed );
void dlaqsy_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const double* s, const double* scond,
              const double* amax, char* equed );

void DLAQTR( const long long int* ltran, const long long int* lreal, const long long int* n,
             const double* t, const long long int* ldt, const double* b,
             const double* w, double* scale, double* x, double* work,
             long long int* info );
void DLAQTR_( const long long int* ltran, const long long int* lreal, const long long int* n,
              const double* t, const long long int* ldt, const double* b,
              const double* w, double* scale, double* x, double* work,
              long long int* info );
void dlaqtr( const long long int* ltran, const long long int* lreal, const long long int* n,
             const double* t, const long long int* ldt, const double* b,
             const double* w, double* scale, double* x, double* work,
             long long int* info );
void dlaqtr_( const long long int* ltran, const long long int* lreal, const long long int* n,
              const double* t, const long long int* ldt, const double* b,
              const double* w, double* scale, double* x, double* work,
              long long int* info );

void DLAR1V( const long long int* n, const long long int* b1, const long long int* bn,
             const double* lambda, const double* d, const double* l,
             const double* ld, const double* lld, const double* pivmin,
             const double* gaptol, double* z, const long long int* wantnc,
             long long int* negcnt, double* ztz, double* mingma, long long int* r,
             long long int* isuppz, double* nrminv, double* resid, double* rqcorr,
             double* work );
void DLAR1V_( const long long int* n, const long long int* b1, const long long int* bn,
              const double* lambda, const double* d, const double* l,
              const double* ld, const double* lld, const double* pivmin,
              const double* gaptol, double* z, const long long int* wantnc,
              long long int* negcnt, double* ztz, double* mingma, long long int* r,
              long long int* isuppz, double* nrminv, double* resid, double* rqcorr,
              double* work );
void dlar1v( const long long int* n, const long long int* b1, const long long int* bn,
             const double* lambda, const double* d, const double* l,
             const double* ld, const double* lld, const double* pivmin,
             const double* gaptol, double* z, const long long int* wantnc,
             long long int* negcnt, double* ztz, double* mingma, long long int* r,
             long long int* isuppz, double* nrminv, double* resid, double* rqcorr,
             double* work );
void dlar1v_( const long long int* n, const long long int* b1, const long long int* bn,
              const double* lambda, const double* d, const double* l,
              const double* ld, const double* lld, const double* pivmin,
              const double* gaptol, double* z, const long long int* wantnc,
              long long int* negcnt, double* ztz, double* mingma, long long int* r,
              long long int* isuppz, double* nrminv, double* resid, double* rqcorr,
              double* work );

void DLAR2V( const long long int* n, double* x, double* y, double* z,
             const long long int* incx, const double* c, const double* s,
             const long long int* incc );
void DLAR2V_( const long long int* n, double* x, double* y, double* z,
              const long long int* incx, const double* c, const double* s,
              const long long int* incc );
void dlar2v( const long long int* n, double* x, double* y, double* z,
             const long long int* incx, const double* c, const double* s,
             const long long int* incc );
void dlar2v_( const long long int* n, double* x, double* y, double* z,
              const long long int* incx, const double* c, const double* s,
              const long long int* incc );

void DLARFB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const double* v, const long long int* ldv,
             const double* t, const long long int* ldt, double* c,
             const long long int* ldc, double* work, const long long int* ldwork );
void DLARFB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const double* v, const long long int* ldv,
              const double* t, const long long int* ldt, double* c,
              const long long int* ldc, double* work, const long long int* ldwork );
void dlarfb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const double* v, const long long int* ldv,
             const double* t, const long long int* ldt, double* c,
             const long long int* ldc, double* work, const long long int* ldwork );
void dlarfb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const double* v, const long long int* ldv,
              const double* t, const long long int* ldt, double* c,
              const long long int* ldc, double* work, const long long int* ldwork );

void DLARF( const char* side, const long long int* m, const long long int* n,
            const double* v, const long long int* incv, const double* tau, double* c,
            const long long int* ldc, double* work );
void DLARF_( const char* side, const long long int* m, const long long int* n,
             const double* v, const long long int* incv, const double* tau,
             double* c, const long long int* ldc, double* work );
void dlarf( const char* side, const long long int* m, const long long int* n,
            const double* v, const long long int* incv, const double* tau, double* c,
            const long long int* ldc, double* work );
void dlarf_( const char* side, const long long int* m, const long long int* n,
             const double* v, const long long int* incv, const double* tau,
             double* c, const long long int* ldc, double* work );

void DLARFG( const long long int* n, double* alpha, double* x, const long long int* incx,
             double* tau );
void DLARFG_( const long long int* n, double* alpha, double* x, const long long int* incx,
              double* tau );
void dlarfg( const long long int* n, double* alpha, double* x, const long long int* incx,
             double* tau );
void dlarfg_( const long long int* n, double* alpha, double* x, const long long int* incx,
              double* tau );

void DLARFGP( const long long int* n, double* alpha, double* x, const long long int* incx,
              double* tau );
void DLARFGP_( const long long int* n, double* alpha, double* x, const long long int* incx,
               double* tau );
void dlarfgp( const long long int* n, double* alpha, double* x, const long long int* incx,
              double* tau );
void dlarfgp_( const long long int* n, double* alpha, double* x, const long long int* incx,
               double* tau );

void DLARFP( const long long int* n, double* alpha, double* x, const long long int* incx,
             double* tau );
void DLARFP_( const long long int* n, double* alpha, double* x, const long long int* incx,
              double* tau );
void dlarfp( const long long int* n, double* alpha, double* x, const long long int* incx,
             double* tau );
void dlarfp_( const long long int* n, double* alpha, double* x, const long long int* incx,
              double* tau );

void DLARFT( const char* direct, const char* storev, const long long int* n,
             const long long int* k, double* v, const long long int* ldv,
             const double* tau, double* t, const long long int* ldt );
void DLARFT_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, double* v, const long long int* ldv,
              const double* tau, double* t, const long long int* ldt );
void dlarft( const char* direct, const char* storev, const long long int* n,
             const long long int* k, double* v, const long long int* ldv,
             const double* tau, double* t, const long long int* ldt );
void dlarft_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, double* v, const long long int* ldv,
              const double* tau, double* t, const long long int* ldt );

void DLARFX( const char* side, const long long int* m, const long long int* n,
             const double* v, const double* tau, double* c, const long long int* ldc,
             double* work );
void DLARFX_( const char* side, const long long int* m, const long long int* n,
              const double* v, const double* tau, double* c,
              const long long int* ldc, double* work );
void dlarfx( const char* side, const long long int* m, const long long int* n,
             const double* v, const double* tau, double* c, const long long int* ldc,
             double* work );
void dlarfx_( const char* side, const long long int* m, const long long int* n,
              const double* v, const double* tau, double* c,
              const long long int* ldc, double* work );

void DLARGV( const long long int* n, double* x, const long long int* incx, double* y,
             const long long int* incy, double* c, const long long int* incc );
void DLARGV_( const long long int* n, double* x, const long long int* incx, double* y,
              const long long int* incy, double* c, const long long int* incc );
void dlargv( const long long int* n, double* x, const long long int* incx, double* y,
             const long long int* incy, double* c, const long long int* incc );
void dlargv_( const long long int* n, double* x, const long long int* incx, double* y,
              const long long int* incy, double* c, const long long int* incc );

void DLARNV( const long long int* idist, long long int* iseed, const long long int* n,
             double* x );
void DLARNV_( const long long int* idist, long long int* iseed, const long long int* n,
              double* x );
void dlarnv( const long long int* idist, long long int* iseed, const long long int* n,
             double* x );
void dlarnv_( const long long int* idist, long long int* iseed, const long long int* n,
              double* x );

void DLARRA( const long long int* n, const double* d, double* e, double* e2,
             const double* spltol, const double* tnrm, long long int* nsplit,
             long long int* isplit, long long int* info );
void DLARRA_( const long long int* n, const double* d, double* e, double* e2,
              const double* spltol, const double* tnrm, long long int* nsplit,
              long long int* isplit, long long int* info );
void dlarra( const long long int* n, const double* d, double* e, double* e2,
             const double* spltol, const double* tnrm, long long int* nsplit,
             long long int* isplit, long long int* info );
void dlarra_( const long long int* n, const double* d, double* e, double* e2,
              const double* spltol, const double* tnrm, long long int* nsplit,
              long long int* isplit, long long int* info );

void DLARRB( const long long int* n, const double* d, const double* lld,
             const long long int* ifirst, const long long int* ilast, const double* rtol1,
             const double* rtol2, const long long int* offset, double* w,
             double* wgap, double* werr, double* work, long long int* iwork,
             const double* pivmin, const double* spdiam, const long long int* twist,
             long long int* info );
void DLARRB_( const long long int* n, const double* d, const double* lld,
              const long long int* ifirst, const long long int* ilast, const double* rtol1,
              const double* rtol2, const long long int* offset, double* w,
              double* wgap, double* werr, double* work, long long int* iwork,
              const double* pivmin, const double* spdiam, const long long int* twist,
              long long int* info );
void dlarrb( const long long int* n, const double* d, const double* lld,
             const long long int* ifirst, const long long int* ilast, const double* rtol1,
             const double* rtol2, const long long int* offset, double* w,
             double* wgap, double* werr, double* work, long long int* iwork,
             const double* pivmin, const double* spdiam, const long long int* twist,
             long long int* info );
void dlarrb_( const long long int* n, const double* d, const double* lld,
              const long long int* ifirst, const long long int* ilast, const double* rtol1,
              const double* rtol2, const long long int* offset, double* w,
              double* wgap, double* werr, double* work, long long int* iwork,
              const double* pivmin, const double* spdiam, const long long int* twist,
              long long int* info );

void DLARRC( const char* jobt, const long long int* n, const double* vl,
             const double* vu, const double* d, const double* e,
             const double* pivmin, long long int* eigcnt, long long int* lcnt,
             long long int* rcnt, long long int* info );
void DLARRC_( const char* jobt, const long long int* n, const double* vl,
              const double* vu, const double* d, const double* e,
              const double* pivmin, long long int* eigcnt, long long int* lcnt,
              long long int* rcnt, long long int* info );
void dlarrc( const char* jobt, const long long int* n, const double* vl,
             const double* vu, const double* d, const double* e,
             const double* pivmin, long long int* eigcnt, long long int* lcnt,
             long long int* rcnt, long long int* info );
void dlarrc_( const char* jobt, const long long int* n, const double* vl,
              const double* vu, const double* d, const double* e,
              const double* pivmin, long long int* eigcnt, long long int* lcnt,
              long long int* rcnt, long long int* info );

void DLARRD( const char* range, const char* order, const long long int* n,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* gers, const double* reltol,
             const double* d, const double* e, const double* e2,
             const double* pivmin, const long long int* nsplit,
             const long long int* isplit, long long int* m, double* w, double* werr,
             double* wl, double* wu, long long int* iblock, long long int* indexw,
             double* work, long long int* iwork, long long int* info );
void DLARRD_( const char* range, const char* order, const long long int* n,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* gers, const double* reltol,
              const double* d, const double* e, const double* e2,
              const double* pivmin, const long long int* nsplit,
              const long long int* isplit, long long int* m, double* w, double* werr,
              double* wl, double* wu, long long int* iblock, long long int* indexw,
              double* work, long long int* iwork, long long int* info );
void dlarrd( const char* range, const char* order, const long long int* n,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* gers, const double* reltol,
             const double* d, const double* e, const double* e2,
             const double* pivmin, const long long int* nsplit,
             const long long int* isplit, long long int* m, double* w, double* werr,
             double* wl, double* wu, long long int* iblock, long long int* indexw,
             double* work, long long int* iwork, long long int* info );
void dlarrd_( const char* range, const char* order, const long long int* n,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* gers, const double* reltol,
              const double* d, const double* e, const double* e2,
              const double* pivmin, const long long int* nsplit,
              const long long int* isplit, long long int* m, double* w, double* werr,
              double* wl, double* wu, long long int* iblock, long long int* indexw,
              double* work, long long int* iwork, long long int* info );

void DLARRE( const char* range, const long long int* n, double* vl, double* vu,
             const long long int* il, const long long int* iu, double* d, double* e,
             double* e2, const double* rtol1, const double* rtol2,
             const double* spltol, long long int* nsplit, long long int* isplit,
             long long int* m, double* w, double* werr, double* wgap,
             long long int* iblock, long long int* indexw, double* gers, double* pivmin,
             double* work, long long int* iwork, long long int* info );
void DLARRE_( const char* range, const long long int* n, double* vl, double* vu,
              const long long int* il, const long long int* iu, double* d, double* e,
              double* e2, const double* rtol1, const double* rtol2,
              const double* spltol, long long int* nsplit, long long int* isplit,
              long long int* m, double* w, double* werr, double* wgap,
              long long int* iblock, long long int* indexw, double* gers, double* pivmin,
              double* work, long long int* iwork, long long int* info );
void dlarre( const char* range, const long long int* n, double* vl, double* vu,
             const long long int* il, const long long int* iu, double* d, double* e,
             double* e2, const double* rtol1, const double* rtol2,
             const double* spltol, long long int* nsplit, long long int* isplit,
             long long int* m, double* w, double* werr, double* wgap,
             long long int* iblock, long long int* indexw, double* gers, double* pivmin,
             double* work, long long int* iwork, long long int* info );
void dlarre_( const char* range, const long long int* n, double* vl, double* vu,
              const long long int* il, const long long int* iu, double* d, double* e,
              double* e2, const double* rtol1, const double* rtol2,
              const double* spltol, long long int* nsplit, long long int* isplit,
              long long int* m, double* w, double* werr, double* wgap,
              long long int* iblock, long long int* indexw, double* gers, double* pivmin,
              double* work, long long int* iwork, long long int* info );

void DLARRF( const long long int* n, const double* d, const double* l,
             const double* ld, const long long int* clstrt, const long long int* clend,
             const double* w, double* wgap, const double* werr,
             const double* spdiam, const double* clgapl, double* clgapr,
             const double* pivmin, double* sigma, double* dplus, double* lplus,
             double* work, long long int* info );
void DLARRF_( const long long int* n, const double* d, const double* l,
              const double* ld, const long long int* clstrt, const long long int* clend,
              const double* w, double* wgap, const double* werr,
              const double* spdiam, const double* clgapl, double* clgapr,
              const double* pivmin, double* sigma, double* dplus,
              double* lplus, double* work, long long int* info );
void dlarrf( const long long int* n, const double* d, const double* l,
             const double* ld, const long long int* clstrt, const long long int* clend,
             const double* w, double* wgap, const double* werr,
             const double* spdiam, const double* clgapl, double* clgapr,
             const double* pivmin, double* sigma, double* dplus, double* lplus,
             double* work, long long int* info );
void dlarrf_( const long long int* n, const double* d, const double* l,
              const double* ld, const long long int* clstrt, const long long int* clend,
              const double* w, double* wgap, const double* werr,
              const double* spdiam, const double* clgapl, double* clgapr,
              const double* pivmin, double* sigma, double* dplus,
              double* lplus, double* work, long long int* info );

void DLARRJ( const long long int* n, const double* d, const double* e2,
             const long long int* ifirst, const long long int* ilast, const double* rtol,
             const long long int* offset, double* w, double* werr, double* work,
             long long int* iwork, const double* pivmin, const double* spdiam,
             long long int* info );
void DLARRJ_( const long long int* n, const double* d, const double* e2,
              const long long int* ifirst, const long long int* ilast, const double* rtol,
              const long long int* offset, double* w, double* werr, double* work,
              long long int* iwork, const double* pivmin, const double* spdiam,
              long long int* info );
void dlarrj( const long long int* n, const double* d, const double* e2,
             const long long int* ifirst, const long long int* ilast, const double* rtol,
             const long long int* offset, double* w, double* werr, double* work,
             long long int* iwork, const double* pivmin, const double* spdiam,
             long long int* info );
void dlarrj_( const long long int* n, const double* d, const double* e2,
              const long long int* ifirst, const long long int* ilast, const double* rtol,
              const long long int* offset, double* w, double* werr, double* work,
              long long int* iwork, const double* pivmin, const double* spdiam,
              long long int* info );

void DLARRK( const long long int* n, const long long int* iw, const double* gl,
             const double* gu, const double* d, const double* e2,
             const double* pivmin, const double* reltol, double* w,
             double* werr, long long int* info );
void DLARRK_( const long long int* n, const long long int* iw, const double* gl,
              const double* gu, const double* d, const double* e2,
              const double* pivmin, const double* reltol, double* w,
              double* werr, long long int* info );
void dlarrk( const long long int* n, const long long int* iw, const double* gl,
             const double* gu, const double* d, const double* e2,
             const double* pivmin, const double* reltol, double* w,
             double* werr, long long int* info );
void dlarrk_( const long long int* n, const long long int* iw, const double* gl,
              const double* gu, const double* d, const double* e2,
              const double* pivmin, const double* reltol, double* w,
              double* werr, long long int* info );

void DLARRR( const long long int* n, const double* d, double* e, long long int* info );
void DLARRR_( const long long int* n, const double* d, double* e, long long int* info );
void dlarrr( const long long int* n, const double* d, double* e, long long int* info );
void dlarrr_( const long long int* n, const double* d, double* e, long long int* info );

void DLARRV( const long long int* n, const double* vl, const double* vu, double* d,
             double* l, double* pivmin, const long long int* isplit,
             const long long int* m, const long long int* dol, const long long int* dou,
             const double* minrgp, const double* rtol1, const double* rtol2,
             double* w, double* werr, double* wgap, const long long int* iblock,
             const long long int* indexw, const double* gers, double* z,
             const long long int* ldz, long long int* isuppz, double* work, long long int* iwork,
             long long int* info );
void DLARRV_( const long long int* n, const double* vl, const double* vu, double* d,
              double* l, double* pivmin, const long long int* isplit,
              const long long int* m, const long long int* dol, const long long int* dou,
              const double* minrgp, const double* rtol1, const double* rtol2,
              double* w, double* werr, double* wgap, const long long int* iblock,
              const long long int* indexw, const double* gers, double* z,
              const long long int* ldz, long long int* isuppz, double* work,
              long long int* iwork, long long int* info );
void dlarrv( const long long int* n, const double* vl, const double* vu, double* d,
             double* l, double* pivmin, const long long int* isplit,
             const long long int* m, const long long int* dol, const long long int* dou,
             const double* minrgp, const double* rtol1, const double* rtol2,
             double* w, double* werr, double* wgap, const long long int* iblock,
             const long long int* indexw, const double* gers, double* z,
             const long long int* ldz, long long int* isuppz, double* work, long long int* iwork,
             long long int* info );
void dlarrv_( const long long int* n, const double* vl, const double* vu, double* d,
              double* l, double* pivmin, const long long int* isplit,
              const long long int* m, const long long int* dol, const long long int* dou,
              const double* minrgp, const double* rtol1, const double* rtol2,
              double* w, double* werr, double* wgap, const long long int* iblock,
              const long long int* indexw, const double* gers, double* z,
              const long long int* ldz, long long int* isuppz, double* work,
              long long int* iwork, long long int* info );

void DLARSCL2( const long long int* m, const long long int* n, const double* d, double* x,
               const long long int* ldx );
void DLARSCL2_( const long long int* m, const long long int* n, const double* d, double* x,
                const long long int* ldx );
void dlarscl2( const long long int* m, const long long int* n, const double* d, double* x,
               const long long int* ldx );
void dlarscl2_( const long long int* m, const long long int* n, const double* d, double* x,
                const long long int* ldx );

void DLARTG( const double* f, const double* g, double* cs, double* sn,
             double* r );
void DLARTG_( const double* f, const double* g, double* cs, double* sn,
              double* r );
void dlartg( const double* f, const double* g, double* cs, double* sn,
             double* r );
void dlartg_( const double* f, const double* g, double* cs, double* sn,
              double* r );

void DLARTV( const long long int* n, double* x, const long long int* incx, double* y,
             const long long int* incy, const double* c, const double* s,
             const long long int* incc );
void DLARTV_( const long long int* n, double* x, const long long int* incx, double* y,
              const long long int* incy, const double* c, const double* s,
              const long long int* incc );
void dlartv( const long long int* n, double* x, const long long int* incx, double* y,
             const long long int* incy, const double* c, const double* s,
             const long long int* incc );
void dlartv_( const long long int* n, double* x, const long long int* incx, double* y,
              const long long int* incy, const double* c, const double* s,
              const long long int* incc );

void DLARUV( long long int* iseed, const long long int* n, double* x );
void DLARUV_( long long int* iseed, const long long int* n, double* x );
void dlaruv( long long int* iseed, const long long int* n, double* x );
void dlaruv_( long long int* iseed, const long long int* n, double* x );

void DLARZB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const double* v,
             const long long int* ldv, const double* t, const long long int* ldt,
             double* c, const long long int* ldc, double* work,
             const long long int* ldwork );
void DLARZB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const double* v,
              const long long int* ldv, const double* t, const long long int* ldt,
              double* c, const long long int* ldc, double* work,
              const long long int* ldwork );
void dlarzb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const double* v,
             const long long int* ldv, const double* t, const long long int* ldt,
             double* c, const long long int* ldc, double* work,
             const long long int* ldwork );
void dlarzb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const double* v,
              const long long int* ldv, const double* t, const long long int* ldt,
              double* c, const long long int* ldc, double* work,
              const long long int* ldwork );

void DLARZ( const char* side, const long long int* m, const long long int* n,
            const long long int* l, const double* v, const long long int* incv,
            const double* tau, double* c, const long long int* ldc, double* work );
void DLARZ_( const char* side, const long long int* m, const long long int* n,
             const long long int* l, const double* v, const long long int* incv,
             const double* tau, double* c, const long long int* ldc, double* work );
void dlarz( const char* side, const long long int* m, const long long int* n,
            const long long int* l, const double* v, const long long int* incv,
            const double* tau, double* c, const long long int* ldc, double* work );
void dlarz_( const char* side, const long long int* m, const long long int* n,
             const long long int* l, const double* v, const long long int* incv,
             const double* tau, double* c, const long long int* ldc, double* work );

void DLARZT( const char* direct, const char* storev, const long long int* n,
             const long long int* k, double* v, const long long int* ldv,
             const double* tau, double* t, const long long int* ldt );
void DLARZT_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, double* v, const long long int* ldv,
              const double* tau, double* t, const long long int* ldt );
void dlarzt( const char* direct, const char* storev, const long long int* n,
             const long long int* k, double* v, const long long int* ldv,
             const double* tau, double* t, const long long int* ldt );
void dlarzt_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, double* v, const long long int* ldv,
              const double* tau, double* t, const long long int* ldt );

void DLAS2( const double* f, const double* g, const double* h, double* ssmin,
            double* ssmax );
void DLAS2_( const double* f, const double* g, const double* h, double* ssmin,
             double* ssmax );
void dlas2( const double* f, const double* g, const double* h, double* ssmin,
            double* ssmax );
void dlas2_( const double* f, const double* g, const double* h, double* ssmin,
             double* ssmax );

void DLASCL( const char* type, const long long int* kl, const long long int* ku,
             const double* cfrom, const double* cto, const long long int* m,
             const long long int* n, double* a, const long long int* lda, long long int* info );
void DLASCL_( const char* type, const long long int* kl, const long long int* ku,
              const double* cfrom, const double* cto, const long long int* m,
              const long long int* n, double* a, const long long int* lda, long long int* info );
void dlascl( const char* type, const long long int* kl, const long long int* ku,
             const double* cfrom, const double* cto, const long long int* m,
             const long long int* n, double* a, const long long int* lda, long long int* info );
void dlascl_( const char* type, const long long int* kl, const long long int* ku,
              const double* cfrom, const double* cto, const long long int* m,
              const long long int* n, double* a, const long long int* lda, long long int* info );

void DLASCL2( const long long int* m, const long long int* n, const double* d, double* x,
              const long long int* ldx );
void DLASCL2_( const long long int* m, const long long int* n, const double* d, double* x,
               const long long int* ldx );
void dlascl2( const long long int* m, const long long int* n, const double* d, double* x,
              const long long int* ldx );
void dlascl2_( const long long int* m, const long long int* n, const double* d, double* x,
               const long long int* ldx );

void DLASD0( const long long int* n, const long long int* sqre, double* d, const double* e,
             double* u, const long long int* ldu, double* vt, const long long int* ldvt,
             const long long int* smlsiz, long long int* iwork, double* work,
             long long int* info );
void DLASD0_( const long long int* n, const long long int* sqre, double* d,
              const double* e, double* u, const long long int* ldu, double* vt,
              const long long int* ldvt, const long long int* smlsiz, long long int* iwork,
              double* work, long long int* info );
void dlasd0( const long long int* n, const long long int* sqre, double* d, const double* e,
             double* u, const long long int* ldu, double* vt, const long long int* ldvt,
             const long long int* smlsiz, long long int* iwork, double* work,
             long long int* info );
void dlasd0_( const long long int* n, const long long int* sqre, double* d,
              const double* e, double* u, const long long int* ldu, double* vt,
              const long long int* ldvt, const long long int* smlsiz, long long int* iwork,
              double* work, long long int* info );

void DLASD1( const long long int* nl, const long long int* nr, const long long int* sqre,
             double* d, double* alpha, double* beta, double* u,
             const long long int* ldu, double* vt, const long long int* ldvt,
             long long int* idxq, long long int* iwork, double* work, long long int* info );
void DLASD1_( const long long int* nl, const long long int* nr, const long long int* sqre,
              double* d, double* alpha, double* beta, double* u,
              const long long int* ldu, double* vt, const long long int* ldvt,
              long long int* idxq, long long int* iwork, double* work, long long int* info );
void dlasd1( const long long int* nl, const long long int* nr, const long long int* sqre,
             double* d, double* alpha, double* beta, double* u,
             const long long int* ldu, double* vt, const long long int* ldvt,
             long long int* idxq, long long int* iwork, double* work, long long int* info );
void dlasd1_( const long long int* nl, const long long int* nr, const long long int* sqre,
              double* d, double* alpha, double* beta, double* u,
              const long long int* ldu, double* vt, const long long int* ldvt,
              long long int* idxq, long long int* iwork, double* work, long long int* info );

void DLASD2( const long long int* nl, const long long int* nr, const long long int* sqre,
             long long int* k, double* d, double* z, const double* alpha,
             const double* beta, double* u, const long long int* ldu, double* vt,
             const long long int* ldvt, double* dsigma, double* u2,
             const long long int* ldu2, double* vt2, const long long int* ldvt2,
             long long int* idxp, long long int* idx, long long int* idxc, long long int* idxq,
             long long int* coltyp, long long int* info );
void DLASD2_( const long long int* nl, const long long int* nr, const long long int* sqre,
              long long int* k, double* d, double* z, const double* alpha,
              const double* beta, double* u, const long long int* ldu, double* vt,
              const long long int* ldvt, double* dsigma, double* u2,
              const long long int* ldu2, double* vt2, const long long int* ldvt2,
              long long int* idxp, long long int* idx, long long int* idxc, long long int* idxq,
              long long int* coltyp, long long int* info );
void dlasd2( const long long int* nl, const long long int* nr, const long long int* sqre,
             long long int* k, double* d, double* z, const double* alpha,
             const double* beta, double* u, const long long int* ldu, double* vt,
             const long long int* ldvt, double* dsigma, double* u2,
             const long long int* ldu2, double* vt2, const long long int* ldvt2,
             long long int* idxp, long long int* idx, long long int* idxc, long long int* idxq,
             long long int* coltyp, long long int* info );
void dlasd2_( const long long int* nl, const long long int* nr, const long long int* sqre,
              long long int* k, double* d, double* z, const double* alpha,
              const double* beta, double* u, const long long int* ldu, double* vt,
              const long long int* ldvt, double* dsigma, double* u2,
              const long long int* ldu2, double* vt2, const long long int* ldvt2,
              long long int* idxp, long long int* idx, long long int* idxc, long long int* idxq,
              long long int* coltyp, long long int* info );

void DLASD3( const long long int* nl, const long long int* nr, const long long int* sqre,
             const long long int* k, double* d, double* q, const long long int* ldq,
             const double* dsigma, double* u, const long long int* ldu, double* u2,
             const long long int* ldu2, double* vt, const long long int* ldvt, double* vt2,
             const long long int* ldvt2, const long long int* idxc, const long long int* ctot,
             const double* z, long long int* info );
void DLASD3_( const long long int* nl, const long long int* nr, const long long int* sqre,
              const long long int* k, double* d, double* q, const long long int* ldq,
              const double* dsigma, double* u, const long long int* ldu, double* u2,
              const long long int* ldu2, double* vt, const long long int* ldvt,
              double* vt2, const long long int* ldvt2, const long long int* idxc,
              const long long int* ctot, const double* z, long long int* info );
void dlasd3( const long long int* nl, const long long int* nr, const long long int* sqre,
             const long long int* k, double* d, double* q, const long long int* ldq,
             const double* dsigma, double* u, const long long int* ldu, double* u2,
             const long long int* ldu2, double* vt, const long long int* ldvt, double* vt2,
             const long long int* ldvt2, const long long int* idxc, const long long int* ctot,
             const double* z, long long int* info );
void dlasd3_( const long long int* nl, const long long int* nr, const long long int* sqre,
              const long long int* k, double* d, double* q, const long long int* ldq,
              const double* dsigma, double* u, const long long int* ldu, double* u2,
              const long long int* ldu2, double* vt, const long long int* ldvt,
              double* vt2, const long long int* ldvt2, const long long int* idxc,
              const long long int* ctot, const double* z, long long int* info );

void DLASD4( const long long int* n, const long long int* i, const double* d,
             const double* z, double* delta, const double* rho, double* sigma,
             double* work, long long int* info );
void DLASD4_( const long long int* n, const long long int* i, const double* d,
              const double* z, double* delta, const double* rho, double* sigma,
              double* work, long long int* info );
void dlasd4( const long long int* n, const long long int* i, const double* d,
             const double* z, double* delta, const double* rho, double* sigma,
             double* work, long long int* info );
void dlasd4_( const long long int* n, const long long int* i, const double* d,
              const double* z, double* delta, const double* rho, double* sigma,
              double* work, long long int* info );

void DLASD5( const long long int* i, const double* d, const double* z, double* delta,
             const double* rho, double* dsigma, double* work );
void DLASD5_( const long long int* i, const double* d, const double* z,
              double* delta, const double* rho, double* dsigma, double* work );
void dlasd5( const long long int* i, const double* d, const double* z, double* delta,
             const double* rho, double* dsigma, double* work );
void dlasd5_( const long long int* i, const double* d, const double* z,
              double* delta, const double* rho, double* dsigma, double* work );

void DLASD6( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, double* d, double* vf, double* vl,
             double* alpha, double* beta, long long int* idxq, long long int* perm,
             long long int* givptr, long long int* givcol, const long long int* ldgcol,
             double* givnum, const long long int* ldgnum, double* poles,
             double* difl, double* difr, double* z, long long int* k, double* c,
             double* s, double* work, long long int* iwork, long long int* info );
void DLASD6_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, double* d, double* vf, double* vl,
              double* alpha, double* beta, long long int* idxq, long long int* perm,
              long long int* givptr, long long int* givcol, const long long int* ldgcol,
              double* givnum, const long long int* ldgnum, double* poles,
              double* difl, double* difr, double* z, long long int* k, double* c,
              double* s, double* work, long long int* iwork, long long int* info );
void dlasd6( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, double* d, double* vf, double* vl,
             double* alpha, double* beta, long long int* idxq, long long int* perm,
             long long int* givptr, long long int* givcol, const long long int* ldgcol,
             double* givnum, const long long int* ldgnum, double* poles,
             double* difl, double* difr, double* z, long long int* k, double* c,
             double* s, double* work, long long int* iwork, long long int* info );
void dlasd6_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, double* d, double* vf, double* vl,
              double* alpha, double* beta, long long int* idxq, long long int* perm,
              long long int* givptr, long long int* givcol, const long long int* ldgcol,
              double* givnum, const long long int* ldgnum, double* poles,
              double* difl, double* difr, double* z, long long int* k, double* c,
              double* s, double* work, long long int* iwork, long long int* info );

void DLASD7( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, long long int* k, double* d, double* z, double* zw,
             double* vf, double* vfw, double* vl, double* vlw,
             const double* alpha, const double* beta, double* dsigma,
             long long int* idx, long long int* idxp, const long long int* idxq, long long int* perm,
             long long int* givptr, long long int* givcol, const long long int* ldgcol,
             double* givnum, const long long int* ldgnum, double* c, double* s,
             long long int* info );
void DLASD7_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, long long int* k, double* d, double* z,
              double* zw, double* vf, double* vfw, double* vl, double* vlw,
              const double* alpha, const double* beta, double* dsigma,
              long long int* idx, long long int* idxp, const long long int* idxq, long long int* perm,
              long long int* givptr, long long int* givcol, const long long int* ldgcol,
              double* givnum, const long long int* ldgnum, double* c, double* s,
              long long int* info );
void dlasd7( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, long long int* k, double* d, double* z, double* zw,
             double* vf, double* vfw, double* vl, double* vlw,
             const double* alpha, const double* beta, double* dsigma,
             long long int* idx, long long int* idxp, const long long int* idxq, long long int* perm,
             long long int* givptr, long long int* givcol, const long long int* ldgcol,
             double* givnum, const long long int* ldgnum, double* c, double* s,
             long long int* info );
void dlasd7_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, long long int* k, double* d, double* z,
              double* zw, double* vf, double* vfw, double* vl, double* vlw,
              const double* alpha, const double* beta, double* dsigma,
              long long int* idx, long long int* idxp, const long long int* idxq, long long int* perm,
              long long int* givptr, long long int* givcol, const long long int* ldgcol,
              double* givnum, const long long int* ldgnum, double* c, double* s,
              long long int* info );

void DLASD8( const long long int* icompq, const long long int* k, double* d, double* z,
             double* vf, double* vl, double* difl, double* difr,
             const long long int* lddifr, double* dsigma, double* work,
             long long int* info );
void DLASD8_( const long long int* icompq, const long long int* k, double* d, double* z,
              double* vf, double* vl, double* difl, double* difr,
              const long long int* lddifr, double* dsigma, double* work,
              long long int* info );
void dlasd8( const long long int* icompq, const long long int* k, double* d, double* z,
             double* vf, double* vl, double* difl, double* difr,
             const long long int* lddifr, double* dsigma, double* work,
             long long int* info );
void dlasd8_( const long long int* icompq, const long long int* k, double* d, double* z,
              double* vf, double* vl, double* difl, double* difr,
              const long long int* lddifr, double* dsigma, double* work,
              long long int* info );

void DLASDA( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* sqre, double* d, const double* e, double* u,
             const long long int* ldu, double* vt, long long int* k, double* difl,
             double* difr, double* z, double* poles, long long int* givptr,
             long long int* givcol, const long long int* ldgcol, long long int* perm,
             double* givnum, double* c, double* s, double* work,
             long long int* iwork, long long int* info );
void DLASDA_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* sqre, double* d, const double* e, double* u,
              const long long int* ldu, double* vt, long long int* k, double* difl,
              double* difr, double* z, double* poles, long long int* givptr,
              long long int* givcol, const long long int* ldgcol, long long int* perm,
              double* givnum, double* c, double* s, double* work,
              long long int* iwork, long long int* info );
void dlasda( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* sqre, double* d, const double* e, double* u,
             const long long int* ldu, double* vt, long long int* k, double* difl,
             double* difr, double* z, double* poles, long long int* givptr,
             long long int* givcol, const long long int* ldgcol, long long int* perm,
             double* givnum, double* c, double* s, double* work,
             long long int* iwork, long long int* info );
void dlasda_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* sqre, double* d, const double* e, double* u,
              const long long int* ldu, double* vt, long long int* k, double* difl,
              double* difr, double* z, double* poles, long long int* givptr,
              long long int* givcol, const long long int* ldgcol, long long int* perm,
              double* givnum, double* c, double* s, double* work,
              long long int* iwork, long long int* info );

void DLASDQ( const char* uplo, const long long int* sqre, const long long int* n,
             const long long int* ncvt, const long long int* nru, const long long int* ncc,
             double* d, double* e, double* vt, const long long int* ldvt, double* u,
             const long long int* ldu, double* c, const long long int* ldc, double* work,
             long long int* info );
void DLASDQ_( const char* uplo, const long long int* sqre, const long long int* n,
              const long long int* ncvt, const long long int* nru, const long long int* ncc,
              double* d, double* e, double* vt, const long long int* ldvt, double* u,
              const long long int* ldu, double* c, const long long int* ldc, double* work,
              long long int* info );
void dlasdq( const char* uplo, const long long int* sqre, const long long int* n,
             const long long int* ncvt, const long long int* nru, const long long int* ncc,
             double* d, double* e, double* vt, const long long int* ldvt, double* u,
             const long long int* ldu, double* c, const long long int* ldc, double* work,
             long long int* info );
void dlasdq_( const char* uplo, const long long int* sqre, const long long int* n,
              const long long int* ncvt, const long long int* nru, const long long int* ncc,
              double* d, double* e, double* vt, const long long int* ldvt, double* u,
              const long long int* ldu, double* c, const long long int* ldc, double* work,
              long long int* info );

void DLASDT( const long long int* n, long long int* lvl, long long int* nd, long long int* inode,
             long long int* ndiml, long long int* ndimr, const long long int* msub );
void DLASDT_( const long long int* n, long long int* lvl, long long int* nd, long long int* inode,
              long long int* ndiml, long long int* ndimr, const long long int* msub );
void dlasdt( const long long int* n, long long int* lvl, long long int* nd, long long int* inode,
             long long int* ndiml, long long int* ndimr, const long long int* msub );
void dlasdt_( const long long int* n, long long int* lvl, long long int* nd, long long int* inode,
              long long int* ndiml, long long int* ndimr, const long long int* msub );

void DLASET( const char* uplo, const long long int* m, const long long int* n,
             const double* alpha, const double* beta, double* a,
             const long long int* lda );
void DLASET_( const char* uplo, const long long int* m, const long long int* n,
              const double* alpha, const double* beta, double* a,
              const long long int* lda );
void dlaset( const char* uplo, const long long int* m, const long long int* n,
             const double* alpha, const double* beta, double* a,
             const long long int* lda );
void dlaset_( const char* uplo, const long long int* m, const long long int* n,
              const double* alpha, const double* beta, double* a,
              const long long int* lda );

void DLASQ1( const long long int* n, double* d, double* e, double* work,
             long long int* info );
void DLASQ1_( const long long int* n, double* d, double* e, double* work,
              long long int* info );
void dlasq1( const long long int* n, double* d, double* e, double* work,
             long long int* info );
void dlasq1_( const long long int* n, double* d, double* e, double* work,
              long long int* info );

void DLASQ2( const long long int* n, double* z, long long int* info );
void DLASQ2_( const long long int* n, double* z, long long int* info );
void dlasq2( const long long int* n, double* z, long long int* info );
void dlasq2_( const long long int* n, double* z, long long int* info );

void DLASQ3( const long long int* i0, const long long int* n0, const double* z,
             long long int* pp, double* dmin, double* sigma, double* desig,
             const double* qmax, long long int* nfail, long long int* iter, long long int* ndiv,
             const long long int* ieee, long long int* ttype, double* dmin1, double* dmin2,
             double* dn, double* dn1, double* dn2, double* g, double* tau );
void DLASQ3_( const long long int* i0, const long long int* n0, const double* z,
              long long int* pp, double* dmin, double* sigma, double* desig,
              const double* qmax, long long int* nfail, long long int* iter, long long int* ndiv,
              const long long int* ieee, long long int* ttype, double* dmin1,
              double* dmin2, double* dn, double* dn1, double* dn2, double* g,
              double* tau );
void dlasq3( const long long int* i0, const long long int* n0, const double* z,
             long long int* pp, double* dmin, double* sigma, double* desig,
             const double* qmax, long long int* nfail, long long int* iter, long long int* ndiv,
             const long long int* ieee, long long int* ttype, double* dmin1, double* dmin2,
             double* dn, double* dn1, double* dn2, double* g, double* tau );
void dlasq3_( const long long int* i0, const long long int* n0, const double* z,
              long long int* pp, double* dmin, double* sigma, double* desig,
              const double* qmax, long long int* nfail, long long int* iter, long long int* ndiv,
              const long long int* ieee, long long int* ttype, double* dmin1,
              double* dmin2, double* dn, double* dn1, double* dn2, double* g,
              double* tau );

void DLASQ4( const long long int* i0, const long long int* n0, const double* z,
             const long long int* pp, long long int* n0in, const double* dmin,
             const double* dmin1, const double* dmin2, const double* dn,
             const double* dn1, const double* dn2, double* tau, long long int* ttype,
             double* g );
void DLASQ4_( const long long int* i0, const long long int* n0, const double* z,
              const long long int* pp, long long int* n0in, const double* dmin,
              const double* dmin1, const double* dmin2, const double* dn,
              const double* dn1, const double* dn2, double* tau,
              long long int* ttype, double* g );
void dlasq4( const long long int* i0, const long long int* n0, const double* z,
             const long long int* pp, long long int* n0in, const double* dmin,
             const double* dmin1, const double* dmin2, const double* dn,
             const double* dn1, const double* dn2, double* tau, long long int* ttype,
             double* g );
void dlasq4_( const long long int* i0, const long long int* n0, const double* z,
              const long long int* pp, long long int* n0in, const double* dmin,
              const double* dmin1, const double* dmin2, const double* dn,
              const double* dn1, const double* dn2, double* tau,
              long long int* ttype, double* g );

void DLASQ5( const long long int* i0, const long long int* n0, const double* z,
             const long long int* pp, const double* tau, const double* sigma,
             double* dmin, double* dmin1, double* dmin2, double* dn,
             double* dnm1, double* dnm2, const long long int* ieee,
             const double* eps);
void DLASQ5_( const long long int* i0, const long long int* n0, const double* z,
              const long long int* pp, const double* tau, const double* sigma,
              double* dmin, double* dmin1, double* dmin2, double* dn,
              double* dnm1, double* dnm2, const long long int* ieee,
              const double* eps);
void dlasq5( const long long int* i0, const long long int* n0, const double* z,
             const long long int* pp, const double* tau, const double* sigma,
             double* dmin, double* dmin1, double* dmin2, double* dn,
             double* dnm1, double* dnm2, const long long int* ieee,
             const double* eps);
void dlasq5_( const long long int* i0, const long long int* n0, const double* z,
              const long long int* pp, const double* tau, const double* sigma,
              double* dmin, double* dmin1, double* dmin2, double* dn,
              double* dnm1, double* dnm2, const long long int* ieee,
              const double* eps);

void DLASQ6( const long long int* i0, const long long int* n0, const double* z,
             const long long int* pp, double* dmin, double* dmin1, double* dmin2,
             double* dn, double* dnm1, double* dnm2 );
void DLASQ6_( const long long int* i0, const long long int* n0, const double* z,
              const long long int* pp, double* dmin, double* dmin1, double* dmin2,
              double* dn, double* dnm1, double* dnm2 );
void dlasq6( const long long int* i0, const long long int* n0, const double* z,
             const long long int* pp, double* dmin, double* dmin1, double* dmin2,
             double* dn, double* dnm1, double* dnm2 );
void dlasq6_( const long long int* i0, const long long int* n0, const double* z,
              const long long int* pp, double* dmin, double* dmin1, double* dmin2,
              double* dn, double* dnm1, double* dnm2 );

void DLASR( const char* side, const char* pivot, const char* direct,
            const long long int* m, const long long int* n, const double* c,
            const double* s, double* a, const long long int* lda );
void DLASR_( const char* side, const char* pivot, const char* direct,
             const long long int* m, const long long int* n, const double* c,
             const double* s, double* a, const long long int* lda );
void dlasr( const char* side, const char* pivot, const char* direct,
            const long long int* m, const long long int* n, const double* c,
            const double* s, double* a, const long long int* lda );
void dlasr_( const char* side, const char* pivot, const char* direct,
             const long long int* m, const long long int* n, const double* c,
             const double* s, double* a, const long long int* lda );

void DLASRT( const char* id, const long long int* n, double* d, long long int* info );
void DLASRT_( const char* id, const long long int* n, double* d, long long int* info );
void dlasrt( const char* id, const long long int* n, double* d, long long int* info );
void dlasrt_( const char* id, const long long int* n, double* d, long long int* info );

void DLASSQ( const long long int* n, const double* x, const long long int* incx,
             double* scale, double* sumsq );
void DLASSQ_( const long long int* n, const double* x, const long long int* incx,
              double* scale, double* sumsq );
void dlassq( const long long int* n, const double* x, const long long int* incx,
             double* scale, double* sumsq );
void dlassq_( const long long int* n, const double* x, const long long int* incx,
              double* scale, double* sumsq );

void DLASV2( const double* f, const double* g, const double* h, double* ssmin,
             double* ssmax, double* snr, double* csr, double* snl,
             double* csl );
void DLASV2_( const double* f, const double* g, const double* h, double* ssmin,
              double* ssmax, double* snr, double* csr, double* snl,
              double* csl );
void dlasv2( const double* f, const double* g, const double* h, double* ssmin,
             double* ssmax, double* snr, double* csr, double* snl,
             double* csl );
void dlasv2_( const double* f, const double* g, const double* h, double* ssmin,
              double* ssmax, double* snr, double* csr, double* snl,
              double* csl );

void DLASWP( const long long int* n, double* a, const long long int* lda,
             const long long int* k1, const long long int* k2, const long long int* ipiv,
             const long long int* incx );
void DLASWP_( const long long int* n, double* a, const long long int* lda,
              const long long int* k1, const long long int* k2, const long long int* ipiv,
              const long long int* incx );
void dlaswp( const long long int* n, double* a, const long long int* lda,
             const long long int* k1, const long long int* k2, const long long int* ipiv,
             const long long int* incx );
void dlaswp_( const long long int* n, double* a, const long long int* lda,
              const long long int* k1, const long long int* k2, const long long int* ipiv,
              const long long int* incx );

void DLASY2( const long long int* ltranl, const long long int* ltranr, const long long int* isgn,
             const long long int* n1, const long long int* n2, const double* tl,
             const long long int* ldtl, const double* tr, const long long int* ldtr,
             const double* b, const long long int* ldb, double* scale, double* x,
             const long long int* ldx, double* xnorm, long long int* info );
void DLASY2_( const long long int* ltranl, const long long int* ltranr,
              const long long int* isgn, const long long int* n1, const long long int* n2,
              const double* tl, const long long int* ldtl, const double* tr,
              const long long int* ldtr, const double* b, const long long int* ldb,
              double* scale, double* x, const long long int* ldx, double* xnorm,
              long long int* info );
void dlasy2( const long long int* ltranl, const long long int* ltranr, const long long int* isgn,
             const long long int* n1, const long long int* n2, const double* tl,
             const long long int* ldtl, const double* tr, const long long int* ldtr,
             const double* b, const long long int* ldb, double* scale, double* x,
             const long long int* ldx, double* xnorm, long long int* info );
void dlasy2_( const long long int* ltranl, const long long int* ltranr,
              const long long int* isgn, const long long int* n1, const long long int* n2,
              const double* tl, const long long int* ldtl, const double* tr,
              const long long int* ldtr, const double* b, const long long int* ldb,
              double* scale, double* x, const long long int* ldx, double* xnorm,
              long long int* info );

void DLASYF( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, double* a, const long long int* lda, long long int* ipiv,
             double* w, const long long int* ldw, long long int* info );
void DLASYF_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, double* a, const long long int* lda, long long int* ipiv,
              double* w, const long long int* ldw, long long int* info );
void dlasyf( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, double* a, const long long int* lda, long long int* ipiv,
             double* w, const long long int* ldw, long long int* info );
void dlasyf_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, double* a, const long long int* lda, long long int* ipiv,
              double* w, const long long int* ldw, long long int* info );

void DLAT2S( const char* uplo, const long long int* n, const double* a,
             const long long int* lda, float* sa, const long long int* ldsa,
             long long int* info );
void DLAT2S_( const char* uplo, const long long int* n, const double* a,
              const long long int* lda, float* sa, const long long int* ldsa,
              long long int* info );
void dlat2s( const char* uplo, const long long int* n, const double* a,
             const long long int* lda, float* sa, const long long int* ldsa,
             long long int* info );
void dlat2s_( const char* uplo, const long long int* n, const double* a,
              const long long int* lda, float* sa, const long long int* ldsa,
              long long int* info );

void DLATBS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const long long int* kd,
             const double* ab, const long long int* ldab, double* x, double* scale,
             double* cnorm, long long int* info );
void DLATBS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const long long int* kd,
              const double* ab, const long long int* ldab, double* x, double* scale,
              double* cnorm, long long int* info );
void dlatbs( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const long long int* kd,
             const double* ab, const long long int* ldab, double* x, double* scale,
             double* cnorm, long long int* info );
void dlatbs_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const long long int* kd,
              const double* ab, const long long int* ldab, double* x, double* scale,
              double* cnorm, long long int* info );

void DLATDF( const long long int* ijob, const long long int* n, const double* z,
             const long long int* ldz, double* rhs, double* rdsum, double* rdscal,
             const long long int* ipiv, const long long int* jpiv );
void DLATDF_( const long long int* ijob, const long long int* n, const double* z,
              const long long int* ldz, double* rhs, double* rdsum, double* rdscal,
              const long long int* ipiv, const long long int* jpiv );
void dlatdf( const long long int* ijob, const long long int* n, const double* z,
             const long long int* ldz, double* rhs, double* rdsum, double* rdscal,
             const long long int* ipiv, const long long int* jpiv );
void dlatdf_( const long long int* ijob, const long long int* n, const double* z,
              const long long int* ldz, double* rhs, double* rdsum, double* rdscal,
              const long long int* ipiv, const long long int* jpiv );

void DLATPS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const double* ap, double* x,
             double* scale, double* cnorm, long long int* info );
void DLATPS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const double* ap,
              double* x, double* scale, double* cnorm, long long int* info );
void dlatps( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const double* ap, double* x,
             double* scale, double* cnorm, long long int* info );
void dlatps_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const double* ap,
              double* x, double* scale, double* cnorm, long long int* info );

void DLATRD( const char* uplo, const long long int* n, const long long int* nb, double* a,
             const long long int* lda, double* e, double* tau, double* w,
             const long long int* ldw );
void DLATRD_( const char* uplo, const long long int* n, const long long int* nb, double* a,
              const long long int* lda, double* e, double* tau, double* w,
              const long long int* ldw );
void dlatrd( const char* uplo, const long long int* n, const long long int* nb, double* a,
             const long long int* lda, double* e, double* tau, double* w,
             const long long int* ldw );
void dlatrd_( const char* uplo, const long long int* n, const long long int* nb, double* a,
              const long long int* lda, double* e, double* tau, double* w,
              const long long int* ldw );

void DLATRS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const double* a,
             const long long int* lda, double* x, double* scale, double* cnorm,
             long long int* info );
void DLATRS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const double* a,
              const long long int* lda, double* x, double* scale, double* cnorm,
              long long int* info );
void dlatrs( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const double* a,
             const long long int* lda, double* x, double* scale, double* cnorm,
             long long int* info );
void dlatrs_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const double* a,
              const long long int* lda, double* x, double* scale, double* cnorm,
              long long int* info );

void DLATRZ( const long long int* m, const long long int* n, const long long int* l, double* a,
             const long long int* lda, double* tau, double* work );
void DLATRZ_( const long long int* m, const long long int* n, const long long int* l, double* a,
              const long long int* lda, double* tau, double* work );
void dlatrz( const long long int* m, const long long int* n, const long long int* l, double* a,
             const long long int* lda, double* tau, double* work );
void dlatrz_( const long long int* m, const long long int* n, const long long int* l, double* a,
              const long long int* lda, double* tau, double* work );

void DLATZM( const char* side, const long long int* m, const long long int* n,
             const double* v, const long long int* incv, const double* tau,
             double* c1, double* c2, const long long int* ldc, double* work );
void DLATZM_( const char* side, const long long int* m, const long long int* n,
              const double* v, const long long int* incv, const double* tau,
              double* c1, double* c2, const long long int* ldc, double* work );
void dlatzm( const char* side, const long long int* m, const long long int* n,
             const double* v, const long long int* incv, const double* tau,
             double* c1, double* c2, const long long int* ldc, double* work );
void dlatzm_( const char* side, const long long int* m, const long long int* n,
              const double* v, const long long int* incv, const double* tau,
              double* c1, double* c2, const long long int* ldc, double* work );

void DLAUU2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void DLAUU2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );
void dlauu2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void dlauu2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );

void DLAUUM( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void DLAUUM_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );
void dlauum( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void dlauum_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );

void DOPGTR( const char* uplo, const long long int* n, const double* ap,
             const double* tau, double* q, const long long int* ldq, double* work,
             long long int* info );
void DOPGTR_( const char* uplo, const long long int* n, const double* ap,
              const double* tau, double* q, const long long int* ldq, double* work,
              long long int* info );
void dopgtr( const char* uplo, const long long int* n, const double* ap,
             const double* tau, double* q, const long long int* ldq, double* work,
             long long int* info );
void dopgtr_( const char* uplo, const long long int* n, const double* ap,
              const double* tau, double* q, const long long int* ldq, double* work,
              long long int* info );

void DOPMTR( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const double* ap,
             const double* tau, double* c, const long long int* ldc, double* work,
             long long int* info );
void DOPMTR_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const double* ap,
              const double* tau, double* c, const long long int* ldc, double* work,
              long long int* info );
void dopmtr( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const double* ap,
             const double* tau, double* c, const long long int* ldc, double* work,
             long long int* info );
void dopmtr_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const double* ap,
              const double* tau, double* c, const long long int* ldc, double* work,
              long long int* info );

void DORG2L( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             long long int* info );
void DORG2L_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              long long int* info );
void dorg2l( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             long long int* info );
void dorg2l_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              long long int* info );

void DORG2R( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             long long int* info );
void DORG2R_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              long long int* info );
void dorg2r( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             long long int* info );
void dorg2r_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              long long int* info );

void DORGBR( const char* vect, const long long int* m, const long long int* n,
             const long long int* k, double* a, const long long int* lda,
             const double* tau, double* work, const long long int* lwork,
             long long int* info );
void DORGBR_( const char* vect, const long long int* m, const long long int* n,
              const long long int* k, double* a, const long long int* lda,
              const double* tau, double* work, const long long int* lwork,
              long long int* info );
void dorgbr( const char* vect, const long long int* m, const long long int* n,
             const long long int* k, double* a, const long long int* lda,
             const double* tau, double* work, const long long int* lwork,
             long long int* info );
void dorgbr_( const char* vect, const long long int* m, const long long int* n,
              const long long int* k, double* a, const long long int* lda,
              const double* tau, double* work, const long long int* lwork,
              long long int* info );

void DORGHR( const long long int* n, const long long int* ilo, const long long int* ihi,
             double* a, const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void DORGHR_( const long long int* n, const long long int* ilo, const long long int* ihi,
              double* a, const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );
void dorghr( const long long int* n, const long long int* ilo, const long long int* ihi,
             double* a, const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void dorghr_( const long long int* n, const long long int* ilo, const long long int* ihi,
              double* a, const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );

void DORGL2( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             long long int* info );
void DORGL2_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              long long int* info );
void dorgl2( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             long long int* info );
void dorgl2_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              long long int* info );

void DORGLQ( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void DORGLQ_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );
void dorglq( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void dorglq_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );

void DORGQL( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void DORGQL_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );
void dorgql( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void dorgql_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );

void DORGQR( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void DORGQR_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );
void dorgqr( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void dorgqr_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );

void DORGR2( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             long long int* info );
void DORGR2_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              long long int* info );
void dorgr2( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             long long int* info );
void dorgr2_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              long long int* info );

void DORGRQ( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void DORGRQ_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );
void dorgrq( const long long int* m, const long long int* n, const long long int* k, double* a,
             const long long int* lda, const double* tau, double* work,
             const long long int* lwork, long long int* info );
void dorgrq_( const long long int* m, const long long int* n, const long long int* k, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );

void DORGTR( const char* uplo, const long long int* n, double* a, const long long int* lda,
             const double* tau, double* work, const long long int* lwork,
             long long int* info );
void DORGTR_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );
void dorgtr( const char* uplo, const long long int* n, double* a, const long long int* lda,
             const double* tau, double* work, const long long int* lwork,
             long long int* info );
void dorgtr_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const double* tau, double* work,
              const long long int* lwork, long long int* info );

void DORM2L( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void DORM2L_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, long long int* info );
void dorm2l( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void dorm2l_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, long long int* info );

void DORM2R( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void DORM2R_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, long long int* info );
void dorm2r( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void dorm2r_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, long long int* info );

void DORMBR( const char* vect, const char* side, const char* trans,
             const long long int* m, const long long int* n, const long long int* k,
             const double* a, const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void DORMBR_( const char* vect, const char* side, const char* trans,
              const long long int* m, const long long int* n, const long long int* k,
              const double* a, const long long int* lda, const double* tau,
              double* c, const long long int* ldc, double* work,
              const long long int* lwork, long long int* info );
void dormbr( const char* vect, const char* side, const char* trans,
             const long long int* m, const long long int* n, const long long int* k,
             const double* a, const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void dormbr_( const char* vect, const char* side, const char* trans,
              const long long int* m, const long long int* n, const long long int* k,
              const double* a, const long long int* lda, const double* tau,
              double* c, const long long int* ldc, double* work,
              const long long int* lwork, long long int* info );

void DORMHR( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             const double* a, const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void DORMHR_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              const double* a, const long long int* lda, const double* tau,
              double* c, const long long int* ldc, double* work,
              const long long int* lwork, long long int* info );
void dormhr( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             const double* a, const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void dormhr_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              const double* a, const long long int* lda, const double* tau,
              double* c, const long long int* ldc, double* work,
              const long long int* lwork, long long int* info );

void DORML2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void DORML2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, long long int* info );
void dorml2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void dorml2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, long long int* info );

void DORMLQ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void DORMLQ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );
void dormlq( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void dormlq_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );

void DORMQL( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void DORMQL_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );
void dormql( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void dormql_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );

void DORMQR( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void DORMQR_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );
void dormqr( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void dormqr_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );

void DORMR2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void DORMR2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, long long int* info );
void dormr2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void dormr2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, long long int* info );

void DORMR3( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const double* a, const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void DORMR3_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const double* a, const long long int* lda, const double* tau,
              double* c, const long long int* ldc, double* work, long long int* info );
void dormr3( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const double* a, const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, long long int* info );
void dormr3_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const double* a, const long long int* lda, const double* tau,
              double* c, const long long int* ldc, double* work, long long int* info );

void DORMRQ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void DORMRQ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );
void dormrq( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void dormrq_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );

void DORMRZ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const double* a, const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void DORMRZ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const double* a, const long long int* lda, const double* tau,
              double* c, const long long int* ldc, double* work,
              const long long int* lwork, long long int* info );
void dormrz( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const double* a, const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void dormrz_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const double* a, const long long int* lda, const double* tau,
              double* c, const long long int* ldc, double* work,
              const long long int* lwork, long long int* info );

void DORMTR( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void DORMTR_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );
void dormtr( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const double* a,
             const long long int* lda, const double* tau, double* c,
             const long long int* ldc, double* work, const long long int* lwork,
             long long int* info );
void dormtr_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const double* a,
              const long long int* lda, const double* tau, double* c,
              const long long int* ldc, double* work, const long long int* lwork,
              long long int* info );

void DPBCON( const char* uplo, const long long int* n, const long long int* kd,
             const double* ab, const long long int* ldab, const double* anorm,
             double* rcond, double* work, long long int* iwork, long long int* info );
void DPBCON_( const char* uplo, const long long int* n, const long long int* kd,
              const double* ab, const long long int* ldab, const double* anorm,
              double* rcond, double* work, long long int* iwork, long long int* info );
void dpbcon( const char* uplo, const long long int* n, const long long int* kd,
             const double* ab, const long long int* ldab, const double* anorm,
             double* rcond, double* work, long long int* iwork, long long int* info );
void dpbcon_( const char* uplo, const long long int* n, const long long int* kd,
              const double* ab, const long long int* ldab, const double* anorm,
              double* rcond, double* work, long long int* iwork, long long int* info );

void DPBEQU( const char* uplo, const long long int* n, const long long int* kd,
             const double* ab, const long long int* ldab, double* s, double* scond,
             double* amax, long long int* info );
void DPBEQU_( const char* uplo, const long long int* n, const long long int* kd,
              const double* ab, const long long int* ldab, double* s, double* scond,
              double* amax, long long int* info );
void dpbequ( const char* uplo, const long long int* n, const long long int* kd,
             const double* ab, const long long int* ldab, double* s, double* scond,
             double* amax, long long int* info );
void dpbequ_( const char* uplo, const long long int* n, const long long int* kd,
              const double* ab, const long long int* ldab, double* s, double* scond,
              double* amax, long long int* info );

void DPBRFS( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const double* ab, const long long int* ldab,
             const double* afb, const long long int* ldafb, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void DPBRFS_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const double* ab, const long long int* ldab,
              const double* afb, const long long int* ldafb, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );
void dpbrfs( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const double* ab, const long long int* ldab,
             const double* afb, const long long int* ldafb, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void dpbrfs_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const double* ab, const long long int* ldab,
              const double* afb, const long long int* ldafb, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );

void DPBSTF( const char* uplo, const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, long long int* info );
void DPBSTF_( const char* uplo, const long long int* n, const long long int* kd,
              double* ab, const long long int* ldab, long long int* info );
void dpbstf( const char* uplo, const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, long long int* info );
void dpbstf_( const char* uplo, const long long int* n, const long long int* kd,
              double* ab, const long long int* ldab, long long int* info );

void DPBSV( const char* uplo, const long long int* n, const long long int* kd,
            const long long int* nrhs, double* ab, const long long int* ldab, double* b,
            const long long int* ldb, long long int* info );
void DPBSV_( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, double* ab, const long long int* ldab, double* b,
             const long long int* ldb, long long int* info );
void dpbsv( const char* uplo, const long long int* n, const long long int* kd,
            const long long int* nrhs, double* ab, const long long int* ldab, double* b,
            const long long int* ldb, long long int* info );
void dpbsv_( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, double* ab, const long long int* ldab, double* b,
             const long long int* ldb, long long int* info );

void DPBSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* kd, const long long int* nrhs, double* ab,
             const long long int* ldab, double* afb, const long long int* ldafb,
             char* equed, double* s, double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void DPBSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* kd, const long long int* nrhs, double* ab,
              const long long int* ldab, double* afb, const long long int* ldafb,
              char* equed, double* s, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );
void dpbsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* kd, const long long int* nrhs, double* ab,
             const long long int* ldab, double* afb, const long long int* ldafb,
             char* equed, double* s, double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void dpbsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* kd, const long long int* nrhs, double* ab,
              const long long int* ldab, double* afb, const long long int* ldafb,
              char* equed, double* s, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );

void DPBTF2( const char* uplo, const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, long long int* info );
void DPBTF2_( const char* uplo, const long long int* n, const long long int* kd,
              double* ab, const long long int* ldab, long long int* info );
void dpbtf2( const char* uplo, const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, long long int* info );
void dpbtf2_( const char* uplo, const long long int* n, const long long int* kd,
              double* ab, const long long int* ldab, long long int* info );

void DPBTRF( const char* uplo, const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, long long int* info );
void DPBTRF_( const char* uplo, const long long int* n, const long long int* kd,
              double* ab, const long long int* ldab, long long int* info );
void dpbtrf( const char* uplo, const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, long long int* info );
void dpbtrf_( const char* uplo, const long long int* n, const long long int* kd,
              double* ab, const long long int* ldab, long long int* info );

void DPBTRS( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const double* ab, const long long int* ldab,
             double* b, const long long int* ldb, long long int* info );
void DPBTRS_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const double* ab, const long long int* ldab,
              double* b, const long long int* ldb, long long int* info );
void dpbtrs( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const double* ab, const long long int* ldab,
             double* b, const long long int* ldb, long long int* info );
void dpbtrs_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const double* ab, const long long int* ldab,
              double* b, const long long int* ldb, long long int* info );

void DPFTRF( const char* transr, const char* uplo, const long long int* n, double* a,
             long long int* info );
void DPFTRF_( const char* transr, const char* uplo, const long long int* n,
              double* a, long long int* info );
void dpftrf( const char* transr, const char* uplo, const long long int* n, double* a,
             long long int* info );
void dpftrf_( const char* transr, const char* uplo, const long long int* n,
              double* a, long long int* info );

void DPFTRI( const char* transr, const char* uplo, const long long int* n, double* a,
             long long int* info );
void DPFTRI_( const char* transr, const char* uplo, const long long int* n,
              double* a, long long int* info );
void dpftri( const char* transr, const char* uplo, const long long int* n, double* a,
             long long int* info );
void dpftri_( const char* transr, const char* uplo, const long long int* n,
              double* a, long long int* info );

void DPFTRS( const char* transr, const char* uplo, const long long int* n,
             const long long int* nrhs, const double* a, double* b,
             const long long int* ldb, long long int* info );
void DPFTRS_( const char* transr, const char* uplo, const long long int* n,
              const long long int* nrhs, const double* a, double* b,
              const long long int* ldb, long long int* info );
void dpftrs( const char* transr, const char* uplo, const long long int* n,
             const long long int* nrhs, const double* a, double* b,
             const long long int* ldb, long long int* info );
void dpftrs_( const char* transr, const char* uplo, const long long int* n,
              const long long int* nrhs, const double* a, double* b,
              const long long int* ldb, long long int* info );

void DPOCON( const char* uplo, const long long int* n, const double* a,
             const long long int* lda, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void DPOCON_( const char* uplo, const long long int* n, const double* a,
              const long long int* lda, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );
void dpocon( const char* uplo, const long long int* n, const double* a,
             const long long int* lda, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void dpocon_( const char* uplo, const long long int* n, const double* a,
              const long long int* lda, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );

void DPOEQUB( const long long int* n, const double* a, const long long int* lda, double* s,
              double* scond, double* amax, long long int* info );
void DPOEQUB_( const long long int* n, const double* a, const long long int* lda,
               double* s, double* scond, double* amax, long long int* info );
void dpoequb( const long long int* n, const double* a, const long long int* lda, double* s,
              double* scond, double* amax, long long int* info );
void dpoequb_( const long long int* n, const double* a, const long long int* lda,
               double* s, double* scond, double* amax, long long int* info );

void DPOEQU( const long long int* n, const double* a, const long long int* lda, double* s,
             double* scond, double* amax, long long int* info );
void DPOEQU_( const long long int* n, const double* a, const long long int* lda, double* s,
              double* scond, double* amax, long long int* info );
void dpoequ( const long long int* n, const double* a, const long long int* lda, double* s,
             double* scond, double* amax, long long int* info );
void dpoequ_( const long long int* n, const double* a, const long long int* lda, double* s,
              double* scond, double* amax, long long int* info );

void DPORFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const double* af,
             const long long int* ldaf, const double* b, const long long int* ldb,
             double* x, const long long int* ldx, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void DPORFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const double* af,
              const long long int* ldaf, const double* b, const long long int* ldb,
              double* x, const long long int* ldx, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );
void dporfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const double* af,
             const long long int* ldaf, const double* b, const long long int* ldb,
             double* x, const long long int* ldx, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void dporfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const double* af,
              const long long int* ldaf, const double* b, const long long int* ldb,
              double* x, const long long int* ldx, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );

void DPORFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const double* a, const long long int* lda,
              const double* af, const long long int* ldaf, const double* s,
              const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void DPORFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const double* a, const long long int* lda,
               const double* af, const long long int* ldaf, const double* s,
               const double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );
void dporfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const double* a, const long long int* lda,
              const double* af, const long long int* ldaf, const double* s,
              const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void dporfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const double* a, const long long int* lda,
               const double* af, const long long int* ldaf, const double* s,
               const double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );

void DPOSV( const char* uplo, const long long int* n, const long long int* nrhs, double* a,
            const long long int* lda, double* b, const long long int* ldb, long long int* info );
void DPOSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             long long int* info );
void dposv( const char* uplo, const long long int* n, const long long int* nrhs, double* a,
            const long long int* lda, double* b, const long long int* ldb, long long int* info );
void dposv_( const char* uplo, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             long long int* info );

void DPOSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, double* a, const long long int* lda, double* af,
             const long long int* ldaf, char* equed, double* s, double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* rcond,
             double* ferr, double* berr, double* work, long long int* iwork,
             long long int* info );
void DPOSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, char* equed, double* s, double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, double* work, long long int* iwork,
              long long int* info );
void dposvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, double* a, const long long int* lda, double* af,
             const long long int* ldaf, char* equed, double* s, double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* rcond,
             double* ferr, double* berr, double* work, long long int* iwork,
             long long int* info );
void dposvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, char* equed, double* s, double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, double* work, long long int* iwork,
              long long int* info );

void DPOSVXX( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, char* equed, double* s, double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* rcond,
              double* rpvgrw, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, double* work,
              long long int* iwork, long long int* info );
void DPOSVXX_( const char* fact, const char* uplo, const long long int* n,
               const long long int* nrhs, double* a, const long long int* lda, double* af,
               const long long int* ldaf, char* equed, double* s, double* b,
               const long long int* ldb, double* x, const long long int* ldx,
               double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );
void dposvxx( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, char* equed, double* s, double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* rcond,
              double* rpvgrw, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, double* work,
              long long int* iwork, long long int* info );
void dposvxx_( const char* fact, const char* uplo, const long long int* n,
               const long long int* nrhs, double* a, const long long int* lda, double* af,
               const long long int* ldaf, char* equed, double* s, double* b,
               const long long int* ldb, double* x, const long long int* ldx,
               double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );

void DPOTF2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void DPOTF2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );
void dpotf2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void dpotf2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );

void DPOTRF( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void DPOTRF_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );
void dpotrf( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void dpotrf_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );

void DPOTRI( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void DPOTRI_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );
void dpotri( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* info );
void dpotri_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* info );

void DPOTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, double* b,
             const long long int* ldb, long long int* info );
void DPOTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, double* b,
              const long long int* ldb, long long int* info );
void dpotrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, double* b,
             const long long int* ldb, long long int* info );
void dpotrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, double* b,
              const long long int* ldb, long long int* info );

void DPPCON( const char* uplo, const long long int* n, const double* ap,
             const double* anorm, double* rcond, double* work, long long int* iwork,
             long long int* info );
void DPPCON_( const char* uplo, const long long int* n, const double* ap,
              const double* anorm, double* rcond, double* work, long long int* iwork,
              long long int* info );
void dppcon( const char* uplo, const long long int* n, const double* ap,
             const double* anorm, double* rcond, double* work, long long int* iwork,
             long long int* info );
void dppcon_( const char* uplo, const long long int* n, const double* ap,
              const double* anorm, double* rcond, double* work, long long int* iwork,
              long long int* info );

void DPPEQU( const char* uplo, const long long int* n, const double* ap, double* s,
             double* scond, double* amax, long long int* info );
void DPPEQU_( const char* uplo, const long long int* n, const double* ap, double* s,
              double* scond, double* amax, long long int* info );
void dppequ( const char* uplo, const long long int* n, const double* ap, double* s,
             double* scond, double* amax, long long int* info );
void dppequ_( const char* uplo, const long long int* n, const double* ap, double* s,
              double* scond, double* amax, long long int* info );

void DPPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* ap, const double* afp, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void DPPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* ap, const double* afp, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );
void dpprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* ap, const double* afp, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void dpprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* ap, const double* afp, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );

void DPPSV( const char* uplo, const long long int* n, const long long int* nrhs,
            double* ap, double* b, const long long int* ldb, long long int* info );
void DPPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             double* ap, double* b, const long long int* ldb, long long int* info );
void dppsv( const char* uplo, const long long int* n, const long long int* nrhs,
            double* ap, double* b, const long long int* ldb, long long int* info );
void dppsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             double* ap, double* b, const long long int* ldb, long long int* info );

void DPPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, double* ap, double* afp, char* equed,
             double* s, double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void DPPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, double* ap, double* afp, char* equed,
              double* s, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );
void dppsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, double* ap, double* afp, char* equed,
             double* s, double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void dppsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, double* ap, double* afp, char* equed,
              double* s, double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );

void DPPTRF( const char* uplo, const long long int* n, double* ap, long long int* info );
void DPPTRF_( const char* uplo, const long long int* n, double* ap, long long int* info );
void dpptrf( const char* uplo, const long long int* n, double* ap, long long int* info );
void dpptrf_( const char* uplo, const long long int* n, double* ap, long long int* info );

void DPPTRI( const char* uplo, const long long int* n, double* ap, long long int* info );
void DPPTRI_( const char* uplo, const long long int* n, double* ap, long long int* info );
void dpptri( const char* uplo, const long long int* n, double* ap, long long int* info );
void dpptri_( const char* uplo, const long long int* n, double* ap, long long int* info );

void DPPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* ap, double* b, const long long int* ldb, long long int* info );
void DPPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* ap, double* b, const long long int* ldb, long long int* info );
void dpptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* ap, double* b, const long long int* ldb, long long int* info );
void dpptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* ap, double* b, const long long int* ldb, long long int* info );

void DPSTF2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* piv, long long int* rank, const double* tol, double* work,
             long long int* info );
void DPSTF2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const double* tol, double* work, long long int* info );
void dpstf2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* piv, long long int* rank, const double* tol, double* work,
             long long int* info );
void dpstf2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const double* tol, double* work, long long int* info );

void DPSTRF( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* piv, long long int* rank, const double* tol, double* work,
             long long int* info );
void DPSTRF_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const double* tol, double* work, long long int* info );
void dpstrf( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* piv, long long int* rank, const double* tol, double* work,
             long long int* info );
void dpstrf_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const double* tol, double* work, long long int* info );

void DPTCON( const long long int* n, const double* d, const double* e,
             const double* anorm, double* rcond, double* work, long long int* info );
void DPTCON_( const long long int* n, const double* d, const double* e,
              const double* anorm, double* rcond, double* work,
              long long int* info );
void dptcon( const long long int* n, const double* d, const double* e,
             const double* anorm, double* rcond, double* work, long long int* info );
void dptcon_( const long long int* n, const double* d, const double* e,
              const double* anorm, double* rcond, double* work,
              long long int* info );

void DPTEQR( const char* compz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, long long int* info );
void DPTEQR_( const char* compz, const long long int* n, double* d, double* e,
              double* z, const long long int* ldz, double* work, long long int* info );
void dpteqr( const char* compz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, long long int* info );
void dpteqr_( const char* compz, const long long int* n, double* d, double* e,
              double* z, const long long int* ldz, double* work, long long int* info );

void DPTRFS( const long long int* n, const long long int* nrhs, const double* d,
             const double* e, const double* df, const double* ef,
             const double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* ferr, double* berr, double* work,
             long long int* info );
void DPTRFS_( const long long int* n, const long long int* nrhs, const double* d,
              const double* e, const double* df, const double* ef,
              const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* ferr, double* berr, double* work,
              long long int* info );
void dptrfs( const long long int* n, const long long int* nrhs, const double* d,
             const double* e, const double* df, const double* ef,
             const double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* ferr, double* berr, double* work,
             long long int* info );
void dptrfs_( const long long int* n, const long long int* nrhs, const double* d,
              const double* e, const double* df, const double* ef,
              const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* ferr, double* berr, double* work,
              long long int* info );

void DPTSV( const long long int* n, const long long int* nrhs, double* d, double* e,
            double* b, const long long int* ldb, long long int* info );
void DPTSV_( const long long int* n, const long long int* nrhs, double* d, double* e,
             double* b, const long long int* ldb, long long int* info );
void dptsv( const long long int* n, const long long int* nrhs, double* d, double* e,
            double* b, const long long int* ldb, long long int* info );
void dptsv_( const long long int* n, const long long int* nrhs, double* d, double* e,
             double* b, const long long int* ldb, long long int* info );

void DPTSVX( const char* fact, const long long int* n, const long long int* nrhs,
             const double* d, const double* e, double* df, double* ef,
             const double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* info );
void DPTSVX_( const char* fact, const long long int* n, const long long int* nrhs,
              const double* d, const double* e, double* df, double* ef,
              const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* info );
void dptsvx( const char* fact, const long long int* n, const long long int* nrhs,
             const double* d, const double* e, double* df, double* ef,
             const double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* info );
void dptsvx_( const char* fact, const long long int* n, const long long int* nrhs,
              const double* d, const double* e, double* df, double* ef,
              const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* info );

void DPTTRF( const long long int* n, double* d, double* e, long long int* info );
void DPTTRF_( const long long int* n, double* d, double* e, long long int* info );
void dpttrf( const long long int* n, double* d, double* e, long long int* info );
void dpttrf_( const long long int* n, double* d, double* e, long long int* info );

void DPTTRS( const long long int* n, const long long int* nrhs, const double* d,
             const double* e, double* b, const long long int* ldb, long long int* info );
void DPTTRS_( const long long int* n, const long long int* nrhs, const double* d,
              const double* e, double* b, const long long int* ldb, long long int* info );
void dpttrs( const long long int* n, const long long int* nrhs, const double* d,
             const double* e, double* b, const long long int* ldb, long long int* info );
void dpttrs_( const long long int* n, const long long int* nrhs, const double* d,
              const double* e, double* b, const long long int* ldb, long long int* info );

void DPTTS2( const long long int* n, const long long int* nrhs, const double* d,
             const double* e, double* b, const long long int* ldb );
void DPTTS2_( const long long int* n, const long long int* nrhs, const double* d,
              const double* e, double* b, const long long int* ldb );
void dptts2( const long long int* n, const long long int* nrhs, const double* d,
             const double* e, double* b, const long long int* ldb );
void dptts2_( const long long int* n, const long long int* nrhs, const double* d,
              const double* e, double* b, const long long int* ldb );

void DRSCL( const long long int* n, const double* sa, double* sx,
            const long long int* incx );
void DRSCL_( const long long int* n, const double* sa, double* sx,
             const long long int* incx );
void drscl( const long long int* n, const double* sa, double* sx,
            const long long int* incx );
void drscl_( const long long int* n, const double* sa, double* sx,
             const long long int* incx );

void DSBEVD( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, double* ab, const long long int* ldab, double* w,
             double* z, const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void DSBEVD_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, double* ab, const long long int* ldab, double* w,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dsbevd( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, double* ab, const long long int* ldab, double* w,
             double* z, const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void dsbevd_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, double* ab, const long long int* ldab, double* w,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSBEV( const char* jobz, const char* uplo, const long long int* n,
            const long long int* kd, double* ab, const long long int* ldab, double* w,
            double* z, const long long int* ldz, double* work, long long int* info );
void DSBEV_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, double* ab, const long long int* ldab, double* w,
             double* z, const long long int* ldz, double* work, long long int* info );
void dsbev( const char* jobz, const char* uplo, const long long int* n,
            const long long int* kd, double* ab, const long long int* ldab, double* w,
            double* z, const long long int* ldz, double* work, long long int* info );
void dsbev_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, double* ab, const long long int* ldab, double* w,
             double* z, const long long int* ldz, double* work, long long int* info );

void DSBEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, double* q, const long long int* ldq,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, double* work, long long int* iwork,
             long long int* ifail, long long int* info );
void DSBEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* kd, double* ab,
              const long long int* ldab, double* q, const long long int* ldq,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work, long long int* iwork,
              long long int* ifail, long long int* info );
void dsbevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* kd, double* ab,
             const long long int* ldab, double* q, const long long int* ldq,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, double* work, long long int* iwork,
             long long int* ifail, long long int* info );
void dsbevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* kd, double* ab,
              const long long int* ldab, double* q, const long long int* ldq,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work, long long int* iwork,
              long long int* ifail, long long int* info );

void DSBGST( const char* vect, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, double* ab,
             const long long int* ldab, const double* bb, const long long int* ldbb,
             double* x, const long long int* ldx, double* work, long long int* info );
void DSBGST_( const char* vect, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, double* ab,
              const long long int* ldab, const double* bb, const long long int* ldbb,
              double* x, const long long int* ldx, double* work, long long int* info );
void dsbgst( const char* vect, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, double* ab,
             const long long int* ldab, const double* bb, const long long int* ldbb,
             double* x, const long long int* ldx, double* work, long long int* info );
void dsbgst_( const char* vect, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, double* ab,
              const long long int* ldab, const double* bb, const long long int* ldbb,
              double* x, const long long int* ldx, double* work, long long int* info );

void DSBGVD( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, double* ab,
             const long long int* ldab, double* bb, const long long int* ldbb, double* w,
             double* z, const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void DSBGVD_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, double* ab,
              const long long int* ldab, double* bb, const long long int* ldbb, double* w,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dsbgvd( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, double* ab,
             const long long int* ldab, double* bb, const long long int* ldbb, double* w,
             double* z, const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void dsbgvd_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, double* ab,
              const long long int* ldab, double* bb, const long long int* ldbb, double* w,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSBGV( const char* jobz, const char* uplo, const long long int* n,
            const long long int* ka, const long long int* kb, double* ab,
            const long long int* ldab, double* bb, const long long int* ldbb, double* w,
            double* z, const long long int* ldz, double* work, long long int* info );
void DSBGV_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, double* ab,
             const long long int* ldab, double* bb, const long long int* ldbb, double* w,
             double* z, const long long int* ldz, double* work, long long int* info );
void dsbgv( const char* jobz, const char* uplo, const long long int* n,
            const long long int* ka, const long long int* kb, double* ab,
            const long long int* ldab, double* bb, const long long int* ldbb, double* w,
            double* z, const long long int* ldz, double* work, long long int* info );
void dsbgv_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, double* ab,
             const long long int* ldab, double* bb, const long long int* ldbb, double* w,
             double* z, const long long int* ldz, double* work, long long int* info );

void DSBGVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* ka, const long long int* kb,
             double* ab, const long long int* ldab, double* bb, const long long int* ldbb,
             double* q, const long long int* ldq, const double* vl, const double* vu,
             const long long int* il, const long long int* iu, const double* abstol,
             long long int* m, double* w, double* z, const long long int* ldz,
             double* work, long long int* iwork, long long int* ifail, long long int* info );
void DSBGVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* ka, const long long int* kb,
              double* ab, const long long int* ldab, double* bb, const long long int* ldbb,
              double* q, const long long int* ldq, const double* vl,
              const double* vu, const long long int* il, const long long int* iu,
              const double* abstol, long long int* m, double* w, double* z,
              const long long int* ldz, double* work, long long int* iwork, long long int* ifail,
              long long int* info );
void dsbgvx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* ka, const long long int* kb,
             double* ab, const long long int* ldab, double* bb, const long long int* ldbb,
             double* q, const long long int* ldq, const double* vl, const double* vu,
             const long long int* il, const long long int* iu, const double* abstol,
             long long int* m, double* w, double* z, const long long int* ldz,
             double* work, long long int* iwork, long long int* ifail, long long int* info );
void dsbgvx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* ka, const long long int* kb,
              double* ab, const long long int* ldab, double* bb, const long long int* ldbb,
              double* q, const long long int* ldq, const double* vl,
              const double* vu, const long long int* il, const long long int* iu,
              const double* abstol, long long int* m, double* w, double* z,
              const long long int* ldz, double* work, long long int* iwork, long long int* ifail,
              long long int* info );

void DSBTRD( const char* vect, const char* uplo, const long long int* n,
             const long long int* kd, double* ab, const long long int* ldab, double* d,
             double* e, double* q, const long long int* ldq, double* work,
             long long int* info );
void DSBTRD_( const char* vect, const char* uplo, const long long int* n,
              const long long int* kd, double* ab, const long long int* ldab, double* d,
              double* e, double* q, const long long int* ldq, double* work,
              long long int* info );
void dsbtrd( const char* vect, const char* uplo, const long long int* n,
             const long long int* kd, double* ab, const long long int* ldab, double* d,
             double* e, double* q, const long long int* ldq, double* work,
             long long int* info );
void dsbtrd_( const char* vect, const char* uplo, const long long int* n,
              const long long int* kd, double* ab, const long long int* ldab, double* d,
              double* e, double* q, const long long int* ldq, double* work,
              long long int* info );

double DSECND( void );
double DSECND_( void );
double dsecnd( void );
double dsecnd_( void );

void DSFRK( const char* transr, const char* uplo, const char* trans,
            const long long int* n, const long long int* k, const double* alpha,
            const double* a, const long long int* lda, const double* beta,
            double* c );
void DSFRK_( const char* transr, const char* uplo, const char* trans,
             const long long int* n, const long long int* k, const double* alpha,
             const double* a, const long long int* lda, const double* beta,
             double* c );
void dsfrk( const char* transr, const char* uplo, const char* trans,
            const long long int* n, const long long int* k, const double* alpha,
            const double* a, const long long int* lda, const double* beta,
            double* c );
void dsfrk_( const char* transr, const char* uplo, const char* trans,
             const long long int* n, const long long int* k, const double* alpha,
             const double* a, const long long int* lda, const double* beta,
             double* c );

void DSGESV( const long long int* n, const long long int* nrhs, double* a,
             const long long int* lda, long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* work,
             float* swork, long long int* iter, long long int* info );
void DSGESV_( const long long int* n, const long long int* nrhs, double* a,
              const long long int* lda, long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* work,
              float* swork, long long int* iter, long long int* info );
void dsgesv( const long long int* n, const long long int* nrhs, double* a,
             const long long int* lda, long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* work,
             float* swork, long long int* iter, long long int* info );
void dsgesv_( const long long int* n, const long long int* nrhs, double* a,
              const long long int* lda, long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* work,
              float* swork, long long int* iter, long long int* info );

void DSPCON( const char* uplo, const long long int* n, const double* ap,
             const long long int* ipiv, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void DSPCON_( const char* uplo, const long long int* n, const double* ap,
              const long long int* ipiv, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );
void dspcon( const char* uplo, const long long int* n, const double* ap,
             const long long int* ipiv, const double* anorm, double* rcond,
             double* work, long long int* iwork, long long int* info );
void dspcon_( const char* uplo, const long long int* n, const double* ap,
              const long long int* ipiv, const double* anorm, double* rcond,
              double* work, long long int* iwork, long long int* info );

void DSPEVD( const char* jobz, const char* uplo, const long long int* n, double* ap,
             double* w, double* z, const long long int* ldz, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void DSPEVD_( const char* jobz, const char* uplo, const long long int* n, double* ap,
              double* w, double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dspevd( const char* jobz, const char* uplo, const long long int* n, double* ap,
             double* w, double* z, const long long int* ldz, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void dspevd_( const char* jobz, const char* uplo, const long long int* n, double* ap,
              double* w, double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSPEV( const char* jobz, const char* uplo, const long long int* n, double* ap,
            double* w, double* z, const long long int* ldz, double* work,
            long long int* info );
void DSPEV_( const char* jobz, const char* uplo, const long long int* n, double* ap,
             double* w, double* z, const long long int* ldz, double* work,
             long long int* info );
void dspev( const char* jobz, const char* uplo, const long long int* n, double* ap,
            double* w, double* z, const long long int* ldz, double* work,
            long long int* info );
void dspev_( const char* jobz, const char* uplo, const long long int* n, double* ap,
             double* w, double* z, const long long int* ldz, double* work,
             long long int* info );

void DSPEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, double* ap, const double* vl, const double* vu,
             const long long int* il, const long long int* iu, const double* abstol,
             long long int* m, double* w, double* z, const long long int* ldz,
             double* work, long long int* iwork, long long int* ifail, long long int* info );
void DSPEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, double* ap, const double* vl, const double* vu,
              const long long int* il, const long long int* iu, const double* abstol,
              long long int* m, double* w, double* z, const long long int* ldz,
              double* work, long long int* iwork, long long int* ifail, long long int* info );
void dspevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, double* ap, const double* vl, const double* vu,
             const long long int* il, const long long int* iu, const double* abstol,
             long long int* m, double* w, double* z, const long long int* ldz,
             double* work, long long int* iwork, long long int* ifail, long long int* info );
void dspevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, double* ap, const double* vl, const double* vu,
              const long long int* il, const long long int* iu, const double* abstol,
              long long int* m, double* w, double* z, const long long int* ldz,
              double* work, long long int* iwork, long long int* ifail, long long int* info );

void DSPGST( const long long int* itype, const char* uplo, const long long int* n,
             double* ap, const double* bp, long long int* info );
void DSPGST_( const long long int* itype, const char* uplo, const long long int* n,
              double* ap, const double* bp, long long int* info );
void dspgst( const long long int* itype, const char* uplo, const long long int* n,
             double* ap, const double* bp, long long int* info );
void dspgst_( const long long int* itype, const char* uplo, const long long int* n,
              double* ap, const double* bp, long long int* info );

void DSPGVD( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, double* ap, double* bp, double* w, double* z,
             const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void DSPGVD_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, double* ap, double* bp, double* w, double* z,
              const long long int* ldz, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void dspgvd( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, double* ap, double* bp, double* w, double* z,
             const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void dspgvd_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, double* ap, double* bp, double* w, double* z,
              const long long int* ldz, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void DSPGV( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, double* ap, double* bp, double* w, double* z,
            const long long int* ldz, double* work, long long int* info );
void DSPGV_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, double* ap, double* bp, double* w, double* z,
             const long long int* ldz, double* work, long long int* info );
void dspgv( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, double* ap, double* bp, double* w, double* z,
            const long long int* ldz, double* work, long long int* info );
void dspgv_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, double* ap, double* bp, double* w, double* z,
             const long long int* ldz, double* work, long long int* info );

void DSPGVX( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, double* ap, double* bp,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, double* work, long long int* iwork,
             long long int* ifail, long long int* info );
void DSPGVX_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, double* ap, double* bp,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work, long long int* iwork,
              long long int* ifail, long long int* info );
void dspgvx( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, double* ap, double* bp,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, double* work, long long int* iwork,
             long long int* ifail, long long int* info );
void dspgvx_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, double* ap, double* bp,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work, long long int* iwork,
              long long int* ifail, long long int* info );

void DSPOSV( const char* uplo, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* work,
             float* swork, long long int* iter, long long int* info );
void DSPOSV_( const char* uplo, const long long int* n, const long long int* nrhs,
              double* a, const long long int* lda, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* work,
              float* swork, long long int* iter, long long int* info );
void dsposv( const char* uplo, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* work,
             float* swork, long long int* iter, long long int* info );
void dsposv_( const char* uplo, const long long int* n, const long long int* nrhs,
              double* a, const long long int* lda, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* work,
              float* swork, long long int* iter, long long int* info );

void DSPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* ap, const double* afp, const long long int* ipiv,
             const double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* ferr, double* berr, double* work,
             long long int* iwork, long long int* info );
void DSPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* ap, const double* afp, const long long int* ipiv,
              const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* ferr, double* berr, double* work,
              long long int* iwork, long long int* info );
void dsprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* ap, const double* afp, const long long int* ipiv,
             const double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* ferr, double* berr, double* work,
             long long int* iwork, long long int* info );
void dsprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* ap, const double* afp, const long long int* ipiv,
              const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* ferr, double* berr, double* work,
              long long int* iwork, long long int* info );

void DSPSV( const char* uplo, const long long int* n, const long long int* nrhs,
            double* ap, long long int* ipiv, double* b, const long long int* ldb,
            long long int* info );
void DSPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             double* ap, long long int* ipiv, double* b, const long long int* ldb,
             long long int* info );
void dspsv( const char* uplo, const long long int* n, const long long int* nrhs,
            double* ap, long long int* ipiv, double* b, const long long int* ldb,
            long long int* info );
void dspsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             double* ap, long long int* ipiv, double* b, const long long int* ldb,
             long long int* info );

void DSPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const double* ap, double* afp, long long int* ipiv,
             const double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void DSPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const double* ap, double* afp,
              long long int* ipiv, const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );
void dspsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const double* ap, double* afp, long long int* ipiv,
             const double* b, const long long int* ldb, double* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void dspsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const double* ap, double* afp,
              long long int* ipiv, const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );

void DSPTRD( const char* uplo, const long long int* n, double* ap, double* d,
             double* e, double* tau, long long int* info );
void DSPTRD_( const char* uplo, const long long int* n, double* ap, double* d,
              double* e, double* tau, long long int* info );
void dsptrd( const char* uplo, const long long int* n, double* ap, double* d,
             double* e, double* tau, long long int* info );
void dsptrd_( const char* uplo, const long long int* n, double* ap, double* d,
              double* e, double* tau, long long int* info );

void DSPTRF( const char* uplo, const long long int* n, double* ap, long long int* ipiv,
             long long int* info );
void DSPTRF_( const char* uplo, const long long int* n, double* ap, long long int* ipiv,
              long long int* info );
void dsptrf( const char* uplo, const long long int* n, double* ap, long long int* ipiv,
             long long int* info );
void dsptrf_( const char* uplo, const long long int* n, double* ap, long long int* ipiv,
              long long int* info );

void DSPTRI( const char* uplo, const long long int* n, double* ap,
             const long long int* ipiv, double* work, long long int* info );
void DSPTRI_( const char* uplo, const long long int* n, double* ap,
              const long long int* ipiv, double* work, long long int* info );
void dsptri( const char* uplo, const long long int* n, double* ap,
             const long long int* ipiv, double* work, long long int* info );
void dsptri_( const char* uplo, const long long int* n, double* ap,
              const long long int* ipiv, double* work, long long int* info );

void DSPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* ap, const long long int* ipiv, double* b,
             const long long int* ldb, long long int* info );
void DSPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* ap, const long long int* ipiv, double* b,
              const long long int* ldb, long long int* info );
void dsptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* ap, const long long int* ipiv, double* b,
             const long long int* ldb, long long int* info );
void dsptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* ap, const long long int* ipiv, double* b,
              const long long int* ldb, long long int* info );

void DSTEBZ( const char* range, const char* order, const long long int* n,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, const double* d,
             const double* e, long long int* m, long long int* nsplit, double* w,
             long long int* iblock, long long int* isplit, double* work, long long int* iwork,
             long long int* info );
void DSTEBZ_( const char* range, const char* order, const long long int* n,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, const double* d,
              const double* e, long long int* m, long long int* nsplit, double* w,
              long long int* iblock, long long int* isplit, double* work, long long int* iwork,
              long long int* info );
void dstebz( const char* range, const char* order, const long long int* n,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, const double* d,
             const double* e, long long int* m, long long int* nsplit, double* w,
             long long int* iblock, long long int* isplit, double* work, long long int* iwork,
             long long int* info );
void dstebz_( const char* range, const char* order, const long long int* n,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, const double* d,
              const double* e, long long int* m, long long int* nsplit, double* w,
              long long int* iblock, long long int* isplit, double* work, long long int* iwork,
              long long int* info );

void DSTEDC( const char* compz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void DSTEDC_( const char* compz, const long long int* n, double* d, double* e,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dstedc( const char* compz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void dstedc_( const char* compz, const long long int* n, double* d, double* e,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSTEGR( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, long long int* isuppz, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void DSTEGR_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, long long int* isuppz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dstegr( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, long long int* isuppz, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void dstegr_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, long long int* isuppz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSTEIN( const long long int* n, const double* d, const double* e,
             const long long int* m, const double* w, const long long int* iblock,
             const long long int* isplit, double* z, const long long int* ldz,
             double* work, long long int* iwork, long long int* ifail, long long int* info );
void DSTEIN_( const long long int* n, const double* d, const double* e,
              const long long int* m, const double* w, const long long int* iblock,
              const long long int* isplit, double* z, const long long int* ldz,
              double* work, long long int* iwork, long long int* ifail, long long int* info );
void dstein( const long long int* n, const double* d, const double* e,
             const long long int* m, const double* w, const long long int* iblock,
             const long long int* isplit, double* z, const long long int* ldz,
             double* work, long long int* iwork, long long int* ifail, long long int* info );
void dstein_( const long long int* n, const double* d, const double* e,
              const long long int* m, const double* w, const long long int* iblock,
              const long long int* isplit, double* z, const long long int* ldz,
              double* work, long long int* iwork, long long int* ifail, long long int* info );

void DSTEMR( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, long long int* m, double* w, double* z,
             const long long int* ldz, const long long int* nzc, long long int* isuppz,
             long long int* tryrac, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void DSTEMR_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, long long int* m, double* w, double* z,
              const long long int* ldz, const long long int* nzc, long long int* isuppz,
              long long int* tryrac, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void dstemr( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, long long int* m, double* w, double* z,
             const long long int* ldz, const long long int* nzc, long long int* isuppz,
             long long int* tryrac, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void dstemr_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, long long int* m, double* w, double* z,
              const long long int* ldz, const long long int* nzc, long long int* isuppz,
              long long int* tryrac, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void DSTEQR( const char* compz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, long long int* info );
void DSTEQR_( const char* compz, const long long int* n, double* d, double* e,
              double* z, const long long int* ldz, double* work, long long int* info );
void dsteqr( const char* compz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, long long int* info );
void dsteqr_( const char* compz, const long long int* n, double* d, double* e,
              double* z, const long long int* ldz, double* work, long long int* info );

void DSTERF( const long long int* n, double* d, double* e, long long int* info );
void DSTERF_( const long long int* n, double* d, double* e, long long int* info );
void dsterf( const long long int* n, double* d, double* e, long long int* info );
void dsterf_( const long long int* n, double* d, double* e, long long int* info );

void DSTEVD( const char* jobz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void DSTEVD_( const char* jobz, const long long int* n, double* d, double* e,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dstevd( const char* jobz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void dstevd_( const char* jobz, const long long int* n, double* d, double* e,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSTEV( const char* jobz, const long long int* n, double* d, double* e,
            double* z, const long long int* ldz, double* work, long long int* info );
void DSTEV_( const char* jobz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, long long int* info );
void dstev( const char* jobz, const long long int* n, double* d, double* e,
            double* z, const long long int* ldz, double* work, long long int* info );
void dstev_( const char* jobz, const long long int* n, double* d, double* e,
             double* z, const long long int* ldz, double* work, long long int* info );

void DSTEVR( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, long long int* isuppz, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void DSTEVR_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, long long int* isuppz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dstevr( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, long long int* isuppz, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void dstevr_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, long long int* isuppz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSTEVX( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, double* work, long long int* iwork,
             long long int* ifail, long long int* info );
void DSTEVX_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work, long long int* iwork,
              long long int* ifail, long long int* info );
void dstevx( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             double* z, const long long int* ldz, double* work, long long int* iwork,
             long long int* ifail, long long int* info );
void dstevx_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work, long long int* iwork,
              long long int* ifail, long long int* info );

void DSYCON( const char* uplo, const long long int* n, const double* a,
             const long long int* lda, const long long int* ipiv, const double* anorm,
             double* rcond, double* work, long long int* iwork, long long int* info );
void DSYCON_( const char* uplo, const long long int* n, const double* a,
              const long long int* lda, const long long int* ipiv, const double* anorm,
              double* rcond, double* work, long long int* iwork, long long int* info );
void dsycon( const char* uplo, const long long int* n, const double* a,
             const long long int* lda, const long long int* ipiv, const double* anorm,
             double* rcond, double* work, long long int* iwork, long long int* info );
void dsycon_( const char* uplo, const long long int* n, const double* a,
              const long long int* lda, const long long int* ipiv, const double* anorm,
              double* rcond, double* work, long long int* iwork, long long int* info );

void DSYEQUB( char* uplo, const long long int* n, const double* a,
              const long long int* lda, double* s, double* scond, double* amax,
              double* work, long long int* info );
void DSYEQUB_( char* uplo, const long long int* n, const double* a,
               const long long int* lda, double* s, double* scond, double* amax,
               double* work, long long int* info );
void dsyequb( char* uplo, const long long int* n, const double* a,
              const long long int* lda, double* s, double* scond, double* amax,
              double* work, long long int* info );
void dsyequb_( char* uplo, const long long int* n, const double* a,
               const long long int* lda, double* s, double* scond, double* amax,
               double* work, long long int* info );

void DSYEVD( const char* jobz, const char* uplo, const long long int* n, double* a,
             const long long int* lda, double* w, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void DSYEVD_( const char* jobz, const char* uplo, const long long int* n, double* a,
              const long long int* lda, double* w, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dsyevd( const char* jobz, const char* uplo, const long long int* n, double* a,
             const long long int* lda, double* w, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void dsyevd_( const char* jobz, const char* uplo, const long long int* n, double* a,
              const long long int* lda, double* w, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSYEV( const char* jobz, const char* uplo, const long long int* n, double* a,
            const long long int* lda, double* w, double* work, const long long int* lwork,
            long long int* info );
void DSYEV_( const char* jobz, const char* uplo, const long long int* n, double* a,
             const long long int* lda, double* w, double* work, const long long int* lwork,
             long long int* info );
void dsyev( const char* jobz, const char* uplo, const long long int* n, double* a,
            const long long int* lda, double* w, double* work, const long long int* lwork,
            long long int* info );
void dsyev_( const char* jobz, const char* uplo, const long long int* n, double* a,
             const long long int* lda, double* w, double* work, const long long int* lwork,
             long long int* info );

void DSYEVR( const char* jobz, const char* range, const char* uplo,
             const long long int* n, double* a, const long long int* lda, const double* vl,
             const double* vu, const long long int* il, const long long int* iu,
             const double* abstol, long long int* m, double* w, double* z,
             const long long int* ldz, long long int* isuppz, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void DSYEVR_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, double* a, const long long int* lda,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, long long int* isuppz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dsyevr( const char* jobz, const char* range, const char* uplo,
             const long long int* n, double* a, const long long int* lda, const double* vl,
             const double* vu, const long long int* il, const long long int* iu,
             const double* abstol, long long int* m, double* w, double* z,
             const long long int* ldz, long long int* isuppz, double* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void dsyevr_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, double* a, const long long int* lda,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, long long int* isuppz, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSYEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, double* a, const long long int* lda, const double* vl,
             const double* vu, const long long int* il, const long long int* iu,
             const double* abstol, long long int* m, double* w, double* z,
             const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, long long int* ifail, long long int* info );
void DSYEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, double* a, const long long int* lda,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, long long int* ifail,
              long long int* info );
void dsyevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, double* a, const long long int* lda, const double* vl,
             const double* vu, const long long int* il, const long long int* iu,
             const double* abstol, long long int* m, double* w, double* z,
             const long long int* ldz, double* work, const long long int* lwork,
             long long int* iwork, long long int* ifail, long long int* info );
void dsyevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, double* a, const long long int* lda,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, long long int* ifail,
              long long int* info );

void DSYGS2( const long long int* itype, const char* uplo, const long long int* n,
             double* a, const long long int* lda, const double* b,
             const long long int* ldb, long long int* info );
void DSYGS2_( const long long int* itype, const char* uplo, const long long int* n,
              double* a, const long long int* lda, const double* b,
              const long long int* ldb, long long int* info );
void dsygs2( const long long int* itype, const char* uplo, const long long int* n,
             double* a, const long long int* lda, const double* b,
             const long long int* ldb, long long int* info );
void dsygs2_( const long long int* itype, const char* uplo, const long long int* n,
              double* a, const long long int* lda, const double* b,
              const long long int* ldb, long long int* info );

void DSYGST( const long long int* itype, const char* uplo, const long long int* n,
             double* a, const long long int* lda, const double* b,
             const long long int* ldb, long long int* info );
void DSYGST_( const long long int* itype, const char* uplo, const long long int* n,
              double* a, const long long int* lda, const double* b,
              const long long int* ldb, long long int* info );
void dsygst( const long long int* itype, const char* uplo, const long long int* n,
             double* a, const long long int* lda, const double* b,
             const long long int* ldb, long long int* info );
void dsygst_( const long long int* itype, const char* uplo, const long long int* n,
              double* a, const long long int* lda, const double* b,
              const long long int* ldb, long long int* info );

void DSYGVD( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, double* a, const long long int* lda, double* b,
             const long long int* ldb, double* w, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void DSYGVD_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, double* a, const long long int* lda, double* b,
              const long long int* ldb, double* w, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dsygvd( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, double* a, const long long int* lda, double* b,
             const long long int* ldb, double* w, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void dsygvd_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, double* a, const long long int* lda, double* b,
              const long long int* ldb, double* w, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DSYGV( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, double* a, const long long int* lda, double* b,
            const long long int* ldb, double* w, double* work, const long long int* lwork,
            long long int* info );
void DSYGV_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, double* a, const long long int* lda, double* b,
             const long long int* ldb, double* w, double* work, const long long int* lwork,
             long long int* info );
void dsygv( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, double* a, const long long int* lda, double* b,
            const long long int* ldb, double* w, double* work, const long long int* lwork,
            long long int* info );
void dsygv_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, double* a, const long long int* lda, double* b,
             const long long int* ldb, double* w, double* work, const long long int* lwork,
             long long int* info );

void DSYGVX( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, double* a, const long long int* lda,
             double* b, const long long int* ldb, const double* vl, const double* vu,
             const long long int* il, const long long int* iu, const double* abstol,
             long long int* m, double* w, double* z, const long long int* ldz,
             double* work, const long long int* lwork, long long int* iwork,
             long long int* ifail, long long int* info );
void DSYGVX_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, long long int* ifail,
              long long int* info );
void dsygvx( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, double* a, const long long int* lda,
             double* b, const long long int* ldb, const double* vl, const double* vu,
             const long long int* il, const long long int* iu, const double* abstol,
             long long int* m, double* w, double* z, const long long int* ldz,
             double* work, const long long int* lwork, long long int* iwork,
             long long int* ifail, long long int* info );
void dsygvx_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              double* z, const long long int* ldz, double* work,
              const long long int* lwork, long long int* iwork, long long int* ifail,
              long long int* info );

void DSYRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const double* af,
             const long long int* ldaf, const long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void DSYRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const double* af,
              const long long int* ldaf, const long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );
void dsyrfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const double* af,
             const long long int* ldaf, const long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* ferr,
             double* berr, double* work, long long int* iwork, long long int* info );
void dsyrfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const double* af,
              const long long int* ldaf, const long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* ferr,
              double* berr, double* work, long long int* iwork, long long int* info );

void DSYRFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const double* a, const long long int* lda,
              const double* af, const long long int* ldaf, const long long int* ipiv,
              const double* s, const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void DSYRFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const double* a, const long long int* lda,
               const double* af, const long long int* ldaf, const long long int* ipiv,
               const double* s, const double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );
void dsyrfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const double* a, const long long int* lda,
              const double* af, const long long int* ldaf, const long long int* ipiv,
              const double* s, const double* b, const long long int* ldb, double* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void dsyrfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const double* a, const long long int* lda,
               const double* af, const long long int* ldaf, const long long int* ipiv,
               const double* s, const double* b, const long long int* ldb, double* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );

void DSYSV( const char* uplo, const long long int* n, const long long int* nrhs, double* a,
            const long long int* lda, long long int* ipiv, double* b, const long long int* ldb,
            double* work, const long long int* lwork, long long int* info );
void DSYSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, long long int* ipiv, double* b,
             const long long int* ldb, double* work, const long long int* lwork,
             long long int* info );
void dsysv( const char* uplo, const long long int* n, const long long int* nrhs, double* a,
            const long long int* lda, long long int* ipiv, double* b, const long long int* ldb,
            double* work, const long long int* lwork, long long int* info );
void dsysv_( const char* uplo, const long long int* n, const long long int* nrhs,
             double* a, const long long int* lda, long long int* ipiv, double* b,
             const long long int* ldb, double* work, const long long int* lwork,
             long long int* info );

void DSYSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const double* a, const long long int* lda,
             double* af, const long long int* ldaf, long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* rcond,
             double* ferr, double* berr, double* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void DSYSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const double* a, const long long int* lda,
              double* af, const long long int* ldaf, long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, double* work, const long long int* lwork,
              long long int* iwork, long long int* info );
void dsysvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const double* a, const long long int* lda,
             double* af, const long long int* ldaf, long long int* ipiv, const double* b,
             const long long int* ldb, double* x, const long long int* ldx, double* rcond,
             double* ferr, double* berr, double* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void dsysvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const double* a, const long long int* lda,
              double* af, const long long int* ldaf, long long int* ipiv, const double* b,
              const long long int* ldb, double* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, double* work, const long long int* lwork,
              long long int* iwork, long long int* info );

void DSYSVXX( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, long long int* ipiv, char* equed, double* s,
              double* b, const long long int* ldb, double* x, const long long int* ldx,
              double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void DSYSVXX_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, double* a, const long long int* lda, double* af,
               const long long int* ldaf, long long int* ipiv, char* equed, double* s,
               double* b, const long long int* ldb, double* x, const long long int* ldx,
               double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );
void dsysvxx( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, double* a, const long long int* lda, double* af,
              const long long int* ldaf, long long int* ipiv, char* equed, double* s,
              double* b, const long long int* ldb, double* x, const long long int* ldx,
              double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              double* work, long long int* iwork, long long int* info );
void dsysvxx_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, double* a, const long long int* lda, double* af,
               const long long int* ldaf, long long int* ipiv, char* equed, double* s,
               double* b, const long long int* ldb, double* x, const long long int* ldx,
               double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               double* work, long long int* iwork, long long int* info );

void DSYTD2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             double* d, double* e, double* tau, long long int* info );
void DSYTD2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, double* d, double* e, double* tau,
              long long int* info );
void dsytd2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             double* d, double* e, double* tau, long long int* info );
void dsytd2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, double* d, double* e, double* tau,
              long long int* info );

void DSYTF2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void DSYTF2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void dsytf2( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void dsytf2_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void DSYTRD( const char* uplo, const long long int* n, double* a, const long long int* lda,
             double* d, double* e, double* tau, double* work,
             const long long int* lwork, long long int* info );
void DSYTRD_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, double* d, double* e, double* tau,
              double* work, const long long int* lwork, long long int* info );
void dsytrd( const char* uplo, const long long int* n, double* a, const long long int* lda,
             double* d, double* e, double* tau, double* work,
             const long long int* lwork, long long int* info );
void dsytrd_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, double* d, double* e, double* tau,
              double* work, const long long int* lwork, long long int* info );

void DSYTRF( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* ipiv, double* work, const long long int* lwork,
             long long int* info );
void DSYTRF_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* ipiv, double* work,
              const long long int* lwork, long long int* info );
void dsytrf( const char* uplo, const long long int* n, double* a, const long long int* lda,
             long long int* ipiv, double* work, const long long int* lwork,
             long long int* info );
void dsytrf_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, long long int* ipiv, double* work,
              const long long int* lwork, long long int* info );

void DSYTRI( const char* uplo, const long long int* n, double* a, const long long int* lda,
             const long long int* ipiv, double* work, long long int* info );
void DSYTRI_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const long long int* ipiv, double* work,
              long long int* info );
void dsytri( const char* uplo, const long long int* n, double* a, const long long int* lda,
             const long long int* ipiv, double* work, long long int* info );
void dsytri_( const char* uplo, const long long int* n, double* a,
              const long long int* lda, const long long int* ipiv, double* work,
              long long int* info );

void DSYTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const long long int* ipiv,
             double* b, const long long int* ldb, long long int* info );
void DSYTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const long long int* ipiv,
              double* b, const long long int* ldb, long long int* info );
void dsytrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* a, const long long int* lda, const long long int* ipiv,
             double* b, const long long int* ldb, long long int* info );
void dsytrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* a, const long long int* lda, const long long int* ipiv,
              double* b, const long long int* ldb, long long int* info );

void DTBCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const long long int* kd, const double* ab,
             const long long int* ldab, double* rcond, double* work, long long int* iwork,
             long long int* info );
void DTBCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* kd, const double* ab,
              const long long int* ldab, double* rcond, double* work, long long int* iwork,
              long long int* info );
void dtbcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const long long int* kd, const double* ab,
             const long long int* ldab, double* rcond, double* work, long long int* iwork,
             long long int* info );
void dtbcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* kd, const double* ab,
              const long long int* ldab, double* rcond, double* work, long long int* iwork,
              long long int* info );

void DTBRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const double* ab, const long long int* ldab, const double* b,
             const long long int* ldb, const double* x, const long long int* ldx,
             double* ferr, double* berr, double* work, long long int* iwork,
             long long int* info );
void DTBRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const double* ab, const long long int* ldab, const double* b,
              const long long int* ldb, const double* x, const long long int* ldx,
              double* ferr, double* berr, double* work, long long int* iwork,
              long long int* info );
void dtbrfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const double* ab, const long long int* ldab, const double* b,
             const long long int* ldb, const double* x, const long long int* ldx,
             double* ferr, double* berr, double* work, long long int* iwork,
             long long int* info );
void dtbrfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const double* ab, const long long int* ldab, const double* b,
              const long long int* ldb, const double* x, const long long int* ldx,
              double* ferr, double* berr, double* work, long long int* iwork,
              long long int* info );

void DTBTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const double* ab, const long long int* ldab, double* b,
             const long long int* ldb, long long int* info );
void DTBTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const double* ab, const long long int* ldab, double* b,
              const long long int* ldb, long long int* info );
void dtbtrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const double* ab, const long long int* ldab, double* b,
             const long long int* ldb, long long int* info );
void dtbtrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const double* ab, const long long int* ldab, double* b,
              const long long int* ldb, long long int* info );

void DTFSM( const char* transr, const char* side, const char* uplo,
            const char* trans, const char* diag, const long long int* m,
            const long long int* n, const double* alpha, const double* a, double* b,
            const long long int* ldb );
void DTFSM_( const char* transr, const char* side, const char* uplo,
             const char* trans, const char* diag, const long long int* m,
             const long long int* n, const double* alpha, const double* a, double* b,
             const long long int* ldb );
void dtfsm( const char* transr, const char* side, const char* uplo,
            const char* trans, const char* diag, const long long int* m,
            const long long int* n, const double* alpha, const double* a, double* b,
            const long long int* ldb );
void dtfsm_( const char* transr, const char* side, const char* uplo,
             const char* trans, const char* diag, const long long int* m,
             const long long int* n, const double* alpha, const double* a, double* b,
             const long long int* ldb );

void DTFTRI( const char* transr, const char* uplo, const char* diag,
             const long long int* n, double* a, long long int* info );
void DTFTRI_( const char* transr, const char* uplo, const char* diag,
              const long long int* n, double* a, long long int* info );
void dtftri( const char* transr, const char* uplo, const char* diag,
             const long long int* n, double* a, long long int* info );
void dtftri_( const char* transr, const char* uplo, const char* diag,
              const long long int* n, double* a, long long int* info );

void DTFTTP( const char* transr, const char* uplo, const long long int* n,
             const double* arf, double* ap, long long int* info );
void DTFTTP_( const char* transr, const char* uplo, const long long int* n,
              const double* arf, double* ap, long long int* info );
void dtfttp( const char* transr, const char* uplo, const long long int* n,
             const double* arf, double* ap, long long int* info );
void dtfttp_( const char* transr, const char* uplo, const long long int* n,
              const double* arf, double* ap, long long int* info );

void DTFTTR( const char* transr, const char* uplo, const long long int* n,
             const double* arf, double* a, const long long int* lda, long long int* info );
void DTFTTR_( const char* transr, const char* uplo, const long long int* n,
              const double* arf, double* a, const long long int* lda,
              long long int* info );
void dtfttr( const char* transr, const char* uplo, const long long int* n,
             const double* arf, double* a, const long long int* lda, long long int* info );
void dtfttr_( const char* transr, const char* uplo, const long long int* n,
              const double* arf, double* a, const long long int* lda,
              long long int* info );

void DTGEVC( const char* side, const char* howmny, const long long int* select,
             const long long int* n, const double* s, const long long int* lds,
             const double* p, const long long int* ldp, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, double* work, long long int* info );
void DTGEVC_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, const double* s, const long long int* lds,
              const double* p, const long long int* ldp, double* vl,
              const long long int* ldvl, double* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, double* work, long long int* info );
void dtgevc( const char* side, const char* howmny, const long long int* select,
             const long long int* n, const double* s, const long long int* lds,
             const double* p, const long long int* ldp, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, double* work, long long int* info );
void dtgevc_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, const double* s, const long long int* lds,
              const double* p, const long long int* ldp, double* vl,
              const long long int* ldvl, double* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, double* work, long long int* info );

void DTGEX2( const long long int* wantq, const long long int* wantz, const long long int* n,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* q, const long long int* ldq, double* z, const long long int* ldz,
             const long long int* j1, const long long int* n1, const long long int* n2,
             double* work, const long long int* lwork, long long int* info );
void DTGEX2_( const long long int* wantq, const long long int* wantz, const long long int* n,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* q, const long long int* ldq, double* z, const long long int* ldz,
              const long long int* j1, const long long int* n1, const long long int* n2,
              double* work, const long long int* lwork, long long int* info );
void dtgex2( const long long int* wantq, const long long int* wantz, const long long int* n,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* q, const long long int* ldq, double* z, const long long int* ldz,
             const long long int* j1, const long long int* n1, const long long int* n2,
             double* work, const long long int* lwork, long long int* info );
void dtgex2_( const long long int* wantq, const long long int* wantz, const long long int* n,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* q, const long long int* ldq, double* z, const long long int* ldz,
              const long long int* j1, const long long int* n1, const long long int* n2,
              double* work, const long long int* lwork, long long int* info );

void DTGEXC( const long long int* wantq, const long long int* wantz, const long long int* n,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* q, const long long int* ldq, double* z, const long long int* ldz,
             long long int* ifst, long long int* ilst, double* work, const long long int* lwork,
             long long int* info );
void DTGEXC_( const long long int* wantq, const long long int* wantz, const long long int* n,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* q, const long long int* ldq, double* z, const long long int* ldz,
              long long int* ifst, long long int* ilst, double* work, const long long int* lwork,
              long long int* info );
void dtgexc( const long long int* wantq, const long long int* wantz, const long long int* n,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* q, const long long int* ldq, double* z, const long long int* ldz,
             long long int* ifst, long long int* ilst, double* work, const long long int* lwork,
             long long int* info );
void dtgexc_( const long long int* wantq, const long long int* wantz, const long long int* n,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* q, const long long int* ldq, double* z, const long long int* ldz,
              long long int* ifst, long long int* ilst, double* work, const long long int* lwork,
              long long int* info );

void DTGSEN( const long long int* ijob, const long long int* wantq, const long long int* wantz,
             const long long int* select, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* alphar,
             double* alphai, double* beta, double* q, const long long int* ldq,
             double* z, const long long int* ldz, long long int* m, double* pl, double* pr,
             double* dif, double* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void DTGSEN_( const long long int* ijob, const long long int* wantq, const long long int* wantz,
              const long long int* select, const long long int* n, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              double* alphar, double* alphai, double* beta, double* q,
              const long long int* ldq, double* z, const long long int* ldz, long long int* m,
              double* pl, double* pr, double* dif, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void dtgsen( const long long int* ijob, const long long int* wantq, const long long int* wantz,
             const long long int* select, const long long int* n, double* a,
             const long long int* lda, double* b, const long long int* ldb, double* alphar,
             double* alphai, double* beta, double* q, const long long int* ldq,
             double* z, const long long int* ldz, long long int* m, double* pl, double* pr,
             double* dif, double* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void dtgsen_( const long long int* ijob, const long long int* wantq, const long long int* wantz,
              const long long int* select, const long long int* n, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              double* alphar, double* alphai, double* beta, double* q,
              const long long int* ldq, double* z, const long long int* ldz, long long int* m,
              double* pl, double* pr, double* dif, double* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void DTGSJA( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             const long long int* k, const long long int* l, double* a, const long long int* lda,
             double* b, const long long int* ldb, const double* tola,
             const double* tolb, double* alpha, double* beta, double* u,
             const long long int* ldu, double* v, const long long int* ldv, double* q,
             const long long int* ldq, double* work, long long int* ncycle,
             long long int* info );
void DTGSJA_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              const long long int* k, const long long int* l, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              const double* tola, const double* tolb, double* alpha,
              double* beta, double* u, const long long int* ldu, double* v,
              const long long int* ldv, double* q, const long long int* ldq, double* work,
              long long int* ncycle, long long int* info );
void dtgsja( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             const long long int* k, const long long int* l, double* a, const long long int* lda,
             double* b, const long long int* ldb, const double* tola,
             const double* tolb, double* alpha, double* beta, double* u,
             const long long int* ldu, double* v, const long long int* ldv, double* q,
             const long long int* ldq, double* work, long long int* ncycle,
             long long int* info );
void dtgsja_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              const long long int* k, const long long int* l, double* a,
              const long long int* lda, double* b, const long long int* ldb,
              const double* tola, const double* tolb, double* alpha,
              double* beta, double* u, const long long int* ldu, double* v,
              const long long int* ldv, double* q, const long long int* ldq, double* work,
              long long int* ncycle, long long int* info );

void DTGSNA( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const double* a, const long long int* lda,
             const double* b, const long long int* ldb, const double* vl,
             const long long int* ldvl, const double* vr, const long long int* ldvr,
             double* s, double* dif, const long long int* mm, long long int* m,
             double* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void DTGSNA_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const double* a, const long long int* lda,
              const double* b, const long long int* ldb, const double* vl,
              const long long int* ldvl, const double* vr, const long long int* ldvr,
              double* s, double* dif, const long long int* mm, long long int* m,
              double* work, const long long int* lwork, long long int* iwork,
              long long int* info );
void dtgsna( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const double* a, const long long int* lda,
             const double* b, const long long int* ldb, const double* vl,
             const long long int* ldvl, const double* vr, const long long int* ldvr,
             double* s, double* dif, const long long int* mm, long long int* m,
             double* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void dtgsna_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const double* a, const long long int* lda,
              const double* b, const long long int* ldb, const double* vl,
              const long long int* ldvl, const double* vr, const long long int* ldvr,
              double* s, double* dif, const long long int* mm, long long int* m,
              double* work, const long long int* lwork, long long int* iwork,
              long long int* info );

void DTGSY2( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const double* a, const long long int* lda,
             const double* b, const long long int* ldb, double* c,
             const long long int* ldc, const double* d, const long long int* ldd,
             const double* e, const long long int* lde, double* f,
             const long long int* ldf, double* scale, double* rdsum, double* rdscal,
             long long int* iwork, long long int* pq, long long int* info );
void DTGSY2_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const double* a, const long long int* lda,
              const double* b, const long long int* ldb, double* c,
              const long long int* ldc, const double* d, const long long int* ldd,
              const double* e, const long long int* lde, double* f,
              const long long int* ldf, double* scale, double* rdsum, double* rdscal,
              long long int* iwork, long long int* pq, long long int* info );
void dtgsy2( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const double* a, const long long int* lda,
             const double* b, const long long int* ldb, double* c,
             const long long int* ldc, const double* d, const long long int* ldd,
             const double* e, const long long int* lde, double* f,
             const long long int* ldf, double* scale, double* rdsum, double* rdscal,
             long long int* iwork, long long int* pq, long long int* info );
void dtgsy2_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const double* a, const long long int* lda,
              const double* b, const long long int* ldb, double* c,
              const long long int* ldc, const double* d, const long long int* ldd,
              const double* e, const long long int* lde, double* f,
              const long long int* ldf, double* scale, double* rdsum, double* rdscal,
              long long int* iwork, long long int* pq, long long int* info );

void DTGSYL( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const double* a, const long long int* lda,
             const double* b, const long long int* ldb, double* c,
             const long long int* ldc, const double* d, const long long int* ldd,
             const double* e, const long long int* lde, double* f,
             const long long int* ldf, double* scale, double* dif, double* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void DTGSYL_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const double* a, const long long int* lda,
              const double* b, const long long int* ldb, double* c,
              const long long int* ldc, const double* d, const long long int* ldd,
              const double* e, const long long int* lde, double* f,
              const long long int* ldf, double* scale, double* dif, double* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void dtgsyl( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const double* a, const long long int* lda,
             const double* b, const long long int* ldb, double* c,
             const long long int* ldc, const double* d, const long long int* ldd,
             const double* e, const long long int* lde, double* f,
             const long long int* ldf, double* scale, double* dif, double* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void dtgsyl_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const double* a, const long long int* lda,
              const double* b, const long long int* ldb, double* c,
              const long long int* ldc, const double* d, const long long int* ldd,
              const double* e, const long long int* lde, double* f,
              const long long int* ldf, double* scale, double* dif, double* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void DTPCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const double* ap, double* rcond, double* work,
             long long int* iwork, long long int* info );
void DTPCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const double* ap, double* rcond, double* work,
              long long int* iwork, long long int* info );
void dtpcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const double* ap, double* rcond, double* work,
             long long int* iwork, long long int* info );
void dtpcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const double* ap, double* rcond, double* work,
              long long int* iwork, long long int* info );

void DTPRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const double* ap,
             const double* b, const long long int* ldb, const double* x,
             const long long int* ldx, double* ferr, double* berr, double* work,
             long long int* iwork, long long int* info );
void DTPRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const double* ap,
              const double* b, const long long int* ldb, const double* x,
              const long long int* ldx, double* ferr, double* berr, double* work,
              long long int* iwork, long long int* info );
void dtprfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const double* ap,
             const double* b, const long long int* ldb, const double* x,
             const long long int* ldx, double* ferr, double* berr, double* work,
             long long int* iwork, long long int* info );
void dtprfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const double* ap,
              const double* b, const long long int* ldb, const double* x,
              const long long int* ldx, double* ferr, double* berr, double* work,
              long long int* iwork, long long int* info );

void DTPTRI( const char* uplo, const char* diag, const long long int* n, double* ap,
             long long int* info );
void DTPTRI_( const char* uplo, const char* diag, const long long int* n, double* ap,
              long long int* info );
void dtptri( const char* uplo, const char* diag, const long long int* n, double* ap,
             long long int* info );
void dtptri_( const char* uplo, const char* diag, const long long int* n, double* ap,
              long long int* info );

void DTPTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const double* ap,
             double* b, const long long int* ldb, long long int* info );
void DTPTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const double* ap,
              double* b, const long long int* ldb, long long int* info );
void dtptrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const double* ap,
             double* b, const long long int* ldb, long long int* info );
void dtptrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const double* ap,
              double* b, const long long int* ldb, long long int* info );

void DTPTTF( const char* transr, const char* uplo, const long long int* n,
             const double* ap, double* arf, long long int* info );
void DTPTTF_( const char* transr, const char* uplo, const long long int* n,
              const double* ap, double* arf, long long int* info );
void dtpttf( const char* transr, const char* uplo, const long long int* n,
             const double* ap, double* arf, long long int* info );
void dtpttf_( const char* transr, const char* uplo, const long long int* n,
              const double* ap, double* arf, long long int* info );

void DTPTTR( const char* uplo, const long long int* n, const double* ap, double* a,
             const long long int* lda, long long int* info );
void DTPTTR_( const char* uplo, const long long int* n, const double* ap, double* a,
              const long long int* lda, long long int* info );
void dtpttr( const char* uplo, const long long int* n, const double* ap, double* a,
             const long long int* lda, long long int* info );
void dtpttr_( const char* uplo, const long long int* n, const double* ap, double* a,
              const long long int* lda, long long int* info );

void DTRCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const double* a, const long long int* lda,
             double* rcond, double* work, long long int* iwork, long long int* info );
void DTRCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const double* a, const long long int* lda,
              double* rcond, double* work, long long int* iwork, long long int* info );
void dtrcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const double* a, const long long int* lda,
             double* rcond, double* work, long long int* iwork, long long int* info );
void dtrcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const double* a, const long long int* lda,
              double* rcond, double* work, long long int* iwork, long long int* info );

void DTREVC( const char* side, const char* howmny, long long int* select,
             const long long int* n, const double* t, const long long int* ldt, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, double* work, long long int* info );
void DTREVC_( const char* side, const char* howmny, long long int* select,
              const long long int* n, const double* t, const long long int* ldt,
              double* vl, const long long int* ldvl, double* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, double* work, long long int* info );
void dtrevc( const char* side, const char* howmny, long long int* select,
             const long long int* n, const double* t, const long long int* ldt, double* vl,
             const long long int* ldvl, double* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, double* work, long long int* info );
void dtrevc_( const char* side, const char* howmny, long long int* select,
              const long long int* n, const double* t, const long long int* ldt,
              double* vl, const long long int* ldvl, double* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, double* work, long long int* info );

void DTREXC( const char* compq, const long long int* n, double* t,
             const long long int* ldt, double* q, const long long int* ldq, long long int* ifst,
             long long int* ilst, double* work, long long int* info );
void DTREXC_( const char* compq, const long long int* n, double* t,
              const long long int* ldt, double* q, const long long int* ldq, long long int* ifst,
              long long int* ilst, double* work, long long int* info );
void dtrexc( const char* compq, const long long int* n, double* t,
             const long long int* ldt, double* q, const long long int* ldq, long long int* ifst,
             long long int* ilst, double* work, long long int* info );
void dtrexc_( const char* compq, const long long int* n, double* t,
              const long long int* ldt, double* q, const long long int* ldq, long long int* ifst,
              long long int* ilst, double* work, long long int* info );

void DTRRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const double* a,
             const long long int* lda, const double* b, const long long int* ldb,
             const double* x, const long long int* ldx, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void DTRRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const double* a,
              const long long int* lda, const double* b, const long long int* ldb,
              const double* x, const long long int* ldx, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );
void dtrrfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const double* a,
             const long long int* lda, const double* b, const long long int* ldb,
             const double* x, const long long int* ldx, double* ferr, double* berr,
             double* work, long long int* iwork, long long int* info );
void dtrrfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const double* a,
              const long long int* lda, const double* b, const long long int* ldb,
              const double* x, const long long int* ldx, double* ferr, double* berr,
              double* work, long long int* iwork, long long int* info );

void DTRSEN( const char* job, const char* compq, const long long int* select,
             const long long int* n, double* t, const long long int* ldt, double* q,
             const long long int* ldq, double* wr, double* wi, long long int* m, double* s,
             double* sep, double* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void DTRSEN_( const char* job, const char* compq, const long long int* select,
              const long long int* n, double* t, const long long int* ldt, double* q,
              const long long int* ldq, double* wr, double* wi, long long int* m,
              double* s, double* sep, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void dtrsen( const char* job, const char* compq, const long long int* select,
             const long long int* n, double* t, const long long int* ldt, double* q,
             const long long int* ldq, double* wr, double* wi, long long int* m, double* s,
             double* sep, double* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void dtrsen_( const char* job, const char* compq, const long long int* select,
              const long long int* n, double* t, const long long int* ldt, double* q,
              const long long int* ldq, double* wr, double* wi, long long int* m,
              double* s, double* sep, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void DTRSNA( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const double* t, const long long int* ldt,
             const double* vl, const long long int* ldvl, const double* vr,
             const long long int* ldvr, double* s, double* sep, const long long int* mm,
             long long int* m, double* work, const long long int* ldwork, long long int* iwork,
             long long int* info );
void DTRSNA_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const double* t, const long long int* ldt,
              const double* vl, const long long int* ldvl, const double* vr,
              const long long int* ldvr, double* s, double* sep, const long long int* mm,
              long long int* m, double* work, const long long int* ldwork, long long int* iwork,
              long long int* info );
void dtrsna( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const double* t, const long long int* ldt,
             const double* vl, const long long int* ldvl, const double* vr,
             const long long int* ldvr, double* s, double* sep, const long long int* mm,
             long long int* m, double* work, const long long int* ldwork, long long int* iwork,
             long long int* info );
void dtrsna_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const double* t, const long long int* ldt,
              const double* vl, const long long int* ldvl, const double* vr,
              const long long int* ldvr, double* s, double* sep, const long long int* mm,
              long long int* m, double* work, const long long int* ldwork, long long int* iwork,
              long long int* info );

void DTRSYL( const char* trana, const char* tranb, const long long int* isgn,
             const long long int* m, const long long int* n, const double* a,
             const long long int* lda, const double* b, const long long int* ldb,
             double* c, const long long int* ldc, double* scale, long long int* info );
void DTRSYL_( const char* trana, const char* tranb, const long long int* isgn,
              const long long int* m, const long long int* n, const double* a,
              const long long int* lda, const double* b, const long long int* ldb,
              double* c, const long long int* ldc, double* scale, long long int* info );
void dtrsyl( const char* trana, const char* tranb, const long long int* isgn,
             const long long int* m, const long long int* n, const double* a,
             const long long int* lda, const double* b, const long long int* ldb,
             double* c, const long long int* ldc, double* scale, long long int* info );
void dtrsyl_( const char* trana, const char* tranb, const long long int* isgn,
              const long long int* m, const long long int* n, const double* a,
              const long long int* lda, const double* b, const long long int* ldb,
              double* c, const long long int* ldc, double* scale, long long int* info );

void DTRTI2( const char* uplo, const char* diag, const long long int* n, double* a,
             const long long int* lda, long long int* info );
void DTRTI2_( const char* uplo, const char* diag, const long long int* n, double* a,
              const long long int* lda, long long int* info );
void dtrti2( const char* uplo, const char* diag, const long long int* n, double* a,
             const long long int* lda, long long int* info );
void dtrti2_( const char* uplo, const char* diag, const long long int* n, double* a,
              const long long int* lda, long long int* info );

void DTRTRI( const char* uplo, const char* diag, const long long int* n, double* a,
             const long long int* lda, long long int* info );
void DTRTRI_( const char* uplo, const char* diag, const long long int* n, double* a,
              const long long int* lda, long long int* info );
void dtrtri( const char* uplo, const char* diag, const long long int* n, double* a,
             const long long int* lda, long long int* info );
void dtrtri_( const char* uplo, const char* diag, const long long int* n, double* a,
              const long long int* lda, long long int* info );

void DTRTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const double* a,
             const long long int* lda, double* b, const long long int* ldb,
             long long int* info );
void DTRTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const double* a,
              const long long int* lda, double* b, const long long int* ldb,
              long long int* info );
void dtrtrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const double* a,
             const long long int* lda, double* b, const long long int* ldb,
             long long int* info );
void dtrtrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const double* a,
              const long long int* lda, double* b, const long long int* ldb,
              long long int* info );

void DTRTTF( const char* transr, const char* uplo, const long long int* n,
             const double* a, const long long int* lda, double* arf, long long int* info );
void DTRTTF_( const char* transr, const char* uplo, const long long int* n,
              const double* a, const long long int* lda, double* arf,
              long long int* info );
void dtrttf( const char* transr, const char* uplo, const long long int* n,
             const double* a, const long long int* lda, double* arf, long long int* info );
void dtrttf_( const char* transr, const char* uplo, const long long int* n,
              const double* a, const long long int* lda, double* arf,
              long long int* info );

void DTRTTP( const char* uplo, const long long int* n, const double* a,
             const long long int* lda, double* ap, long long int* info );
void DTRTTP_( const char* uplo, const long long int* n, const double* a,
              const long long int* lda, double* ap, long long int* info );
void dtrttp( const char* uplo, const long long int* n, const double* a,
             const long long int* lda, double* ap, long long int* info );
void dtrttp_( const char* uplo, const long long int* n, const double* a,
              const long long int* lda, double* ap, long long int* info );

void DTZRQF( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, long long int* info );
void DTZRQF_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, long long int* info );
void dtzrqf( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, long long int* info );
void dtzrqf_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, long long int* info );

void DTZRZF( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void DTZRZF_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );
void dtzrzf( const long long int* m, const long long int* n, double* a, const long long int* lda,
             double* tau, double* work, const long long int* lwork, long long int* info );
void dtzrzf_( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* tau, double* work,
              const long long int* lwork, long long int* info );

double DZSUM1( const long long int* n, const MKL_Complex16* cx,
               const long long int* incx );
double DZSUM1_( const long long int* n, const MKL_Complex16* cx,
                const long long int* incx );
double dzsum1( const long long int* n, const MKL_Complex16* cx,
               const long long int* incx );
double dzsum1_( const long long int* n, const MKL_Complex16* cx,
                const long long int* incx );

long long int ICMAX1( const long long int* n, const MKL_Complex8* cx,
                const long long int* incx );
long long int ICMAX1_( const long long int* n, const MKL_Complex8* cx,
                 const long long int* incx );
long long int icmax1( const long long int* n, const MKL_Complex8* cx,
                const long long int* incx );
long long int icmax1_( const long long int* n, const MKL_Complex8* cx,
                 const long long int* incx );

long long int IEEECK( const long long int* ispec, const float* zero, const float* one );
long long int IEEECK_( const long long int* ispec, const float* zero, const float* one );
long long int ieeeck( const long long int* ispec, const float* zero, const float* one );
long long int ieeeck_( const long long int* ispec, const float* zero, const float* one );

long long int ILACLC( const long long int* m, const long long int* n, const MKL_Complex8* a,
                const long long int* lda );
long long int ILACLC_( const long long int* m, const long long int* n, const MKL_Complex8* a,
                 const long long int* lda );
long long int ilaclc( const long long int* m, const long long int* n, const MKL_Complex8* a,
                const long long int* lda );
long long int ilaclc_( const long long int* m, const long long int* n, const MKL_Complex8* a,
                 const long long int* lda );

long long int ILACLR( const long long int* m, const long long int* n, const MKL_Complex8* a,
                const long long int* lda );
long long int ILACLR_( const long long int* m, const long long int* n, const MKL_Complex8* a,
                 const long long int* lda );
long long int ilaclr( const long long int* m, const long long int* n, const MKL_Complex8* a,
                const long long int* lda );
long long int ilaclr_( const long long int* m, const long long int* n, const MKL_Complex8* a,
                 const long long int* lda );

long long int ILADIAG( const char* diag );
long long int ILADIAG_( const char* diag );
long long int iladiag( const char* diag );
long long int iladiag_( const char* diag );

long long int ILADLC( const long long int* m, const long long int* n, const double* a,
                const long long int* lda );
long long int ILADLC_( const long long int* m, const long long int* n, const double* a,
                 const long long int* lda );
long long int iladlc( const long long int* m, const long long int* n, const double* a,
                const long long int* lda );
long long int iladlc_( const long long int* m, const long long int* n, const double* a,
                 const long long int* lda );

long long int ILADLR( const long long int* m, const long long int* n, const double* a,
                const long long int* lda );
long long int ILADLR_( const long long int* m, const long long int* n, const double* a,
                 const long long int* lda );
long long int iladlr( const long long int* m, const long long int* n, const double* a,
                const long long int* lda );
long long int iladlr_( const long long int* m, const long long int* n, const double* a,
                 const long long int* lda );

long long int ILAENV( const long long int* ispec, const char* name, const char* opts,
                const long long int* n1, const long long int* n2, const long long int* n3,
                const long long int* n4 );
long long int ILAENV_( const long long int* ispec, const char* name, const char* opts,
                 const long long int* n1, const long long int* n2, const long long int* n3,
                 const long long int* n4 );
long long int ilaenv( const long long int* ispec, const char* name, const char* opts,
                const long long int* n1, const long long int* n2, const long long int* n3,
                const long long int* n4 );
long long int ilaenv_( const long long int* ispec, const char* name, const char* opts,
                 const long long int* n1, const long long int* n2, const long long int* n3,
                 const long long int* n4 );

long long int ILAPREC( const char* prec );
long long int ILAPREC_( const char* prec );
long long int ilaprec( const char* prec );
long long int ilaprec_( const char* prec );

long long int ILASLC( const long long int* m, const long long int* n, const float* a,
                const long long int* lda );
long long int ILASLC_( const long long int* m, const long long int* n, const float* a,
                 const long long int* lda );
long long int ilaslc( const long long int* m, const long long int* n, const float* a,
                const long long int* lda );
long long int ilaslc_( const long long int* m, const long long int* n, const float* a,
                 const long long int* lda );

long long int ILASLR( const long long int* m, const long long int* n, const float* a,
                const long long int* lda );
long long int ILASLR_( const long long int* m, const long long int* n, const float* a,
                 const long long int* lda );
long long int ilaslr( const long long int* m, const long long int* n, const float* a,
                const long long int* lda );
long long int ilaslr_( const long long int* m, const long long int* n, const float* a,
                 const long long int* lda );

long long int ILATRANS( const char* trans );
long long int ILATRANS_( const char* trans );
long long int ilatrans( const char* trans );
long long int ilatrans_( const char* trans );

long long int ILAUPLO( const char* uplo );
long long int ILAUPLO_( const char* uplo );
long long int ilauplo( const char* uplo );
long long int ilauplo_( const char* uplo );

void ILAVER( long long int* vers_major, long long int* vers_minor, long long int* vers_patch );
void ILAVER_( long long int* vers_major, long long int* vers_minor, long long int* vers_patch );
void ilaver( long long int* vers_major, long long int* vers_minor, long long int* vers_patch );
void ilaver_( long long int* vers_major, long long int* vers_minor, long long int* vers_patch );

long long int ILAZLC( const long long int* m, const long long int* n, const MKL_Complex16* a,
                const long long int* lda );
long long int ILAZLC_( const long long int* m, const long long int* n, const MKL_Complex16* a,
                 const long long int* lda );
long long int ilazlc( const long long int* m, const long long int* n, const MKL_Complex16* a,
                const long long int* lda );
long long int ilazlc_( const long long int* m, const long long int* n, const MKL_Complex16* a,
                 const long long int* lda );

long long int ILAZLR( const long long int* m, const long long int* n, const MKL_Complex16* a,
                const long long int* lda );
long long int ILAZLR_( const long long int* m, const long long int* n, const MKL_Complex16* a,
                 const long long int* lda );
long long int ilazlr( const long long int* m, const long long int* n, const MKL_Complex16* a,
                const long long int* lda );
long long int ilazlr_( const long long int* m, const long long int* n, const MKL_Complex16* a,
                 const long long int* lda );

long long int IPARMQ( const long long int* ispec, const char* name, const char* opts,
                const long long int* n, const long long int* ilo, const long long int* ihi,
                const long long int* lwork );
long long int IPARMQ_( const long long int* ispec, const char* name, const char* opts,
                 const long long int* n, const long long int* ilo, const long long int* ihi,
                 const long long int* lwork );
long long int iparmq( const long long int* ispec, const char* name, const char* opts,
                const long long int* n, const long long int* ilo, const long long int* ihi,
                const long long int* lwork );
long long int iparmq_( const long long int* ispec, const char* name, const char* opts,
                 const long long int* n, const long long int* ilo, const long long int* ihi,
                 const long long int* lwork );

long long int IZMAX1( const long long int* n, const MKL_Complex16* cx,
                const long long int* incx );
long long int IZMAX1_( const long long int* n, const MKL_Complex16* cx,
                 const long long int* incx );
long long int izmax1( const long long int* n, const MKL_Complex16* cx,
                const long long int* incx );
long long int izmax1_( const long long int* n, const MKL_Complex16* cx,
                 const long long int* incx );

long long int LSAMEN( const long long int* n, const char* ca, const char* cb );
long long int LSAMEN_( const long long int* n, const char* ca, const char* cb );
long long int lsamen( const long long int* n, const char* ca, const char* cb );
long long int lsamen_( const long long int* n, const char* ca, const char* cb );

void SBDSDC( const char* uplo, const char* compq, const long long int* n, float* d,
             float* e, float* u, const long long int* ldu, float* vt,
             const long long int* ldvt, float* q, long long int* iq, float* work,
             long long int* iwork, long long int* info );
void SBDSDC_( const char* uplo, const char* compq, const long long int* n, float* d,
              float* e, float* u, const long long int* ldu, float* vt,
              const long long int* ldvt, float* q, long long int* iq, float* work,
              long long int* iwork, long long int* info );
void sbdsdc( const char* uplo, const char* compq, const long long int* n, float* d,
             float* e, float* u, const long long int* ldu, float* vt,
             const long long int* ldvt, float* q, long long int* iq, float* work,
             long long int* iwork, long long int* info );
void sbdsdc_( const char* uplo, const char* compq, const long long int* n, float* d,
              float* e, float* u, const long long int* ldu, float* vt,
              const long long int* ldvt, float* q, long long int* iq, float* work,
              long long int* iwork, long long int* info );

void SBDSQR( const char* uplo, const long long int* n, const long long int* ncvt,
             const long long int* nru, const long long int* ncc, float* d, float* e,
             float* vt, const long long int* ldvt, float* u, const long long int* ldu,
             float* c, const long long int* ldc, float* work, long long int* info );
void SBDSQR_( const char* uplo, const long long int* n, const long long int* ncvt,
              const long long int* nru, const long long int* ncc, float* d, float* e,
              float* vt, const long long int* ldvt, float* u, const long long int* ldu,
              float* c, const long long int* ldc, float* work, long long int* info );
void sbdsqr( const char* uplo, const long long int* n, const long long int* ncvt,
             const long long int* nru, const long long int* ncc, float* d, float* e,
             float* vt, const long long int* ldvt, float* u, const long long int* ldu,
             float* c, const long long int* ldc, float* work, long long int* info );
void sbdsqr_( const char* uplo, const long long int* n, const long long int* ncvt,
              const long long int* nru, const long long int* ncc, float* d, float* e,
              float* vt, const long long int* ldvt, float* u, const long long int* ldu,
              float* c, const long long int* ldc, float* work, long long int* info );

float SCSUM1( const long long int* n, const MKL_Complex8* cx, const long long int* incx );
float SCSUM1_( const long long int* n, const MKL_Complex8* cx, const long long int* incx );
float scsum1( const long long int* n, const MKL_Complex8* cx, const long long int* incx );
float scsum1_( const long long int* n, const MKL_Complex8* cx, const long long int* incx );

void SDISNA( const char* job, const long long int* m, const long long int* n,
             const float* d, float* sep, long long int* info );
void SDISNA_( const char* job, const long long int* m, const long long int* n,
              const float* d, float* sep, long long int* info );
void sdisna( const char* job, const long long int* m, const long long int* n,
             const float* d, float* sep, long long int* info );
void sdisna_( const char* job, const long long int* m, const long long int* n,
              const float* d, float* sep, long long int* info );

float SECOND( void );
float SECOND_( void );
float second( void );
float second_( void );

void SGBBRD( const char* vect, const long long int* m, const long long int* n,
             const long long int* ncc, const long long int* kl, const long long int* ku,
             float* ab, const long long int* ldab, float* d, float* e, float* q,
             const long long int* ldq, float* pt, const long long int* ldpt, float* c,
             const long long int* ldc, float* work, long long int* info );
void SGBBRD_( const char* vect, const long long int* m, const long long int* n,
              const long long int* ncc, const long long int* kl, const long long int* ku,
              float* ab, const long long int* ldab, float* d, float* e, float* q,
              const long long int* ldq, float* pt, const long long int* ldpt, float* c,
              const long long int* ldc, float* work, long long int* info );
void sgbbrd( const char* vect, const long long int* m, const long long int* n,
             const long long int* ncc, const long long int* kl, const long long int* ku,
             float* ab, const long long int* ldab, float* d, float* e, float* q,
             const long long int* ldq, float* pt, const long long int* ldpt, float* c,
             const long long int* ldc, float* work, long long int* info );
void sgbbrd_( const char* vect, const long long int* m, const long long int* n,
              const long long int* ncc, const long long int* kl, const long long int* ku,
              float* ab, const long long int* ldab, float* d, float* e, float* q,
              const long long int* ldq, float* pt, const long long int* ldpt, float* c,
              const long long int* ldc, float* work, long long int* info );

void SGBCON( const char* norm, const long long int* n, const long long int* kl,
             const long long int* ku, const float* ab, const long long int* ldab,
             const long long int* ipiv, const float* anorm, float* rcond,
             float* work, long long int* iwork, long long int* info );
void SGBCON_( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const float* ab, const long long int* ldab,
              const long long int* ipiv, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );
void sgbcon( const char* norm, const long long int* n, const long long int* kl,
             const long long int* ku, const float* ab, const long long int* ldab,
             const long long int* ipiv, const float* anorm, float* rcond,
             float* work, long long int* iwork, long long int* info );
void sgbcon_( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const float* ab, const long long int* ldab,
              const long long int* ipiv, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );

void SGBEQUB( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const float* ab, const long long int* ldab,
              float* r, float* c, float* rowcnd, float* colcnd, float* amax,
              long long int* info );
void SGBEQUB_( const long long int* m, const long long int* n, const long long int* kl,
               const long long int* ku, const float* ab, const long long int* ldab,
               float* r, float* c, float* rowcnd, float* colcnd, float* amax,
               long long int* info );
void sgbequb( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const float* ab, const long long int* ldab,
              float* r, float* c, float* rowcnd, float* colcnd, float* amax,
              long long int* info );
void sgbequb_( const long long int* m, const long long int* n, const long long int* kl,
               const long long int* ku, const float* ab, const long long int* ldab,
               float* r, float* c, float* rowcnd, float* colcnd, float* amax,
               long long int* info );

void SGBEQU( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const float* ab, const long long int* ldab, float* r,
             float* c, float* rowcnd, float* colcnd, float* amax,
             long long int* info );
void SGBEQU_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const float* ab, const long long int* ldab,
              float* r, float* c, float* rowcnd, float* colcnd, float* amax,
              long long int* info );
void sgbequ( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const float* ab, const long long int* ldab, float* r,
             float* c, float* rowcnd, float* colcnd, float* amax,
             long long int* info );
void sgbequ_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const float* ab, const long long int* ldab,
              float* r, float* c, float* rowcnd, float* colcnd, float* amax,
              long long int* info );

void SGBRFS( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const float* ab,
             const long long int* ldab, const float* afb, const long long int* ldafb,
             const long long int* ipiv, const float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void SGBRFS_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const float* ab,
              const long long int* ldab, const float* afb, const long long int* ldafb,
              const long long int* ipiv, const float* b, const long long int* ldb,
              float* x, const long long int* ldx, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );
void sgbrfs( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const float* ab,
             const long long int* ldab, const float* afb, const long long int* ldafb,
             const long long int* ipiv, const float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void sgbrfs_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const float* ab,
              const long long int* ldab, const float* afb, const long long int* ldafb,
              const long long int* ipiv, const float* b, const long long int* ldb,
              float* x, const long long int* ldx, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );

void SGBRFSX( const char* trans, const char* equed, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              const float* ab, const long long int* ldab, const float* afb,
              const long long int* ldafb, const long long int* ipiv, const float* r,
              const float* c, const float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void SGBRFSX_( const char* trans, const char* equed, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               const float* ab, const long long int* ldab, const float* afb,
               const long long int* ldafb, const long long int* ipiv, const float* r,
               const float* c, const float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );
void sgbrfsx( const char* trans, const char* equed, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              const float* ab, const long long int* ldab, const float* afb,
              const long long int* ldafb, const long long int* ipiv, const float* r,
              const float* c, const float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void sgbrfsx_( const char* trans, const char* equed, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               const float* ab, const long long int* ldab, const float* afb,
               const long long int* ldafb, const long long int* ipiv, const float* r,
               const float* c, const float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );

void SGBSV( const long long int* n, const long long int* kl, const long long int* ku,
            const long long int* nrhs, float* ab, const long long int* ldab, long long int* ipiv,
            float* b, const long long int* ldb, long long int* info );
void SGBSV_( const long long int* n, const long long int* kl, const long long int* ku,
             const long long int* nrhs, float* ab, const long long int* ldab,
             long long int* ipiv, float* b, const long long int* ldb, long long int* info );
void sgbsv( const long long int* n, const long long int* kl, const long long int* ku,
            const long long int* nrhs, float* ab, const long long int* ldab, long long int* ipiv,
            float* b, const long long int* ldb, long long int* info );
void sgbsv_( const long long int* n, const long long int* kl, const long long int* ku,
             const long long int* nrhs, float* ab, const long long int* ldab,
             long long int* ipiv, float* b, const long long int* ldb, long long int* info );

void SGBSVX( const char* fact, const char* trans, const long long int* n,
             const long long int* kl, const long long int* ku, const long long int* nrhs,
             float* ab, const long long int* ldab, float* afb, const long long int* ldafb,
             long long int* ipiv, char* equed, float* r, float* c, float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* rcond,
             float* ferr, float* berr, float* work, long long int* iwork,
             long long int* info );
void SGBSVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              float* ab, const long long int* ldab, float* afb, const long long int* ldafb,
              long long int* ipiv, char* equed, float* r, float* c, float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* ferr, float* berr, float* work, long long int* iwork,
              long long int* info );
void sgbsvx( const char* fact, const char* trans, const long long int* n,
             const long long int* kl, const long long int* ku, const long long int* nrhs,
             float* ab, const long long int* ldab, float* afb, const long long int* ldafb,
             long long int* ipiv, char* equed, float* r, float* c, float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* rcond,
             float* ferr, float* berr, float* work, long long int* iwork,
             long long int* info );
void sgbsvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              float* ab, const long long int* ldab, float* afb, const long long int* ldafb,
              long long int* ipiv, char* equed, float* r, float* c, float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* ferr, float* berr, float* work, long long int* iwork,
              long long int* info );

void SGBSVXX( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              float* ab, const long long int* ldab, float* afb, const long long int* ldafb,
              long long int* ipiv, char* equed, float* r, float* c, float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* rpvgrw, float* berr, const long long int* n_err_bnds,
              float* err_bnds_norm, float* err_bnds_comp,
              const long long int* nparams, float* params, float* work,
              long long int* iwork, long long int* info );
void SGBSVXX_( const char* fact, const char* trans, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               float* ab, const long long int* ldab, float* afb,
               const long long int* ldafb, long long int* ipiv, char* equed, float* r,
               float* c, float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );
void sgbsvxx( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              float* ab, const long long int* ldab, float* afb, const long long int* ldafb,
              long long int* ipiv, char* equed, float* r, float* c, float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* rpvgrw, float* berr, const long long int* n_err_bnds,
              float* err_bnds_norm, float* err_bnds_comp,
              const long long int* nparams, float* params, float* work,
              long long int* iwork, long long int* info );
void sgbsvxx_( const char* fact, const char* trans, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               float* ab, const long long int* ldab, float* afb,
               const long long int* ldafb, long long int* ipiv, char* equed, float* r,
               float* c, float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );

void SGBTF2( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, float* ab, const long long int* ldab, long long int* ipiv,
             long long int* info );
void SGBTF2_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, float* ab, const long long int* ldab, long long int* ipiv,
              long long int* info );
void sgbtf2( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, float* ab, const long long int* ldab, long long int* ipiv,
             long long int* info );
void sgbtf2_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, float* ab, const long long int* ldab, long long int* ipiv,
              long long int* info );

void SGBTRF( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, float* ab, const long long int* ldab, long long int* ipiv,
             long long int* info );
void SGBTRF_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, float* ab, const long long int* ldab, long long int* ipiv,
              long long int* info );
void sgbtrf( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, float* ab, const long long int* ldab, long long int* ipiv,
             long long int* info );
void sgbtrf_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, float* ab, const long long int* ldab, long long int* ipiv,
              long long int* info );

void SGBTRS( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const float* ab,
             const long long int* ldab, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void SGBTRS_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const float* ab,
              const long long int* ldab, const long long int* ipiv, float* b,
              const long long int* ldb, long long int* info );
void sgbtrs( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const float* ab,
             const long long int* ldab, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void sgbtrs_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const float* ab,
              const long long int* ldab, const long long int* ipiv, float* b,
              const long long int* ldb, long long int* info );

void SGEBAK( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const float* scale,
             const long long int* m, float* v, const long long int* ldv, long long int* info );
void SGEBAK_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const float* scale,
              const long long int* m, float* v, const long long int* ldv, long long int* info );
void sgebak( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const float* scale,
             const long long int* m, float* v, const long long int* ldv, long long int* info );
void sgebak_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const float* scale,
              const long long int* m, float* v, const long long int* ldv, long long int* info );

void SGEBAL( const char* job, const long long int* n, float* a, const long long int* lda,
             long long int* ilo, long long int* ihi, float* scale, long long int* info );
void SGEBAL_( const char* job, const long long int* n, float* a, const long long int* lda,
              long long int* ilo, long long int* ihi, float* scale, long long int* info );
void sgebal( const char* job, const long long int* n, float* a, const long long int* lda,
             long long int* ilo, long long int* ihi, float* scale, long long int* info );
void sgebal_( const char* job, const long long int* n, float* a, const long long int* lda,
              long long int* ilo, long long int* ihi, float* scale, long long int* info );

void SGEBD2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* d, float* e, float* tauq, float* taup, float* work,
             long long int* info );
void SGEBD2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* d, float* e, float* tauq, float* taup, float* work,
              long long int* info );
void sgebd2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* d, float* e, float* tauq, float* taup, float* work,
             long long int* info );
void sgebd2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* d, float* e, float* tauq, float* taup, float* work,
              long long int* info );

void SGEBRD( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* d, float* e, float* tauq, float* taup, float* work,
             const long long int* lwork, long long int* info );
void SGEBRD_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* d, float* e, float* tauq, float* taup, float* work,
              const long long int* lwork, long long int* info );
void sgebrd( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* d, float* e, float* tauq, float* taup, float* work,
             const long long int* lwork, long long int* info );
void sgebrd_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* d, float* e, float* tauq, float* taup, float* work,
              const long long int* lwork, long long int* info );

void SGECON( const char* norm, const long long int* n, const float* a,
             const long long int* lda, const float* anorm, float* rcond, float* work,
             long long int* iwork, long long int* info );
void SGECON_( const char* norm, const long long int* n, const float* a,
              const long long int* lda, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );
void sgecon( const char* norm, const long long int* n, const float* a,
             const long long int* lda, const float* anorm, float* rcond, float* work,
             long long int* iwork, long long int* info );
void sgecon_( const char* norm, const long long int* n, const float* a,
              const long long int* lda, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );

void SGEEQUB( const long long int* m, const long long int* n, const float* a,
              const long long int* lda, float* r, float* c, float* rowcnd,
              float* colcnd, float* amax, long long int* info );
void SGEEQUB_( const long long int* m, const long long int* n, const float* a,
               const long long int* lda, float* r, float* c, float* rowcnd,
               float* colcnd, float* amax, long long int* info );
void sgeequb( const long long int* m, const long long int* n, const float* a,
              const long long int* lda, float* r, float* c, float* rowcnd,
              float* colcnd, float* amax, long long int* info );
void sgeequb_( const long long int* m, const long long int* n, const float* a,
               const long long int* lda, float* r, float* c, float* rowcnd,
               float* colcnd, float* amax, long long int* info );

void SGEEQU( const long long int* m, const long long int* n, const float* a,
             const long long int* lda, float* r, float* c, float* rowcnd,
             float* colcnd, float* amax, long long int* info );
void SGEEQU_( const long long int* m, const long long int* n, const float* a,
              const long long int* lda, float* r, float* c, float* rowcnd,
              float* colcnd, float* amax, long long int* info );
void sgeequ( const long long int* m, const long long int* n, const float* a,
             const long long int* lda, float* r, float* c, float* rowcnd,
             float* colcnd, float* amax, long long int* info );
void sgeequ_( const long long int* m, const long long int* n, const float* a,
              const long long int* lda, float* r, float* c, float* rowcnd,
              float* colcnd, float* amax, long long int* info );

void SGEES( const char* jobvs, const char* sort,
            MKL_S_SELECT_FUNCTION_2 select, const long long int* n, float* a,
            const long long int* lda, long long int* sdim, float* wr, float* wi, float* vs,
            const long long int* ldvs, float* work, const long long int* lwork,
            long long int* bwork, long long int* info );
void SGEES_( const char* jobvs, const char* sort,
             MKL_S_SELECT_FUNCTION_2 select, const long long int* n, float* a,
             const long long int* lda, long long int* sdim, float* wr, float* wi,
             float* vs, const long long int* ldvs, float* work, const long long int* lwork,
             long long int* bwork, long long int* info );
void sgees( const char* jobvs, const char* sort,
            MKL_S_SELECT_FUNCTION_2 select, const long long int* n, float* a,
            const long long int* lda, long long int* sdim, float* wr, float* wi, float* vs,
            const long long int* ldvs, float* work, const long long int* lwork,
            long long int* bwork, long long int* info );
void sgees_( const char* jobvs, const char* sort,
             MKL_S_SELECT_FUNCTION_2 select, const long long int* n, float* a,
             const long long int* lda, long long int* sdim, float* wr, float* wi,
             float* vs, const long long int* ldvs, float* work, const long long int* lwork,
             long long int* bwork, long long int* info );

void SGEESX( const char* jobvs, const char* sort,
             MKL_S_SELECT_FUNCTION_2 select, const char* sense,
             const long long int* n, float* a, const long long int* lda, long long int* sdim,
             float* wr, float* wi, float* vs, const long long int* ldvs,
             float* rconde, float* rcondv, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* bwork,
             long long int* info );
void SGEESX_( const char* jobvs, const char* sort,
              MKL_S_SELECT_FUNCTION_2 select, const char* sense,
              const long long int* n, float* a, const long long int* lda, long long int* sdim,
              float* wr, float* wi, float* vs, const long long int* ldvs,
              float* rconde, float* rcondv, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* bwork,
              long long int* info );
void sgeesx( const char* jobvs, const char* sort,
             MKL_S_SELECT_FUNCTION_2 select, const char* sense,
             const long long int* n, float* a, const long long int* lda, long long int* sdim,
             float* wr, float* wi, float* vs, const long long int* ldvs,
             float* rconde, float* rcondv, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* bwork,
             long long int* info );
void sgeesx_( const char* jobvs, const char* sort,
              MKL_S_SELECT_FUNCTION_2 select, const char* sense,
              const long long int* n, float* a, const long long int* lda, long long int* sdim,
              float* wr, float* wi, float* vs, const long long int* ldvs,
              float* rconde, float* rcondv, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* bwork,
              long long int* info );

void SGEEV( const char* jobvl, const char* jobvr, const long long int* n, float* a,
            const long long int* lda, float* wr, float* wi, float* vl,
            const long long int* ldvl, float* vr, const long long int* ldvr, float* work,
            const long long int* lwork, long long int* info );
void SGEEV_( const char* jobvl, const char* jobvr, const long long int* n, float* a,
             const long long int* lda, float* wr, float* wi, float* vl,
             const long long int* ldvl, float* vr, const long long int* ldvr, float* work,
             const long long int* lwork, long long int* info );
void sgeev( const char* jobvl, const char* jobvr, const long long int* n, float* a,
            const long long int* lda, float* wr, float* wi, float* vl,
            const long long int* ldvl, float* vr, const long long int* ldvr, float* work,
            const long long int* lwork, long long int* info );
void sgeev_( const char* jobvl, const char* jobvr, const long long int* n, float* a,
             const long long int* lda, float* wr, float* wi, float* vl,
             const long long int* ldvl, float* vr, const long long int* ldvr, float* work,
             const long long int* lwork, long long int* info );

void SGEEVX( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, float* a, const long long int* lda,
             float* wr, float* wi, float* vl, const long long int* ldvl, float* vr,
             const long long int* ldvr, long long int* ilo, long long int* ihi, float* scale,
             float* abnrm, float* rconde, float* rcondv, float* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void SGEEVX_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, float* a,
              const long long int* lda, float* wr, float* wi, float* vl,
              const long long int* ldvl, float* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, float* scale, float* abnrm,
              float* rconde, float* rcondv, float* work, const long long int* lwork,
              long long int* iwork, long long int* info );
void sgeevx( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, float* a, const long long int* lda,
             float* wr, float* wi, float* vl, const long long int* ldvl, float* vr,
             const long long int* ldvr, long long int* ilo, long long int* ihi, float* scale,
             float* abnrm, float* rconde, float* rcondv, float* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void sgeevx_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, float* a,
              const long long int* lda, float* wr, float* wi, float* vl,
              const long long int* ldvl, float* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, float* scale, float* abnrm,
              float* rconde, float* rcondv, float* work, const long long int* lwork,
              long long int* iwork, long long int* info );

void SGEGS( const char* jobvsl, const char* jobvsr, const long long int* n, float* a,
            const long long int* lda, float* b, const long long int* ldb, float* alphar,
            float* alphai, float* beta, float* vsl, const long long int* ldvsl,
            float* vsr, const long long int* ldvsr, float* work,
            const long long int* lwork, long long int* info );
void SGEGS_( const char* jobvsl, const char* jobvsr, const long long int* n,
             float* a, const long long int* lda, float* b, const long long int* ldb,
             float* alphar, float* alphai, float* beta, float* vsl,
             const long long int* ldvsl, float* vsr, const long long int* ldvsr,
             float* work, const long long int* lwork, long long int* info );
void sgegs( const char* jobvsl, const char* jobvsr, const long long int* n, float* a,
            const long long int* lda, float* b, const long long int* ldb, float* alphar,
            float* alphai, float* beta, float* vsl, const long long int* ldvsl,
            float* vsr, const long long int* ldvsr, float* work,
            const long long int* lwork, long long int* info );
void sgegs_( const char* jobvsl, const char* jobvsr, const long long int* n,
             float* a, const long long int* lda, float* b, const long long int* ldb,
             float* alphar, float* alphai, float* beta, float* vsl,
             const long long int* ldvsl, float* vsr, const long long int* ldvsr,
             float* work, const long long int* lwork, long long int* info );

void SGEGV( const char* jobvl, const char* jobvr, const long long int* n, float* a,
            const long long int* lda, float* b, const long long int* ldb, float* alphar,
            float* alphai, float* beta, float* vl, const long long int* ldvl,
            float* vr, const long long int* ldvr, float* work, const long long int* lwork,
            long long int* info );
void SGEGV_( const char* jobvl, const char* jobvr, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* alphar,
             float* alphai, float* beta, float* vl, const long long int* ldvl,
             float* vr, const long long int* ldvr, float* work, const long long int* lwork,
             long long int* info );
void sgegv( const char* jobvl, const char* jobvr, const long long int* n, float* a,
            const long long int* lda, float* b, const long long int* ldb, float* alphar,
            float* alphai, float* beta, float* vl, const long long int* ldvl,
            float* vr, const long long int* ldvr, float* work, const long long int* lwork,
            long long int* info );
void sgegv_( const char* jobvl, const char* jobvr, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* alphar,
             float* alphai, float* beta, float* vl, const long long int* ldvl,
             float* vr, const long long int* ldvr, float* work, const long long int* lwork,
             long long int* info );

void SGEHD2( const long long int* n, const long long int* ilo, const long long int* ihi,
             float* a, const long long int* lda, float* tau, float* work,
             long long int* info );
void SGEHD2_( const long long int* n, const long long int* ilo, const long long int* ihi,
              float* a, const long long int* lda, float* tau, float* work,
              long long int* info );
void sgehd2( const long long int* n, const long long int* ilo, const long long int* ihi,
             float* a, const long long int* lda, float* tau, float* work,
             long long int* info );
void sgehd2_( const long long int* n, const long long int* ilo, const long long int* ihi,
              float* a, const long long int* lda, float* tau, float* work,
              long long int* info );

void SGEHRD( const long long int* n, const long long int* ilo, const long long int* ihi,
             float* a, const long long int* lda, float* tau, float* work,
             const long long int* lwork, long long int* info );
void SGEHRD_( const long long int* n, const long long int* ilo, const long long int* ihi,
              float* a, const long long int* lda, float* tau, float* work,
              const long long int* lwork, long long int* info );
void sgehrd( const long long int* n, const long long int* ilo, const long long int* ihi,
             float* a, const long long int* lda, float* tau, float* work,
             const long long int* lwork, long long int* info );
void sgehrd_( const long long int* n, const long long int* ilo, const long long int* ihi,
              float* a, const long long int* lda, float* tau, float* work,
              const long long int* lwork, long long int* info );

void SGEJSV( char* joba, char* jobu, char* jobv, char* jobr, char* jobt,
             char* jobp, const long long int* m, const long long int* n, float* a,
             const long long int* lda, float* sva, float* u, const long long int* ldu,
             float* v, const long long int* ldv, float* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void SGEJSV_( char* joba, char* jobu, char* jobv, char* jobr, char* jobt,
              char* jobp, const long long int* m, const long long int* n, float* a,
              const long long int* lda, float* sva, float* u, const long long int* ldu,
              float* v, const long long int* ldv, float* work, const long long int* lwork,
              long long int* iwork, long long int* info );
void sgejsv( char* joba, char* jobu, char* jobv, char* jobr, char* jobt,
             char* jobp, const long long int* m, const long long int* n, float* a,
             const long long int* lda, float* sva, float* u, const long long int* ldu,
             float* v, const long long int* ldv, float* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void sgejsv_( char* joba, char* jobu, char* jobv, char* jobr, char* jobt,
              char* jobp, const long long int* m, const long long int* n, float* a,
              const long long int* lda, float* sva, float* u, const long long int* ldu,
              float* v, const long long int* ldv, float* work, const long long int* lwork,
              long long int* iwork, long long int* info );

void SGELQ2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, long long int* info );
void SGELQ2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );
void sgelq2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, long long int* info );
void sgelq2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );

void SGELQF( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void SGELQF_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );
void sgelqf( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void sgelqf_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );

void SGELSD( const long long int* m, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, float* b, const long long int* ldb,
             float* s, const float* rcond, long long int* rank, float* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void SGELSD_( const long long int* m, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, float* b, const long long int* ldb,
              float* s, const float* rcond, long long int* rank, float* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void sgelsd( const long long int* m, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, float* b, const long long int* ldb,
             float* s, const float* rcond, long long int* rank, float* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void sgelsd_( const long long int* m, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, float* b, const long long int* ldb,
              float* s, const float* rcond, long long int* rank, float* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void SGELS( const char* trans, const long long int* m, const long long int* n,
            const long long int* nrhs, float* a, const long long int* lda, float* b,
            const long long int* ldb, float* work, const long long int* lwork,
            long long int* info );
void SGELS_( const char* trans, const long long int* m, const long long int* n,
             const long long int* nrhs, float* a, const long long int* lda, float* b,
             const long long int* ldb, float* work, const long long int* lwork,
             long long int* info );
void sgels( const char* trans, const long long int* m, const long long int* n,
            const long long int* nrhs, float* a, const long long int* lda, float* b,
            const long long int* ldb, float* work, const long long int* lwork,
            long long int* info );
void sgels_( const char* trans, const long long int* m, const long long int* n,
             const long long int* nrhs, float* a, const long long int* lda, float* b,
             const long long int* ldb, float* work, const long long int* lwork,
             long long int* info );

void SGELSS( const long long int* m, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* s,
             const float* rcond, long long int* rank, float* work,
             const long long int* lwork, long long int* info );
void SGELSS_( const long long int* m, const long long int* n, const long long int* nrhs,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              float* s, const float* rcond, long long int* rank, float* work,
              const long long int* lwork, long long int* info );
void sgelss( const long long int* m, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* s,
             const float* rcond, long long int* rank, float* work,
             const long long int* lwork, long long int* info );
void sgelss_( const long long int* m, const long long int* n, const long long int* nrhs,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              float* s, const float* rcond, long long int* rank, float* work,
              const long long int* lwork, long long int* info );

void SGELSX( const long long int* m, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* jpvt,
             const float* rcond, long long int* rank, float* work, long long int* info );
void SGELSX_( const long long int* m, const long long int* n, const long long int* nrhs,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              long long int* jpvt, const float* rcond, long long int* rank, float* work,
              long long int* info );
void sgelsx( const long long int* m, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* jpvt,
             const float* rcond, long long int* rank, float* work, long long int* info );
void sgelsx_( const long long int* m, const long long int* n, const long long int* nrhs,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              long long int* jpvt, const float* rcond, long long int* rank, float* work,
              long long int* info );

void SGELSY( const long long int* m, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* jpvt,
             const float* rcond, long long int* rank, float* work,
             const long long int* lwork, long long int* info );
void SGELSY_( const long long int* m, const long long int* n, const long long int* nrhs,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              long long int* jpvt, const float* rcond, long long int* rank, float* work,
              const long long int* lwork, long long int* info );
void sgelsy( const long long int* m, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* jpvt,
             const float* rcond, long long int* rank, float* work,
             const long long int* lwork, long long int* info );
void sgelsy_( const long long int* m, const long long int* n, const long long int* nrhs,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              long long int* jpvt, const float* rcond, long long int* rank, float* work,
              const long long int* lwork, long long int* info );

void SGEQL2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, long long int* info );
void SGEQL2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );
void sgeql2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, long long int* info );
void sgeql2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );

void SGEQLF( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void SGEQLF_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );
void sgeqlf( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void sgeqlf_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );

void SGEQP3( const long long int* m, const long long int* n, float* a, const long long int* lda,
             long long int* jpvt, float* tau, float* work, const long long int* lwork,
             long long int* info );
void SGEQP3_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              long long int* jpvt, float* tau, float* work, const long long int* lwork,
              long long int* info );
void sgeqp3( const long long int* m, const long long int* n, float* a, const long long int* lda,
             long long int* jpvt, float* tau, float* work, const long long int* lwork,
             long long int* info );
void sgeqp3_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              long long int* jpvt, float* tau, float* work, const long long int* lwork,
              long long int* info );

void SGEQPF( const long long int* m, const long long int* n, float* a, const long long int* lda,
             long long int* jpvt, float* tau, float* work, long long int* info );
void SGEQPF_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              long long int* jpvt, float* tau, float* work, long long int* info );
void sgeqpf( const long long int* m, const long long int* n, float* a, const long long int* lda,
             long long int* jpvt, float* tau, float* work, long long int* info );
void sgeqpf_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              long long int* jpvt, float* tau, float* work, long long int* info );

void SGEQR2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, long long int* info );
void SGEQR2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );
void sgeqr2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, long long int* info );
void sgeqr2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );

void SGEQR2P( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );
void SGEQR2P_( const long long int* m, const long long int* n, float* a, const long long int* lda,
               float* tau, float* work, long long int* info );
void sgeqr2p( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );
void sgeqr2p_( const long long int* m, const long long int* n, float* a, const long long int* lda,
               float* tau, float* work, long long int* info );

void SGEQRF( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void SGEQRF_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );
void sgeqrf( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void sgeqrf_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );

void SGEQRFP( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );
void SGEQRFP_( const long long int* m, const long long int* n, float* a, const long long int* lda,
               float* tau, float* work, const long long int* lwork, long long int* info );
void sgeqrfp( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );
void sgeqrfp_( const long long int* m, const long long int* n, float* a, const long long int* lda,
               float* tau, float* work, const long long int* lwork, long long int* info );

void SGERFS( const char* trans, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const float* af,
             const long long int* ldaf, const long long int* ipiv, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void SGERFS_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const float* af,
              const long long int* ldaf, const long long int* ipiv, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );
void sgerfs( const char* trans, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const float* af,
             const long long int* ldaf, const long long int* ipiv, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void sgerfs_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const float* af,
              const long long int* ldaf, const long long int* ipiv, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );

void SGERFSX( const char* trans, const char* equed, const long long int* n,
              const long long int* nrhs, const float* a, const long long int* lda,
              const float* af, const long long int* ldaf, const long long int* ipiv,
              const float* r, const float* c, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* berr, const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void SGERFSX_( const char* trans, const char* equed, const long long int* n,
               const long long int* nrhs, const float* a, const long long int* lda,
               const float* af, const long long int* ldaf, const long long int* ipiv,
               const float* r, const float* c, const float* b,
               const long long int* ldb, float* x, const long long int* ldx, float* rcond,
               float* berr, const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );
void sgerfsx( const char* trans, const char* equed, const long long int* n,
              const long long int* nrhs, const float* a, const long long int* lda,
              const float* af, const long long int* ldaf, const long long int* ipiv,
              const float* r, const float* c, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* berr, const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void sgerfsx_( const char* trans, const char* equed, const long long int* n,
               const long long int* nrhs, const float* a, const long long int* lda,
               const float* af, const long long int* ldaf, const long long int* ipiv,
               const float* r, const float* c, const float* b,
               const long long int* ldb, float* x, const long long int* ldx, float* rcond,
               float* berr, const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );

void SGERQ2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, long long int* info );
void SGERQ2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );
void sgerq2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, long long int* info );
void sgerq2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, long long int* info );

void SGERQF( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void SGERQF_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );
void sgerqf( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void sgerqf_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );

void SGESC2( const long long int* n, const float* a, const long long int* lda, float* rhs,
             const long long int* ipiv, const long long int* jpiv, float* scale );
void SGESC2_( const long long int* n, const float* a, const long long int* lda, float* rhs,
              const long long int* ipiv, const long long int* jpiv, float* scale );
void sgesc2( const long long int* n, const float* a, const long long int* lda, float* rhs,
             const long long int* ipiv, const long long int* jpiv, float* scale );
void sgesc2_( const long long int* n, const float* a, const long long int* lda, float* rhs,
              const long long int* ipiv, const long long int* jpiv, float* scale );

void SGESDD( const char* jobz, const long long int* m, const long long int* n, float* a,
             const long long int* lda, float* s, float* u, const long long int* ldu,
             float* vt, const long long int* ldvt, float* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void SGESDD_( const char* jobz, const long long int* m, const long long int* n, float* a,
              const long long int* lda, float* s, float* u, const long long int* ldu,
              float* vt, const long long int* ldvt, float* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void sgesdd( const char* jobz, const long long int* m, const long long int* n, float* a,
             const long long int* lda, float* s, float* u, const long long int* ldu,
             float* vt, const long long int* ldvt, float* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void sgesdd_( const char* jobz, const long long int* m, const long long int* n, float* a,
              const long long int* lda, float* s, float* u, const long long int* ldu,
              float* vt, const long long int* ldvt, float* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void SGESVD( const char* jobu, const char* jobvt, const long long int* m,
             const long long int* n, float* a, const long long int* lda, float* s,
             float* u, const long long int* ldu, float* vt, const long long int* ldvt,
             float* work, const long long int* lwork, long long int* info );
void SGESVD_( const char* jobu, const char* jobvt, const long long int* m,
              const long long int* n, float* a, const long long int* lda, float* s,
              float* u, const long long int* ldu, float* vt, const long long int* ldvt,
              float* work, const long long int* lwork, long long int* info );
void sgesvd( const char* jobu, const char* jobvt, const long long int* m,
             const long long int* n, float* a, const long long int* lda, float* s,
             float* u, const long long int* ldu, float* vt, const long long int* ldvt,
             float* work, const long long int* lwork, long long int* info );
void sgesvd_( const char* jobu, const char* jobvt, const long long int* m,
              const long long int* n, float* a, const long long int* lda, float* s,
              float* u, const long long int* ldu, float* vt, const long long int* ldvt,
              float* work, const long long int* lwork, long long int* info );

void SGESV( const long long int* n, const long long int* nrhs, float* a,
            const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
            long long int* info );
void SGESV_( const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
             long long int* info );
void sgesv( const long long int* n, const long long int* nrhs, float* a,
            const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
            long long int* info );
void sgesv_( const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
             long long int* info );

void SGESVJ( const char* joba, const char* jobu, const char* jobv,
             const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* sva, const long long int* mv, float* v, const long long int* ldv,
             float* work, long long int* lwork, long long int* info );
void SGESVJ_( const char* joba, const char* jobu, const char* jobv,
              const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* sva, const long long int* mv, float* v, const long long int* ldv,
              float* work, long long int* lwork, long long int* info );
void sgesvj( const char* joba, const char* jobu, const char* jobv,
             const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* sva, const long long int* mv, float* v, const long long int* ldv,
             float* work, long long int* lwork, long long int* info );
void sgesvj_( const char* joba, const char* jobu, const char* jobv,
              const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* sva, const long long int* mv, float* v, const long long int* ldv,
              float* work, long long int* lwork, long long int* info );

void SGESVX( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, float* a, const long long int* lda, float* af,
             const long long int* ldaf, long long int* ipiv, char* equed, float* r,
             float* c, float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             float* work, long long int* iwork, long long int* info );
void SGESVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, long long int* ipiv, char* equed, float* r,
              float* c, float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );
void sgesvx( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, float* a, const long long int* lda, float* af,
             const long long int* ldaf, long long int* ipiv, char* equed, float* r,
             float* c, float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             float* work, long long int* iwork, long long int* info );
void sgesvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, long long int* ipiv, char* equed, float* r,
              float* c, float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );

void SGESVXX( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, long long int* ipiv, char* equed, float* r,
              float* c, float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void SGESVXX_( const char* fact, const char* trans, const long long int* n,
               const long long int* nrhs, float* a, const long long int* lda, float* af,
               const long long int* ldaf, long long int* ipiv, char* equed, float* r,
               float* c, float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );
void sgesvxx( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, long long int* ipiv, char* equed, float* r,
              float* c, float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void sgesvxx_( const char* fact, const char* trans, const long long int* n,
               const long long int* nrhs, float* a, const long long int* lda, float* af,
               const long long int* ldaf, long long int* ipiv, char* equed, float* r,
               float* c, float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );

void SGETC2( const long long int* n, float* a, const long long int* lda, long long int* ipiv,
             long long int* jpiv, long long int* info );
void SGETC2_( const long long int* n, float* a, const long long int* lda, long long int* ipiv,
              long long int* jpiv, long long int* info );
void sgetc2( const long long int* n, float* a, const long long int* lda, long long int* ipiv,
             long long int* jpiv, long long int* info );
void sgetc2_( const long long int* n, float* a, const long long int* lda, long long int* ipiv,
              long long int* jpiv, long long int* info );

void SGETF2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void SGETF2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              long long int* ipiv, long long int* info );
void sgetf2( const long long int* m, const long long int* n, float* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void sgetf2_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              long long int* ipiv, long long int* info );

void SGETRF( const long long int* m, const long long int* n, float* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void SGETRF_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              long long int* ipiv, long long int* info );
void sgetrf( const long long int* m, const long long int* n, float* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void sgetrf_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              long long int* ipiv, long long int* info );

void MKL_SGETRFNPI( const long long int* m, const long long int* n, const long long int* nfact,
                    float* a, const long long int* lda, long long int* info );
void MKL_SGETRFNPI_( const long long int* m, const long long int* n, const long long int* nfact,
                     float* a, const long long int* lda, long long int* info );
void mkl_sgetrfnpi( const long long int* m, const long long int* n, const long long int* nfact,
                    float* a, const long long int* lda, long long int* info );
void mkl_sgetrfnpi_( const long long int* m, const long long int* n, const long long int* nfact,
                     float* a, const long long int* lda, long long int* info );

void SGETRI( const long long int* n, float* a, const long long int* lda,
             const long long int* ipiv, float* work, const long long int* lwork,
             long long int* info );
void SGETRI_( const long long int* n, float* a, const long long int* lda,
              const long long int* ipiv, float* work, const long long int* lwork,
              long long int* info );
void sgetri( const long long int* n, float* a, const long long int* lda,
             const long long int* ipiv, float* work, const long long int* lwork,
             long long int* info );
void sgetri_( const long long int* n, float* a, const long long int* lda,
              const long long int* ipiv, float* work, const long long int* lwork,
              long long int* info );

void SGETRS( const char* trans, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void SGETRS_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const long long int* ipiv,
              float* b, const long long int* ldb, long long int* info );
void sgetrs( const char* trans, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void sgetrs_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const long long int* ipiv,
              float* b, const long long int* ldb, long long int* info );

void SGGBAK( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const float* lscale,
             const float* rscale, const long long int* m, float* v,
             const long long int* ldv, long long int* info );
void SGGBAK_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const float* lscale,
              const float* rscale, const long long int* m, float* v,
              const long long int* ldv, long long int* info );
void sggbak( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const float* lscale,
             const float* rscale, const long long int* m, float* v,
             const long long int* ldv, long long int* info );
void sggbak_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const float* lscale,
              const float* rscale, const long long int* m, float* v,
              const long long int* ldv, long long int* info );

void SGGBAL( const char* job, const long long int* n, float* a, const long long int* lda,
             float* b, const long long int* ldb, long long int* ilo, long long int* ihi,
             float* lscale, float* rscale, float* work, long long int* info );
void SGGBAL_( const char* job, const long long int* n, float* a, const long long int* lda,
              float* b, const long long int* ldb, long long int* ilo, long long int* ihi,
              float* lscale, float* rscale, float* work, long long int* info );
void sggbal( const char* job, const long long int* n, float* a, const long long int* lda,
             float* b, const long long int* ldb, long long int* ilo, long long int* ihi,
             float* lscale, float* rscale, float* work, long long int* info );
void sggbal_( const char* job, const long long int* n, float* a, const long long int* lda,
              float* b, const long long int* ldb, long long int* ilo, long long int* ihi,
              float* lscale, float* rscale, float* work, long long int* info );

void SGGES( const char* jobvsl, const char* jobvsr, const char* sort,
            MKL_S_SELECT_FUNCTION_3 selctg, const long long int* n, float* a,
            const long long int* lda, float* b, const long long int* ldb, long long int* sdim,
            float* alphar, float* alphai, float* beta, float* vsl,
            const long long int* ldvsl, float* vsr, const long long int* ldvsr,
            float* work, const long long int* lwork, long long int* bwork, long long int* info );
void SGGES_( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_S_SELECT_FUNCTION_3 selctg, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* sdim,
             float* alphar, float* alphai, float* beta, float* vsl,
             const long long int* ldvsl, float* vsr, const long long int* ldvsr,
             float* work, const long long int* lwork, long long int* bwork,
             long long int* info );
void sgges( const char* jobvsl, const char* jobvsr, const char* sort,
            MKL_S_SELECT_FUNCTION_3 selctg, const long long int* n, float* a,
            const long long int* lda, float* b, const long long int* ldb, long long int* sdim,
            float* alphar, float* alphai, float* beta, float* vsl,
            const long long int* ldvsl, float* vsr, const long long int* ldvsr,
            float* work, const long long int* lwork, long long int* bwork, long long int* info );
void sgges_( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_S_SELECT_FUNCTION_3 selctg, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* sdim,
             float* alphar, float* alphai, float* beta, float* vsl,
             const long long int* ldvsl, float* vsr, const long long int* ldvsr,
             float* work, const long long int* lwork, long long int* bwork,
             long long int* info );

void SGGESX( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_S_SELECT_FUNCTION_3 selctg, const char* sense,
             const long long int* n, float* a, const long long int* lda, float* b,
             const long long int* ldb, long long int* sdim, float* alphar, float* alphai,
             float* beta, float* vsl, const long long int* ldvsl, float* vsr,
             const long long int* ldvsr, float* rconde, float* rcondv, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* bwork, long long int* info );
void SGGESX_( const char* jobvsl, const char* jobvsr, const char* sort,
              MKL_S_SELECT_FUNCTION_3 selctg, const char* sense,
              const long long int* n, float* a, const long long int* lda, float* b,
              const long long int* ldb, long long int* sdim, float* alphar, float* alphai,
              float* beta, float* vsl, const long long int* ldvsl, float* vsr,
              const long long int* ldvsr, float* rconde, float* rcondv, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* bwork, long long int* info );
void sggesx( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_S_SELECT_FUNCTION_3 selctg, const char* sense,
             const long long int* n, float* a, const long long int* lda, float* b,
             const long long int* ldb, long long int* sdim, float* alphar, float* alphai,
             float* beta, float* vsl, const long long int* ldvsl, float* vsr,
             const long long int* ldvsr, float* rconde, float* rcondv, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* bwork, long long int* info );
void sggesx_( const char* jobvsl, const char* jobvsr, const char* sort,
              MKL_S_SELECT_FUNCTION_3 selctg, const char* sense,
              const long long int* n, float* a, const long long int* lda, float* b,
              const long long int* ldb, long long int* sdim, float* alphar, float* alphai,
              float* beta, float* vsl, const long long int* ldvsl, float* vsr,
              const long long int* ldvsr, float* rconde, float* rcondv, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* bwork, long long int* info );

void SGGEV( const char* jobvl, const char* jobvr, const long long int* n, float* a,
            const long long int* lda, float* b, const long long int* ldb, float* alphar,
            float* alphai, float* beta, float* vl, const long long int* ldvl,
            float* vr, const long long int* ldvr, float* work, const long long int* lwork,
            long long int* info );
void SGGEV_( const char* jobvl, const char* jobvr, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* alphar,
             float* alphai, float* beta, float* vl, const long long int* ldvl,
             float* vr, const long long int* ldvr, float* work, const long long int* lwork,
             long long int* info );
void sggev( const char* jobvl, const char* jobvr, const long long int* n, float* a,
            const long long int* lda, float* b, const long long int* ldb, float* alphar,
            float* alphai, float* beta, float* vl, const long long int* ldvl,
            float* vr, const long long int* ldvr, float* work, const long long int* lwork,
            long long int* info );
void sggev_( const char* jobvl, const char* jobvr, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* alphar,
             float* alphai, float* beta, float* vl, const long long int* ldvl,
             float* vr, const long long int* ldvr, float* work, const long long int* lwork,
             long long int* info );

void SGGEVX( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, float* a, const long long int* lda,
             float* b, const long long int* ldb, float* alphar, float* alphai,
             float* beta, float* vl, const long long int* ldvl, float* vr,
             const long long int* ldvr, long long int* ilo, long long int* ihi, float* lscale,
             float* rscale, float* abnrm, float* bbnrm, float* rconde,
             float* rcondv, float* work, const long long int* lwork, long long int* iwork,
             long long int* bwork, long long int* info );
void SGGEVX_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* alphar,
              float* alphai, float* beta, float* vl, const long long int* ldvl,
              float* vr, const long long int* ldvr, long long int* ilo, long long int* ihi,
              float* lscale, float* rscale, float* abnrm, float* bbnrm,
              float* rconde, float* rcondv, float* work, const long long int* lwork,
              long long int* iwork, long long int* bwork, long long int* info );
void sggevx( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, float* a, const long long int* lda,
             float* b, const long long int* ldb, float* alphar, float* alphai,
             float* beta, float* vl, const long long int* ldvl, float* vr,
             const long long int* ldvr, long long int* ilo, long long int* ihi, float* lscale,
             float* rscale, float* abnrm, float* bbnrm, float* rconde,
             float* rcondv, float* work, const long long int* lwork, long long int* iwork,
             long long int* bwork, long long int* info );
void sggevx_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* alphar,
              float* alphai, float* beta, float* vl, const long long int* ldvl,
              float* vr, const long long int* ldvr, long long int* ilo, long long int* ihi,
              float* lscale, float* rscale, float* abnrm, float* bbnrm,
              float* rconde, float* rcondv, float* work, const long long int* lwork,
              long long int* iwork, long long int* bwork, long long int* info );

void SGGGLM( const long long int* n, const long long int* m, const long long int* p, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* d,
             float* x, float* y, float* work, const long long int* lwork,
             long long int* info );
void SGGGLM_( const long long int* n, const long long int* m, const long long int* p, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* d,
              float* x, float* y, float* work, const long long int* lwork,
              long long int* info );
void sggglm( const long long int* n, const long long int* m, const long long int* p, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* d,
             float* x, float* y, float* work, const long long int* lwork,
             long long int* info );
void sggglm_( const long long int* n, const long long int* m, const long long int* p, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* d,
              float* x, float* y, float* work, const long long int* lwork,
              long long int* info );

void SGGHRD( const char* compq, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* q,
             const long long int* ldq, float* z, const long long int* ldz, long long int* info );
void SGGHRD_( const char* compq, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* q,
              const long long int* ldq, float* z, const long long int* ldz,
              long long int* info );
void sgghrd( const char* compq, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* q,
             const long long int* ldq, float* z, const long long int* ldz, long long int* info );
void sgghrd_( const char* compq, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* q,
              const long long int* ldq, float* z, const long long int* ldz,
              long long int* info );

void SGGLSE( const long long int* m, const long long int* n, const long long int* p, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* c,
             float* d, float* x, float* work, const long long int* lwork,
             long long int* info );
void SGGLSE_( const long long int* m, const long long int* n, const long long int* p, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* c,
              float* d, float* x, float* work, const long long int* lwork,
              long long int* info );
void sgglse( const long long int* m, const long long int* n, const long long int* p, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* c,
             float* d, float* x, float* work, const long long int* lwork,
             long long int* info );
void sgglse_( const long long int* m, const long long int* n, const long long int* p, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* c,
              float* d, float* x, float* work, const long long int* lwork,
              long long int* info );

void SGGQRF( const long long int* n, const long long int* m, const long long int* p, float* a,
             const long long int* lda, float* taua, float* b, const long long int* ldb,
             float* taub, float* work, const long long int* lwork, long long int* info );
void SGGQRF_( const long long int* n, const long long int* m, const long long int* p, float* a,
              const long long int* lda, float* taua, float* b, const long long int* ldb,
              float* taub, float* work, const long long int* lwork, long long int* info );
void sggqrf( const long long int* n, const long long int* m, const long long int* p, float* a,
             const long long int* lda, float* taua, float* b, const long long int* ldb,
             float* taub, float* work, const long long int* lwork, long long int* info );
void sggqrf_( const long long int* n, const long long int* m, const long long int* p, float* a,
              const long long int* lda, float* taua, float* b, const long long int* ldb,
              float* taub, float* work, const long long int* lwork, long long int* info );

void SGGRQF( const long long int* m, const long long int* p, const long long int* n, float* a,
             const long long int* lda, float* taua, float* b, const long long int* ldb,
             float* taub, float* work, const long long int* lwork, long long int* info );
void SGGRQF_( const long long int* m, const long long int* p, const long long int* n, float* a,
              const long long int* lda, float* taua, float* b, const long long int* ldb,
              float* taub, float* work, const long long int* lwork, long long int* info );
void sggrqf( const long long int* m, const long long int* p, const long long int* n, float* a,
             const long long int* lda, float* taua, float* b, const long long int* ldb,
             float* taub, float* work, const long long int* lwork, long long int* info );
void sggrqf_( const long long int* m, const long long int* p, const long long int* n, float* a,
              const long long int* lda, float* taua, float* b, const long long int* ldb,
              float* taub, float* work, const long long int* lwork, long long int* info );

void SGGSVD( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* n, const long long int* p, long long int* k,
             long long int* l, float* a, const long long int* lda, float* b,
             const long long int* ldb, float* alpha, float* beta, float* u,
             const long long int* ldu, float* v, const long long int* ldv, float* q,
             const long long int* ldq, float* work, long long int* iwork, long long int* info );
void SGGSVD_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* n, const long long int* p, long long int* k,
              long long int* l, float* a, const long long int* lda, float* b,
              const long long int* ldb, float* alpha, float* beta, float* u,
              const long long int* ldu, float* v, const long long int* ldv, float* q,
              const long long int* ldq, float* work, long long int* iwork, long long int* info );
void sggsvd( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* n, const long long int* p, long long int* k,
             long long int* l, float* a, const long long int* lda, float* b,
             const long long int* ldb, float* alpha, float* beta, float* u,
             const long long int* ldu, float* v, const long long int* ldv, float* q,
             const long long int* ldq, float* work, long long int* iwork, long long int* info );
void sggsvd_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* n, const long long int* p, long long int* k,
              long long int* l, float* a, const long long int* lda, float* b,
              const long long int* ldb, float* alpha, float* beta, float* u,
              const long long int* ldu, float* v, const long long int* ldv, float* q,
              const long long int* ldq, float* work, long long int* iwork, long long int* info );

void SGGSVP( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb,
             const float* tola, const float* tolb, long long int* k, long long int* l,
             float* u, const long long int* ldu, float* v, const long long int* ldv,
             float* q, const long long int* ldq, long long int* iwork, float* tau,
             float* work, long long int* info );
void SGGSVP_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n, float* a,
              const long long int* lda, float* b, const long long int* ldb,
              const float* tola, const float* tolb, long long int* k, long long int* l,
              float* u, const long long int* ldu, float* v, const long long int* ldv,
              float* q, const long long int* ldq, long long int* iwork, float* tau,
              float* work, long long int* info );
void sggsvp( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb,
             const float* tola, const float* tolb, long long int* k, long long int* l,
             float* u, const long long int* ldu, float* v, const long long int* ldv,
             float* q, const long long int* ldq, long long int* iwork, float* tau,
             float* work, long long int* info );
void sggsvp_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n, float* a,
              const long long int* lda, float* b, const long long int* ldb,
              const float* tola, const float* tolb, long long int* k, long long int* l,
              float* u, const long long int* ldu, float* v, const long long int* ldv,
              float* q, const long long int* ldq, long long int* iwork, float* tau,
              float* work, long long int* info );

void SGSVJ0( const char* jobv, const long long int* m, const long long int* n, float* a,
             const long long int* lda, float* d, float* sva, const long long int* mv,
             float* v, const long long int* ldv, const float* eps,
             const float* sfmin, const float* tol, const long long int* nsweep,
             float* work, const long long int* lwork, long long int* info );
void SGSVJ0_( const char* jobv, const long long int* m, const long long int* n, float* a,
              const long long int* lda, float* d, float* sva, const long long int* mv,
              float* v, const long long int* ldv, const float* eps,
              const float* sfmin, const float* tol, const long long int* nsweep,
              float* work, const long long int* lwork, long long int* info );
void sgsvj0( const char* jobv, const long long int* m, const long long int* n, float* a,
             const long long int* lda, float* d, float* sva, const long long int* mv,
             float* v, const long long int* ldv, const float* eps,
             const float* sfmin, const float* tol, const long long int* nsweep,
             float* work, const long long int* lwork, long long int* info );
void sgsvj0_( const char* jobv, const long long int* m, const long long int* n, float* a,
              const long long int* lda, float* d, float* sva, const long long int* mv,
              float* v, const long long int* ldv, const float* eps,
              const float* sfmin, const float* tol, const long long int* nsweep,
              float* work, const long long int* lwork, long long int* info );

void SGSVJ1( const char* jobv, const long long int* m, const long long int* n,
             const long long int* n1, float* a, const long long int* lda, float* d,
             float* sva, const long long int* mv, float* v, const long long int* ldv,
             const float* eps, const float* sfmin, const float* tol,
             const long long int* nsweep, float* work, const long long int* lwork,
             long long int* info );
void SGSVJ1_( const char* jobv, const long long int* m, const long long int* n,
              const long long int* n1, float* a, const long long int* lda, float* d,
              float* sva, const long long int* mv, float* v, const long long int* ldv,
              const float* eps, const float* sfmin, const float* tol,
              const long long int* nsweep, float* work, const long long int* lwork,
              long long int* info );
void sgsvj1( const char* jobv, const long long int* m, const long long int* n,
             const long long int* n1, float* a, const long long int* lda, float* d,
             float* sva, const long long int* mv, float* v, const long long int* ldv,
             const float* eps, const float* sfmin, const float* tol,
             const long long int* nsweep, float* work, const long long int* lwork,
             long long int* info );
void sgsvj1_( const char* jobv, const long long int* m, const long long int* n,
              const long long int* n1, float* a, const long long int* lda, float* d,
              float* sva, const long long int* mv, float* v, const long long int* ldv,
              const float* eps, const float* sfmin, const float* tol,
              const long long int* nsweep, float* work, const long long int* lwork,
              long long int* info );

void SGTCON( const char* norm, const long long int* n, const float* dl,
             const float* d, const float* du, const float* du2,
             const long long int* ipiv, const float* anorm, float* rcond,
             float* work, long long int* iwork, long long int* info );
void SGTCON_( const char* norm, const long long int* n, const float* dl,
              const float* d, const float* du, const float* du2,
              const long long int* ipiv, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );
void sgtcon( const char* norm, const long long int* n, const float* dl,
             const float* d, const float* du, const float* du2,
             const long long int* ipiv, const float* anorm, float* rcond,
             float* work, long long int* iwork, long long int* info );
void sgtcon_( const char* norm, const long long int* n, const float* dl,
              const float* d, const float* du, const float* du2,
              const long long int* ipiv, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );

void SGTRFS( const char* trans, const long long int* n, const long long int* nrhs,
             const float* dl, const float* d, const float* du,
             const float* dlf, const float* df, const float* duf,
             const float* du2, const long long int* ipiv, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void SGTRFS_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* dl, const float* d, const float* du,
              const float* dlf, const float* df, const float* duf,
              const float* du2, const long long int* ipiv, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );
void sgtrfs( const char* trans, const long long int* n, const long long int* nrhs,
             const float* dl, const float* d, const float* du,
             const float* dlf, const float* df, const float* duf,
             const float* du2, const long long int* ipiv, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void sgtrfs_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* dl, const float* d, const float* du,
              const float* dlf, const float* df, const float* duf,
              const float* du2, const long long int* ipiv, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );

void SGTSV( const long long int* n, const long long int* nrhs, float* dl, float* d,
            float* du, float* b, const long long int* ldb, long long int* info );
void SGTSV_( const long long int* n, const long long int* nrhs, float* dl, float* d,
             float* du, float* b, const long long int* ldb, long long int* info );
void sgtsv( const long long int* n, const long long int* nrhs, float* dl, float* d,
            float* du, float* b, const long long int* ldb, long long int* info );
void sgtsv_( const long long int* n, const long long int* nrhs, float* dl, float* d,
             float* du, float* b, const long long int* ldb, long long int* info );

void SGTSVX( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, const float* dl, const float* d,
             const float* du, float* dlf, float* df, float* duf, float* du2,
             long long int* ipiv, const float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             float* work, long long int* iwork, long long int* info );
void SGTSVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, const float* dl, const float* d,
              const float* du, float* dlf, float* df, float* duf, float* du2,
              long long int* ipiv, const float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );
void sgtsvx( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, const float* dl, const float* d,
             const float* du, float* dlf, float* df, float* duf, float* du2,
             long long int* ipiv, const float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             float* work, long long int* iwork, long long int* info );
void sgtsvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, const float* dl, const float* d,
              const float* du, float* dlf, float* df, float* duf, float* du2,
              long long int* ipiv, const float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );

void SGTTRF( const long long int* n, float* dl, float* d, float* du, float* du2,
             long long int* ipiv, long long int* info );
void SGTTRF_( const long long int* n, float* dl, float* d, float* du, float* du2,
              long long int* ipiv, long long int* info );
void sgttrf( const long long int* n, float* dl, float* d, float* du, float* du2,
             long long int* ipiv, long long int* info );
void sgttrf_( const long long int* n, float* dl, float* d, float* du, float* du2,
              long long int* ipiv, long long int* info );

void SGTTRS( const char* trans, const long long int* n, const long long int* nrhs,
             const float* dl, const float* d, const float* du,
             const float* du2, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void SGTTRS_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* dl, const float* d, const float* du,
              const float* du2, const long long int* ipiv, float* b,
              const long long int* ldb, long long int* info );
void sgttrs( const char* trans, const long long int* n, const long long int* nrhs,
             const float* dl, const float* d, const float* du,
             const float* du2, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void sgttrs_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* dl, const float* d, const float* du,
              const float* du2, const long long int* ipiv, float* b,
              const long long int* ldb, long long int* info );

void SGTTS2( const long long int* itrans, const long long int* n, const long long int* nrhs,
             const float* dl, const float* d, const float* du,
             const float* du2, const long long int* ipiv, float* b,
             const long long int* ldb );
void SGTTS2_( const long long int* itrans, const long long int* n, const long long int* nrhs,
              const float* dl, const float* d, const float* du,
              const float* du2, const long long int* ipiv, float* b,
              const long long int* ldb );
void sgtts2( const long long int* itrans, const long long int* n, const long long int* nrhs,
             const float* dl, const float* d, const float* du,
             const float* du2, const long long int* ipiv, float* b,
             const long long int* ldb );
void sgtts2_( const long long int* itrans, const long long int* n, const long long int* nrhs,
              const float* dl, const float* d, const float* du,
              const float* du2, const long long int* ipiv, float* b,
              const long long int* ldb );

void SHGEQZ( const char* job, const char* compq, const char* compz,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             float* h, const long long int* ldh, float* t, const long long int* ldt,
             float* alphar, float* alphai, float* beta, float* q,
             const long long int* ldq, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* info );
void SHGEQZ_( const char* job, const char* compq, const char* compz,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              float* h, const long long int* ldh, float* t, const long long int* ldt,
              float* alphar, float* alphai, float* beta, float* q,
              const long long int* ldq, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* info );
void shgeqz( const char* job, const char* compq, const char* compz,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             float* h, const long long int* ldh, float* t, const long long int* ldt,
             float* alphar, float* alphai, float* beta, float* q,
             const long long int* ldq, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* info );
void shgeqz_( const char* job, const char* compq, const char* compz,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              float* h, const long long int* ldh, float* t, const long long int* ldt,
              float* alphar, float* alphai, float* beta, float* q,
              const long long int* ldq, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* info );

void SHSEIN( const char* side, const char* eigsrc, const char* initv,
             long long int* select, const long long int* n, const float* h,
             const long long int* ldh, float* wr, const float* wi, float* vl,
             const long long int* ldvl, float* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, float* work, long long int* ifaill,
             long long int* ifailr, long long int* info );
void SHSEIN_( const char* side, const char* eigsrc, const char* initv,
              long long int* select, const long long int* n, const float* h,
              const long long int* ldh, float* wr, const float* wi, float* vl,
              const long long int* ldvl, float* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, float* work, long long int* ifaill,
              long long int* ifailr, long long int* info );
void shsein( const char* side, const char* eigsrc, const char* initv,
             long long int* select, const long long int* n, const float* h,
             const long long int* ldh, float* wr, const float* wi, float* vl,
             const long long int* ldvl, float* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, float* work, long long int* ifaill,
             long long int* ifailr, long long int* info );
void shsein_( const char* side, const char* eigsrc, const char* initv,
              long long int* select, const long long int* n, const float* h,
              const long long int* ldh, float* wr, const float* wi, float* vl,
              const long long int* ldvl, float* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, float* work, long long int* ifaill,
              long long int* ifailr, long long int* info );

void SHSEQR( const char* job, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* h,
             const long long int* ldh, float* wr, float* wi, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* info );
void SHSEQR_( const char* job, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* h,
              const long long int* ldh, float* wr, float* wi, float* z,
              const long long int* ldz, float* work, const long long int* lwork,
              long long int* info );
void shseqr( const char* job, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* h,
             const long long int* ldh, float* wr, float* wi, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* info );
void shseqr_( const char* job, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* h,
              const long long int* ldh, float* wr, float* wi, float* z,
              const long long int* ldz, float* work, const long long int* lwork,
              long long int* info );

long long int SISNAN( const float* sin );
long long int SISNAN_( const float* sin );
long long int sisnan( const float* sin );
long long int sisnan_( const float* sin );

void SLABAD( float* smallx, float* large );
void SLABAD_( float* smallx, float* large );
void slabad( float* smallx, float* large );
void slabad_( float* smallx, float* large );

void SLABRD( const long long int* m, const long long int* n, const long long int* nb, float* a,
             const long long int* lda, float* d, float* e, float* tauq, float* taup,
             float* x, const long long int* ldx, float* y, const long long int* ldy );
void SLABRD_( const long long int* m, const long long int* n, const long long int* nb, float* a,
              const long long int* lda, float* d, float* e, float* tauq, float* taup,
              float* x, const long long int* ldx, float* y, const long long int* ldy );
void slabrd( const long long int* m, const long long int* n, const long long int* nb, float* a,
             const long long int* lda, float* d, float* e, float* tauq, float* taup,
             float* x, const long long int* ldx, float* y, const long long int* ldy );
void slabrd_( const long long int* m, const long long int* n, const long long int* nb, float* a,
              const long long int* lda, float* d, float* e, float* tauq, float* taup,
              float* x, const long long int* ldx, float* y, const long long int* ldy );

void SLACN2( const long long int* n, float* v, float* x, long long int* isgn, float* est,
             long long int* kase, long long int* isave );
void SLACN2_( const long long int* n, float* v, float* x, long long int* isgn, float* est,
              long long int* kase, long long int* isave );
void slacn2( const long long int* n, float* v, float* x, long long int* isgn, float* est,
             long long int* kase, long long int* isave );
void slacn2_( const long long int* n, float* v, float* x, long long int* isgn, float* est,
              long long int* kase, long long int* isave );

void SLACON( const long long int* n, float* v, float* x, long long int* isgn, float* est,
             long long int* kase );
void SLACON_( const long long int* n, float* v, float* x, long long int* isgn, float* est,
              long long int* kase );
void slacon( const long long int* n, float* v, float* x, long long int* isgn, float* est,
             long long int* kase );
void slacon_( const long long int* n, float* v, float* x, long long int* isgn, float* est,
              long long int* kase );

void SLACPY( const char* uplo, const long long int* m, const long long int* n,
             const float* a, const long long int* lda, float* b,
             const long long int* ldb );
void SLACPY_( const char* uplo, const long long int* m, const long long int* n,
              const float* a, const long long int* lda, float* b,
              const long long int* ldb );
void slacpy( const char* uplo, const long long int* m, const long long int* n,
             const float* a, const long long int* lda, float* b,
             const long long int* ldb );
void slacpy_( const char* uplo, const long long int* m, const long long int* n,
              const float* a, const long long int* lda, float* b,
              const long long int* ldb );

void SLADIV( const float* a, const float* b, const float* c, const float* d,
             float* p, float* q );
void SLADIV_( const float* a, const float* b, const float* c, const float* d,
              float* p, float* q );
void sladiv( const float* a, const float* b, const float* c, const float* d,
             float* p, float* q );
void sladiv_( const float* a, const float* b, const float* c, const float* d,
              float* p, float* q );

void SLAE2( const float* a, const float* b, const float* c, float* rt1,
            float* rt2 );
void SLAE2_( const float* a, const float* b, const float* c, float* rt1,
             float* rt2 );
void slae2( const float* a, const float* b, const float* c, float* rt1,
            float* rt2 );
void slae2_( const float* a, const float* b, const float* c, float* rt1,
             float* rt2 );

void SLAEBZ( const long long int* ijob, const long long int* nitmax, const long long int* n,
             const long long int* mmax, const long long int* minp, const long long int* nbmin,
             const float* abstol, const float* reltol, const float* pivmin,
             const float* d, const float* e, const float* e2, long long int* nval,
             float* ab, float* c, long long int* mout, long long int* nab, float* work,
             long long int* iwork, long long int* info );
void SLAEBZ_( const long long int* ijob, const long long int* nitmax, const long long int* n,
              const long long int* mmax, const long long int* minp, const long long int* nbmin,
              const float* abstol, const float* reltol, const float* pivmin,
              const float* d, const float* e, const float* e2, long long int* nval,
              float* ab, float* c, long long int* mout, long long int* nab, float* work,
              long long int* iwork, long long int* info );
void slaebz( const long long int* ijob, const long long int* nitmax, const long long int* n,
             const long long int* mmax, const long long int* minp, const long long int* nbmin,
             const float* abstol, const float* reltol, const float* pivmin,
             const float* d, const float* e, const float* e2, long long int* nval,
             float* ab, float* c, long long int* mout, long long int* nab, float* work,
             long long int* iwork, long long int* info );
void slaebz_( const long long int* ijob, const long long int* nitmax, const long long int* n,
              const long long int* mmax, const long long int* minp, const long long int* nbmin,
              const float* abstol, const float* reltol, const float* pivmin,
              const float* d, const float* e, const float* e2, long long int* nval,
              float* ab, float* c, long long int* mout, long long int* nab, float* work,
              long long int* iwork, long long int* info );

void SLAED0( const long long int* icompq, const long long int* qsiz, const long long int* n,
             float* d, const float* e, float* q, const long long int* ldq,
             float* qstore, const long long int* ldqs, float* work, long long int* iwork,
             long long int* info );
void SLAED0_( const long long int* icompq, const long long int* qsiz, const long long int* n,
              float* d, const float* e, float* q, const long long int* ldq,
              float* qstore, const long long int* ldqs, float* work, long long int* iwork,
              long long int* info );
void slaed0( const long long int* icompq, const long long int* qsiz, const long long int* n,
             float* d, const float* e, float* q, const long long int* ldq,
             float* qstore, const long long int* ldqs, float* work, long long int* iwork,
             long long int* info );
void slaed0_( const long long int* icompq, const long long int* qsiz, const long long int* n,
              float* d, const float* e, float* q, const long long int* ldq,
              float* qstore, const long long int* ldqs, float* work, long long int* iwork,
              long long int* info );

void SLAED1( const long long int* n, float* d, float* q, const long long int* ldq,
             long long int* indxq, const float* rho, const long long int* cutpnt,
             float* work, long long int* iwork, long long int* info );
void SLAED1_( const long long int* n, float* d, float* q, const long long int* ldq,
              long long int* indxq, const float* rho, const long long int* cutpnt,
              float* work, long long int* iwork, long long int* info );
void slaed1( const long long int* n, float* d, float* q, const long long int* ldq,
             long long int* indxq, const float* rho, const long long int* cutpnt,
             float* work, long long int* iwork, long long int* info );
void slaed1_( const long long int* n, float* d, float* q, const long long int* ldq,
              long long int* indxq, const float* rho, const long long int* cutpnt,
              float* work, long long int* iwork, long long int* info );

void SLAED2( long long int* k, const long long int* n, const long long int* n1, float* d,
             float* q, const long long int* ldq, long long int* indxq, float* rho,
             const float* z, float* dlamda, float* w, float* q2, long long int* indx,
             long long int* indxc, long long int* indxp, long long int* coltyp, long long int* info );
void SLAED2_( long long int* k, const long long int* n, const long long int* n1, float* d,
              float* q, const long long int* ldq, long long int* indxq, float* rho,
              const float* z, float* dlamda, float* w, float* q2,
              long long int* indx, long long int* indxc, long long int* indxp, long long int* coltyp,
              long long int* info );
void slaed2( long long int* k, const long long int* n, const long long int* n1, float* d,
             float* q, const long long int* ldq, long long int* indxq, float* rho,
             const float* z, float* dlamda, float* w, float* q2, long long int* indx,
             long long int* indxc, long long int* indxp, long long int* coltyp, long long int* info );
void slaed2_( long long int* k, const long long int* n, const long long int* n1, float* d,
              float* q, const long long int* ldq, long long int* indxq, float* rho,
              const float* z, float* dlamda, float* w, float* q2,
              long long int* indx, long long int* indxc, long long int* indxp, long long int* coltyp,
              long long int* info );

void SLAED3( const long long int* k, const long long int* n, const long long int* n1, float* d,
             float* q, const long long int* ldq, const float* rho, float* dlamda,
             const float* q2, const long long int* indx, const long long int* ctot,
             float* w, float* s, long long int* info );
void SLAED3_( const long long int* k, const long long int* n, const long long int* n1, float* d,
              float* q, const long long int* ldq, const float* rho, float* dlamda,
              const float* q2, const long long int* indx, const long long int* ctot,
              float* w, float* s, long long int* info );
void slaed3( const long long int* k, const long long int* n, const long long int* n1, float* d,
             float* q, const long long int* ldq, const float* rho, float* dlamda,
             const float* q2, const long long int* indx, const long long int* ctot,
             float* w, float* s, long long int* info );
void slaed3_( const long long int* k, const long long int* n, const long long int* n1, float* d,
              float* q, const long long int* ldq, const float* rho, float* dlamda,
              const float* q2, const long long int* indx, const long long int* ctot,
              float* w, float* s, long long int* info );

void SLAED4( const long long int* n, const long long int* i, const float* d,
             const float* z, float* delta, const float* rho, float* dlam,
             long long int* info );
void SLAED4_( const long long int* n, const long long int* i, const float* d,
              const float* z, float* delta, const float* rho, float* dlam,
              long long int* info );
void slaed4( const long long int* n, const long long int* i, const float* d,
             const float* z, float* delta, const float* rho, float* dlam,
             long long int* info );
void slaed4_( const long long int* n, const long long int* i, const float* d,
              const float* z, float* delta, const float* rho, float* dlam,
              long long int* info );

void SLAED5( const long long int* i, const float* d, const float* z, float* delta,
             const float* rho, float* dlam );
void SLAED5_( const long long int* i, const float* d, const float* z, float* delta,
              const float* rho, float* dlam );
void slaed5( const long long int* i, const float* d, const float* z, float* delta,
             const float* rho, float* dlam );
void slaed5_( const long long int* i, const float* d, const float* z, float* delta,
              const float* rho, float* dlam );

void SLAED6( const long long int* kniter, const long long int* orgati, const float* rho,
             const float* d, const float* z, const float* finit, float* tau,
             long long int* info );
void SLAED6_( const long long int* kniter, const long long int* orgati, const float* rho,
              const float* d, const float* z, const float* finit, float* tau,
              long long int* info );
void slaed6( const long long int* kniter, const long long int* orgati, const float* rho,
             const float* d, const float* z, const float* finit, float* tau,
             long long int* info );
void slaed6_( const long long int* kniter, const long long int* orgati, const float* rho,
              const float* d, const float* z, const float* finit, float* tau,
              long long int* info );

void SLAED7( const long long int* icompq, const long long int* n, const long long int* qsiz,
             const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, float* d, float* q, const long long int* ldq,
             long long int* indxq, const float* rho, const long long int* cutpnt,
             float* qstore, long long int* qptr, const long long int* prmptr,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const float* givnum, float* work, long long int* iwork, long long int* info );
void SLAED7_( const long long int* icompq, const long long int* n, const long long int* qsiz,
              const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, float* d, float* q, const long long int* ldq,
              long long int* indxq, const float* rho, const long long int* cutpnt,
              float* qstore, long long int* qptr, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const float* givnum, float* work,
              long long int* iwork, long long int* info );
void slaed7( const long long int* icompq, const long long int* n, const long long int* qsiz,
             const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, float* d, float* q, const long long int* ldq,
             long long int* indxq, const float* rho, const long long int* cutpnt,
             float* qstore, long long int* qptr, const long long int* prmptr,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const float* givnum, float* work, long long int* iwork, long long int* info );
void slaed7_( const long long int* icompq, const long long int* n, const long long int* qsiz,
              const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, float* d, float* q, const long long int* ldq,
              long long int* indxq, const float* rho, const long long int* cutpnt,
              float* qstore, long long int* qptr, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const float* givnum, float* work,
              long long int* iwork, long long int* info );

void SLAED8( const long long int* icompq, long long int* k, const long long int* n,
             const long long int* qsiz, float* d, float* q, const long long int* ldq,
             const long long int* indxq, float* rho, const long long int* cutpnt,
             const float* z, float* dlamda, float* q2, const long long int* ldq2,
             float* w, long long int* perm, long long int* givptr, long long int* givcol,
             float* givnum, long long int* indxp, long long int* indx, long long int* info );
void SLAED8_( const long long int* icompq, long long int* k, const long long int* n,
              const long long int* qsiz, float* d, float* q, const long long int* ldq,
              const long long int* indxq, float* rho, const long long int* cutpnt,
              const float* z, float* dlamda, float* q2, const long long int* ldq2,
              float* w, long long int* perm, long long int* givptr, long long int* givcol,
              float* givnum, long long int* indxp, long long int* indx, long long int* info );
void slaed8( const long long int* icompq, long long int* k, const long long int* n,
             const long long int* qsiz, float* d, float* q, const long long int* ldq,
             const long long int* indxq, float* rho, const long long int* cutpnt,
             const float* z, float* dlamda, float* q2, const long long int* ldq2,
             float* w, long long int* perm, long long int* givptr, long long int* givcol,
             float* givnum, long long int* indxp, long long int* indx, long long int* info );
void slaed8_( const long long int* icompq, long long int* k, const long long int* n,
              const long long int* qsiz, float* d, float* q, const long long int* ldq,
              const long long int* indxq, float* rho, const long long int* cutpnt,
              const float* z, float* dlamda, float* q2, const long long int* ldq2,
              float* w, long long int* perm, long long int* givptr, long long int* givcol,
              float* givnum, long long int* indxp, long long int* indx, long long int* info );

void SLAED9( const long long int* k, const long long int* kstart, const long long int* kstop,
             const long long int* n, float* d, float* q, const long long int* ldq,
             const float* rho, const float* dlamda, const float* w, float* s,
             const long long int* lds, long long int* info );
void SLAED9_( const long long int* k, const long long int* kstart, const long long int* kstop,
              const long long int* n, float* d, float* q, const long long int* ldq,
              const float* rho, const float* dlamda, const float* w, float* s,
              const long long int* lds, long long int* info );
void slaed9( const long long int* k, const long long int* kstart, const long long int* kstop,
             const long long int* n, float* d, float* q, const long long int* ldq,
             const float* rho, const float* dlamda, const float* w, float* s,
             const long long int* lds, long long int* info );
void slaed9_( const long long int* k, const long long int* kstart, const long long int* kstop,
              const long long int* n, float* d, float* q, const long long int* ldq,
              const float* rho, const float* dlamda, const float* w, float* s,
              const long long int* lds, long long int* info );

void SLAEDA( const long long int* n, const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, const long long int* prmptr, const long long int* perm,
             const long long int* givptr, const long long int* givcol, const float* givnum,
             const float* q, const long long int* qptr, float* z, float* ztemp,
             long long int* info );
void SLAEDA_( const long long int* n, const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const float* givnum, const float* q,
              const long long int* qptr, float* z, float* ztemp, long long int* info );
void slaeda( const long long int* n, const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, const long long int* prmptr, const long long int* perm,
             const long long int* givptr, const long long int* givcol, const float* givnum,
             const float* q, const long long int* qptr, float* z, float* ztemp,
             long long int* info );
void slaeda_( const long long int* n, const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const float* givnum, const float* q,
              const long long int* qptr, float* z, float* ztemp, long long int* info );

void SLAEIN( const long long int* rightv, const long long int* noinit, const long long int* n,
             const float* h, const long long int* ldh, const float* wr,
             const float* wi, float* vr, float* vi, float* b,
             const long long int* ldb, float* work, const float* eps3,
             const float* smlnum, const float* bignum, long long int* info );
void SLAEIN_( const long long int* rightv, const long long int* noinit, const long long int* n,
              const float* h, const long long int* ldh, const float* wr,
              const float* wi, float* vr, float* vi, float* b,
              const long long int* ldb, float* work, const float* eps3,
              const float* smlnum, const float* bignum, long long int* info );
void slaein( const long long int* rightv, const long long int* noinit, const long long int* n,
             const float* h, const long long int* ldh, const float* wr,
             const float* wi, float* vr, float* vi, float* b,
             const long long int* ldb, float* work, const float* eps3,
             const float* smlnum, const float* bignum, long long int* info );
void slaein_( const long long int* rightv, const long long int* noinit, const long long int* n,
              const float* h, const long long int* ldh, const float* wr,
              const float* wi, float* vr, float* vi, float* b,
              const long long int* ldb, float* work, const float* eps3,
              const float* smlnum, const float* bignum, long long int* info );

void SLAEV2( const float* a, const float* b, const float* c, float* rt1,
             float* rt2, float* cs1, float* sn1 );
void SLAEV2_( const float* a, const float* b, const float* c, float* rt1,
              float* rt2, float* cs1, float* sn1 );
void slaev2( const float* a, const float* b, const float* c, float* rt1,
             float* rt2, float* cs1, float* sn1 );
void slaev2_( const float* a, const float* b, const float* c, float* rt1,
              float* rt2, float* cs1, float* sn1 );

void SLAEXC( const long long int* wantq, const long long int* n, float* t,
             const long long int* ldt, float* q, const long long int* ldq,
             const long long int* j1, const long long int* n1, const long long int* n2,
             float* work, long long int* info );
void SLAEXC_( const long long int* wantq, const long long int* n, float* t,
              const long long int* ldt, float* q, const long long int* ldq,
              const long long int* j1, const long long int* n1, const long long int* n2,
              float* work, long long int* info );
void slaexc( const long long int* wantq, const long long int* n, float* t,
             const long long int* ldt, float* q, const long long int* ldq,
             const long long int* j1, const long long int* n1, const long long int* n2,
             float* work, long long int* info );
void slaexc_( const long long int* wantq, const long long int* n, float* t,
              const long long int* ldt, float* q, const long long int* ldq,
              const long long int* j1, const long long int* n1, const long long int* n2,
              float* work, long long int* info );

void SLAG2D( const long long int* m, const long long int* n, const float* sa,
             const long long int* ldsa, double* a, const long long int* lda,
             long long int* info );
void SLAG2D_( const long long int* m, const long long int* n, const float* sa,
              const long long int* ldsa, double* a, const long long int* lda,
              long long int* info );
void slag2d( const long long int* m, const long long int* n, const float* sa,
             const long long int* ldsa, double* a, const long long int* lda,
             long long int* info );
void slag2d_( const long long int* m, const long long int* n, const float* sa,
              const long long int* ldsa, double* a, const long long int* lda,
              long long int* info );

void SLAG2( const float* a, const long long int* lda, const float* b,
            const long long int* ldb, const float* safmin, float* scale1,
            float* scale2, float* wr1, float* wr2, float* wi );
void SLAG2_( const float* a, const long long int* lda, const float* b,
             const long long int* ldb, const float* safmin, float* scale1,
             float* scale2, float* wr1, float* wr2, float* wi );
void slag2( const float* a, const long long int* lda, const float* b,
            const long long int* ldb, const float* safmin, float* scale1,
            float* scale2, float* wr1, float* wr2, float* wi );
void slag2_( const float* a, const long long int* lda, const float* b,
             const long long int* ldb, const float* safmin, float* scale1,
             float* scale2, float* wr1, float* wr2, float* wi );

void SLAGS2( const long long int* upper, const float* a1, const float* a2,
             const float* a3, const float* b1, const float* b2,
             const float* b3, float* csu, float* snu, float* csv, float* snv,
             float* csq, float* snq );
void SLAGS2_( const long long int* upper, const float* a1, const float* a2,
              const float* a3, const float* b1, const float* b2,
              const float* b3, float* csu, float* snu, float* csv, float* snv,
              float* csq, float* snq );
void slags2( const long long int* upper, const float* a1, const float* a2,
             const float* a3, const float* b1, const float* b2,
             const float* b3, float* csu, float* snu, float* csv, float* snv,
             float* csq, float* snq );
void slags2_( const long long int* upper, const float* a1, const float* a2,
              const float* a3, const float* b1, const float* b2,
              const float* b3, float* csu, float* snu, float* csv, float* snv,
              float* csq, float* snq );

void SLAGTF( const long long int* n, float* a, const float* lambda, float* b,
             float* c, const float* tol, float* d, long long int* in,
             long long int* info );
void SLAGTF_( const long long int* n, float* a, const float* lambda, float* b,
              float* c, const float* tol, float* d, long long int* in,
              long long int* info );
void slagtf( const long long int* n, float* a, const float* lambda, float* b,
             float* c, const float* tol, float* d, long long int* in,
             long long int* info );
void slagtf_( const long long int* n, float* a, const float* lambda, float* b,
              float* c, const float* tol, float* d, long long int* in,
              long long int* info );

void SLAGTM( const char* trans, const long long int* n, const long long int* nrhs,
             const float* alpha, const float* dl, const float* d,
             const float* du, const float* x, const long long int* ldx,
             const float* beta, float* b, const long long int* ldb );
void SLAGTM_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* alpha, const float* dl, const float* d,
              const float* du, const float* x, const long long int* ldx,
              const float* beta, float* b, const long long int* ldb );
void slagtm( const char* trans, const long long int* n, const long long int* nrhs,
             const float* alpha, const float* dl, const float* d,
             const float* du, const float* x, const long long int* ldx,
             const float* beta, float* b, const long long int* ldb );
void slagtm_( const char* trans, const long long int* n, const long long int* nrhs,
              const float* alpha, const float* dl, const float* d,
              const float* du, const float* x, const long long int* ldx,
              const float* beta, float* b, const long long int* ldb );

void SLAGTS( const long long int* job, const long long int* n, const float* a,
             const float* b, const float* c, const float* d, const long long int* in,
             float* y, float* tol, long long int* info );
void SLAGTS_( const long long int* job, const long long int* n, const float* a,
              const float* b, const float* c, const float* d,
              const long long int* in, float* y, float* tol, long long int* info );
void slagts( const long long int* job, const long long int* n, const float* a,
             const float* b, const float* c, const float* d, const long long int* in,
             float* y, float* tol, long long int* info );
void slagts_( const long long int* job, const long long int* n, const float* a,
              const float* b, const float* c, const float* d,
              const long long int* in, float* y, float* tol, long long int* info );

void SLAGV2( float* a, const long long int* lda, float* b, const long long int* ldb,
             float* alphar, float* alphai, float* beta, float* csl, float* snl,
             float* csr, float* snr );
void SLAGV2_( float* a, const long long int* lda, float* b, const long long int* ldb,
              float* alphar, float* alphai, float* beta, float* csl,
              float* snl, float* csr, float* snr );
void slagv2( float* a, const long long int* lda, float* b, const long long int* ldb,
             float* alphar, float* alphai, float* beta, float* csl, float* snl,
             float* csr, float* snr );
void slagv2_( float* a, const long long int* lda, float* b, const long long int* ldb,
              float* alphar, float* alphai, float* beta, float* csl,
              float* snl, float* csr, float* snr );

void SLAHQR( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* h,
             const long long int* ldh, float* wr, float* wi, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz,
             long long int* info );
void SLAHQR_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* h,
              const long long int* ldh, float* wr, float* wi, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz,
              long long int* info );
void slahqr( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* h,
             const long long int* ldh, float* wr, float* wi, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz,
             long long int* info );
void slahqr_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* h,
              const long long int* ldh, float* wr, float* wi, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz,
              long long int* info );

void SLAHR2( const long long int* n, const long long int* k, const long long int* nb, float* a,
             const long long int* lda, float* tau, float* t, const long long int* ldt,
             float* y, const long long int* ldy );
void SLAHR2_( const long long int* n, const long long int* k, const long long int* nb, float* a,
              const long long int* lda, float* tau, float* t, const long long int* ldt,
              float* y, const long long int* ldy );
void slahr2( const long long int* n, const long long int* k, const long long int* nb, float* a,
             const long long int* lda, float* tau, float* t, const long long int* ldt,
             float* y, const long long int* ldy );
void slahr2_( const long long int* n, const long long int* k, const long long int* nb, float* a,
              const long long int* lda, float* tau, float* t, const long long int* ldt,
              float* y, const long long int* ldy );

void SLAHRD( const long long int* n, const long long int* k, const long long int* nb, float* a,
             const long long int* lda, float* tau, float* t, const long long int* ldt,
             float* y, const long long int* ldy );
void SLAHRD_( const long long int* n, const long long int* k, const long long int* nb, float* a,
              const long long int* lda, float* tau, float* t, const long long int* ldt,
              float* y, const long long int* ldy );
void slahrd( const long long int* n, const long long int* k, const long long int* nb, float* a,
             const long long int* lda, float* tau, float* t, const long long int* ldt,
             float* y, const long long int* ldy );
void slahrd_( const long long int* n, const long long int* k, const long long int* nb, float* a,
              const long long int* lda, float* tau, float* t, const long long int* ldt,
              float* y, const long long int* ldy );

void SLAIC1( const long long int* job, const long long int* j, const float* x,
             const float* sest, const float* w, const float* gamma,
             float* sestpr, float* s, float* c );
void SLAIC1_( const long long int* job, const long long int* j, const float* x,
              const float* sest, const float* w, const float* gamma,
              float* sestpr, float* s, float* c );
void slaic1( const long long int* job, const long long int* j, const float* x,
             const float* sest, const float* w, const float* gamma,
             float* sestpr, float* s, float* c );
void slaic1_( const long long int* job, const long long int* j, const float* x,
              const float* sest, const float* w, const float* gamma,
              float* sestpr, float* s, float* c );

long long int SLAISNAN( const float* sin1, const float* sin2 );
long long int SLAISNAN_( const float* sin1, const float* sin2 );
long long int slaisnan( const float* sin1, const float* sin2 );
long long int slaisnan_( const float* sin1, const float* sin2 );

void SLALN2( const long long int* ltrans, const long long int* na, const long long int* nw,
             const float* smin, const float* ca, const float* a,
             const long long int* lda, const float* d1, const float* d2,
             const float* b, const long long int* ldb, const float* wr,
             const float* wi, float* x, const long long int* ldx, float* scale,
             float* xnorm, long long int* info );
void SLALN2_( const long long int* ltrans, const long long int* na, const long long int* nw,
              const float* smin, const float* ca, const float* a,
              const long long int* lda, const float* d1, const float* d2,
              const float* b, const long long int* ldb, const float* wr,
              const float* wi, float* x, const long long int* ldx, float* scale,
              float* xnorm, long long int* info );
void slaln2( const long long int* ltrans, const long long int* na, const long long int* nw,
             const float* smin, const float* ca, const float* a,
             const long long int* lda, const float* d1, const float* d2,
             const float* b, const long long int* ldb, const float* wr,
             const float* wi, float* x, const long long int* ldx, float* scale,
             float* xnorm, long long int* info );
void slaln2_( const long long int* ltrans, const long long int* na, const long long int* nw,
              const float* smin, const float* ca, const float* a,
              const long long int* lda, const float* d1, const float* d2,
              const float* b, const long long int* ldb, const float* wr,
              const float* wi, float* x, const long long int* ldx, float* scale,
              float* xnorm, long long int* info );

void SLALS0( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, const long long int* nrhs, float* b,
             const long long int* ldb, float* bx, const long long int* ldbx,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const float* givnum, const long long int* ldgnum,
             const float* poles, const float* difl, const float* difr,
             const float* z, const long long int* k, const float* c, const float* s,
             float* work, long long int* info );
void SLALS0_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, const long long int* nrhs, float* b,
              const long long int* ldb, float* bx, const long long int* ldbx,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const float* givnum, const long long int* ldgnum, const float* poles,
              const float* difl, const float* difr, const float* z,
              const long long int* k, const float* c, const float* s, float* work,
              long long int* info );
void slals0( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, const long long int* nrhs, float* b,
             const long long int* ldb, float* bx, const long long int* ldbx,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const float* givnum, const long long int* ldgnum,
             const float* poles, const float* difl, const float* difr,
             const float* z, const long long int* k, const float* c, const float* s,
             float* work, long long int* info );
void slals0_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, const long long int* nrhs, float* b,
              const long long int* ldb, float* bx, const long long int* ldbx,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const float* givnum, const long long int* ldgnum, const float* poles,
              const float* difl, const float* difr, const float* z,
              const long long int* k, const float* c, const float* s, float* work,
              long long int* info );

void SLALSA( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, float* b, const long long int* ldb, float* bx,
             const long long int* ldbx, const float* u, const long long int* ldu,
             const float* vt, const long long int* k, const float* difl,
             const float* difr, const float* z, const float* poles,
             const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const long long int* perm, const float* givnum,
             const float* c, const float* s, float* work, long long int* iwork,
             long long int* info );
void SLALSA_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, float* b, const long long int* ldb, float* bx,
              const long long int* ldbx, const float* u, const long long int* ldu,
              const float* vt, const long long int* k, const float* difl,
              const float* difr, const float* z, const float* poles,
              const long long int* givptr, const long long int* givcol,
              const long long int* ldgcol, const long long int* perm, const float* givnum,
              const float* c, const float* s, float* work, long long int* iwork,
              long long int* info );
void slalsa( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, float* b, const long long int* ldb, float* bx,
             const long long int* ldbx, const float* u, const long long int* ldu,
             const float* vt, const long long int* k, const float* difl,
             const float* difr, const float* z, const float* poles,
             const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const long long int* perm, const float* givnum,
             const float* c, const float* s, float* work, long long int* iwork,
             long long int* info );
void slalsa_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, float* b, const long long int* ldb, float* bx,
              const long long int* ldbx, const float* u, const long long int* ldu,
              const float* vt, const long long int* k, const float* difl,
              const float* difr, const float* z, const float* poles,
              const long long int* givptr, const long long int* givcol,
              const long long int* ldgcol, const long long int* perm, const float* givnum,
              const float* c, const float* s, float* work, long long int* iwork,
              long long int* info );

void SLALSD( const char* uplo, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, float* d, float* e, float* b,
             const long long int* ldb, const float* rcond, long long int* rank,
             float* work, long long int* iwork, long long int* info );
void SLALSD_( const char* uplo, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, float* d, float* e, float* b,
              const long long int* ldb, const float* rcond, long long int* rank,
              float* work, long long int* iwork, long long int* info );
void slalsd( const char* uplo, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, float* d, float* e, float* b,
             const long long int* ldb, const float* rcond, long long int* rank,
             float* work, long long int* iwork, long long int* info );
void slalsd_( const char* uplo, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, float* d, float* e, float* b,
              const long long int* ldb, const float* rcond, long long int* rank,
              float* work, long long int* iwork, long long int* info );

float SLAMCH( const char* cmach );
float SLAMCH_( const char* cmach );
float slamch( const char* cmach );
float slamch_( const char* cmach );

void SLAMC1( long long int* beta, long long int* t, long long int* rnd, long long int* ieee1 );
void SLAMC1_( long long int* beta, long long int* t, long long int* rnd, long long int* ieee1 );
void slamc1( long long int* beta, long long int* t, long long int* rnd, long long int* ieee1 );
void slamc1_( long long int* beta, long long int* t, long long int* rnd, long long int* ieee1 );

void SLAMC2( long long int* beta, long long int* t, long long int* rnd, float* eps,
             long long int* emin, float* rmin, long long int* emax, float* rmax );
void SLAMC2_( long long int* beta, long long int* t, long long int* rnd, float* eps,
              long long int* emin, float* rmin, long long int* emax, float* rmax );
void slamc2( long long int* beta, long long int* t, long long int* rnd, float* eps,
             long long int* emin, float* rmin, long long int* emax, float* rmax );
void slamc2_( long long int* beta, long long int* t, long long int* rnd, float* eps,
              long long int* emin, float* rmin, long long int* emax, float* rmax );

float SLAMC3( const float* a, const float* b );
float SLAMC3_( const float* a, const float* b );
float slamc3( const float* a, const float* b );
float slamc3_( const float* a, const float* b );

void SLAMC4( long long int* emin, const float* start, const long long int* base );
void SLAMC4_( long long int* emin, const float* start, const long long int* base );
void slamc4( long long int* emin, const float* start, const long long int* base );
void slamc4_( long long int* emin, const float* start, const long long int* base );

void SLAMC5( const long long int* beta, const long long int* p, const long long int* emin,
             const long long int* ieee, long long int* emax, float* rmax );
void SLAMC5_( const long long int* beta, const long long int* p, const long long int* emin,
              const long long int* ieee, long long int* emax, float* rmax );
void slamc5( const long long int* beta, const long long int* p, const long long int* emin,
             const long long int* ieee, long long int* emax, float* rmax );
void slamc5_( const long long int* beta, const long long int* p, const long long int* emin,
              const long long int* ieee, long long int* emax, float* rmax );

void SLAMRG( const long long int* n1, const long long int* n2, const float* a,
             const long long int* strd1, const long long int* strd2, long long int* index );
void SLAMRG_( const long long int* n1, const long long int* n2, const float* a,
              const long long int* strd1, const long long int* strd2, long long int* index );
void slamrg( const long long int* n1, const long long int* n2, const float* a,
             const long long int* strd1, const long long int* strd2, long long int* index );
void slamrg_( const long long int* n1, const long long int* n2, const float* a,
              const long long int* strd1, const long long int* strd2, long long int* index );

long long int SLANEG( const long long int* n, const float* d, const float* lld,
                const float* sigma, const float* pivmin, const long long int* r );
long long int SLANEG_( const long long int* n, const float* d, const float* lld,
                 const float* sigma, const float* pivmin, const long long int* r );
long long int slaneg( const long long int* n, const float* d, const float* lld,
                const float* sigma, const float* pivmin, const long long int* r );
long long int slaneg_( const long long int* n, const float* d, const float* lld,
                 const float* sigma, const float* pivmin, const long long int* r );

float SLANGB( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const float* ab, const long long int* ldab,
              float* work );
float SLANGB_( const char* norm, const long long int* n, const long long int* kl,
               const long long int* ku, const float* ab, const long long int* ldab,
               float* work );
float slangb( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const float* ab, const long long int* ldab,
              float* work );
float slangb_( const char* norm, const long long int* n, const long long int* kl,
               const long long int* ku, const float* ab, const long long int* ldab,
               float* work );

float SLANGE( const char* norm, const long long int* m, const long long int* n,
              const float* a, const long long int* lda, float* work );
float SLANGE_( const char* norm, const long long int* m, const long long int* n,
               const float* a, const long long int* lda, float* work );
float slange( const char* norm, const long long int* m, const long long int* n,
              const float* a, const long long int* lda, float* work );
float slange_( const char* norm, const long long int* m, const long long int* n,
               const float* a, const long long int* lda, float* work );

float SLANGT( const char* norm, const long long int* n, const float* dl,
              const float* d, const float* du );
float SLANGT_( const char* norm, const long long int* n, const float* dl,
               const float* d, const float* du );
float slangt( const char* norm, const long long int* n, const float* dl,
              const float* d, const float* du );
float slangt_( const char* norm, const long long int* n, const float* dl,
               const float* d, const float* du );

float SLANHS( const char* norm, const long long int* n, const float* a,
              const long long int* lda, float* work );
float SLANHS_( const char* norm, const long long int* n, const float* a,
               const long long int* lda, float* work );
float slanhs( const char* norm, const long long int* n, const float* a,
              const long long int* lda, float* work );
float slanhs_( const char* norm, const long long int* n, const float* a,
               const long long int* lda, float* work );

float SLANSB( const char* norm, const char* uplo, const long long int* n,
              const long long int* k, const float* ab, const long long int* ldab,
              float* work );
float SLANSB_( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const float* ab, const long long int* ldab,
               float* work );
float slansb( const char* norm, const char* uplo, const long long int* n,
              const long long int* k, const float* ab, const long long int* ldab,
              float* work );
float slansb_( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const float* ab, const long long int* ldab,
               float* work );

float SLANSF( const char* norm, const char* transr, const char* uplo,
              const long long int* n, const float* a, float* work );
float SLANSF_( const char* norm, const char* transr, const char* uplo,
               const long long int* n, const float* a, float* work );
float slansf( const char* norm, const char* transr, const char* uplo,
              const long long int* n, const float* a, float* work );
float slansf_( const char* norm, const char* transr, const char* uplo,
               const long long int* n, const float* a, float* work );

float SLANSP( const char* norm, const char* uplo, const long long int* n,
              const float* ap, float* work );
float SLANSP_( const char* norm, const char* uplo, const long long int* n,
               const float* ap, float* work );
float slansp( const char* norm, const char* uplo, const long long int* n,
              const float* ap, float* work );
float slansp_( const char* norm, const char* uplo, const long long int* n,
               const float* ap, float* work );

float SLANST( const char* norm, const long long int* n, const float* d,
              const float* e );
float SLANST_( const char* norm, const long long int* n, const float* d,
               const float* e );
float slanst( const char* norm, const long long int* n, const float* d,
              const float* e );
float slanst_( const char* norm, const long long int* n, const float* d,
               const float* e );

float SLANSY( const char* norm, const char* uplo, const long long int* n,
              const float* a, const long long int* lda, float* work );
float SLANSY_( const char* norm, const char* uplo, const long long int* n,
               const float* a, const long long int* lda, float* work );
float slansy( const char* norm, const char* uplo, const long long int* n,
              const float* a, const long long int* lda, float* work );
float slansy_( const char* norm, const char* uplo, const long long int* n,
               const float* a, const long long int* lda, float* work );

float SLANTB( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* k, const float* ab,
              const long long int* ldab, float* work );
float SLANTB_( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const long long int* k, const float* ab,
               const long long int* ldab, float* work );
float slantb( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* k, const float* ab,
              const long long int* ldab, float* work );
float slantb_( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const long long int* k, const float* ab,
               const long long int* ldab, float* work );

float SLANTP( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const float* ap, float* work );
float SLANTP_( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const float* ap, float* work );
float slantp( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const float* ap, float* work );
float slantp_( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const float* ap, float* work );

float SLANTR( const char* norm, const char* uplo, const char* diag,
              const long long int* m, const long long int* n, const float* a,
              const long long int* lda, float* work );
float SLANTR_( const char* norm, const char* uplo, const char* diag,
               const long long int* m, const long long int* n, const float* a,
               const long long int* lda, float* work );
float slantr( const char* norm, const char* uplo, const char* diag,
              const long long int* m, const long long int* n, const float* a,
              const long long int* lda, float* work );
float slantr_( const char* norm, const char* uplo, const char* diag,
               const long long int* m, const long long int* n, const float* a,
               const long long int* lda, float* work );

void SLANV2( float* a, float* b, float* c, float* d, float* rt1r, float* rt1i,
             float* rt2r, float* rt2i, float* cs, float* sn );
void SLANV2_( float* a, float* b, float* c, float* d, float* rt1r, float* rt1i,
              float* rt2r, float* rt2i, float* cs, float* sn );
void slanv2( float* a, float* b, float* c, float* d, float* rt1r, float* rt1i,
             float* rt2r, float* rt2i, float* cs, float* sn );
void slanv2_( float* a, float* b, float* c, float* d, float* rt1r, float* rt1i,
              float* rt2r, float* rt2i, float* cs, float* sn );

void SLAPLL( const long long int* n, float* x, const long long int* incx, float* y,
             const long long int* incy, float* ssmin );
void SLAPLL_( const long long int* n, float* x, const long long int* incx, float* y,
              const long long int* incy, float* ssmin );
void slapll( const long long int* n, float* x, const long long int* incx, float* y,
             const long long int* incy, float* ssmin );
void slapll_( const long long int* n, float* x, const long long int* incx, float* y,
              const long long int* incy, float* ssmin );

void SLAPMT( const long long int* forwrd, const long long int* m, const long long int* n,
             float* x, const long long int* ldx, long long int* k );
void SLAPMT_( const long long int* forwrd, const long long int* m, const long long int* n,
              float* x, const long long int* ldx, long long int* k );
void slapmt( const long long int* forwrd, const long long int* m, const long long int* n,
             float* x, const long long int* ldx, long long int* k );
void slapmt_( const long long int* forwrd, const long long int* m, const long long int* n,
              float* x, const long long int* ldx, long long int* k );

float SLAPY2( const float* x, const float* y );
float SLAPY2_( const float* x, const float* y );
float slapy2( const float* x, const float* y );
float slapy2_( const float* x, const float* y );

float SLAPY3( const float* x, const float* y, const float* z );
float SLAPY3_( const float* x, const float* y, const float* z );
float slapy3( const float* x, const float* y, const float* z );
float slapy3_( const float* x, const float* y, const float* z );

void SLAQGB( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, float* ab, const long long int* ldab, const float* r,
             const float* c, const float* rowcnd, const float* colcnd,
             const float* amax, char* equed );
void SLAQGB_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, float* ab, const long long int* ldab,
              const float* r, const float* c, const float* rowcnd,
              const float* colcnd, const float* amax, char* equed );
void slaqgb( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, float* ab, const long long int* ldab, const float* r,
             const float* c, const float* rowcnd, const float* colcnd,
             const float* amax, char* equed );
void slaqgb_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, float* ab, const long long int* ldab,
              const float* r, const float* c, const float* rowcnd,
              const float* colcnd, const float* amax, char* equed );

void SLAQGE( const long long int* m, const long long int* n, float* a, const long long int* lda,
             const float* r, const float* c, const float* rowcnd,
             const float* colcnd, const float* amax, char* equed );
void SLAQGE_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              const float* r, const float* c, const float* rowcnd,
              const float* colcnd, const float* amax, char* equed );
void slaqge( const long long int* m, const long long int* n, float* a, const long long int* lda,
             const float* r, const float* c, const float* rowcnd,
             const float* colcnd, const float* amax, char* equed );
void slaqge_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              const float* r, const float* c, const float* rowcnd,
              const float* colcnd, const float* amax, char* equed );

void SLAQP2( const long long int* m, const long long int* n, const long long int* offset,
             float* a, const long long int* lda, long long int* jpvt, float* tau,
             float* vn1, float* vn2, float* work );
void SLAQP2_( const long long int* m, const long long int* n, const long long int* offset,
              float* a, const long long int* lda, long long int* jpvt, float* tau,
              float* vn1, float* vn2, float* work );
void slaqp2( const long long int* m, const long long int* n, const long long int* offset,
             float* a, const long long int* lda, long long int* jpvt, float* tau,
             float* vn1, float* vn2, float* work );
void slaqp2_( const long long int* m, const long long int* n, const long long int* offset,
              float* a, const long long int* lda, long long int* jpvt, float* tau,
              float* vn1, float* vn2, float* work );

void SLAQPS( const long long int* m, const long long int* n, const long long int* offset,
             const long long int* nb, long long int* kb, float* a, const long long int* lda,
             long long int* jpvt, float* tau, float* vn1, float* vn2, float* auxv,
             float* f, const long long int* ldf );
void SLAQPS_( const long long int* m, const long long int* n, const long long int* offset,
              const long long int* nb, long long int* kb, float* a, const long long int* lda,
              long long int* jpvt, float* tau, float* vn1, float* vn2, float* auxv,
              float* f, const long long int* ldf );
void slaqps( const long long int* m, const long long int* n, const long long int* offset,
             const long long int* nb, long long int* kb, float* a, const long long int* lda,
             long long int* jpvt, float* tau, float* vn1, float* vn2, float* auxv,
             float* f, const long long int* ldf );
void slaqps_( const long long int* m, const long long int* n, const long long int* offset,
              const long long int* nb, long long int* kb, float* a, const long long int* lda,
              long long int* jpvt, float* tau, float* vn1, float* vn2, float* auxv,
              float* f, const long long int* ldf );

void SLAQR0( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* h,
             const long long int* ldh, float* wr, float* wi, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* info );
void SLAQR0_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* h,
              const long long int* ldh, float* wr, float* wi, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* info );
void slaqr0( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* h,
             const long long int* ldh, float* wr, float* wi, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* info );
void slaqr0_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* h,
              const long long int* ldh, float* wr, float* wi, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* info );

void SLAQR1( const long long int* n, const float* h, const long long int* ldh,
             const float* sr1, float* si1, float* sr2, float* si2, float* v );
void SLAQR1_( const long long int* n, const float* h, const long long int* ldh,
              const float* sr1, float* si1, float* sr2, float* si2, float* v );
void slaqr1( const long long int* n, const float* h, const long long int* ldh,
             const float* sr1, float* si1, float* sr2, float* si2, float* v );
void slaqr1_( const long long int* n, const float* h, const long long int* ldh,
              const float* sr1, float* si1, float* sr2, float* si2, float* v );

void SLAQR2( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             float* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz, long long int* ns,
             long long int* nd, float* sr, float* si, float* v, const long long int* ldv,
             const long long int* nh, float* t, const long long int* ldt,
             const long long int* nv, float* wv, const long long int* ldwv, float* work,
             const long long int* lwork );
void SLAQR2_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              float* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, long long int* ns,
              long long int* nd, float* sr, float* si, float* v, const long long int* ldv,
              const long long int* nh, float* t, const long long int* ldt,
              const long long int* nv, float* wv, const long long int* ldwv, float* work,
              const long long int* lwork );
void slaqr2( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             float* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz, long long int* ns,
             long long int* nd, float* sr, float* si, float* v, const long long int* ldv,
             const long long int* nh, float* t, const long long int* ldt,
             const long long int* nv, float* wv, const long long int* ldwv, float* work,
             const long long int* lwork );
void slaqr2_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              float* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, long long int* ns,
              long long int* nd, float* sr, float* si, float* v, const long long int* ldv,
              const long long int* nh, float* t, const long long int* ldt,
              const long long int* nv, float* wv, const long long int* ldwv, float* work,
              const long long int* lwork );

void SLAQR3( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             float* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz, long long int* ns,
             long long int* nd, float* sr, float* si, float* v, const long long int* ldv,
             const long long int* nh, float* t, const long long int* ldt,
             const long long int* nv, float* wv, const long long int* ldwv, float* work,
             const long long int* lwork );
void SLAQR3_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              float* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, long long int* ns,
              long long int* nd, float* sr, float* si, float* v, const long long int* ldv,
              const long long int* nh, float* t, const long long int* ldt,
              const long long int* nv, float* wv, const long long int* ldwv, float* work,
              const long long int* lwork );
void slaqr3( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             float* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz, long long int* ns,
             long long int* nd, float* sr, float* si, float* v, const long long int* ldv,
             const long long int* nh, float* t, const long long int* ldt,
             const long long int* nv, float* wv, const long long int* ldwv, float* work,
             const long long int* lwork );
void slaqr3_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              float* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, long long int* ns,
              long long int* nd, float* sr, float* si, float* v, const long long int* ldv,
              const long long int* nh, float* t, const long long int* ldt,
              const long long int* nv, float* wv, const long long int* ldwv, float* work,
              const long long int* lwork );

void SLAQR4( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* h,
             const long long int* ldh, float* wr, float* wi, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* info );
void SLAQR4_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* h,
              const long long int* ldh, float* wr, float* wi, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* info );
void slaqr4( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, float* h,
             const long long int* ldh, float* wr, float* wi, const long long int* iloz,
             const long long int* ihiz, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* info );
void slaqr4_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, float* h,
              const long long int* ldh, float* wr, float* wi, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* info );

void SLAQR5( const long long int* wantt, const long long int* wantz, const long long int* kacc22,
             const long long int* n, const long long int* ktop, const long long int* kbot,
             const long long int* nshfts, float* sr, float* si, float* h,
             const long long int* ldh, const long long int* iloz, const long long int* ihiz,
             float* z, const long long int* ldz, float* v, const long long int* ldv,
             float* u, const long long int* ldu, const long long int* nv, float* wv,
             const long long int* ldwv, const long long int* nh, float* wh,
             const long long int* ldwh );
void SLAQR5_( const long long int* wantt, const long long int* wantz,
              const long long int* kacc22, const long long int* n, const long long int* ktop,
              const long long int* kbot, const long long int* nshfts, float* sr, float* si,
              float* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, float* v,
              const long long int* ldv, float* u, const long long int* ldu,
              const long long int* nv, float* wv, const long long int* ldwv,
              const long long int* nh, float* wh, const long long int* ldwh );
void slaqr5( const long long int* wantt, const long long int* wantz, const long long int* kacc22,
             const long long int* n, const long long int* ktop, const long long int* kbot,
             const long long int* nshfts, float* sr, float* si, float* h,
             const long long int* ldh, const long long int* iloz, const long long int* ihiz,
             float* z, const long long int* ldz, float* v, const long long int* ldv,
             float* u, const long long int* ldu, const long long int* nv, float* wv,
             const long long int* ldwv, const long long int* nh, float* wh,
             const long long int* ldwh );
void slaqr5_( const long long int* wantt, const long long int* wantz,
              const long long int* kacc22, const long long int* n, const long long int* ktop,
              const long long int* kbot, const long long int* nshfts, float* sr, float* si,
              float* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, float* z, const long long int* ldz, float* v,
              const long long int* ldv, float* u, const long long int* ldu,
              const long long int* nv, float* wv, const long long int* ldwv,
              const long long int* nh, float* wh, const long long int* ldwh );

void SLAQSB( const char* uplo, const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, const float* s, const float* scond,
             const float* amax, char* equed );
void SLAQSB_( const char* uplo, const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, const float* s, const float* scond,
              const float* amax, char* equed );
void slaqsb( const char* uplo, const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, const float* s, const float* scond,
             const float* amax, char* equed );
void slaqsb_( const char* uplo, const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, const float* s, const float* scond,
              const float* amax, char* equed );

void SLAQSP( const char* uplo, const long long int* n, float* ap, const float* s,
             const float* scond, const float* amax, char* equed );
void SLAQSP_( const char* uplo, const long long int* n, float* ap, const float* s,
              const float* scond, const float* amax, char* equed );
void slaqsp( const char* uplo, const long long int* n, float* ap, const float* s,
             const float* scond, const float* amax, char* equed );
void slaqsp_( const char* uplo, const long long int* n, float* ap, const float* s,
              const float* scond, const float* amax, char* equed );

void SLAQSY( const char* uplo, const long long int* n, float* a, const long long int* lda,
             const float* s, const float* scond, const float* amax,
             char* equed );
void SLAQSY_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              const float* s, const float* scond, const float* amax,
              char* equed );
void slaqsy( const char* uplo, const long long int* n, float* a, const long long int* lda,
             const float* s, const float* scond, const float* amax,
             char* equed );
void slaqsy_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              const float* s, const float* scond, const float* amax,
              char* equed );

void SLAQTR( const long long int* ltran, const long long int* lreal, const long long int* n,
             const float* t, const long long int* ldt, const float* b,
             const float* w, float* scale, float* x, float* work,
             long long int* info );
void SLAQTR_( const long long int* ltran, const long long int* lreal, const long long int* n,
              const float* t, const long long int* ldt, const float* b,
              const float* w, float* scale, float* x, float* work,
              long long int* info );
void slaqtr( const long long int* ltran, const long long int* lreal, const long long int* n,
             const float* t, const long long int* ldt, const float* b,
             const float* w, float* scale, float* x, float* work,
             long long int* info );
void slaqtr_( const long long int* ltran, const long long int* lreal, const long long int* n,
              const float* t, const long long int* ldt, const float* b,
              const float* w, float* scale, float* x, float* work,
              long long int* info );

void SLAR1V( const long long int* n, const long long int* b1, const long long int* bn,
             const float* lambda, const float* d, const float* l,
             const float* ld, const float* lld, const float* pivmin,
             const float* gaptol, float* z, const long long int* wantnc,
             long long int* negcnt, float* ztz, float* mingma, long long int* r,
             long long int* isuppz, float* nrminv, float* resid, float* rqcorr,
             float* work );
void SLAR1V_( const long long int* n, const long long int* b1, const long long int* bn,
              const float* lambda, const float* d, const float* l,
              const float* ld, const float* lld, const float* pivmin,
              const float* gaptol, float* z, const long long int* wantnc,
              long long int* negcnt, float* ztz, float* mingma, long long int* r,
              long long int* isuppz, float* nrminv, float* resid, float* rqcorr,
              float* work );
void slar1v( const long long int* n, const long long int* b1, const long long int* bn,
             const float* lambda, const float* d, const float* l,
             const float* ld, const float* lld, const float* pivmin,
             const float* gaptol, float* z, const long long int* wantnc,
             long long int* negcnt, float* ztz, float* mingma, long long int* r,
             long long int* isuppz, float* nrminv, float* resid, float* rqcorr,
             float* work );
void slar1v_( const long long int* n, const long long int* b1, const long long int* bn,
              const float* lambda, const float* d, const float* l,
              const float* ld, const float* lld, const float* pivmin,
              const float* gaptol, float* z, const long long int* wantnc,
              long long int* negcnt, float* ztz, float* mingma, long long int* r,
              long long int* isuppz, float* nrminv, float* resid, float* rqcorr,
              float* work );

void SLAR2V( const long long int* n, float* x, float* y, float* z,
             const long long int* incx, const float* c, const float* s,
             const long long int* incc );
void SLAR2V_( const long long int* n, float* x, float* y, float* z,
              const long long int* incx, const float* c, const float* s,
              const long long int* incc );
void slar2v( const long long int* n, float* x, float* y, float* z,
             const long long int* incx, const float* c, const float* s,
             const long long int* incc );
void slar2v_( const long long int* n, float* x, float* y, float* z,
              const long long int* incx, const float* c, const float* s,
              const long long int* incc );

void SLARFB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const float* v, const long long int* ldv,
             const float* t, const long long int* ldt, float* c, const long long int* ldc,
             float* work, const long long int* ldwork );
void SLARFB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const float* v, const long long int* ldv,
              const float* t, const long long int* ldt, float* c, const long long int* ldc,
              float* work, const long long int* ldwork );
void slarfb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const float* v, const long long int* ldv,
             const float* t, const long long int* ldt, float* c, const long long int* ldc,
             float* work, const long long int* ldwork );
void slarfb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const float* v, const long long int* ldv,
              const float* t, const long long int* ldt, float* c, const long long int* ldc,
              float* work, const long long int* ldwork );

void SLARF( const char* side, const long long int* m, const long long int* n,
            const float* v, const long long int* incv, const float* tau, float* c,
            const long long int* ldc, float* work );
void SLARF_( const char* side, const long long int* m, const long long int* n,
             const float* v, const long long int* incv, const float* tau, float* c,
             const long long int* ldc, float* work );
void slarf( const char* side, const long long int* m, const long long int* n,
            const float* v, const long long int* incv, const float* tau, float* c,
            const long long int* ldc, float* work );
void slarf_( const char* side, const long long int* m, const long long int* n,
             const float* v, const long long int* incv, const float* tau, float* c,
             const long long int* ldc, float* work );

void SLARFG( const long long int* n, float* alpha, float* x, const long long int* incx,
             float* tau );
void SLARFG_( const long long int* n, float* alpha, float* x, const long long int* incx,
              float* tau );
void slarfg( const long long int* n, float* alpha, float* x, const long long int* incx,
             float* tau );
void slarfg_( const long long int* n, float* alpha, float* x, const long long int* incx,
              float* tau );

void SLARFGP( const long long int* n, float* alpha, float* x, const long long int* incx,
              float* tau );
void SLARFGP_( const long long int* n, float* alpha, float* x, const long long int* incx,
               float* tau );
void slarfgp( const long long int* n, float* alpha, float* x, const long long int* incx,
              float* tau );
void slarfgp_( const long long int* n, float* alpha, float* x, const long long int* incx,
               float* tau );

void SLARFP( const long long int* n, float* alpha, float* x, const long long int* incx,
             float* tau );
void SLARFP_( const long long int* n, float* alpha, float* x, const long long int* incx,
              float* tau );
void slarfp( const long long int* n, float* alpha, float* x, const long long int* incx,
             float* tau );
void slarfp_( const long long int* n, float* alpha, float* x, const long long int* incx,
              float* tau );

void SLARFT( const char* direct, const char* storev, const long long int* n,
             const long long int* k, float* v, const long long int* ldv, const float* tau,
             float* t, const long long int* ldt );
void SLARFT_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, float* v, const long long int* ldv, const float* tau,
              float* t, const long long int* ldt );
void slarft( const char* direct, const char* storev, const long long int* n,
             const long long int* k, float* v, const long long int* ldv, const float* tau,
             float* t, const long long int* ldt );
void slarft_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, float* v, const long long int* ldv, const float* tau,
              float* t, const long long int* ldt );

void SLARFX( const char* side, const long long int* m, const long long int* n,
             const float* v, const float* tau, float* c, const long long int* ldc,
             float* work );
void SLARFX_( const char* side, const long long int* m, const long long int* n,
              const float* v, const float* tau, float* c, const long long int* ldc,
              float* work );
void slarfx( const char* side, const long long int* m, const long long int* n,
             const float* v, const float* tau, float* c, const long long int* ldc,
             float* work );
void slarfx_( const char* side, const long long int* m, const long long int* n,
              const float* v, const float* tau, float* c, const long long int* ldc,
              float* work );

void SLARGV( const long long int* n, float* x, const long long int* incx, float* y,
             const long long int* incy, float* c, const long long int* incc );
void SLARGV_( const long long int* n, float* x, const long long int* incx, float* y,
              const long long int* incy, float* c, const long long int* incc );
void slargv( const long long int* n, float* x, const long long int* incx, float* y,
             const long long int* incy, float* c, const long long int* incc );
void slargv_( const long long int* n, float* x, const long long int* incx, float* y,
              const long long int* incy, float* c, const long long int* incc );

void SLARNV( const long long int* idist, long long int* iseed, const long long int* n,
             float* x );
void SLARNV_( const long long int* idist, long long int* iseed, const long long int* n,
              float* x );
void slarnv( const long long int* idist, long long int* iseed, const long long int* n,
             float* x );
void slarnv_( const long long int* idist, long long int* iseed, const long long int* n,
              float* x );

void SLARRA( const long long int* n, const float* d, float* e, float* e2,
             const float* spltol, const float* tnrm, long long int* nsplit,
             long long int* isplit, long long int* info );
void SLARRA_( const long long int* n, const float* d, float* e, float* e2,
              const float* spltol, const float* tnrm, long long int* nsplit,
              long long int* isplit, long long int* info );
void slarra( const long long int* n, const float* d, float* e, float* e2,
             const float* spltol, const float* tnrm, long long int* nsplit,
             long long int* isplit, long long int* info );
void slarra_( const long long int* n, const float* d, float* e, float* e2,
              const float* spltol, const float* tnrm, long long int* nsplit,
              long long int* isplit, long long int* info );

void SLARRB( const long long int* n, const float* d, const float* lld,
             const long long int* ifirst, const long long int* ilast, const float* rtol1,
             const float* rtol2, const long long int* offset, float* w, float* wgap,
             float* werr, float* work, long long int* iwork, const float* pivmin,
             const float* spdiam, const long long int* twist, long long int* info );
void SLARRB_( const long long int* n, const float* d, const float* lld,
              const long long int* ifirst, const long long int* ilast, const float* rtol1,
              const float* rtol2, const long long int* offset, float* w, float* wgap,
              float* werr, float* work, long long int* iwork, const float* pivmin,
              const float* spdiam, const long long int* twist, long long int* info );
void slarrb( const long long int* n, const float* d, const float* lld,
             const long long int* ifirst, const long long int* ilast, const float* rtol1,
             const float* rtol2, const long long int* offset, float* w, float* wgap,
             float* werr, float* work, long long int* iwork, const float* pivmin,
             const float* spdiam, const long long int* twist, long long int* info );
void slarrb_( const long long int* n, const float* d, const float* lld,
              const long long int* ifirst, const long long int* ilast, const float* rtol1,
              const float* rtol2, const long long int* offset, float* w, float* wgap,
              float* werr, float* work, long long int* iwork, const float* pivmin,
              const float* spdiam, const long long int* twist, long long int* info );

void SLARRC( const char* jobt, const long long int* n, const float* vl,
             const float* vu, const float* d, const float* e,
             const float* pivmin, long long int* eigcnt, long long int* lcnt,
             long long int* rcnt, long long int* info );
void SLARRC_( const char* jobt, const long long int* n, const float* vl,
              const float* vu, const float* d, const float* e,
              const float* pivmin, long long int* eigcnt, long long int* lcnt,
              long long int* rcnt, long long int* info );
void slarrc( const char* jobt, const long long int* n, const float* vl,
             const float* vu, const float* d, const float* e,
             const float* pivmin, long long int* eigcnt, long long int* lcnt,
             long long int* rcnt, long long int* info );
void slarrc_( const char* jobt, const long long int* n, const float* vl,
              const float* vu, const float* d, const float* e,
              const float* pivmin, long long int* eigcnt, long long int* lcnt,
              long long int* rcnt, long long int* info );

void SLARRD( const char* range, const char* order, const long long int* n,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* gers, const float* reltol,
             const float* d, const float* e, const float* e2,
             const float* pivmin, const long long int* nsplit, const long long int* isplit,
             long long int* m, float* w, float* werr, float* wl, float* wu,
             long long int* iblock, long long int* indexw, float* work, long long int* iwork,
             long long int* info );
void SLARRD_( const char* range, const char* order, const long long int* n,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* gers, const float* reltol,
              const float* d, const float* e, const float* e2,
              const float* pivmin, const long long int* nsplit,
              const long long int* isplit, long long int* m, float* w, float* werr,
              float* wl, float* wu, long long int* iblock, long long int* indexw,
              float* work, long long int* iwork, long long int* info );
void slarrd( const char* range, const char* order, const long long int* n,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* gers, const float* reltol,
             const float* d, const float* e, const float* e2,
             const float* pivmin, const long long int* nsplit, const long long int* isplit,
             long long int* m, float* w, float* werr, float* wl, float* wu,
             long long int* iblock, long long int* indexw, float* work, long long int* iwork,
             long long int* info );
void slarrd_( const char* range, const char* order, const long long int* n,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* gers, const float* reltol,
              const float* d, const float* e, const float* e2,
              const float* pivmin, const long long int* nsplit,
              const long long int* isplit, long long int* m, float* w, float* werr,
              float* wl, float* wu, long long int* iblock, long long int* indexw,
              float* work, long long int* iwork, long long int* info );

void SLARRE( const char* range, const long long int* n, float* vl, float* vu,
             const long long int* il, const long long int* iu, float* d, float* e,
             float* e2, const float* rtol1, const float* rtol2,
             const float* spltol, long long int* nsplit, long long int* isplit, long long int* m,
             float* w, float* werr, float* wgap, long long int* iblock,
             long long int* indexw, float* gers, float* pivmin, float* work,
             long long int* iwork, long long int* info );
void SLARRE_( const char* range, const long long int* n, float* vl, float* vu,
              const long long int* il, const long long int* iu, float* d, float* e,
              float* e2, const float* rtol1, const float* rtol2,
              const float* spltol, long long int* nsplit, long long int* isplit,
              long long int* m, float* w, float* werr, float* wgap, long long int* iblock,
              long long int* indexw, float* gers, float* pivmin, float* work,
              long long int* iwork, long long int* info );
void slarre( const char* range, const long long int* n, float* vl, float* vu,
             const long long int* il, const long long int* iu, float* d, float* e,
             float* e2, const float* rtol1, const float* rtol2,
             const float* spltol, long long int* nsplit, long long int* isplit, long long int* m,
             float* w, float* werr, float* wgap, long long int* iblock,
             long long int* indexw, float* gers, float* pivmin, float* work,
             long long int* iwork, long long int* info );
void slarre_( const char* range, const long long int* n, float* vl, float* vu,
              const long long int* il, const long long int* iu, float* d, float* e,
              float* e2, const float* rtol1, const float* rtol2,
              const float* spltol, long long int* nsplit, long long int* isplit,
              long long int* m, float* w, float* werr, float* wgap, long long int* iblock,
              long long int* indexw, float* gers, float* pivmin, float* work,
              long long int* iwork, long long int* info );

void SLARRF( const long long int* n, const float* d, const float* l, const float* ld,
             const long long int* clstrt, const long long int* clend, const float* w,
             float* wgap, const float* werr, const float* spdiam,
             const float* clgapl, float* clgapr, const float* pivmin,
             float* sigma, float* dplus, float* lplus, float* work,
             long long int* info );
void SLARRF_( const long long int* n, const float* d, const float* l,
              const float* ld, const long long int* clstrt, const long long int* clend,
              const float* w, float* wgap, const float* werr,
              const float* spdiam, const float* clgapl, float* clgapr,
              const float* pivmin, float* sigma, float* dplus, float* lplus,
              float* work, long long int* info );
void slarrf( const long long int* n, const float* d, const float* l, const float* ld,
             const long long int* clstrt, const long long int* clend, const float* w,
             float* wgap, const float* werr, const float* spdiam,
             const float* clgapl, float* clgapr, const float* pivmin,
             float* sigma, float* dplus, float* lplus, float* work,
             long long int* info );
void slarrf_( const long long int* n, const float* d, const float* l,
              const float* ld, const long long int* clstrt, const long long int* clend,
              const float* w, float* wgap, const float* werr,
              const float* spdiam, const float* clgapl, float* clgapr,
              const float* pivmin, float* sigma, float* dplus, float* lplus,
              float* work, long long int* info );

void SLARRJ( const long long int* n, const float* d, const float* e2,
             const long long int* ifirst, const long long int* ilast, const float* rtol,
             const long long int* offset, float* w, float* werr, float* work,
             long long int* iwork, const float* pivmin, const float* spdiam,
             long long int* info );
void SLARRJ_( const long long int* n, const float* d, const float* e2,
              const long long int* ifirst, const long long int* ilast, const float* rtol,
              const long long int* offset, float* w, float* werr, float* work,
              long long int* iwork, const float* pivmin, const float* spdiam,
              long long int* info );
void slarrj( const long long int* n, const float* d, const float* e2,
             const long long int* ifirst, const long long int* ilast, const float* rtol,
             const long long int* offset, float* w, float* werr, float* work,
             long long int* iwork, const float* pivmin, const float* spdiam,
             long long int* info );
void slarrj_( const long long int* n, const float* d, const float* e2,
              const long long int* ifirst, const long long int* ilast, const float* rtol,
              const long long int* offset, float* w, float* werr, float* work,
              long long int* iwork, const float* pivmin, const float* spdiam,
              long long int* info );

void SLARRK( const long long int* n, const long long int* iw, const float* gl,
             const float* gu, const float* d, const float* e2,
             const float* pivmin, const float* reltol, float* w, float* werr,
             long long int* info );
void SLARRK_( const long long int* n, const long long int* iw, const float* gl,
              const float* gu, const float* d, const float* e2,
              const float* pivmin, const float* reltol, float* w, float* werr,
              long long int* info );
void slarrk( const long long int* n, const long long int* iw, const float* gl,
             const float* gu, const float* d, const float* e2,
             const float* pivmin, const float* reltol, float* w, float* werr,
             long long int* info );
void slarrk_( const long long int* n, const long long int* iw, const float* gl,
              const float* gu, const float* d, const float* e2,
              const float* pivmin, const float* reltol, float* w, float* werr,
              long long int* info );

void SLARRR( const long long int* n, const float* d, float* e, long long int* info );
void SLARRR_( const long long int* n, const float* d, float* e, long long int* info );
void slarrr( const long long int* n, const float* d, float* e, long long int* info );
void slarrr_( const long long int* n, const float* d, float* e, long long int* info );

void SLARRV( const long long int* n, const float* vl, const float* vu, float* d,
             float* l, float* pivmin, const long long int* isplit, const long long int* m,
             const long long int* dol, const long long int* dou, const float* minrgp,
             const float* rtol1, const float* rtol2, float* w, float* werr,
             float* wgap, const long long int* iblock, const long long int* indexw,
             const float* gers, float* z, const long long int* ldz, long long int* isuppz,
             float* work, long long int* iwork, long long int* info );
void SLARRV_( const long long int* n, const float* vl, const float* vu, float* d,
              float* l, float* pivmin, const long long int* isplit, const long long int* m,
              const long long int* dol, const long long int* dou, const float* minrgp,
              const float* rtol1, const float* rtol2, float* w, float* werr,
              float* wgap, const long long int* iblock, const long long int* indexw,
              const float* gers, float* z, const long long int* ldz, long long int* isuppz,
              float* work, long long int* iwork, long long int* info );
void slarrv( const long long int* n, const float* vl, const float* vu, float* d,
             float* l, float* pivmin, const long long int* isplit, const long long int* m,
             const long long int* dol, const long long int* dou, const float* minrgp,
             const float* rtol1, const float* rtol2, float* w, float* werr,
             float* wgap, const long long int* iblock, const long long int* indexw,
             const float* gers, float* z, const long long int* ldz, long long int* isuppz,
             float* work, long long int* iwork, long long int* info );
void slarrv_( const long long int* n, const float* vl, const float* vu, float* d,
              float* l, float* pivmin, const long long int* isplit, const long long int* m,
              const long long int* dol, const long long int* dou, const float* minrgp,
              const float* rtol1, const float* rtol2, float* w, float* werr,
              float* wgap, const long long int* iblock, const long long int* indexw,
              const float* gers, float* z, const long long int* ldz, long long int* isuppz,
              float* work, long long int* iwork, long long int* info );

void SLARSCL2( const long long int* m, const long long int* n, const float* d, float* x,
               const long long int* ldx );
void SLARSCL2_( const long long int* m, const long long int* n, const float* d, float* x,
                const long long int* ldx );
void slarscl2( const long long int* m, const long long int* n, const float* d, float* x,
               const long long int* ldx );
void slarscl2_( const long long int* m, const long long int* n, const float* d, float* x,
                const long long int* ldx );

void SLARTG( const float* f, const float* g, float* cs, float* sn, float* r );
void SLARTG_( const float* f, const float* g, float* cs, float* sn, float* r );
void slartg( const float* f, const float* g, float* cs, float* sn, float* r );
void slartg_( const float* f, const float* g, float* cs, float* sn, float* r );

void SLARTV( const long long int* n, float* x, const long long int* incx, float* y,
             const long long int* incy, const float* c, const float* s,
             const long long int* incc );
void SLARTV_( const long long int* n, float* x, const long long int* incx, float* y,
              const long long int* incy, const float* c, const float* s,
              const long long int* incc );
void slartv( const long long int* n, float* x, const long long int* incx, float* y,
             const long long int* incy, const float* c, const float* s,
             const long long int* incc );
void slartv_( const long long int* n, float* x, const long long int* incx, float* y,
              const long long int* incy, const float* c, const float* s,
              const long long int* incc );

void SLARUV( long long int* iseed, const long long int* n, float* x );
void SLARUV_( long long int* iseed, const long long int* n, float* x );
void slaruv( long long int* iseed, const long long int* n, float* x );
void slaruv_( long long int* iseed, const long long int* n, float* x );

void SLARZB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const float* v,
             const long long int* ldv, const float* t, const long long int* ldt, float* c,
             const long long int* ldc, float* work, const long long int* ldwork );
void SLARZB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const float* v,
              const long long int* ldv, const float* t, const long long int* ldt, float* c,
              const long long int* ldc, float* work, const long long int* ldwork );
void slarzb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const float* v,
             const long long int* ldv, const float* t, const long long int* ldt, float* c,
             const long long int* ldc, float* work, const long long int* ldwork );
void slarzb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const float* v,
              const long long int* ldv, const float* t, const long long int* ldt, float* c,
              const long long int* ldc, float* work, const long long int* ldwork );

void SLARZ( const char* side, const long long int* m, const long long int* n,
            const long long int* l, const float* v, const long long int* incv,
            const float* tau, float* c, const long long int* ldc, float* work );
void SLARZ_( const char* side, const long long int* m, const long long int* n,
             const long long int* l, const float* v, const long long int* incv,
             const float* tau, float* c, const long long int* ldc, float* work );
void slarz( const char* side, const long long int* m, const long long int* n,
            const long long int* l, const float* v, const long long int* incv,
            const float* tau, float* c, const long long int* ldc, float* work );
void slarz_( const char* side, const long long int* m, const long long int* n,
             const long long int* l, const float* v, const long long int* incv,
             const float* tau, float* c, const long long int* ldc, float* work );

void SLARZT( const char* direct, const char* storev, const long long int* n,
             const long long int* k, float* v, const long long int* ldv, const float* tau,
             float* t, const long long int* ldt );
void SLARZT_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, float* v, const long long int* ldv, const float* tau,
              float* t, const long long int* ldt );
void slarzt( const char* direct, const char* storev, const long long int* n,
             const long long int* k, float* v, const long long int* ldv, const float* tau,
             float* t, const long long int* ldt );
void slarzt_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, float* v, const long long int* ldv, const float* tau,
              float* t, const long long int* ldt );

void SLAS2( const float* f, const float* g, const float* h, float* ssmin,
            float* ssmax );
void SLAS2_( const float* f, const float* g, const float* h, float* ssmin,
             float* ssmax );
void slas2( const float* f, const float* g, const float* h, float* ssmin,
            float* ssmax );
void slas2_( const float* f, const float* g, const float* h, float* ssmin,
             float* ssmax );

void SLASCL( const char* type, const long long int* kl, const long long int* ku,
             const float* cfrom, const float* cto, const long long int* m,
             const long long int* n, float* a, const long long int* lda, long long int* info );
void SLASCL_( const char* type, const long long int* kl, const long long int* ku,
              const float* cfrom, const float* cto, const long long int* m,
              const long long int* n, float* a, const long long int* lda, long long int* info );
void slascl( const char* type, const long long int* kl, const long long int* ku,
             const float* cfrom, const float* cto, const long long int* m,
             const long long int* n, float* a, const long long int* lda, long long int* info );
void slascl_( const char* type, const long long int* kl, const long long int* ku,
              const float* cfrom, const float* cto, const long long int* m,
              const long long int* n, float* a, const long long int* lda, long long int* info );

void SLASCL2( const long long int* m, const long long int* n, const float* d, float* x,
              const long long int* ldx );
void SLASCL2_( const long long int* m, const long long int* n, const float* d, float* x,
               const long long int* ldx );
void slascl2( const long long int* m, const long long int* n, const float* d, float* x,
              const long long int* ldx );
void slascl2_( const long long int* m, const long long int* n, const float* d, float* x,
               const long long int* ldx );

void SLASD0( const long long int* n, const long long int* sqre, float* d, const float* e,
             float* u, const long long int* ldu, float* vt, const long long int* ldvt,
             const long long int* smlsiz, long long int* iwork, float* work,
             long long int* info );
void SLASD0_( const long long int* n, const long long int* sqre, float* d, const float* e,
              float* u, const long long int* ldu, float* vt, const long long int* ldvt,
              const long long int* smlsiz, long long int* iwork, float* work,
              long long int* info );
void slasd0( const long long int* n, const long long int* sqre, float* d, const float* e,
             float* u, const long long int* ldu, float* vt, const long long int* ldvt,
             const long long int* smlsiz, long long int* iwork, float* work,
             long long int* info );
void slasd0_( const long long int* n, const long long int* sqre, float* d, const float* e,
              float* u, const long long int* ldu, float* vt, const long long int* ldvt,
              const long long int* smlsiz, long long int* iwork, float* work,
              long long int* info );

void SLASD1( const long long int* nl, const long long int* nr, const long long int* sqre,
             float* d, float* alpha, float* beta, float* u, const long long int* ldu,
             float* vt, const long long int* ldvt, long long int* idxq, long long int* iwork,
             float* work, long long int* info );
void SLASD1_( const long long int* nl, const long long int* nr, const long long int* sqre,
              float* d, float* alpha, float* beta, float* u,
              const long long int* ldu, float* vt, const long long int* ldvt,
              long long int* idxq, long long int* iwork, float* work, long long int* info );
void slasd1( const long long int* nl, const long long int* nr, const long long int* sqre,
             float* d, float* alpha, float* beta, float* u, const long long int* ldu,
             float* vt, const long long int* ldvt, long long int* idxq, long long int* iwork,
             float* work, long long int* info );
void slasd1_( const long long int* nl, const long long int* nr, const long long int* sqre,
              float* d, float* alpha, float* beta, float* u,
              const long long int* ldu, float* vt, const long long int* ldvt,
              long long int* idxq, long long int* iwork, float* work, long long int* info );

void SLASD2( const long long int* nl, const long long int* nr, const long long int* sqre,
             long long int* k, float* d, float* z, const float* alpha,
             const float* beta, float* u, const long long int* ldu, float* vt,
             const long long int* ldvt, float* dsigma, float* u2,
             const long long int* ldu2, float* vt2, const long long int* ldvt2,
             long long int* idxp, long long int* idx, long long int* idxc, long long int* idxq,
             long long int* coltyp, long long int* info );
void SLASD2_( const long long int* nl, const long long int* nr, const long long int* sqre,
              long long int* k, float* d, float* z, const float* alpha,
              const float* beta, float* u, const long long int* ldu, float* vt,
              const long long int* ldvt, float* dsigma, float* u2,
              const long long int* ldu2, float* vt2, const long long int* ldvt2,
              long long int* idxp, long long int* idx, long long int* idxc, long long int* idxq,
              long long int* coltyp, long long int* info );
void slasd2( const long long int* nl, const long long int* nr, const long long int* sqre,
             long long int* k, float* d, float* z, const float* alpha,
             const float* beta, float* u, const long long int* ldu, float* vt,
             const long long int* ldvt, float* dsigma, float* u2,
             const long long int* ldu2, float* vt2, const long long int* ldvt2,
             long long int* idxp, long long int* idx, long long int* idxc, long long int* idxq,
             long long int* coltyp, long long int* info );
void slasd2_( const long long int* nl, const long long int* nr, const long long int* sqre,
              long long int* k, float* d, float* z, const float* alpha,
              const float* beta, float* u, const long long int* ldu, float* vt,
              const long long int* ldvt, float* dsigma, float* u2,
              const long long int* ldu2, float* vt2, const long long int* ldvt2,
              long long int* idxp, long long int* idx, long long int* idxc, long long int* idxq,
              long long int* coltyp, long long int* info );

void SLASD3( const long long int* nl, const long long int* nr, const long long int* sqre,
             const long long int* k, float* d, float* q, const long long int* ldq,
             float* dsigma, float* u, const long long int* ldu, const float* u2,
             const long long int* ldu2, float* vt, const long long int* ldvt, float* vt2,
             const long long int* ldvt2, const long long int* idxc, const long long int* ctot,
             float* z, long long int* info );
void SLASD3_( const long long int* nl, const long long int* nr, const long long int* sqre,
              const long long int* k, float* d, float* q, const long long int* ldq,
              float* dsigma, float* u, const long long int* ldu, const float* u2,
              const long long int* ldu2, float* vt, const long long int* ldvt, float* vt2,
              const long long int* ldvt2, const long long int* idxc, const long long int* ctot,
              float* z, long long int* info );
void slasd3( const long long int* nl, const long long int* nr, const long long int* sqre,
             const long long int* k, float* d, float* q, const long long int* ldq,
             float* dsigma, float* u, const long long int* ldu, const float* u2,
             const long long int* ldu2, float* vt, const long long int* ldvt, float* vt2,
             const long long int* ldvt2, const long long int* idxc, const long long int* ctot,
             float* z, long long int* info );
void slasd3_( const long long int* nl, const long long int* nr, const long long int* sqre,
              const long long int* k, float* d, float* q, const long long int* ldq,
              float* dsigma, float* u, const long long int* ldu, const float* u2,
              const long long int* ldu2, float* vt, const long long int* ldvt, float* vt2,
              const long long int* ldvt2, const long long int* idxc, const long long int* ctot,
              float* z, long long int* info );

void SLASD4( const long long int* n, const long long int* i, const float* d,
             const float* z, float* delta, const float* rho, float* sigma,
             float* work, long long int* info );
void SLASD4_( const long long int* n, const long long int* i, const float* d,
              const float* z, float* delta, const float* rho, float* sigma,
              float* work, long long int* info );
void slasd4( const long long int* n, const long long int* i, const float* d,
             const float* z, float* delta, const float* rho, float* sigma,
             float* work, long long int* info );
void slasd4_( const long long int* n, const long long int* i, const float* d,
              const float* z, float* delta, const float* rho, float* sigma,
              float* work, long long int* info );

void SLASD5( const long long int* i, const float* d, const float* z, float* delta,
             const float* rho, float* dsigma, float* work );
void SLASD5_( const long long int* i, const float* d, const float* z, float* delta,
              const float* rho, float* dsigma, float* work );
void slasd5( const long long int* i, const float* d, const float* z, float* delta,
             const float* rho, float* dsigma, float* work );
void slasd5_( const long long int* i, const float* d, const float* z, float* delta,
              const float* rho, float* dsigma, float* work );

void SLASD6( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, float* d, float* vf, float* vl, float* alpha,
             float* beta, long long int* idxq, long long int* perm, long long int* givptr,
             long long int* givcol, const long long int* ldgcol, float* givnum,
             const long long int* ldgnum, float* poles, float* difl, float* difr,
             float* z, long long int* k, float* c, float* s, float* work,
             long long int* iwork, long long int* info );
void SLASD6_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, float* d, float* vf, float* vl,
              float* alpha, float* beta, long long int* idxq, long long int* perm,
              long long int* givptr, long long int* givcol, const long long int* ldgcol,
              float* givnum, const long long int* ldgnum, float* poles, float* difl,
              float* difr, float* z, long long int* k, float* c, float* s,
              float* work, long long int* iwork, long long int* info );
void slasd6( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, float* d, float* vf, float* vl, float* alpha,
             float* beta, long long int* idxq, long long int* perm, long long int* givptr,
             long long int* givcol, const long long int* ldgcol, float* givnum,
             const long long int* ldgnum, float* poles, float* difl, float* difr,
             float* z, long long int* k, float* c, float* s, float* work,
             long long int* iwork, long long int* info );
void slasd6_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, float* d, float* vf, float* vl,
              float* alpha, float* beta, long long int* idxq, long long int* perm,
              long long int* givptr, long long int* givcol, const long long int* ldgcol,
              float* givnum, const long long int* ldgnum, float* poles, float* difl,
              float* difr, float* z, long long int* k, float* c, float* s,
              float* work, long long int* iwork, long long int* info );

void SLASD7( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, long long int* k, float* d, float* z, float* zw,
             float* vf, float* vfw, float* vl, float* vlw, const float* alpha,
             const float* beta, float* dsigma, long long int* idx, long long int* idxp,
             const long long int* idxq, long long int* perm, long long int* givptr,
             long long int* givcol, const long long int* ldgcol, float* givnum,
             const long long int* ldgnum, float* c, float* s, long long int* info );
void SLASD7_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, long long int* k, float* d, float* z, float* zw,
              float* vf, float* vfw, float* vl, float* vlw, const float* alpha,
              const float* beta, float* dsigma, long long int* idx, long long int* idxp,
              const long long int* idxq, long long int* perm, long long int* givptr,
              long long int* givcol, const long long int* ldgcol, float* givnum,
              const long long int* ldgnum, float* c, float* s, long long int* info );
void slasd7( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, long long int* k, float* d, float* z, float* zw,
             float* vf, float* vfw, float* vl, float* vlw, const float* alpha,
             const float* beta, float* dsigma, long long int* idx, long long int* idxp,
             const long long int* idxq, long long int* perm, long long int* givptr,
             long long int* givcol, const long long int* ldgcol, float* givnum,
             const long long int* ldgnum, float* c, float* s, long long int* info );
void slasd7_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, long long int* k, float* d, float* z, float* zw,
              float* vf, float* vfw, float* vl, float* vlw, const float* alpha,
              const float* beta, float* dsigma, long long int* idx, long long int* idxp,
              const long long int* idxq, long long int* perm, long long int* givptr,
              long long int* givcol, const long long int* ldgcol, float* givnum,
              const long long int* ldgnum, float* c, float* s, long long int* info );

void SLASD8( const long long int* icompq, const long long int* k, float* d, float* z,
             float* vf, float* vl, float* difl, float* difr,
             const long long int* lddifr, float* dsigma, float* work,
             long long int* info );
void SLASD8_( const long long int* icompq, const long long int* k, float* d, float* z,
              float* vf, float* vl, float* difl, float* difr,
              const long long int* lddifr, float* dsigma, float* work,
              long long int* info );
void slasd8( const long long int* icompq, const long long int* k, float* d, float* z,
             float* vf, float* vl, float* difl, float* difr,
             const long long int* lddifr, float* dsigma, float* work,
             long long int* info );
void slasd8_( const long long int* icompq, const long long int* k, float* d, float* z,
              float* vf, float* vl, float* difl, float* difr,
              const long long int* lddifr, float* dsigma, float* work,
              long long int* info );

void SLASDA( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* sqre, float* d, const float* e, float* u,
             const long long int* ldu, float* vt, long long int* k, float* difl,
             float* difr, float* z, float* poles, long long int* givptr,
             long long int* givcol, const long long int* ldgcol, long long int* perm,
             float* givnum, float* c, float* s, float* work, long long int* iwork,
             long long int* info );
void SLASDA_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* sqre, float* d, const float* e, float* u,
              const long long int* ldu, float* vt, long long int* k, float* difl,
              float* difr, float* z, float* poles, long long int* givptr,
              long long int* givcol, const long long int* ldgcol, long long int* perm,
              float* givnum, float* c, float* s, float* work, long long int* iwork,
              long long int* info );
void slasda( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* sqre, float* d, const float* e, float* u,
             const long long int* ldu, float* vt, long long int* k, float* difl,
             float* difr, float* z, float* poles, long long int* givptr,
             long long int* givcol, const long long int* ldgcol, long long int* perm,
             float* givnum, float* c, float* s, float* work, long long int* iwork,
             long long int* info );
void slasda_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* sqre, float* d, const float* e, float* u,
              const long long int* ldu, float* vt, long long int* k, float* difl,
              float* difr, float* z, float* poles, long long int* givptr,
              long long int* givcol, const long long int* ldgcol, long long int* perm,
              float* givnum, float* c, float* s, float* work, long long int* iwork,
              long long int* info );

void SLASDQ( const char* uplo, const long long int* sqre, const long long int* n,
             const long long int* ncvt, const long long int* nru, const long long int* ncc,
             float* d, float* e, float* vt, const long long int* ldvt, float* u,
             const long long int* ldu, float* c, const long long int* ldc, float* work,
             long long int* info );
void SLASDQ_( const char* uplo, const long long int* sqre, const long long int* n,
              const long long int* ncvt, const long long int* nru, const long long int* ncc,
              float* d, float* e, float* vt, const long long int* ldvt, float* u,
              const long long int* ldu, float* c, const long long int* ldc, float* work,
              long long int* info );
void slasdq( const char* uplo, const long long int* sqre, const long long int* n,
             const long long int* ncvt, const long long int* nru, const long long int* ncc,
             float* d, float* e, float* vt, const long long int* ldvt, float* u,
             const long long int* ldu, float* c, const long long int* ldc, float* work,
             long long int* info );
void slasdq_( const char* uplo, const long long int* sqre, const long long int* n,
              const long long int* ncvt, const long long int* nru, const long long int* ncc,
              float* d, float* e, float* vt, const long long int* ldvt, float* u,
              const long long int* ldu, float* c, const long long int* ldc, float* work,
              long long int* info );

void SLASDT( const long long int* n, long long int* lvl, long long int* nd, long long int* inode,
             long long int* ndiml, long long int* ndimr, const long long int* msub );
void SLASDT_( const long long int* n, long long int* lvl, long long int* nd, long long int* inode,
              long long int* ndiml, long long int* ndimr, const long long int* msub );
void slasdt( const long long int* n, long long int* lvl, long long int* nd, long long int* inode,
             long long int* ndiml, long long int* ndimr, const long long int* msub );
void slasdt_( const long long int* n, long long int* lvl, long long int* nd, long long int* inode,
              long long int* ndiml, long long int* ndimr, const long long int* msub );

void SLASET( const char* uplo, const long long int* m, const long long int* n,
             const float* alpha, const float* beta, float* a,
             const long long int* lda );
void SLASET_( const char* uplo, const long long int* m, const long long int* n,
              const float* alpha, const float* beta, float* a,
              const long long int* lda );
void slaset( const char* uplo, const long long int* m, const long long int* n,
             const float* alpha, const float* beta, float* a,
             const long long int* lda );
void slaset_( const char* uplo, const long long int* m, const long long int* n,
              const float* alpha, const float* beta, float* a,
              const long long int* lda );

void SLASQ1( const long long int* n, float* d, float* e, float* work,
             long long int* info );
void SLASQ1_( const long long int* n, float* d, float* e, float* work,
              long long int* info );
void slasq1( const long long int* n, float* d, float* e, float* work,
             long long int* info );
void slasq1_( const long long int* n, float* d, float* e, float* work,
              long long int* info );

void SLASQ2( const long long int* n, float* z, long long int* info );
void SLASQ2_( const long long int* n, float* z, long long int* info );
void slasq2( const long long int* n, float* z, long long int* info );
void slasq2_( const long long int* n, float* z, long long int* info );

void SLASQ3( const long long int* i0, const long long int* n0, const float* z, long long int* pp,
             float* dmin, float* sigma, float* desig, const float* qmax,
             long long int* nfail, long long int* iter, long long int* ndiv, const long long int* ieee,
             long long int* ttype, float* dmin1, float* dmin2, float* dn, float* dn1,
             float* dn2, float* g, float* tau );
void SLASQ3_( const long long int* i0, const long long int* n0, const float* z,
              long long int* pp, float* dmin, float* sigma, float* desig,
              const float* qmax, long long int* nfail, long long int* iter, long long int* ndiv,
              const long long int* ieee, long long int* ttype, float* dmin1, float* dmin2,
              float* dn, float* dn1, float* dn2, float* g, float* tau );
void slasq3( const long long int* i0, const long long int* n0, const float* z, long long int* pp,
             float* dmin, float* sigma, float* desig, const float* qmax,
             long long int* nfail, long long int* iter, long long int* ndiv, const long long int* ieee,
             long long int* ttype, float* dmin1, float* dmin2, float* dn, float* dn1,
             float* dn2, float* g, float* tau );
void slasq3_( const long long int* i0, const long long int* n0, const float* z,
              long long int* pp, float* dmin, float* sigma, float* desig,
              const float* qmax, long long int* nfail, long long int* iter, long long int* ndiv,
              const long long int* ieee, long long int* ttype, float* dmin1, float* dmin2,
              float* dn, float* dn1, float* dn2, float* g, float* tau );

void SLASQ4( const long long int* i0, const long long int* n0, const float* z,
             const long long int* pp, long long int* n0in, const float* dmin,
             const float* dmin1, const float* dmin2, const float* dn,
             const float* dn1, const float* dn2, float* tau, long long int* ttype,
             float* g );
void SLASQ4_( const long long int* i0, const long long int* n0, const float* z,
              const long long int* pp, long long int* n0in, const float* dmin,
              const float* dmin1, const float* dmin2, const float* dn,
              const float* dn1, const float* dn2, float* tau, long long int* ttype,
              float* g );
void slasq4( const long long int* i0, const long long int* n0, const float* z,
             const long long int* pp, long long int* n0in, const float* dmin,
             const float* dmin1, const float* dmin2, const float* dn,
             const float* dn1, const float* dn2, float* tau, long long int* ttype,
             float* g );
void slasq4_( const long long int* i0, const long long int* n0, const float* z,
              const long long int* pp, long long int* n0in, const float* dmin,
              const float* dmin1, const float* dmin2, const float* dn,
              const float* dn1, const float* dn2, float* tau, long long int* ttype,
              float* g );

void SLASQ5( const long long int* i0, const long long int* n0, const float* z,
             const long long int* pp, const float* tau, const float* sigma,
             float* dmin, float* dmin1, float* dmin2, float* dn,
             float* dnm1, float* dnm2, const long long int* ieee,
             const float* eps );
void SLASQ5_( const long long int* i0, const long long int* n0, const float* z,
              const long long int* pp, const float* tau, const float* sigma,
              float* dmin, float* dmin1, float* dmin2, float* dn,
              float* dnm1, float* dnm2, const long long int* ieee,
              const float* eps );
void slasq5( const long long int* i0, const long long int* n0, const float* z,
             const long long int* pp, const float* tau, const float* sigma,
             float* dmin, float* dmin1, float* dmin2, float* dn,
             float* dnm1, float* dnm2, const long long int* ieee,
             const float* eps );
void slasq5_( const long long int* i0, const long long int* n0, const float* z,
              const long long int* pp, const float* tau, const float* sigma,
              float* dmin, float* dmin1, float* dmin2, float* dn,
              float* dnm1, float* dnm2, const long long int* ieee,
              const float* eps );

void SLASQ6( const long long int* i0, const long long int* n0, const float* z,
             const long long int* pp, float* dmin, float* dmin1, float* dmin2,
             float* dn, float* dnm1, float* dnm2 );
void SLASQ6_( const long long int* i0, const long long int* n0, const float* z,
              const long long int* pp, float* dmin, float* dmin1, float* dmin2,
              float* dn, float* dnm1, float* dnm2 );
void slasq6( const long long int* i0, const long long int* n0, const float* z,
             const long long int* pp, float* dmin, float* dmin1, float* dmin2,
             float* dn, float* dnm1, float* dnm2 );
void slasq6_( const long long int* i0, const long long int* n0, const float* z,
              const long long int* pp, float* dmin, float* dmin1, float* dmin2,
              float* dn, float* dnm1, float* dnm2 );

void SLASR( const char* side, const char* pivot, const char* direct,
            const long long int* m, const long long int* n, const float* c, const float* s,
            float* a, const long long int* lda );
void SLASR_( const char* side, const char* pivot, const char* direct,
             const long long int* m, const long long int* n, const float* c,
             const float* s, float* a, const long long int* lda );
void slasr( const char* side, const char* pivot, const char* direct,
            const long long int* m, const long long int* n, const float* c, const float* s,
            float* a, const long long int* lda );
void slasr_( const char* side, const char* pivot, const char* direct,
             const long long int* m, const long long int* n, const float* c,
             const float* s, float* a, const long long int* lda );

void SLASRT( const char* id, const long long int* n, float* d, long long int* info );
void SLASRT_( const char* id, const long long int* n, float* d, long long int* info );
void slasrt( const char* id, const long long int* n, float* d, long long int* info );
void slasrt_( const char* id, const long long int* n, float* d, long long int* info );

void SLASSQ( const long long int* n, const float* x, const long long int* incx,
             float* scale, float* sumsq );
void SLASSQ_( const long long int* n, const float* x, const long long int* incx,
              float* scale, float* sumsq );
void slassq( const long long int* n, const float* x, const long long int* incx,
             float* scale, float* sumsq );
void slassq_( const long long int* n, const float* x, const long long int* incx,
              float* scale, float* sumsq );

void SLASV2( const float* f, const float* g, const float* h, float* ssmin,
             float* ssmax, float* snr, float* csr, float* snl, float* csl );
void SLASV2_( const float* f, const float* g, const float* h, float* ssmin,
              float* ssmax, float* snr, float* csr, float* snl, float* csl );
void slasv2( const float* f, const float* g, const float* h, float* ssmin,
             float* ssmax, float* snr, float* csr, float* snl, float* csl );
void slasv2_( const float* f, const float* g, const float* h, float* ssmin,
              float* ssmax, float* snr, float* csr, float* snl, float* csl );

void SLASWP( const long long int* n, float* a, const long long int* lda, const long long int* k1,
             const long long int* k2, const long long int* ipiv, const long long int* incx );
void SLASWP_( const long long int* n, float* a, const long long int* lda,
              const long long int* k1, const long long int* k2, const long long int* ipiv,
              const long long int* incx );
void slaswp( const long long int* n, float* a, const long long int* lda, const long long int* k1,
             const long long int* k2, const long long int* ipiv, const long long int* incx );
void slaswp_( const long long int* n, float* a, const long long int* lda,
              const long long int* k1, const long long int* k2, const long long int* ipiv,
              const long long int* incx );

void SLASY2( const long long int* ltranl, const long long int* ltranr, const long long int* isgn,
             const long long int* n1, const long long int* n2, const float* tl,
             const long long int* ldtl, const float* tr, const long long int* ldtr,
             const float* b, const long long int* ldb, float* scale, float* x,
             const long long int* ldx, float* xnorm, long long int* info );
void SLASY2_( const long long int* ltranl, const long long int* ltranr,
              const long long int* isgn, const long long int* n1, const long long int* n2,
              const float* tl, const long long int* ldtl, const float* tr,
              const long long int* ldtr, const float* b, const long long int* ldb,
              float* scale, float* x, const long long int* ldx, float* xnorm,
              long long int* info );
void slasy2( const long long int* ltranl, const long long int* ltranr, const long long int* isgn,
             const long long int* n1, const long long int* n2, const float* tl,
             const long long int* ldtl, const float* tr, const long long int* ldtr,
             const float* b, const long long int* ldb, float* scale, float* x,
             const long long int* ldx, float* xnorm, long long int* info );
void slasy2_( const long long int* ltranl, const long long int* ltranr,
              const long long int* isgn, const long long int* n1, const long long int* n2,
              const float* tl, const long long int* ldtl, const float* tr,
              const long long int* ldtr, const float* b, const long long int* ldb,
              float* scale, float* x, const long long int* ldx, float* xnorm,
              long long int* info );

void SLASYF( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, float* a, const long long int* lda, long long int* ipiv,
             float* w, const long long int* ldw, long long int* info );
void SLASYF_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, float* a, const long long int* lda, long long int* ipiv,
              float* w, const long long int* ldw, long long int* info );
void slasyf( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, float* a, const long long int* lda, long long int* ipiv,
             float* w, const long long int* ldw, long long int* info );
void slasyf_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, float* a, const long long int* lda, long long int* ipiv,
              float* w, const long long int* ldw, long long int* info );

void SLATBS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const long long int* kd,
             const float* ab, const long long int* ldab, float* x, float* scale,
             float* cnorm, long long int* info );
void SLATBS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const long long int* kd,
              const float* ab, const long long int* ldab, float* x, float* scale,
              float* cnorm, long long int* info );
void slatbs( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const long long int* kd,
             const float* ab, const long long int* ldab, float* x, float* scale,
             float* cnorm, long long int* info );
void slatbs_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const long long int* kd,
              const float* ab, const long long int* ldab, float* x, float* scale,
              float* cnorm, long long int* info );

void SLATDF( const long long int* ijob, const long long int* n, const float* z,
             const long long int* ldz, float* rhs, float* rdsum, float* rdscal,
             const long long int* ipiv, const long long int* jpiv );
void SLATDF_( const long long int* ijob, const long long int* n, const float* z,
              const long long int* ldz, float* rhs, float* rdsum, float* rdscal,
              const long long int* ipiv, const long long int* jpiv );
void slatdf( const long long int* ijob, const long long int* n, const float* z,
             const long long int* ldz, float* rhs, float* rdsum, float* rdscal,
             const long long int* ipiv, const long long int* jpiv );
void slatdf_( const long long int* ijob, const long long int* n, const float* z,
              const long long int* ldz, float* rhs, float* rdsum, float* rdscal,
              const long long int* ipiv, const long long int* jpiv );

void SLATPS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const float* ap, float* x,
             float* scale, float* cnorm, long long int* info );
void SLATPS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const float* ap, float* x,
              float* scale, float* cnorm, long long int* info );
void slatps( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const float* ap, float* x,
             float* scale, float* cnorm, long long int* info );
void slatps_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const float* ap, float* x,
              float* scale, float* cnorm, long long int* info );

void SLATRD( const char* uplo, const long long int* n, const long long int* nb, float* a,
             const long long int* lda, float* e, float* tau, float* w,
             const long long int* ldw );
void SLATRD_( const char* uplo, const long long int* n, const long long int* nb, float* a,
              const long long int* lda, float* e, float* tau, float* w,
              const long long int* ldw );
void slatrd( const char* uplo, const long long int* n, const long long int* nb, float* a,
             const long long int* lda, float* e, float* tau, float* w,
             const long long int* ldw );
void slatrd_( const char* uplo, const long long int* n, const long long int* nb, float* a,
              const long long int* lda, float* e, float* tau, float* w,
              const long long int* ldw );

void SLATRS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const float* a,
             const long long int* lda, float* x, float* scale, float* cnorm,
             long long int* info );
void SLATRS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const float* a,
              const long long int* lda, float* x, float* scale, float* cnorm,
              long long int* info );
void slatrs( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const float* a,
             const long long int* lda, float* x, float* scale, float* cnorm,
             long long int* info );
void slatrs_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const float* a,
              const long long int* lda, float* x, float* scale, float* cnorm,
              long long int* info );

void SLATRZ( const long long int* m, const long long int* n, const long long int* l, float* a,
             const long long int* lda, float* tau, float* work );
void SLATRZ_( const long long int* m, const long long int* n, const long long int* l, float* a,
              const long long int* lda, float* tau, float* work );
void slatrz( const long long int* m, const long long int* n, const long long int* l, float* a,
             const long long int* lda, float* tau, float* work );
void slatrz_( const long long int* m, const long long int* n, const long long int* l, float* a,
              const long long int* lda, float* tau, float* work );

void SLATZM( const char* side, const long long int* m, const long long int* n,
             const float* v, const long long int* incv, const float* tau, float* c1,
             float* c2, const long long int* ldc, float* work );
void SLATZM_( const char* side, const long long int* m, const long long int* n,
              const float* v, const long long int* incv, const float* tau, float* c1,
              float* c2, const long long int* ldc, float* work );
void slatzm( const char* side, const long long int* m, const long long int* n,
             const float* v, const long long int* incv, const float* tau, float* c1,
             float* c2, const long long int* ldc, float* work );
void slatzm_( const char* side, const long long int* m, const long long int* n,
              const float* v, const long long int* incv, const float* tau, float* c1,
              float* c2, const long long int* ldc, float* work );

void SLAUU2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void SLAUU2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );
void slauu2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void slauu2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );

void SLAUUM( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void SLAUUM_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );
void slauum( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void slauum_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );

void SOPGTR( const char* uplo, const long long int* n, const float* ap,
             const float* tau, float* q, const long long int* ldq, float* work,
             long long int* info );
void SOPGTR_( const char* uplo, const long long int* n, const float* ap,
              const float* tau, float* q, const long long int* ldq, float* work,
              long long int* info );
void sopgtr( const char* uplo, const long long int* n, const float* ap,
             const float* tau, float* q, const long long int* ldq, float* work,
             long long int* info );
void sopgtr_( const char* uplo, const long long int* n, const float* ap,
              const float* tau, float* q, const long long int* ldq, float* work,
              long long int* info );

void SOPMTR( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const float* ap,
             const float* tau, float* c, const long long int* ldc, float* work,
             long long int* info );
void SOPMTR_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const float* ap,
              const float* tau, float* c, const long long int* ldc, float* work,
              long long int* info );
void sopmtr( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const float* ap,
             const float* tau, float* c, const long long int* ldc, float* work,
             long long int* info );
void sopmtr_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const float* ap,
              const float* tau, float* c, const long long int* ldc, float* work,
              long long int* info );

void SORG2L( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             long long int* info );
void SORG2L_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              long long int* info );
void sorg2l( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             long long int* info );
void sorg2l_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              long long int* info );

void SORG2R( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             long long int* info );
void SORG2R_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              long long int* info );
void sorg2r( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             long long int* info );
void sorg2r_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              long long int* info );

void SORGBR( const char* vect, const long long int* m, const long long int* n,
             const long long int* k, float* a, const long long int* lda, const float* tau,
             float* work, const long long int* lwork, long long int* info );
void SORGBR_( const char* vect, const long long int* m, const long long int* n,
              const long long int* k, float* a, const long long int* lda, const float* tau,
              float* work, const long long int* lwork, long long int* info );
void sorgbr( const char* vect, const long long int* m, const long long int* n,
             const long long int* k, float* a, const long long int* lda, const float* tau,
             float* work, const long long int* lwork, long long int* info );
void sorgbr_( const char* vect, const long long int* m, const long long int* n,
              const long long int* k, float* a, const long long int* lda, const float* tau,
              float* work, const long long int* lwork, long long int* info );

void SORGHR( const long long int* n, const long long int* ilo, const long long int* ihi,
             float* a, const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void SORGHR_( const long long int* n, const long long int* ilo, const long long int* ihi,
              float* a, const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );
void sorghr( const long long int* n, const long long int* ilo, const long long int* ihi,
             float* a, const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void sorghr_( const long long int* n, const long long int* ilo, const long long int* ihi,
              float* a, const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );

void SORGL2( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             long long int* info );
void SORGL2_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              long long int* info );
void sorgl2( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             long long int* info );
void sorgl2_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              long long int* info );

void SORGLQ( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void SORGLQ_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );
void sorglq( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void sorglq_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );

void SORGQL( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void SORGQL_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );
void sorgql( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void sorgql_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );

void SORGQR( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void SORGQR_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );
void sorgqr( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void sorgqr_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );

void SORGR2( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             long long int* info );
void SORGR2_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              long long int* info );
void sorgr2( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             long long int* info );
void sorgr2_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              long long int* info );

void SORGRQ( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void SORGRQ_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );
void sorgrq( const long long int* m, const long long int* n, const long long int* k, float* a,
             const long long int* lda, const float* tau, float* work,
             const long long int* lwork, long long int* info );
void sorgrq_( const long long int* m, const long long int* n, const long long int* k, float* a,
              const long long int* lda, const float* tau, float* work,
              const long long int* lwork, long long int* info );

void SORGTR( const char* uplo, const long long int* n, float* a, const long long int* lda,
             const float* tau, float* work, const long long int* lwork,
             long long int* info );
void SORGTR_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              const float* tau, float* work, const long long int* lwork,
              long long int* info );
void sorgtr( const char* uplo, const long long int* n, float* a, const long long int* lda,
             const float* tau, float* work, const long long int* lwork,
             long long int* info );
void sorgtr_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              const float* tau, float* work, const long long int* lwork,
              long long int* info );

void SORM2L( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void SORM2L_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );
void sorm2l( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void sorm2l_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );

void SORM2R( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void SORM2R_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );
void sorm2r( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void sorm2r_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );

void SORMBR( const char* vect, const char* side, const char* trans,
             const long long int* m, const long long int* n, const long long int* k,
             const float* a, const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void SORMBR_( const char* vect, const char* side, const char* trans,
              const long long int* m, const long long int* n, const long long int* k,
              const float* a, const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );
void sormbr( const char* vect, const char* side, const char* trans,
             const long long int* m, const long long int* n, const long long int* k,
             const float* a, const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void sormbr_( const char* vect, const char* side, const char* trans,
              const long long int* m, const long long int* n, const long long int* k,
              const float* a, const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );

void SORMHR( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             const float* a, const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void SORMHR_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              const float* a, const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );
void sormhr( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             const float* a, const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void sormhr_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              const float* a, const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );

void SORML2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void SORML2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );
void sorml2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void sorml2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );

void SORMLQ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void SORMLQ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );
void sormlq( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void sormlq_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );

void SORMQL( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void SORMQL_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );
void sormql( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void sormql_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );

void SORMQR( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void SORMQR_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );
void sormqr( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void sormqr_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );

void SORMR2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void SORMR2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );
void sormr2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void sormr2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );

void SORMR3( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const float* a, const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void SORMR3_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const float* a, const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );
void sormr3( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const float* a, const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, long long int* info );
void sormr3_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const float* a, const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, long long int* info );

void SORMRQ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void SORMRQ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );
void sormrq( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void sormrq_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );

void SORMRZ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const float* a, const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void SORMRZ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const float* a, const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );
void sormrz( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const float* a, const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void sormrz_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const float* a, const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );

void SORMTR( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void SORMTR_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );
void sormtr( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const float* a,
             const long long int* lda, const float* tau, float* c,
             const long long int* ldc, float* work, const long long int* lwork,
             long long int* info );
void sormtr_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const float* a,
              const long long int* lda, const float* tau, float* c,
              const long long int* ldc, float* work, const long long int* lwork,
              long long int* info );

void SPBCON( const char* uplo, const long long int* n, const long long int* kd,
             const float* ab, const long long int* ldab, const float* anorm,
             float* rcond, float* work, long long int* iwork, long long int* info );
void SPBCON_( const char* uplo, const long long int* n, const long long int* kd,
              const float* ab, const long long int* ldab, const float* anorm,
              float* rcond, float* work, long long int* iwork, long long int* info );
void spbcon( const char* uplo, const long long int* n, const long long int* kd,
             const float* ab, const long long int* ldab, const float* anorm,
             float* rcond, float* work, long long int* iwork, long long int* info );
void spbcon_( const char* uplo, const long long int* n, const long long int* kd,
              const float* ab, const long long int* ldab, const float* anorm,
              float* rcond, float* work, long long int* iwork, long long int* info );

void SPBEQU( const char* uplo, const long long int* n, const long long int* kd,
             const float* ab, const long long int* ldab, float* s, float* scond,
             float* amax, long long int* info );
void SPBEQU_( const char* uplo, const long long int* n, const long long int* kd,
              const float* ab, const long long int* ldab, float* s, float* scond,
              float* amax, long long int* info );
void spbequ( const char* uplo, const long long int* n, const long long int* kd,
             const float* ab, const long long int* ldab, float* s, float* scond,
             float* amax, long long int* info );
void spbequ_( const char* uplo, const long long int* n, const long long int* kd,
              const float* ab, const long long int* ldab, float* s, float* scond,
              float* amax, long long int* info );

void SPBRFS( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const float* ab, const long long int* ldab,
             const float* afb, const long long int* ldafb, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void SPBRFS_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const float* ab, const long long int* ldab,
              const float* afb, const long long int* ldafb, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );
void spbrfs( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const float* ab, const long long int* ldab,
             const float* afb, const long long int* ldafb, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void spbrfs_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const float* ab, const long long int* ldab,
              const float* afb, const long long int* ldafb, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );

void SPBSTF( const char* uplo, const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, long long int* info );
void SPBSTF_( const char* uplo, const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, long long int* info );
void spbstf( const char* uplo, const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, long long int* info );
void spbstf_( const char* uplo, const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, long long int* info );

void SPBSV( const char* uplo, const long long int* n, const long long int* kd,
            const long long int* nrhs, float* ab, const long long int* ldab, float* b,
            const long long int* ldb, long long int* info );
void SPBSV_( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, float* ab, const long long int* ldab, float* b,
             const long long int* ldb, long long int* info );
void spbsv( const char* uplo, const long long int* n, const long long int* kd,
            const long long int* nrhs, float* ab, const long long int* ldab, float* b,
            const long long int* ldb, long long int* info );
void spbsv_( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, float* ab, const long long int* ldab, float* b,
             const long long int* ldb, long long int* info );

void SPBSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* kd, const long long int* nrhs, float* ab,
             const long long int* ldab, float* afb, const long long int* ldafb,
             char* equed, float* s, float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             float* work, long long int* iwork, long long int* info );
void SPBSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* kd, const long long int* nrhs, float* ab,
              const long long int* ldab, float* afb, const long long int* ldafb,
              char* equed, float* s, float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );
void spbsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* kd, const long long int* nrhs, float* ab,
             const long long int* ldab, float* afb, const long long int* ldafb,
             char* equed, float* s, float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* rcond, float* ferr, float* berr,
             float* work, long long int* iwork, long long int* info );
void spbsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* kd, const long long int* nrhs, float* ab,
              const long long int* ldab, float* afb, const long long int* ldafb,
              char* equed, float* s, float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );

void SPBTF2( const char* uplo, const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, long long int* info );
void SPBTF2_( const char* uplo, const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, long long int* info );
void spbtf2( const char* uplo, const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, long long int* info );
void spbtf2_( const char* uplo, const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, long long int* info );

void SPBTRF( const char* uplo, const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, long long int* info );
void SPBTRF_( const char* uplo, const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, long long int* info );
void spbtrf( const char* uplo, const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, long long int* info );
void spbtrf_( const char* uplo, const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, long long int* info );

void SPBTRS( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const float* ab, const long long int* ldab,
             float* b, const long long int* ldb, long long int* info );
void SPBTRS_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const float* ab, const long long int* ldab,
              float* b, const long long int* ldb, long long int* info );
void spbtrs( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const float* ab, const long long int* ldab,
             float* b, const long long int* ldb, long long int* info );
void spbtrs_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const float* ab, const long long int* ldab,
              float* b, const long long int* ldb, long long int* info );

void SPFTRF( const char* transr, const char* uplo, const long long int* n, float* a,
             long long int* info );
void SPFTRF_( const char* transr, const char* uplo, const long long int* n, float* a,
              long long int* info );
void spftrf( const char* transr, const char* uplo, const long long int* n, float* a,
             long long int* info );
void spftrf_( const char* transr, const char* uplo, const long long int* n, float* a,
              long long int* info );

void SPFTRI( const char* transr, const char* uplo, const long long int* n, float* a,
             long long int* info );
void SPFTRI_( const char* transr, const char* uplo, const long long int* n, float* a,
              long long int* info );
void spftri( const char* transr, const char* uplo, const long long int* n, float* a,
             long long int* info );
void spftri_( const char* transr, const char* uplo, const long long int* n, float* a,
              long long int* info );

void SPFTRS( const char* transr, const char* uplo, const long long int* n,
             const long long int* nrhs, const float* a, float* b, const long long int* ldb,
             long long int* info );
void SPFTRS_( const char* transr, const char* uplo, const long long int* n,
              const long long int* nrhs, const float* a, float* b,
              const long long int* ldb, long long int* info );
void spftrs( const char* transr, const char* uplo, const long long int* n,
             const long long int* nrhs, const float* a, float* b, const long long int* ldb,
             long long int* info );
void spftrs_( const char* transr, const char* uplo, const long long int* n,
              const long long int* nrhs, const float* a, float* b,
              const long long int* ldb, long long int* info );

void SPOCON( const char* uplo, const long long int* n, const float* a,
             const long long int* lda, const float* anorm, float* rcond, float* work,
             long long int* iwork, long long int* info );
void SPOCON_( const char* uplo, const long long int* n, const float* a,
              const long long int* lda, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );
void spocon( const char* uplo, const long long int* n, const float* a,
             const long long int* lda, const float* anorm, float* rcond, float* work,
             long long int* iwork, long long int* info );
void spocon_( const char* uplo, const long long int* n, const float* a,
              const long long int* lda, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );

void SPOEQUB( const long long int* n, const float* a, const long long int* lda, float* s,
              float* scond, float* amax, long long int* info );
void SPOEQUB_( const long long int* n, const float* a, const long long int* lda, float* s,
               float* scond, float* amax, long long int* info );
void spoequb( const long long int* n, const float* a, const long long int* lda, float* s,
              float* scond, float* amax, long long int* info );
void spoequb_( const long long int* n, const float* a, const long long int* lda, float* s,
               float* scond, float* amax, long long int* info );

void SPOEQU( const long long int* n, const float* a, const long long int* lda, float* s,
             float* scond, float* amax, long long int* info );
void SPOEQU_( const long long int* n, const float* a, const long long int* lda, float* s,
              float* scond, float* amax, long long int* info );
void spoequ( const long long int* n, const float* a, const long long int* lda, float* s,
             float* scond, float* amax, long long int* info );
void spoequ_( const long long int* n, const float* a, const long long int* lda, float* s,
              float* scond, float* amax, long long int* info );

void SPORFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const float* af,
             const long long int* ldaf, const float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void SPORFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const float* af,
              const long long int* ldaf, const float* b, const long long int* ldb,
              float* x, const long long int* ldx, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );
void sporfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const float* af,
             const long long int* ldaf, const float* b, const long long int* ldb, float* x,
             const long long int* ldx, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void sporfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const float* af,
              const long long int* ldaf, const float* b, const long long int* ldb,
              float* x, const long long int* ldx, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );

void SPORFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const float* a, const long long int* lda,
              const float* af, const long long int* ldaf, const float* s,
              const float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* rcond, float* berr, const long long int* n_err_bnds,
              float* err_bnds_norm, float* err_bnds_comp,
              const long long int* nparams, float* params, float* work,
              long long int* iwork, long long int* info );
void SPORFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const float* a, const long long int* lda,
               const float* af, const long long int* ldaf, const float* s,
               const float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );
void sporfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const float* a, const long long int* lda,
              const float* af, const long long int* ldaf, const float* s,
              const float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* rcond, float* berr, const long long int* n_err_bnds,
              float* err_bnds_norm, float* err_bnds_comp,
              const long long int* nparams, float* params, float* work,
              long long int* iwork, long long int* info );
void sporfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const float* a, const long long int* lda,
               const float* af, const long long int* ldaf, const float* s,
               const float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );

void SPOSV( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
            const long long int* lda, float* b, const long long int* ldb, long long int* info );
void SPOSV_( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* info );
void sposv( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
            const long long int* lda, float* b, const long long int* ldb, long long int* info );
void sposv_( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* info );

void SPOSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, float* a, const long long int* lda, float* af,
             const long long int* ldaf, char* equed, float* s, float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* rcond,
             float* ferr, float* berr, float* work, long long int* iwork,
             long long int* info );
void SPOSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, char* equed, float* s, float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* ferr, float* berr, float* work, long long int* iwork,
              long long int* info );
void sposvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, float* a, const long long int* lda, float* af,
             const long long int* ldaf, char* equed, float* s, float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* rcond,
             float* ferr, float* berr, float* work, long long int* iwork,
             long long int* info );
void sposvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, char* equed, float* s, float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* ferr, float* berr, float* work, long long int* iwork,
              long long int* info );

void SPOSVXX( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, char* equed, float* s, float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* rpvgrw, float* berr, const long long int* n_err_bnds,
              float* err_bnds_norm, float* err_bnds_comp,
              const long long int* nparams, float* params, float* work,
              long long int* iwork, long long int* info );
void SPOSVXX_( const char* fact, const char* uplo, const long long int* n,
               const long long int* nrhs, float* a, const long long int* lda, float* af,
               const long long int* ldaf, char* equed, float* s, float* b,
               const long long int* ldb, float* x, const long long int* ldx, float* rcond,
               float* rpvgrw, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, float* work,
               long long int* iwork, long long int* info );
void sposvxx( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, char* equed, float* s, float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* rpvgrw, float* berr, const long long int* n_err_bnds,
              float* err_bnds_norm, float* err_bnds_comp,
              const long long int* nparams, float* params, float* work,
              long long int* iwork, long long int* info );
void sposvxx_( const char* fact, const char* uplo, const long long int* n,
               const long long int* nrhs, float* a, const long long int* lda, float* af,
               const long long int* ldaf, char* equed, float* s, float* b,
               const long long int* ldb, float* x, const long long int* ldx, float* rcond,
               float* rpvgrw, float* berr, const long long int* n_err_bnds,
               float* err_bnds_norm, float* err_bnds_comp,
               const long long int* nparams, float* params, float* work,
               long long int* iwork, long long int* info );

void SPOTF2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void SPOTF2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );
void spotf2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void spotf2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );

void SPOTRF( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void SPOTRF_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );
void spotrf( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void spotrf_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );

void SPOTRI( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void SPOTRI_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );
void spotri( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* info );
void spotri_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* info );

void SPOTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, float* b, const long long int* ldb,
             long long int* info );
void SPOTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, float* b, const long long int* ldb,
              long long int* info );
void spotrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, float* b, const long long int* ldb,
             long long int* info );
void spotrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, float* b, const long long int* ldb,
              long long int* info );

void SPPCON( const char* uplo, const long long int* n, const float* ap,
             const float* anorm, float* rcond, float* work, long long int* iwork,
             long long int* info );
void SPPCON_( const char* uplo, const long long int* n, const float* ap,
              const float* anorm, float* rcond, float* work, long long int* iwork,
              long long int* info );
void sppcon( const char* uplo, const long long int* n, const float* ap,
             const float* anorm, float* rcond, float* work, long long int* iwork,
             long long int* info );
void sppcon_( const char* uplo, const long long int* n, const float* ap,
              const float* anorm, float* rcond, float* work, long long int* iwork,
              long long int* info );

void SPPEQU( const char* uplo, const long long int* n, const float* ap, float* s,
             float* scond, float* amax, long long int* info );
void SPPEQU_( const char* uplo, const long long int* n, const float* ap, float* s,
              float* scond, float* amax, long long int* info );
void sppequ( const char* uplo, const long long int* n, const float* ap, float* s,
             float* scond, float* amax, long long int* info );
void sppequ_( const char* uplo, const long long int* n, const float* ap, float* s,
              float* scond, float* amax, long long int* info );

void SPPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* ap, const float* afp, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void SPPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* ap, const float* afp, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );
void spprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* ap, const float* afp, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void spprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* ap, const float* afp, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );

void SPPSV( const char* uplo, const long long int* n, const long long int* nrhs, float* ap,
            float* b, const long long int* ldb, long long int* info );
void SPPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             float* ap, float* b, const long long int* ldb, long long int* info );
void sppsv( const char* uplo, const long long int* n, const long long int* nrhs, float* ap,
            float* b, const long long int* ldb, long long int* info );
void sppsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             float* ap, float* b, const long long int* ldb, long long int* info );

void SPPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, float* ap, float* afp, char* equed, float* s,
             float* b, const long long int* ldb, float* x, const long long int* ldx,
             float* rcond, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void SPPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, float* ap, float* afp, char* equed,
              float* s, float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );
void sppsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, float* ap, float* afp, char* equed, float* s,
             float* b, const long long int* ldb, float* x, const long long int* ldx,
             float* rcond, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void sppsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, float* ap, float* afp, char* equed,
              float* s, float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );

void SPPTRF( const char* uplo, const long long int* n, float* ap, long long int* info );
void SPPTRF_( const char* uplo, const long long int* n, float* ap, long long int* info );
void spptrf( const char* uplo, const long long int* n, float* ap, long long int* info );
void spptrf_( const char* uplo, const long long int* n, float* ap, long long int* info );

void SPPTRI( const char* uplo, const long long int* n, float* ap, long long int* info );
void SPPTRI_( const char* uplo, const long long int* n, float* ap, long long int* info );
void spptri( const char* uplo, const long long int* n, float* ap, long long int* info );
void spptri_( const char* uplo, const long long int* n, float* ap, long long int* info );

void SPPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* ap, float* b, const long long int* ldb, long long int* info );
void SPPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* ap, float* b, const long long int* ldb, long long int* info );
void spptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* ap, float* b, const long long int* ldb, long long int* info );
void spptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* ap, float* b, const long long int* ldb, long long int* info );

void SPSTF2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* piv, long long int* rank, const float* tol, float* work,
             long long int* info );
void SPSTF2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* piv, long long int* rank, const float* tol, float* work,
              long long int* info );
void spstf2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* piv, long long int* rank, const float* tol, float* work,
             long long int* info );
void spstf2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* piv, long long int* rank, const float* tol, float* work,
              long long int* info );

void SPSTRF( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* piv, long long int* rank, const float* tol, float* work,
             long long int* info );
void SPSTRF_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* piv, long long int* rank, const float* tol, float* work,
              long long int* info );
void spstrf( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* piv, long long int* rank, const float* tol, float* work,
             long long int* info );
void spstrf_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* piv, long long int* rank, const float* tol, float* work,
              long long int* info );

void SPTCON( const long long int* n, const float* d, const float* e,
             const float* anorm, float* rcond, float* work, long long int* info );
void SPTCON_( const long long int* n, const float* d, const float* e,
              const float* anorm, float* rcond, float* work, long long int* info );
void sptcon( const long long int* n, const float* d, const float* e,
             const float* anorm, float* rcond, float* work, long long int* info );
void sptcon_( const long long int* n, const float* d, const float* e,
              const float* anorm, float* rcond, float* work, long long int* info );

void SPTEQR( const char* compz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, long long int* info );
void SPTEQR_( const char* compz, const long long int* n, float* d, float* e,
              float* z, const long long int* ldz, float* work, long long int* info );
void spteqr( const char* compz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, long long int* info );
void spteqr_( const char* compz, const long long int* n, float* d, float* e,
              float* z, const long long int* ldz, float* work, long long int* info );

void SPTRFS( const long long int* n, const long long int* nrhs, const float* d,
             const float* e, const float* df, const float* ef, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* info );
void SPTRFS_( const long long int* n, const long long int* nrhs, const float* d,
              const float* e, const float* df, const float* ef, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* info );
void sptrfs( const long long int* n, const long long int* nrhs, const float* d,
             const float* e, const float* df, const float* ef, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* info );
void sptrfs_( const long long int* n, const long long int* nrhs, const float* d,
              const float* e, const float* df, const float* ef, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* info );

void SPTSV( const long long int* n, const long long int* nrhs, float* d, float* e,
            float* b, const long long int* ldb, long long int* info );
void SPTSV_( const long long int* n, const long long int* nrhs, float* d, float* e,
             float* b, const long long int* ldb, long long int* info );
void sptsv( const long long int* n, const long long int* nrhs, float* d, float* e,
            float* b, const long long int* ldb, long long int* info );
void sptsv_( const long long int* n, const long long int* nrhs, float* d, float* e,
             float* b, const long long int* ldb, long long int* info );

void SPTSVX( const char* fact, const long long int* n, const long long int* nrhs,
             const float* d, const float* e, float* df, float* ef,
             const float* b, const long long int* ldb, float* x, const long long int* ldx,
             float* rcond, float* ferr, float* berr, float* work,
             long long int* info );
void SPTSVX_( const char* fact, const long long int* n, const long long int* nrhs,
              const float* d, const float* e, float* df, float* ef,
              const float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* rcond, float* ferr, float* berr, float* work,
              long long int* info );
void sptsvx( const char* fact, const long long int* n, const long long int* nrhs,
             const float* d, const float* e, float* df, float* ef,
             const float* b, const long long int* ldb, float* x, const long long int* ldx,
             float* rcond, float* ferr, float* berr, float* work,
             long long int* info );
void sptsvx_( const char* fact, const long long int* n, const long long int* nrhs,
              const float* d, const float* e, float* df, float* ef,
              const float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* rcond, float* ferr, float* berr, float* work,
              long long int* info );

void SPTTRF( const long long int* n, float* d, float* e, long long int* info );
void SPTTRF_( const long long int* n, float* d, float* e, long long int* info );
void spttrf( const long long int* n, float* d, float* e, long long int* info );
void spttrf_( const long long int* n, float* d, float* e, long long int* info );

void SPTTRS( const long long int* n, const long long int* nrhs, const float* d,
             const float* e, float* b, const long long int* ldb, long long int* info );
void SPTTRS_( const long long int* n, const long long int* nrhs, const float* d,
              const float* e, float* b, const long long int* ldb, long long int* info );
void spttrs( const long long int* n, const long long int* nrhs, const float* d,
             const float* e, float* b, const long long int* ldb, long long int* info );
void spttrs_( const long long int* n, const long long int* nrhs, const float* d,
              const float* e, float* b, const long long int* ldb, long long int* info );

void SPTTS2( const long long int* n, const long long int* nrhs, const float* d,
             const float* e, float* b, const long long int* ldb );
void SPTTS2_( const long long int* n, const long long int* nrhs, const float* d,
              const float* e, float* b, const long long int* ldb );
void sptts2( const long long int* n, const long long int* nrhs, const float* d,
             const float* e, float* b, const long long int* ldb );
void sptts2_( const long long int* n, const long long int* nrhs, const float* d,
              const float* e, float* b, const long long int* ldb );

void SRSCL( const long long int* n, const float* sa, float* sx,
            const long long int* incx );
void SRSCL_( const long long int* n, const float* sa, float* sx,
             const long long int* incx );
void srscl( const long long int* n, const float* sa, float* sx,
            const long long int* incx );
void srscl_( const long long int* n, const float* sa, float* sx,
             const long long int* incx );

void SSBEVD( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, float* ab, const long long int* ldab, float* w,
             float* z, const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void SSBEVD_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, float* ab, const long long int* ldab, float* w,
              float* z, const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void ssbevd( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, float* ab, const long long int* ldab, float* w,
             float* z, const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void ssbevd_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, float* ab, const long long int* ldab, float* w,
              float* z, const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void SSBEV( const char* jobz, const char* uplo, const long long int* n,
            const long long int* kd, float* ab, const long long int* ldab, float* w,
            float* z, const long long int* ldz, float* work, long long int* info );
void SSBEV_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, float* ab, const long long int* ldab, float* w,
             float* z, const long long int* ldz, float* work, long long int* info );
void ssbev( const char* jobz, const char* uplo, const long long int* n,
            const long long int* kd, float* ab, const long long int* ldab, float* w,
            float* z, const long long int* ldz, float* work, long long int* info );
void ssbev_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, float* ab, const long long int* ldab, float* w,
             float* z, const long long int* ldz, float* work, long long int* info );

void SSBEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, float* q, const long long int* ldq,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, float* work, long long int* iwork,
             long long int* ifail, long long int* info );
void SSBEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, float* q, const long long int* ldq,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, float* work, long long int* iwork,
              long long int* ifail, long long int* info );
void ssbevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* kd, float* ab,
             const long long int* ldab, float* q, const long long int* ldq,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, float* work, long long int* iwork,
             long long int* ifail, long long int* info );
void ssbevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* kd, float* ab,
              const long long int* ldab, float* q, const long long int* ldq,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, float* work, long long int* iwork,
              long long int* ifail, long long int* info );

void SSBGST( const char* vect, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, float* ab,
             const long long int* ldab, const float* bb, const long long int* ldbb,
             float* x, const long long int* ldx, float* work, long long int* info );
void SSBGST_( const char* vect, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, float* ab,
              const long long int* ldab, const float* bb, const long long int* ldbb,
              float* x, const long long int* ldx, float* work, long long int* info );
void ssbgst( const char* vect, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, float* ab,
             const long long int* ldab, const float* bb, const long long int* ldbb,
             float* x, const long long int* ldx, float* work, long long int* info );
void ssbgst_( const char* vect, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, float* ab,
              const long long int* ldab, const float* bb, const long long int* ldbb,
              float* x, const long long int* ldx, float* work, long long int* info );

void SSBGVD( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, float* ab,
             const long long int* ldab, float* bb, const long long int* ldbb, float* w,
             float* z, const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void SSBGVD_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, float* ab,
              const long long int* ldab, float* bb, const long long int* ldbb, float* w,
              float* z, const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void ssbgvd( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, float* ab,
             const long long int* ldab, float* bb, const long long int* ldbb, float* w,
             float* z, const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void ssbgvd_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, float* ab,
              const long long int* ldab, float* bb, const long long int* ldbb, float* w,
              float* z, const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void SSBGV( const char* jobz, const char* uplo, const long long int* n,
            const long long int* ka, const long long int* kb, float* ab,
            const long long int* ldab, float* bb, const long long int* ldbb, float* w,
            float* z, const long long int* ldz, float* work, long long int* info );
void SSBGV_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, float* ab,
             const long long int* ldab, float* bb, const long long int* ldbb, float* w,
             float* z, const long long int* ldz, float* work, long long int* info );
void ssbgv( const char* jobz, const char* uplo, const long long int* n,
            const long long int* ka, const long long int* kb, float* ab,
            const long long int* ldab, float* bb, const long long int* ldbb, float* w,
            float* z, const long long int* ldz, float* work, long long int* info );
void ssbgv_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, float* ab,
             const long long int* ldab, float* bb, const long long int* ldbb, float* w,
             float* z, const long long int* ldz, float* work, long long int* info );

void SSBGVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* ka, const long long int* kb, float* ab,
             const long long int* ldab, float* bb, const long long int* ldbb, float* q,
             const long long int* ldq, const float* vl, const float* vu,
             const long long int* il, const long long int* iu, const float* abstol,
             long long int* m, float* w, float* z, const long long int* ldz, float* work,
             long long int* iwork, long long int* ifail, long long int* info );
void SSBGVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* ka, const long long int* kb,
              float* ab, const long long int* ldab, float* bb, const long long int* ldbb,
              float* q, const long long int* ldq, const float* vl, const float* vu,
              const long long int* il, const long long int* iu, const float* abstol,
              long long int* m, float* w, float* z, const long long int* ldz, float* work,
              long long int* iwork, long long int* ifail, long long int* info );
void ssbgvx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* ka, const long long int* kb, float* ab,
             const long long int* ldab, float* bb, const long long int* ldbb, float* q,
             const long long int* ldq, const float* vl, const float* vu,
             const long long int* il, const long long int* iu, const float* abstol,
             long long int* m, float* w, float* z, const long long int* ldz, float* work,
             long long int* iwork, long long int* ifail, long long int* info );
void ssbgvx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* ka, const long long int* kb,
              float* ab, const long long int* ldab, float* bb, const long long int* ldbb,
              float* q, const long long int* ldq, const float* vl, const float* vu,
              const long long int* il, const long long int* iu, const float* abstol,
              long long int* m, float* w, float* z, const long long int* ldz, float* work,
              long long int* iwork, long long int* ifail, long long int* info );

void SSBTRD( const char* vect, const char* uplo, const long long int* n,
             const long long int* kd, float* ab, const long long int* ldab, float* d,
             float* e, float* q, const long long int* ldq, float* work,
             long long int* info );
void SSBTRD_( const char* vect, const char* uplo, const long long int* n,
              const long long int* kd, float* ab, const long long int* ldab, float* d,
              float* e, float* q, const long long int* ldq, float* work,
              long long int* info );
void ssbtrd( const char* vect, const char* uplo, const long long int* n,
             const long long int* kd, float* ab, const long long int* ldab, float* d,
             float* e, float* q, const long long int* ldq, float* work,
             long long int* info );
void ssbtrd_( const char* vect, const char* uplo, const long long int* n,
              const long long int* kd, float* ab, const long long int* ldab, float* d,
              float* e, float* q, const long long int* ldq, float* work,
              long long int* info );

void SSFRK( const char* transr, const char* uplo, const char* trans,
            const long long int* n, const long long int* k, const float* alpha,
            const float* a, const long long int* lda, const float* beta, float* c );
void SSFRK_( const char* transr, const char* uplo, const char* trans,
             const long long int* n, const long long int* k, const float* alpha,
             const float* a, const long long int* lda, const float* beta, float* c );
void ssfrk( const char* transr, const char* uplo, const char* trans,
            const long long int* n, const long long int* k, const float* alpha,
            const float* a, const long long int* lda, const float* beta, float* c );
void ssfrk_( const char* transr, const char* uplo, const char* trans,
             const long long int* n, const long long int* k, const float* alpha,
             const float* a, const long long int* lda, const float* beta, float* c );

void SSPCON( const char* uplo, const long long int* n, const float* ap,
             const long long int* ipiv, const float* anorm, float* rcond,
             float* work, long long int* iwork, long long int* info );
void SSPCON_( const char* uplo, const long long int* n, const float* ap,
              const long long int* ipiv, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );
void sspcon( const char* uplo, const long long int* n, const float* ap,
             const long long int* ipiv, const float* anorm, float* rcond,
             float* work, long long int* iwork, long long int* info );
void sspcon_( const char* uplo, const long long int* n, const float* ap,
              const long long int* ipiv, const float* anorm, float* rcond,
              float* work, long long int* iwork, long long int* info );

void SSPEVD( const char* jobz, const char* uplo, const long long int* n, float* ap,
             float* w, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void SSPEVD_( const char* jobz, const char* uplo, const long long int* n, float* ap,
              float* w, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void sspevd( const char* jobz, const char* uplo, const long long int* n, float* ap,
             float* w, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void sspevd_( const char* jobz, const char* uplo, const long long int* n, float* ap,
              float* w, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void SSPEV( const char* jobz, const char* uplo, const long long int* n, float* ap,
            float* w, float* z, const long long int* ldz, float* work,
            long long int* info );
void SSPEV_( const char* jobz, const char* uplo, const long long int* n, float* ap,
             float* w, float* z, const long long int* ldz, float* work,
             long long int* info );
void sspev( const char* jobz, const char* uplo, const long long int* n, float* ap,
            float* w, float* z, const long long int* ldz, float* work,
            long long int* info );
void sspev_( const char* jobz, const char* uplo, const long long int* n, float* ap,
             float* w, float* z, const long long int* ldz, float* work,
             long long int* info );

void SSPEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, float* ap, const float* vl, const float* vu,
             const long long int* il, const long long int* iu, const float* abstol,
             long long int* m, float* w, float* z, const long long int* ldz, float* work,
             long long int* iwork, long long int* ifail, long long int* info );
void SSPEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, float* ap, const float* vl, const float* vu,
              const long long int* il, const long long int* iu, const float* abstol,
              long long int* m, float* w, float* z, const long long int* ldz, float* work,
              long long int* iwork, long long int* ifail, long long int* info );
void sspevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, float* ap, const float* vl, const float* vu,
             const long long int* il, const long long int* iu, const float* abstol,
             long long int* m, float* w, float* z, const long long int* ldz, float* work,
             long long int* iwork, long long int* ifail, long long int* info );
void sspevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, float* ap, const float* vl, const float* vu,
              const long long int* il, const long long int* iu, const float* abstol,
              long long int* m, float* w, float* z, const long long int* ldz, float* work,
              long long int* iwork, long long int* ifail, long long int* info );

void SSPGST( const long long int* itype, const char* uplo, const long long int* n,
             float* ap, const float* bp, long long int* info );
void SSPGST_( const long long int* itype, const char* uplo, const long long int* n,
              float* ap, const float* bp, long long int* info );
void sspgst( const long long int* itype, const char* uplo, const long long int* n,
             float* ap, const float* bp, long long int* info );
void sspgst_( const long long int* itype, const char* uplo, const long long int* n,
              float* ap, const float* bp, long long int* info );

void SSPGVD( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, float* ap, float* bp, float* w, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void SSPGVD_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, float* ap, float* bp, float* w, float* z,
              const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void sspgvd( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, float* ap, float* bp, float* w, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void sspgvd_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, float* ap, float* bp, float* w, float* z,
              const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void SSPGV( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, float* ap, float* bp, float* w, float* z,
            const long long int* ldz, float* work, long long int* info );
void SSPGV_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, float* ap, float* bp, float* w, float* z,
             const long long int* ldz, float* work, long long int* info );
void sspgv( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, float* ap, float* bp, float* w, float* z,
            const long long int* ldz, float* work, long long int* info );
void sspgv_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, float* ap, float* bp, float* w, float* z,
             const long long int* ldz, float* work, long long int* info );

void SSPGVX( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, float* ap, float* bp,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, float* work, long long int* iwork,
             long long int* ifail, long long int* info );
void SSPGVX_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, float* ap, float* bp,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, float* work, long long int* iwork,
              long long int* ifail, long long int* info );
void sspgvx( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, float* ap, float* bp,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, float* work, long long int* iwork,
             long long int* ifail, long long int* info );
void sspgvx_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, float* ap, float* bp,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, float* work, long long int* iwork,
              long long int* ifail, long long int* info );

void SSPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* ap, const float* afp, const long long int* ipiv,
             const float* b, const long long int* ldb, float* x, const long long int* ldx,
             float* ferr, float* berr, float* work, long long int* iwork,
             long long int* info );
void SSPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* ap, const float* afp, const long long int* ipiv,
              const float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* ferr, float* berr, float* work, long long int* iwork,
              long long int* info );
void ssprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* ap, const float* afp, const long long int* ipiv,
             const float* b, const long long int* ldb, float* x, const long long int* ldx,
             float* ferr, float* berr, float* work, long long int* iwork,
             long long int* info );
void ssprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* ap, const float* afp, const long long int* ipiv,
              const float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* ferr, float* berr, float* work, long long int* iwork,
              long long int* info );

void SSPSV( const char* uplo, const long long int* n, const long long int* nrhs, float* ap,
            long long int* ipiv, float* b, const long long int* ldb, long long int* info );
void SSPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             float* ap, long long int* ipiv, float* b, const long long int* ldb,
             long long int* info );
void sspsv( const char* uplo, const long long int* n, const long long int* nrhs, float* ap,
            long long int* ipiv, float* b, const long long int* ldb, long long int* info );
void sspsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             float* ap, long long int* ipiv, float* b, const long long int* ldb,
             long long int* info );

void SSPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const float* ap, float* afp, long long int* ipiv,
             const float* b, const long long int* ldb, float* x, const long long int* ldx,
             float* rcond, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void SSPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const float* ap, float* afp, long long int* ipiv,
              const float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* rcond, float* ferr, float* berr, float* work,
              long long int* iwork, long long int* info );
void sspsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const float* ap, float* afp, long long int* ipiv,
             const float* b, const long long int* ldb, float* x, const long long int* ldx,
             float* rcond, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void sspsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const float* ap, float* afp, long long int* ipiv,
              const float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* rcond, float* ferr, float* berr, float* work,
              long long int* iwork, long long int* info );

void SSPTRD( const char* uplo, const long long int* n, float* ap, float* d, float* e,
             float* tau, long long int* info );
void SSPTRD_( const char* uplo, const long long int* n, float* ap, float* d,
              float* e, float* tau, long long int* info );
void ssptrd( const char* uplo, const long long int* n, float* ap, float* d, float* e,
             float* tau, long long int* info );
void ssptrd_( const char* uplo, const long long int* n, float* ap, float* d,
              float* e, float* tau, long long int* info );

void SSPTRF( const char* uplo, const long long int* n, float* ap, long long int* ipiv,
             long long int* info );
void SSPTRF_( const char* uplo, const long long int* n, float* ap, long long int* ipiv,
              long long int* info );
void ssptrf( const char* uplo, const long long int* n, float* ap, long long int* ipiv,
             long long int* info );
void ssptrf_( const char* uplo, const long long int* n, float* ap, long long int* ipiv,
              long long int* info );

void SSPTRI( const char* uplo, const long long int* n, float* ap,
             const long long int* ipiv, float* work, long long int* info );
void SSPTRI_( const char* uplo, const long long int* n, float* ap,
              const long long int* ipiv, float* work, long long int* info );
void ssptri( const char* uplo, const long long int* n, float* ap,
             const long long int* ipiv, float* work, long long int* info );
void ssptri_( const char* uplo, const long long int* n, float* ap,
              const long long int* ipiv, float* work, long long int* info );

void SSPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* ap, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void SSPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* ap, const long long int* ipiv, float* b,
              const long long int* ldb, long long int* info );
void ssptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* ap, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void ssptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* ap, const long long int* ipiv, float* b,
              const long long int* ldb, long long int* info );

void SSTEBZ( const char* range, const char* order, const long long int* n,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, const float* d,
             const float* e, long long int* m, long long int* nsplit, float* w,
             long long int* iblock, long long int* isplit, float* work, long long int* iwork,
             long long int* info );
void SSTEBZ_( const char* range, const char* order, const long long int* n,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, const float* d,
              const float* e, long long int* m, long long int* nsplit, float* w,
              long long int* iblock, long long int* isplit, float* work, long long int* iwork,
              long long int* info );
void sstebz( const char* range, const char* order, const long long int* n,
             const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, const float* d,
             const float* e, long long int* m, long long int* nsplit, float* w,
             long long int* iblock, long long int* isplit, float* work, long long int* iwork,
             long long int* info );
void sstebz_( const char* range, const char* order, const long long int* n,
              const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, const float* d,
              const float* e, long long int* m, long long int* nsplit, float* w,
              long long int* iblock, long long int* isplit, float* work, long long int* iwork,
              long long int* info );

void SSTEDC( const char* compz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void SSTEDC_( const char* compz, const long long int* n, float* d, float* e,
              float* z, const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void sstedc( const char* compz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void sstedc_( const char* compz, const long long int* n, float* d, float* e,
              float* z, const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void SSTEGR( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, long long int* isuppz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void SSTEGR_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, long long int* isuppz, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void sstegr( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, long long int* isuppz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void sstegr_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, long long int* isuppz, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void SSTEIN( const long long int* n, const float* d, const float* e,
             const long long int* m, const float* w, const long long int* iblock,
             const long long int* isplit, float* z, const long long int* ldz, float* work,
             long long int* iwork, long long int* ifail, long long int* info );
void SSTEIN_( const long long int* n, const float* d, const float* e,
              const long long int* m, const float* w, const long long int* iblock,
              const long long int* isplit, float* z, const long long int* ldz, float* work,
              long long int* iwork, long long int* ifail, long long int* info );
void sstein( const long long int* n, const float* d, const float* e,
             const long long int* m, const float* w, const long long int* iblock,
             const long long int* isplit, float* z, const long long int* ldz, float* work,
             long long int* iwork, long long int* ifail, long long int* info );
void sstein_( const long long int* n, const float* d, const float* e,
              const long long int* m, const float* w, const long long int* iblock,
              const long long int* isplit, float* z, const long long int* ldz, float* work,
              long long int* iwork, long long int* ifail, long long int* info );

void SSTEMR( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, long long int* m, float* w, float* z,
             const long long int* ldz, const long long int* nzc, long long int* isuppz,
             long long int* tryrac, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void SSTEMR_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, long long int* m, float* w, float* z,
              const long long int* ldz, const long long int* nzc, long long int* isuppz,
              long long int* tryrac, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void sstemr( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, long long int* m, float* w, float* z,
             const long long int* ldz, const long long int* nzc, long long int* isuppz,
             long long int* tryrac, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void sstemr_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, long long int* m, float* w, float* z,
              const long long int* ldz, const long long int* nzc, long long int* isuppz,
              long long int* tryrac, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void SSTEQR( const char* compz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, long long int* info );
void SSTEQR_( const char* compz, const long long int* n, float* d, float* e,
              float* z, const long long int* ldz, float* work, long long int* info );
void ssteqr( const char* compz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, long long int* info );
void ssteqr_( const char* compz, const long long int* n, float* d, float* e,
              float* z, const long long int* ldz, float* work, long long int* info );

void SSTERF( const long long int* n, float* d, float* e, long long int* info );
void SSTERF_( const long long int* n, float* d, float* e, long long int* info );
void ssterf( const long long int* n, float* d, float* e, long long int* info );
void ssterf_( const long long int* n, float* d, float* e, long long int* info );

void SSTEVD( const char* jobz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void SSTEVD_( const char* jobz, const long long int* n, float* d, float* e, float* z,
              const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void sstevd( const char* jobz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void sstevd_( const char* jobz, const long long int* n, float* d, float* e, float* z,
              const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void SSTEV( const char* jobz, const long long int* n, float* d, float* e, float* z,
            const long long int* ldz, float* work, long long int* info );
void SSTEV_( const char* jobz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, long long int* info );
void sstev( const char* jobz, const long long int* n, float* d, float* e, float* z,
            const long long int* ldz, float* work, long long int* info );
void sstev_( const char* jobz, const long long int* n, float* d, float* e, float* z,
             const long long int* ldz, float* work, long long int* info );

void SSTEVR( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, long long int* isuppz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void SSTEVR_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, long long int* isuppz, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void sstevr( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, long long int* isuppz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void sstevr_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, long long int* isuppz, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void SSTEVX( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, float* work, long long int* iwork,
             long long int* ifail, long long int* info );
void SSTEVX_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, float* work, long long int* iwork,
              long long int* ifail, long long int* info );
void sstevx( const char* jobz, const char* range, const long long int* n, float* d,
             float* e, const float* vl, const float* vu, const long long int* il,
             const long long int* iu, const float* abstol, long long int* m, float* w,
             float* z, const long long int* ldz, float* work, long long int* iwork,
             long long int* ifail, long long int* info );
void sstevx_( const char* jobz, const char* range, const long long int* n, float* d,
              float* e, const float* vl, const float* vu, const long long int* il,
              const long long int* iu, const float* abstol, long long int* m, float* w,
              float* z, const long long int* ldz, float* work, long long int* iwork,
              long long int* ifail, long long int* info );

void SSYCON( const char* uplo, const long long int* n, const float* a,
             const long long int* lda, const long long int* ipiv, const float* anorm,
             float* rcond, float* work, long long int* iwork, long long int* info );
void SSYCON_( const char* uplo, const long long int* n, const float* a,
              const long long int* lda, const long long int* ipiv, const float* anorm,
              float* rcond, float* work, long long int* iwork, long long int* info );
void ssycon( const char* uplo, const long long int* n, const float* a,
             const long long int* lda, const long long int* ipiv, const float* anorm,
             float* rcond, float* work, long long int* iwork, long long int* info );
void ssycon_( const char* uplo, const long long int* n, const float* a,
              const long long int* lda, const long long int* ipiv, const float* anorm,
              float* rcond, float* work, long long int* iwork, long long int* info );

void SSYEQUB( char* uplo, const long long int* n, const float* a, const long long int* lda,
              float* s, float* scond, float* amax, float* work,
              long long int* info );
void SSYEQUB_( char* uplo, const long long int* n, const float* a,
               const long long int* lda, float* s, float* scond, float* amax,
               float* work, long long int* info );
void ssyequb( char* uplo, const long long int* n, const float* a, const long long int* lda,
              float* s, float* scond, float* amax, float* work,
              long long int* info );
void ssyequb_( char* uplo, const long long int* n, const float* a,
               const long long int* lda, float* s, float* scond, float* amax,
               float* work, long long int* info );

void SSYEVD( const char* jobz, const char* uplo, const long long int* n, float* a,
             const long long int* lda, float* w, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void SSYEVD_( const char* jobz, const char* uplo, const long long int* n, float* a,
              const long long int* lda, float* w, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void ssyevd( const char* jobz, const char* uplo, const long long int* n, float* a,
             const long long int* lda, float* w, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void ssyevd_( const char* jobz, const char* uplo, const long long int* n, float* a,
              const long long int* lda, float* w, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void SSYEV( const char* jobz, const char* uplo, const long long int* n, float* a,
            const long long int* lda, float* w, float* work, const long long int* lwork,
            long long int* info );
void SSYEV_( const char* jobz, const char* uplo, const long long int* n, float* a,
             const long long int* lda, float* w, float* work, const long long int* lwork,
             long long int* info );
void ssyev( const char* jobz, const char* uplo, const long long int* n, float* a,
            const long long int* lda, float* w, float* work, const long long int* lwork,
            long long int* info );
void ssyev_( const char* jobz, const char* uplo, const long long int* n, float* a,
             const long long int* lda, float* w, float* work, const long long int* lwork,
             long long int* info );

void SSYEVR( const char* jobz, const char* range, const char* uplo,
             const long long int* n, float* a, const long long int* lda, const float* vl,
             const float* vu, const long long int* il, const long long int* iu,
             const float* abstol, long long int* m, float* w, float* z,
             const long long int* ldz, long long int* isuppz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void SSYEVR_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, float* a, const long long int* lda, const float* vl,
              const float* vu, const long long int* il, const long long int* iu,
              const float* abstol, long long int* m, float* w, float* z,
              const long long int* ldz, long long int* isuppz, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void ssyevr( const char* jobz, const char* range, const char* uplo,
             const long long int* n, float* a, const long long int* lda, const float* vl,
             const float* vu, const long long int* il, const long long int* iu,
             const float* abstol, long long int* m, float* w, float* z,
             const long long int* ldz, long long int* isuppz, float* work,
             const long long int* lwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void ssyevr_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, float* a, const long long int* lda, const float* vl,
              const float* vu, const long long int* il, const long long int* iu,
              const float* abstol, long long int* m, float* w, float* z,
              const long long int* ldz, long long int* isuppz, float* work,
              const long long int* lwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void SSYEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, float* a, const long long int* lda, const float* vl,
             const float* vu, const long long int* il, const long long int* iu,
             const float* abstol, long long int* m, float* w, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, long long int* ifail, long long int* info );
void SSYEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, float* a, const long long int* lda, const float* vl,
              const float* vu, const long long int* il, const long long int* iu,
              const float* abstol, long long int* m, float* w, float* z,
              const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, long long int* ifail, long long int* info );
void ssyevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, float* a, const long long int* lda, const float* vl,
             const float* vu, const long long int* il, const long long int* iu,
             const float* abstol, long long int* m, float* w, float* z,
             const long long int* ldz, float* work, const long long int* lwork,
             long long int* iwork, long long int* ifail, long long int* info );
void ssyevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, float* a, const long long int* lda, const float* vl,
              const float* vu, const long long int* il, const long long int* iu,
              const float* abstol, long long int* m, float* w, float* z,
              const long long int* ldz, float* work, const long long int* lwork,
              long long int* iwork, long long int* ifail, long long int* info );

void SSYGS2( const long long int* itype, const char* uplo, const long long int* n,
             float* a, const long long int* lda, const float* b, const long long int* ldb,
             long long int* info );
void SSYGS2_( const long long int* itype, const char* uplo, const long long int* n,
              float* a, const long long int* lda, const float* b, const long long int* ldb,
              long long int* info );
void ssygs2( const long long int* itype, const char* uplo, const long long int* n,
             float* a, const long long int* lda, const float* b, const long long int* ldb,
             long long int* info );
void ssygs2_( const long long int* itype, const char* uplo, const long long int* n,
              float* a, const long long int* lda, const float* b, const long long int* ldb,
              long long int* info );

void SSYGST( const long long int* itype, const char* uplo, const long long int* n,
             float* a, const long long int* lda, const float* b, const long long int* ldb,
             long long int* info );
void SSYGST_( const long long int* itype, const char* uplo, const long long int* n,
              float* a, const long long int* lda, const float* b, const long long int* ldb,
              long long int* info );
void ssygst( const long long int* itype, const char* uplo, const long long int* n,
             float* a, const long long int* lda, const float* b, const long long int* ldb,
             long long int* info );
void ssygst_( const long long int* itype, const char* uplo, const long long int* n,
              float* a, const long long int* lda, const float* b, const long long int* ldb,
              long long int* info );

void SSYGVD( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, float* a, const long long int* lda, float* b,
             const long long int* ldb, float* w, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void SSYGVD_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, float* a, const long long int* lda, float* b,
              const long long int* ldb, float* w, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void ssygvd( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, float* a, const long long int* lda, float* b,
             const long long int* ldb, float* w, float* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void ssygvd_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, float* a, const long long int* lda, float* b,
              const long long int* ldb, float* w, float* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void SSYGV( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, float* a, const long long int* lda, float* b,
            const long long int* ldb, float* w, float* work, const long long int* lwork,
            long long int* info );
void SSYGV_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, float* a, const long long int* lda, float* b,
             const long long int* ldb, float* w, float* work, const long long int* lwork,
             long long int* info );
void ssygv( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, float* a, const long long int* lda, float* b,
            const long long int* ldb, float* w, float* work, const long long int* lwork,
            long long int* info );
void ssygv_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, float* a, const long long int* lda, float* b,
             const long long int* ldb, float* w, float* work, const long long int* lwork,
             long long int* info );

void SSYGVX( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, float* a, const long long int* lda,
             float* b, const long long int* ldb, const float* vl, const float* vu,
             const long long int* il, const long long int* iu, const float* abstol,
             long long int* m, float* w, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* iwork, long long int* ifail,
             long long int* info );
void SSYGVX_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, float* a, const long long int* lda,
              float* b, const long long int* ldb, const float* vl, const float* vu,
              const long long int* il, const long long int* iu, const float* abstol,
              long long int* m, float* w, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* iwork, long long int* ifail,
              long long int* info );
void ssygvx( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, float* a, const long long int* lda,
             float* b, const long long int* ldb, const float* vl, const float* vu,
             const long long int* il, const long long int* iu, const float* abstol,
             long long int* m, float* w, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* iwork, long long int* ifail,
             long long int* info );
void ssygvx_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, float* a, const long long int* lda,
              float* b, const long long int* ldb, const float* vl, const float* vu,
              const long long int* il, const long long int* iu, const float* abstol,
              long long int* m, float* w, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* iwork, long long int* ifail,
              long long int* info );

void SSYRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const float* af,
             const long long int* ldaf, const long long int* ipiv, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void SSYRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const float* af,
              const long long int* ldaf, const long long int* ipiv, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );
void ssyrfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const float* af,
             const long long int* ldaf, const long long int* ipiv, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* ferr,
             float* berr, float* work, long long int* iwork, long long int* info );
void ssyrfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const float* af,
              const long long int* ldaf, const long long int* ipiv, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* ferr,
              float* berr, float* work, long long int* iwork, long long int* info );

void SSYRFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const float* a, const long long int* lda,
              const float* af, const long long int* ldaf, const long long int* ipiv,
              const float* s, const float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void SSYRFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const float* a, const long long int* lda,
               const float* af, const long long int* ldaf, const long long int* ipiv,
               const float* s, const float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );
void ssyrfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const float* a, const long long int* lda,
              const float* af, const long long int* ldaf, const long long int* ipiv,
              const float* s, const float* b, const long long int* ldb, float* x,
              const long long int* ldx, float* rcond, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void ssyrfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const float* a, const long long int* lda,
               const float* af, const long long int* ldaf, const long long int* ipiv,
               const float* s, const float* b, const long long int* ldb, float* x,
               const long long int* ldx, float* rcond, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );

void SSYSV( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
            const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
            float* work, const long long int* lwork, long long int* info );
void SSYSV_( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
             float* work, const long long int* lwork, long long int* info );
void ssysv( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
            const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
            float* work, const long long int* lwork, long long int* info );
void ssysv_( const char* uplo, const long long int* n, const long long int* nrhs, float* a,
             const long long int* lda, long long int* ipiv, float* b, const long long int* ldb,
             float* work, const long long int* lwork, long long int* info );

void SSYSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const float* a, const long long int* lda,
             float* af, const long long int* ldaf, long long int* ipiv, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* rcond,
             float* ferr, float* berr, float* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void SSYSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const float* a, const long long int* lda,
              float* af, const long long int* ldaf, long long int* ipiv, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* ferr, float* berr, float* work, const long long int* lwork,
              long long int* iwork, long long int* info );
void ssysvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const float* a, const long long int* lda,
             float* af, const long long int* ldaf, long long int* ipiv, const float* b,
             const long long int* ldb, float* x, const long long int* ldx, float* rcond,
             float* ferr, float* berr, float* work, const long long int* lwork,
             long long int* iwork, long long int* info );
void ssysvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const float* a, const long long int* lda,
              float* af, const long long int* ldaf, long long int* ipiv, const float* b,
              const long long int* ldb, float* x, const long long int* ldx, float* rcond,
              float* ferr, float* berr, float* work, const long long int* lwork,
              long long int* iwork, long long int* info );

void SSYSVXX( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, long long int* ipiv, char* equed, float* s,
              float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void SSYSVXX_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, float* a, const long long int* lda, float* af,
               const long long int* ldaf, long long int* ipiv, char* equed, float* s,
               float* b, const long long int* ldb, float* x, const long long int* ldx,
               float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );
void ssysvxx( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, float* a, const long long int* lda, float* af,
              const long long int* ldaf, long long int* ipiv, char* equed, float* s,
              float* b, const long long int* ldb, float* x, const long long int* ldx,
              float* rcond, float* rpvgrw, float* berr,
              const long long int* n_err_bnds, float* err_bnds_norm,
              float* err_bnds_comp, const long long int* nparams, float* params,
              float* work, long long int* iwork, long long int* info );
void ssysvxx_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, float* a, const long long int* lda, float* af,
               const long long int* ldaf, long long int* ipiv, char* equed, float* s,
               float* b, const long long int* ldb, float* x, const long long int* ldx,
               float* rcond, float* rpvgrw, float* berr,
               const long long int* n_err_bnds, float* err_bnds_norm,
               float* err_bnds_comp, const long long int* nparams, float* params,
               float* work, long long int* iwork, long long int* info );

void SSYTD2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             float* d, float* e, float* tau, long long int* info );
void SSYTD2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              float* d, float* e, float* tau, long long int* info );
void ssytd2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             float* d, float* e, float* tau, long long int* info );
void ssytd2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              float* d, float* e, float* tau, long long int* info );

void SSYTF2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void SSYTF2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* ipiv, long long int* info );
void ssytf2( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* ipiv, long long int* info );
void ssytf2_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* ipiv, long long int* info );

void SSYTRD( const char* uplo, const long long int* n, float* a, const long long int* lda,
             float* d, float* e, float* tau, float* work, const long long int* lwork,
             long long int* info );
void SSYTRD_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              float* d, float* e, float* tau, float* work,
              const long long int* lwork, long long int* info );
void ssytrd( const char* uplo, const long long int* n, float* a, const long long int* lda,
             float* d, float* e, float* tau, float* work, const long long int* lwork,
             long long int* info );
void ssytrd_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              float* d, float* e, float* tau, float* work,
              const long long int* lwork, long long int* info );

void SSYTRF( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* ipiv, float* work, const long long int* lwork, long long int* info );
void SSYTRF_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* ipiv, float* work, const long long int* lwork,
              long long int* info );
void ssytrf( const char* uplo, const long long int* n, float* a, const long long int* lda,
             long long int* ipiv, float* work, const long long int* lwork, long long int* info );
void ssytrf_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              long long int* ipiv, float* work, const long long int* lwork,
              long long int* info );

void SSYTRI( const char* uplo, const long long int* n, float* a, const long long int* lda,
             const long long int* ipiv, float* work, long long int* info );
void SSYTRI_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              const long long int* ipiv, float* work, long long int* info );
void ssytri( const char* uplo, const long long int* n, float* a, const long long int* lda,
             const long long int* ipiv, float* work, long long int* info );
void ssytri_( const char* uplo, const long long int* n, float* a, const long long int* lda,
              const long long int* ipiv, float* work, long long int* info );

void SSYTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void SSYTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const long long int* ipiv,
              float* b, const long long int* ldb, long long int* info );
void ssytrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const float* a, const long long int* lda, const long long int* ipiv, float* b,
             const long long int* ldb, long long int* info );
void ssytrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const float* a, const long long int* lda, const long long int* ipiv,
              float* b, const long long int* ldb, long long int* info );

void STBCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const long long int* kd, const float* ab,
             const long long int* ldab, float* rcond, float* work, long long int* iwork,
             long long int* info );
void STBCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* kd, const float* ab,
              const long long int* ldab, float* rcond, float* work, long long int* iwork,
              long long int* info );
void stbcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const long long int* kd, const float* ab,
             const long long int* ldab, float* rcond, float* work, long long int* iwork,
             long long int* info );
void stbcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* kd, const float* ab,
              const long long int* ldab, float* rcond, float* work, long long int* iwork,
              long long int* info );

void STBRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const float* ab, const long long int* ldab, const float* b,
             const long long int* ldb, const float* x, const long long int* ldx,
             float* ferr, float* berr, float* work, long long int* iwork,
             long long int* info );
void STBRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const float* ab, const long long int* ldab, const float* b,
              const long long int* ldb, const float* x, const long long int* ldx,
              float* ferr, float* berr, float* work, long long int* iwork,
              long long int* info );
void stbrfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const float* ab, const long long int* ldab, const float* b,
             const long long int* ldb, const float* x, const long long int* ldx,
             float* ferr, float* berr, float* work, long long int* iwork,
             long long int* info );
void stbrfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const float* ab, const long long int* ldab, const float* b,
              const long long int* ldb, const float* x, const long long int* ldx,
              float* ferr, float* berr, float* work, long long int* iwork,
              long long int* info );

void STBTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const float* ab, const long long int* ldab, float* b,
             const long long int* ldb, long long int* info );
void STBTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const float* ab, const long long int* ldab, float* b,
              const long long int* ldb, long long int* info );
void stbtrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const float* ab, const long long int* ldab, float* b,
             const long long int* ldb, long long int* info );
void stbtrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const float* ab, const long long int* ldab, float* b,
              const long long int* ldb, long long int* info );

void STFSM( const char* transr, const char* side, const char* uplo,
            const char* trans, const char* diag, const long long int* m,
            const long long int* n, const float* alpha, const float* a, float* b,
            const long long int* ldb );
void STFSM_( const char* transr, const char* side, const char* uplo,
             const char* trans, const char* diag, const long long int* m,
             const long long int* n, const float* alpha, const float* a, float* b,
             const long long int* ldb );
void stfsm( const char* transr, const char* side, const char* uplo,
            const char* trans, const char* diag, const long long int* m,
            const long long int* n, const float* alpha, const float* a, float* b,
            const long long int* ldb );
void stfsm_( const char* transr, const char* side, const char* uplo,
             const char* trans, const char* diag, const long long int* m,
             const long long int* n, const float* alpha, const float* a, float* b,
             const long long int* ldb );

void STFTRI( const char* transr, const char* uplo, const char* diag,
             const long long int* n, float* a, long long int* info );
void STFTRI_( const char* transr, const char* uplo, const char* diag,
              const long long int* n, float* a, long long int* info );
void stftri( const char* transr, const char* uplo, const char* diag,
             const long long int* n, float* a, long long int* info );
void stftri_( const char* transr, const char* uplo, const char* diag,
              const long long int* n, float* a, long long int* info );

void STFTTP( const char* transr, const char* uplo, const long long int* n,
             const float* arf, float* ap, long long int* info );
void STFTTP_( const char* transr, const char* uplo, const long long int* n,
              const float* arf, float* ap, long long int* info );
void stfttp( const char* transr, const char* uplo, const long long int* n,
             const float* arf, float* ap, long long int* info );
void stfttp_( const char* transr, const char* uplo, const long long int* n,
              const float* arf, float* ap, long long int* info );

void STFTTR( const char* transr, const char* uplo, const long long int* n,
             const float* arf, float* a, const long long int* lda, long long int* info );
void STFTTR_( const char* transr, const char* uplo, const long long int* n,
              const float* arf, float* a, const long long int* lda, long long int* info );
void stfttr( const char* transr, const char* uplo, const long long int* n,
             const float* arf, float* a, const long long int* lda, long long int* info );
void stfttr_( const char* transr, const char* uplo, const long long int* n,
              const float* arf, float* a, const long long int* lda, long long int* info );

void STGEVC( const char* side, const char* howmny, const long long int* select,
             const long long int* n, const float* s, const long long int* lds,
             const float* p, const long long int* ldp, float* vl,
             const long long int* ldvl, float* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, float* work, long long int* info );
void STGEVC_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, const float* s, const long long int* lds,
              const float* p, const long long int* ldp, float* vl,
              const long long int* ldvl, float* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, float* work, long long int* info );
void stgevc( const char* side, const char* howmny, const long long int* select,
             const long long int* n, const float* s, const long long int* lds,
             const float* p, const long long int* ldp, float* vl,
             const long long int* ldvl, float* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, float* work, long long int* info );
void stgevc_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, const float* s, const long long int* lds,
              const float* p, const long long int* ldp, float* vl,
              const long long int* ldvl, float* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, float* work, long long int* info );

void STGEX2( const long long int* wantq, const long long int* wantz, const long long int* n,
             float* a, const long long int* lda, float* b, const long long int* ldb,
             float* q, const long long int* ldq, float* z, const long long int* ldz,
             const long long int* j1, const long long int* n1, const long long int* n2,
             float* work, const long long int* lwork, long long int* info );
void STGEX2_( const long long int* wantq, const long long int* wantz, const long long int* n,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              float* q, const long long int* ldq, float* z, const long long int* ldz,
              const long long int* j1, const long long int* n1, const long long int* n2,
              float* work, const long long int* lwork, long long int* info );
void stgex2( const long long int* wantq, const long long int* wantz, const long long int* n,
             float* a, const long long int* lda, float* b, const long long int* ldb,
             float* q, const long long int* ldq, float* z, const long long int* ldz,
             const long long int* j1, const long long int* n1, const long long int* n2,
             float* work, const long long int* lwork, long long int* info );
void stgex2_( const long long int* wantq, const long long int* wantz, const long long int* n,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              float* q, const long long int* ldq, float* z, const long long int* ldz,
              const long long int* j1, const long long int* n1, const long long int* n2,
              float* work, const long long int* lwork, long long int* info );

void STGEXC( const long long int* wantq, const long long int* wantz, const long long int* n,
             float* a, const long long int* lda, float* b, const long long int* ldb,
             float* q, const long long int* ldq, float* z, const long long int* ldz,
             long long int* ifst, long long int* ilst, float* work, const long long int* lwork,
             long long int* info );
void STGEXC_( const long long int* wantq, const long long int* wantz, const long long int* n,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              float* q, const long long int* ldq, float* z, const long long int* ldz,
              long long int* ifst, long long int* ilst, float* work, const long long int* lwork,
              long long int* info );
void stgexc( const long long int* wantq, const long long int* wantz, const long long int* n,
             float* a, const long long int* lda, float* b, const long long int* ldb,
             float* q, const long long int* ldq, float* z, const long long int* ldz,
             long long int* ifst, long long int* ilst, float* work, const long long int* lwork,
             long long int* info );
void stgexc_( const long long int* wantq, const long long int* wantz, const long long int* n,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              float* q, const long long int* ldq, float* z, const long long int* ldz,
              long long int* ifst, long long int* ilst, float* work, const long long int* lwork,
              long long int* info );

void STGSEN( const long long int* ijob, const long long int* wantq, const long long int* wantz,
             const long long int* select, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* alphar,
             float* alphai, float* beta, float* q, const long long int* ldq,
             float* z, const long long int* ldz, long long int* m, float* pl, float* pr,
             float* dif, float* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void STGSEN_( const long long int* ijob, const long long int* wantq, const long long int* wantz,
              const long long int* select, const long long int* n, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* alphar,
              float* alphai, float* beta, float* q, const long long int* ldq,
              float* z, const long long int* ldz, long long int* m, float* pl, float* pr,
              float* dif, float* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );
void stgsen( const long long int* ijob, const long long int* wantq, const long long int* wantz,
             const long long int* select, const long long int* n, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* alphar,
             float* alphai, float* beta, float* q, const long long int* ldq,
             float* z, const long long int* ldz, long long int* m, float* pl, float* pr,
             float* dif, float* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void stgsen_( const long long int* ijob, const long long int* wantq, const long long int* wantz,
              const long long int* select, const long long int* n, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* alphar,
              float* alphai, float* beta, float* q, const long long int* ldq,
              float* z, const long long int* ldz, long long int* m, float* pl, float* pr,
              float* dif, float* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );

void STGSJA( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             const long long int* k, const long long int* l, float* a, const long long int* lda,
             float* b, const long long int* ldb, const float* tola,
             const float* tolb, float* alpha, float* beta, float* u,
             const long long int* ldu, float* v, const long long int* ldv, float* q,
             const long long int* ldq, float* work, long long int* ncycle, long long int* info );
void STGSJA_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              const long long int* k, const long long int* l, float* a, const long long int* lda,
              float* b, const long long int* ldb, const float* tola,
              const float* tolb, float* alpha, float* beta, float* u,
              const long long int* ldu, float* v, const long long int* ldv, float* q,
              const long long int* ldq, float* work, long long int* ncycle,
              long long int* info );
void stgsja( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             const long long int* k, const long long int* l, float* a, const long long int* lda,
             float* b, const long long int* ldb, const float* tola,
             const float* tolb, float* alpha, float* beta, float* u,
             const long long int* ldu, float* v, const long long int* ldv, float* q,
             const long long int* ldq, float* work, long long int* ncycle, long long int* info );
void stgsja_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              const long long int* k, const long long int* l, float* a, const long long int* lda,
              float* b, const long long int* ldb, const float* tola,
              const float* tolb, float* alpha, float* beta, float* u,
              const long long int* ldu, float* v, const long long int* ldv, float* q,
              const long long int* ldq, float* work, long long int* ncycle,
              long long int* info );

void STGSNA( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const float* a, const long long int* lda,
             const float* b, const long long int* ldb, const float* vl,
             const long long int* ldvl, const float* vr, const long long int* ldvr,
             float* s, float* dif, const long long int* mm, long long int* m, float* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void STGSNA_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const float* a, const long long int* lda,
              const float* b, const long long int* ldb, const float* vl,
              const long long int* ldvl, const float* vr, const long long int* ldvr,
              float* s, float* dif, const long long int* mm, long long int* m, float* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void stgsna( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const float* a, const long long int* lda,
             const float* b, const long long int* ldb, const float* vl,
             const long long int* ldvl, const float* vr, const long long int* ldvr,
             float* s, float* dif, const long long int* mm, long long int* m, float* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void stgsna_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const float* a, const long long int* lda,
              const float* b, const long long int* ldb, const float* vl,
              const long long int* ldvl, const float* vr, const long long int* ldvr,
              float* s, float* dif, const long long int* mm, long long int* m, float* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void STGSY2( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const float* a, const long long int* lda,
             const float* b, const long long int* ldb, float* c, const long long int* ldc,
             const float* d, const long long int* ldd, const float* e,
             const long long int* lde, float* f, const long long int* ldf, float* scale,
             float* rdsum, float* rdscal, long long int* iwork, long long int* pq,
             long long int* info );
void STGSY2_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const float* a, const long long int* lda,
              const float* b, const long long int* ldb, float* c, const long long int* ldc,
              const float* d, const long long int* ldd, const float* e,
              const long long int* lde, float* f, const long long int* ldf, float* scale,
              float* rdsum, float* rdscal, long long int* iwork, long long int* pq,
              long long int* info );
void stgsy2( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const float* a, const long long int* lda,
             const float* b, const long long int* ldb, float* c, const long long int* ldc,
             const float* d, const long long int* ldd, const float* e,
             const long long int* lde, float* f, const long long int* ldf, float* scale,
             float* rdsum, float* rdscal, long long int* iwork, long long int* pq,
             long long int* info );
void stgsy2_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const float* a, const long long int* lda,
              const float* b, const long long int* ldb, float* c, const long long int* ldc,
              const float* d, const long long int* ldd, const float* e,
              const long long int* lde, float* f, const long long int* ldf, float* scale,
              float* rdsum, float* rdscal, long long int* iwork, long long int* pq,
              long long int* info );

void STGSYL( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const float* a, const long long int* lda,
             const float* b, const long long int* ldb, float* c, const long long int* ldc,
             const float* d, const long long int* ldd, const float* e,
             const long long int* lde, float* f, const long long int* ldf, float* scale,
             float* dif, float* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void STGSYL_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const float* a, const long long int* lda,
              const float* b, const long long int* ldb, float* c, const long long int* ldc,
              const float* d, const long long int* ldd, const float* e,
              const long long int* lde, float* f, const long long int* ldf, float* scale,
              float* dif, float* work, const long long int* lwork, long long int* iwork,
              long long int* info );
void stgsyl( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const float* a, const long long int* lda,
             const float* b, const long long int* ldb, float* c, const long long int* ldc,
             const float* d, const long long int* ldd, const float* e,
             const long long int* lde, float* f, const long long int* ldf, float* scale,
             float* dif, float* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void stgsyl_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const float* a, const long long int* lda,
              const float* b, const long long int* ldb, float* c, const long long int* ldc,
              const float* d, const long long int* ldd, const float* e,
              const long long int* lde, float* f, const long long int* ldf, float* scale,
              float* dif, float* work, const long long int* lwork, long long int* iwork,
              long long int* info );

void STPCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const float* ap, float* rcond, float* work,
             long long int* iwork, long long int* info );
void STPCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const float* ap, float* rcond, float* work,
              long long int* iwork, long long int* info );
void stpcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const float* ap, float* rcond, float* work,
             long long int* iwork, long long int* info );
void stpcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const float* ap, float* rcond, float* work,
              long long int* iwork, long long int* info );

void STPRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const float* ap,
             const float* b, const long long int* ldb, const float* x,
             const long long int* ldx, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void STPRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const float* ap,
              const float* b, const long long int* ldb, const float* x,
              const long long int* ldx, float* ferr, float* berr, float* work,
              long long int* iwork, long long int* info );
void stprfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const float* ap,
             const float* b, const long long int* ldb, const float* x,
             const long long int* ldx, float* ferr, float* berr, float* work,
             long long int* iwork, long long int* info );
void stprfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const float* ap,
              const float* b, const long long int* ldb, const float* x,
              const long long int* ldx, float* ferr, float* berr, float* work,
              long long int* iwork, long long int* info );

void STPTRI( const char* uplo, const char* diag, const long long int* n, float* ap,
             long long int* info );
void STPTRI_( const char* uplo, const char* diag, const long long int* n, float* ap,
              long long int* info );
void stptri( const char* uplo, const char* diag, const long long int* n, float* ap,
             long long int* info );
void stptri_( const char* uplo, const char* diag, const long long int* n, float* ap,
              long long int* info );

void STPTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const float* ap, float* b,
             const long long int* ldb, long long int* info );
void STPTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const float* ap, float* b,
              const long long int* ldb, long long int* info );
void stptrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const float* ap, float* b,
             const long long int* ldb, long long int* info );
void stptrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const float* ap, float* b,
              const long long int* ldb, long long int* info );

void STPTTF( const char* transr, const char* uplo, const long long int* n,
             const float* ap, float* arf, long long int* info );
void STPTTF_( const char* transr, const char* uplo, const long long int* n,
              const float* ap, float* arf, long long int* info );
void stpttf( const char* transr, const char* uplo, const long long int* n,
             const float* ap, float* arf, long long int* info );
void stpttf_( const char* transr, const char* uplo, const long long int* n,
              const float* ap, float* arf, long long int* info );

void STPTTR( const char* uplo, const long long int* n, const float* ap, float* a,
             const long long int* lda, long long int* info );
void STPTTR_( const char* uplo, const long long int* n, const float* ap, float* a,
              const long long int* lda, long long int* info );
void stpttr( const char* uplo, const long long int* n, const float* ap, float* a,
             const long long int* lda, long long int* info );
void stpttr_( const char* uplo, const long long int* n, const float* ap, float* a,
              const long long int* lda, long long int* info );

void STRCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const float* a, const long long int* lda,
             float* rcond, float* work, long long int* iwork, long long int* info );
void STRCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const float* a, const long long int* lda,
              float* rcond, float* work, long long int* iwork, long long int* info );
void strcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const float* a, const long long int* lda,
             float* rcond, float* work, long long int* iwork, long long int* info );
void strcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const float* a, const long long int* lda,
              float* rcond, float* work, long long int* iwork, long long int* info );

void STREVC( const char* side, const char* howmny, long long int* select,
             const long long int* n, const float* t, const long long int* ldt, float* vl,
             const long long int* ldvl, float* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, float* work, long long int* info );
void STREVC_( const char* side, const char* howmny, long long int* select,
              const long long int* n, const float* t, const long long int* ldt, float* vl,
              const long long int* ldvl, float* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, float* work, long long int* info );
void strevc( const char* side, const char* howmny, long long int* select,
             const long long int* n, const float* t, const long long int* ldt, float* vl,
             const long long int* ldvl, float* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, float* work, long long int* info );
void strevc_( const char* side, const char* howmny, long long int* select,
              const long long int* n, const float* t, const long long int* ldt, float* vl,
              const long long int* ldvl, float* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, float* work, long long int* info );

void STREXC( const char* compq, const long long int* n, float* t, const long long int* ldt,
             float* q, const long long int* ldq, long long int* ifst, long long int* ilst,
             float* work, long long int* info );
void STREXC_( const char* compq, const long long int* n, float* t,
              const long long int* ldt, float* q, const long long int* ldq, long long int* ifst,
              long long int* ilst, float* work, long long int* info );
void strexc( const char* compq, const long long int* n, float* t, const long long int* ldt,
             float* q, const long long int* ldq, long long int* ifst, long long int* ilst,
             float* work, long long int* info );
void strexc_( const char* compq, const long long int* n, float* t,
              const long long int* ldt, float* q, const long long int* ldq, long long int* ifst,
              long long int* ilst, float* work, long long int* info );

void STRRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const float* a,
             const long long int* lda, const float* b, const long long int* ldb,
             const float* x, const long long int* ldx, float* ferr, float* berr,
             float* work, long long int* iwork, long long int* info );
void STRRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const float* a,
              const long long int* lda, const float* b, const long long int* ldb,
              const float* x, const long long int* ldx, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );
void strrfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const float* a,
             const long long int* lda, const float* b, const long long int* ldb,
             const float* x, const long long int* ldx, float* ferr, float* berr,
             float* work, long long int* iwork, long long int* info );
void strrfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const float* a,
              const long long int* lda, const float* b, const long long int* ldb,
              const float* x, const long long int* ldx, float* ferr, float* berr,
              float* work, long long int* iwork, long long int* info );

void STRSEN( const char* job, const char* compq, const long long int* select,
             const long long int* n, float* t, const long long int* ldt, float* q,
             const long long int* ldq, float* wr, float* wi, long long int* m, float* s,
             float* sep, float* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void STRSEN_( const char* job, const char* compq, const long long int* select,
              const long long int* n, float* t, const long long int* ldt, float* q,
              const long long int* ldq, float* wr, float* wi, long long int* m, float* s,
              float* sep, float* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );
void strsen( const char* job, const char* compq, const long long int* select,
             const long long int* n, float* t, const long long int* ldt, float* q,
             const long long int* ldq, float* wr, float* wi, long long int* m, float* s,
             float* sep, float* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void strsen_( const char* job, const char* compq, const long long int* select,
              const long long int* n, float* t, const long long int* ldt, float* q,
              const long long int* ldq, float* wr, float* wi, long long int* m, float* s,
              float* sep, float* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );

void STRSNA( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const float* t, const long long int* ldt,
             const float* vl, const long long int* ldvl, const float* vr,
             const long long int* ldvr, float* s, float* sep, const long long int* mm,
             long long int* m, float* work, const long long int* ldwork, long long int* iwork,
             long long int* info );
void STRSNA_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const float* t, const long long int* ldt,
              const float* vl, const long long int* ldvl, const float* vr,
              const long long int* ldvr, float* s, float* sep, const long long int* mm,
              long long int* m, float* work, const long long int* ldwork, long long int* iwork,
              long long int* info );
void strsna( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const float* t, const long long int* ldt,
             const float* vl, const long long int* ldvl, const float* vr,
             const long long int* ldvr, float* s, float* sep, const long long int* mm,
             long long int* m, float* work, const long long int* ldwork, long long int* iwork,
             long long int* info );
void strsna_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const float* t, const long long int* ldt,
              const float* vl, const long long int* ldvl, const float* vr,
              const long long int* ldvr, float* s, float* sep, const long long int* mm,
              long long int* m, float* work, const long long int* ldwork, long long int* iwork,
              long long int* info );

void STRSYL( const char* trana, const char* tranb, const long long int* isgn,
             const long long int* m, const long long int* n, const float* a,
             const long long int* lda, const float* b, const long long int* ldb, float* c,
             const long long int* ldc, float* scale, long long int* info );
void STRSYL_( const char* trana, const char* tranb, const long long int* isgn,
              const long long int* m, const long long int* n, const float* a,
              const long long int* lda, const float* b, const long long int* ldb, float* c,
              const long long int* ldc, float* scale, long long int* info );
void strsyl( const char* trana, const char* tranb, const long long int* isgn,
             const long long int* m, const long long int* n, const float* a,
             const long long int* lda, const float* b, const long long int* ldb, float* c,
             const long long int* ldc, float* scale, long long int* info );
void strsyl_( const char* trana, const char* tranb, const long long int* isgn,
              const long long int* m, const long long int* n, const float* a,
              const long long int* lda, const float* b, const long long int* ldb, float* c,
              const long long int* ldc, float* scale, long long int* info );

void STRTI2( const char* uplo, const char* diag, const long long int* n, float* a,
             const long long int* lda, long long int* info );
void STRTI2_( const char* uplo, const char* diag, const long long int* n, float* a,
              const long long int* lda, long long int* info );
void strti2( const char* uplo, const char* diag, const long long int* n, float* a,
             const long long int* lda, long long int* info );
void strti2_( const char* uplo, const char* diag, const long long int* n, float* a,
              const long long int* lda, long long int* info );

void STRTRI( const char* uplo, const char* diag, const long long int* n, float* a,
             const long long int* lda, long long int* info );
void STRTRI_( const char* uplo, const char* diag, const long long int* n, float* a,
              const long long int* lda, long long int* info );
void strtri( const char* uplo, const char* diag, const long long int* n, float* a,
             const long long int* lda, long long int* info );
void strtri_( const char* uplo, const char* diag, const long long int* n, float* a,
              const long long int* lda, long long int* info );

void STRTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* info );
void STRTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const float* a,
              const long long int* lda, float* b, const long long int* ldb,
              long long int* info );
void strtrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const float* a,
             const long long int* lda, float* b, const long long int* ldb, long long int* info );
void strtrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const float* a,
              const long long int* lda, float* b, const long long int* ldb,
              long long int* info );

void STRTTF( const char* transr, const char* uplo, const long long int* n,
             const float* a, const long long int* lda, float* arf, long long int* info );
void STRTTF_( const char* transr, const char* uplo, const long long int* n,
              const float* a, const long long int* lda, float* arf, long long int* info );
void strttf( const char* transr, const char* uplo, const long long int* n,
             const float* a, const long long int* lda, float* arf, long long int* info );
void strttf_( const char* transr, const char* uplo, const long long int* n,
              const float* a, const long long int* lda, float* arf, long long int* info );

void STRTTP( const char* uplo, const long long int* n, const float* a,
             const long long int* lda, float* ap, long long int* info );
void STRTTP_( const char* uplo, const long long int* n, const float* a,
              const long long int* lda, float* ap, long long int* info );
void strttp( const char* uplo, const long long int* n, const float* a,
             const long long int* lda, float* ap, long long int* info );
void strttp_( const char* uplo, const long long int* n, const float* a,
              const long long int* lda, float* ap, long long int* info );

void STZRQF( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, long long int* info );
void STZRQF_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, long long int* info );
void stzrqf( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, long long int* info );
void stzrqf_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, long long int* info );

void STZRZF( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void STZRZF_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );
void stzrzf( const long long int* m, const long long int* n, float* a, const long long int* lda,
             float* tau, float* work, const long long int* lwork, long long int* info );
void stzrzf_( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* tau, float* work, const long long int* lwork, long long int* info );

void XERBLA_ARRAY( const char* srname_array, const long long int* srname_len,
                   const long long int* info );
void XERBLA_ARRAY_( const char* srname_array, const long long int* srname_len,
                    const long long int* info );
void xerbla_array( const char* srname_array, const long long int* srname_len,
                   const long long int* info );
void xerbla_array_( const char* srname_array, const long long int* srname_len,
                    const long long int* info );

void ZBDSQR( const char* uplo, const long long int* n, const long long int* ncvt,
             const long long int* nru, const long long int* ncc, double* d, double* e,
             MKL_Complex16* vt, const long long int* ldvt, MKL_Complex16* u,
             const long long int* ldu, MKL_Complex16* c, const long long int* ldc,
             double* rwork, long long int* info );
void ZBDSQR_( const char* uplo, const long long int* n, const long long int* ncvt,
              const long long int* nru, const long long int* ncc, double* d, double* e,
              MKL_Complex16* vt, const long long int* ldvt, MKL_Complex16* u,
              const long long int* ldu, MKL_Complex16* c, const long long int* ldc,
              double* rwork, long long int* info );
void zbdsqr( const char* uplo, const long long int* n, const long long int* ncvt,
             const long long int* nru, const long long int* ncc, double* d, double* e,
             MKL_Complex16* vt, const long long int* ldvt, MKL_Complex16* u,
             const long long int* ldu, MKL_Complex16* c, const long long int* ldc,
             double* rwork, long long int* info );
void zbdsqr_( const char* uplo, const long long int* n, const long long int* ncvt,
              const long long int* nru, const long long int* ncc, double* d, double* e,
              MKL_Complex16* vt, const long long int* ldvt, MKL_Complex16* u,
              const long long int* ldu, MKL_Complex16* c, const long long int* ldc,
              double* rwork, long long int* info );

void ZCGESV( const long long int* n, const long long int* nrhs, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             MKL_Complex16* work, MKL_Complex8* swork, double* rwork,
             long long int* iter, long long int* info );
void ZCGESV_( const long long int* n, const long long int* nrhs, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              MKL_Complex16* work, MKL_Complex8* swork, double* rwork,
              long long int* iter, long long int* info );
void zcgesv( const long long int* n, const long long int* nrhs, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             MKL_Complex16* work, MKL_Complex8* swork, double* rwork,
             long long int* iter, long long int* info );
void zcgesv_( const long long int* n, const long long int* nrhs, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              MKL_Complex16* work, MKL_Complex8* swork, double* rwork,
              long long int* iter, long long int* info );

void ZCPOSV( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             MKL_Complex16* work, MKL_Complex8* swork, double* rwork,
             long long int* iter, long long int* info );
void ZCPOSV_( const char* uplo, const long long int* n, const long long int* nrhs,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              MKL_Complex16* work, MKL_Complex8* swork, double* rwork,
              long long int* iter, long long int* info );
void zcposv( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             MKL_Complex16* work, MKL_Complex8* swork, double* rwork,
             long long int* iter, long long int* info );
void zcposv_( const char* uplo, const long long int* n, const long long int* nrhs,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              MKL_Complex16* work, MKL_Complex8* swork, double* rwork,
              long long int* iter, long long int* info );

void ZDRSCL( const long long int* n, const double* sa, MKL_Complex16* sx,
             const long long int* incx );
void ZDRSCL_( const long long int* n, const double* sa, MKL_Complex16* sx,
              const long long int* incx );
void zdrscl( const long long int* n, const double* sa, MKL_Complex16* sx,
             const long long int* incx );
void zdrscl_( const long long int* n, const double* sa, MKL_Complex16* sx,
              const long long int* incx );

void ZGBBRD( const char* vect, const long long int* m, const long long int* n,
             const long long int* ncc, const long long int* kl, const long long int* ku,
             MKL_Complex16* ab, const long long int* ldab, double* d, double* e,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* pt,
             const long long int* ldpt, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZGBBRD_( const char* vect, const long long int* m, const long long int* n,
              const long long int* ncc, const long long int* kl, const long long int* ku,
              MKL_Complex16* ab, const long long int* ldab, double* d, double* e,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* pt,
              const long long int* ldpt, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgbbrd( const char* vect, const long long int* m, const long long int* n,
             const long long int* ncc, const long long int* kl, const long long int* ku,
             MKL_Complex16* ab, const long long int* ldab, double* d, double* e,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* pt,
             const long long int* ldpt, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, double* rwork, long long int* info );
void zgbbrd_( const char* vect, const long long int* m, const long long int* n,
              const long long int* ncc, const long long int* kl, const long long int* ku,
              MKL_Complex16* ab, const long long int* ldab, double* d, double* e,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* pt,
              const long long int* ldpt, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZGBCON( const char* norm, const long long int* n, const long long int* kl,
             const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
             const long long int* ipiv, const double* anorm, double* rcond,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZGBCON_( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
              const long long int* ipiv, const double* anorm, double* rcond,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgbcon( const char* norm, const long long int* n, const long long int* kl,
             const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
             const long long int* ipiv, const double* anorm, double* rcond,
             MKL_Complex16* work, double* rwork, long long int* info );
void zgbcon_( const char* norm, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
              const long long int* ipiv, const double* anorm, double* rcond,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZGBEQUB( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
              double* r, double* c, double* rowcnd, double* colcnd,
              double* amax, long long int* info );
void ZGBEQUB_( const long long int* m, const long long int* n, const long long int* kl,
               const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
               double* r, double* c, double* rowcnd, double* colcnd,
               double* amax, long long int* info );
void zgbequb( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
              double* r, double* c, double* rowcnd, double* colcnd,
              double* amax, long long int* info );
void zgbequb_( const long long int* m, const long long int* n, const long long int* kl,
               const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
               double* r, double* c, double* rowcnd, double* colcnd,
               double* amax, long long int* info );

void ZGBEQU( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
             double* r, double* c, double* rowcnd, double* colcnd,
             double* amax, long long int* info );
void ZGBEQU_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
              double* r, double* c, double* rowcnd, double* colcnd,
              double* amax, long long int* info );
void zgbequ( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
             double* r, double* c, double* rowcnd, double* colcnd,
             double* amax, long long int* info );
void zgbequ_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
              double* r, double* c, double* rowcnd, double* colcnd,
              double* amax, long long int* info );

void ZGBRFS( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const MKL_Complex16* ab,
             const long long int* ldab, const MKL_Complex16* afb,
             const long long int* ldafb, const long long int* ipiv, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             double* ferr, double* berr, MKL_Complex16* work, double* rwork,
             long long int* info );
void ZGBRFS_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const MKL_Complex16* ab,
              const long long int* ldab, const MKL_Complex16* afb,
              const long long int* ldafb, const long long int* ipiv,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgbrfs( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const MKL_Complex16* ab,
             const long long int* ldab, const MKL_Complex16* afb,
             const long long int* ldafb, const long long int* ipiv, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             double* ferr, double* berr, MKL_Complex16* work, double* rwork,
             long long int* info );
void zgbrfs_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const MKL_Complex16* ab,
              const long long int* ldab, const MKL_Complex16* afb,
              const long long int* ldafb, const long long int* ipiv,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZGBRFSX( const char* trans, const char* equed, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              const MKL_Complex16* ab, const long long int* ldab,
              const MKL_Complex16* afb, const long long int* ldafb,
              const long long int* ipiv, const double* r, const double* c,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void ZGBRFSX_( const char* trans, const char* equed, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               const MKL_Complex16* ab, const long long int* ldab,
               const MKL_Complex16* afb, const long long int* ldafb,
               const long long int* ipiv, const double* r, const double* c,
               const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );
void zgbrfsx( const char* trans, const char* equed, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              const MKL_Complex16* ab, const long long int* ldab,
              const MKL_Complex16* afb, const long long int* ldafb,
              const long long int* ipiv, const double* r, const double* c,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgbrfsx_( const char* trans, const char* equed, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               const MKL_Complex16* ab, const long long int* ldab,
               const MKL_Complex16* afb, const long long int* ldafb,
               const long long int* ipiv, const double* r, const double* c,
               const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );

void ZGBSV( const long long int* n, const long long int* kl, const long long int* ku,
            const long long int* nrhs, MKL_Complex16* ab, const long long int* ldab,
            long long int* ipiv, MKL_Complex16* b, const long long int* ldb,
            long long int* info );
void ZGBSV_( const long long int* n, const long long int* kl, const long long int* ku,
             const long long int* nrhs, MKL_Complex16* ab, const long long int* ldab,
             long long int* ipiv, MKL_Complex16* b, const long long int* ldb,
             long long int* info );
void zgbsv( const long long int* n, const long long int* kl, const long long int* ku,
            const long long int* nrhs, MKL_Complex16* ab, const long long int* ldab,
            long long int* ipiv, MKL_Complex16* b, const long long int* ldb,
            long long int* info );
void zgbsv_( const long long int* n, const long long int* kl, const long long int* ku,
             const long long int* nrhs, MKL_Complex16* ab, const long long int* ldab,
             long long int* ipiv, MKL_Complex16* b, const long long int* ldb,
             long long int* info );

void ZGBSVX( const char* fact, const char* trans, const long long int* n,
             const long long int* kl, const long long int* ku, const long long int* nrhs,
             MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* afb,
             const long long int* ldafb, long long int* ipiv, char* equed, double* r,
             double* c, MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZGBSVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, double* r,
              double* c, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void zgbsvx( const char* fact, const char* trans, const long long int* n,
             const long long int* kl, const long long int* ku, const long long int* nrhs,
             MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* afb,
             const long long int* ldafb, long long int* ipiv, char* equed, double* r,
             double* c, MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zgbsvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, double* r,
              double* c, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZGBSVXX( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, double* r,
              double* c, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* rpvgrw, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void ZGBSVXX_( const char* fact, const char* trans, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* afb,
               const long long int* ldafb, long long int* ipiv, char* equed, double* r,
               double* c, MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* x, const long long int* ldx, double* rcond,
               double* rpvgrw, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );
void zgbsvxx( const char* fact, const char* trans, const long long int* n,
              const long long int* kl, const long long int* ku, const long long int* nrhs,
              MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* afb,
              const long long int* ldafb, long long int* ipiv, char* equed, double* r,
              double* c, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* rpvgrw, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void zgbsvxx_( const char* fact, const char* trans, const long long int* n,
               const long long int* kl, const long long int* ku, const long long int* nrhs,
               MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* afb,
               const long long int* ldafb, long long int* ipiv, char* equed, double* r,
               double* c, MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* x, const long long int* ldx, double* rcond,
               double* rpvgrw, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );

void ZGBTF2( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
             long long int* ipiv, long long int* info );
void ZGBTF2_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );
void zgbtf2( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
             long long int* ipiv, long long int* info );
void zgbtf2_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );

void ZGBTRF( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
             long long int* ipiv, long long int* info );
void ZGBTRF_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );
void zgbtrf( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
             long long int* ipiv, long long int* info );
void zgbtrf_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
              long long int* ipiv, long long int* info );

void ZGBTRS( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const MKL_Complex16* ab,
             const long long int* ldab, const long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZGBTRS_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const MKL_Complex16* ab,
              const long long int* ldab, const long long int* ipiv, MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void zgbtrs( const char* trans, const long long int* n, const long long int* kl,
             const long long int* ku, const long long int* nrhs, const MKL_Complex16* ab,
             const long long int* ldab, const long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zgbtrs_( const char* trans, const long long int* n, const long long int* kl,
              const long long int* ku, const long long int* nrhs, const MKL_Complex16* ab,
              const long long int* ldab, const long long int* ipiv, MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZGEBAK( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const double* scale,
             const long long int* m, MKL_Complex16* v, const long long int* ldv,
             long long int* info );
void ZGEBAK_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const double* scale,
              const long long int* m, MKL_Complex16* v, const long long int* ldv,
              long long int* info );
void zgebak( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const double* scale,
             const long long int* m, MKL_Complex16* v, const long long int* ldv,
             long long int* info );
void zgebak_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const double* scale,
              const long long int* m, MKL_Complex16* v, const long long int* ldv,
              long long int* info );

void ZGEBAL( const char* job, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ilo, long long int* ihi, double* scale,
             long long int* info );
void ZGEBAL_( const char* job, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ilo, long long int* ihi, double* scale,
              long long int* info );
void zgebal( const char* job, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ilo, long long int* ihi, double* scale,
             long long int* info );
void zgebal_( const char* job, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ilo, long long int* ihi, double* scale,
              long long int* info );

void ZGEBD2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, double* d, double* e, MKL_Complex16* tauq,
             MKL_Complex16* taup, MKL_Complex16* work, long long int* info );
void ZGEBD2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, double* d, double* e, MKL_Complex16* tauq,
              MKL_Complex16* taup, MKL_Complex16* work, long long int* info );
void zgebd2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, double* d, double* e, MKL_Complex16* tauq,
             MKL_Complex16* taup, MKL_Complex16* work, long long int* info );
void zgebd2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, double* d, double* e, MKL_Complex16* tauq,
              MKL_Complex16* taup, MKL_Complex16* work, long long int* info );

void ZGEBRD( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, double* d, double* e, MKL_Complex16* tauq,
             MKL_Complex16* taup, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZGEBRD_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, double* d, double* e, MKL_Complex16* tauq,
              MKL_Complex16* taup, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zgebrd( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, double* d, double* e, MKL_Complex16* tauq,
             MKL_Complex16* taup, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zgebrd_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, double* d, double* e, MKL_Complex16* tauq,
              MKL_Complex16* taup, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZGECON( const char* norm, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const double* anorm, double* rcond,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZGECON_( const char* norm, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const double* anorm, double* rcond,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgecon( const char* norm, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const double* anorm, double* rcond,
             MKL_Complex16* work, double* rwork, long long int* info );
void zgecon_( const char* norm, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const double* anorm, double* rcond,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZGEEQUB( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, double* r, double* c, double* rowcnd,
              double* colcnd, double* amax, long long int* info );
void ZGEEQUB_( const long long int* m, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* r, double* c, double* rowcnd,
               double* colcnd, double* amax, long long int* info );
void zgeequb( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, double* r, double* c, double* rowcnd,
              double* colcnd, double* amax, long long int* info );
void zgeequb_( const long long int* m, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* r, double* c, double* rowcnd,
               double* colcnd, double* amax, long long int* info );

void ZGEEQU( const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, double* r, double* c, double* rowcnd,
             double* colcnd, double* amax, long long int* info );
void ZGEEQU_( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, double* r, double* c, double* rowcnd,
              double* colcnd, double* amax, long long int* info );
void zgeequ( const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, double* r, double* c, double* rowcnd,
             double* colcnd, double* amax, long long int* info );
void zgeequ_( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, double* r, double* c, double* rowcnd,
              double* colcnd, double* amax, long long int* info );

void ZGEES( const char* jobvs, const char* sort,
            MKL_Z_SELECT_FUNCTION_1 select, const long long int* n, MKL_Complex16* a,
            const long long int* lda, long long int* sdim, MKL_Complex16* w,
            MKL_Complex16* vs, const long long int* ldvs, MKL_Complex16* work,
            const long long int* lwork, double* rwork, long long int* bwork,
            long long int* info );
void ZGEES_( const char* jobvs, const char* sort,
             MKL_Z_SELECT_FUNCTION_1 select, const long long int* n,
             MKL_Complex16* a, const long long int* lda, long long int* sdim,
             MKL_Complex16* w, MKL_Complex16* vs, const long long int* ldvs,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* bwork, long long int* info );
void zgees( const char* jobvs, const char* sort,
            MKL_Z_SELECT_FUNCTION_1 select, const long long int* n, MKL_Complex16* a,
            const long long int* lda, long long int* sdim, MKL_Complex16* w,
            MKL_Complex16* vs, const long long int* ldvs, MKL_Complex16* work,
            const long long int* lwork, double* rwork, long long int* bwork,
            long long int* info );
void zgees_( const char* jobvs, const char* sort,
             MKL_Z_SELECT_FUNCTION_1 select, const long long int* n,
             MKL_Complex16* a, const long long int* lda, long long int* sdim,
             MKL_Complex16* w, MKL_Complex16* vs, const long long int* ldvs,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* bwork, long long int* info );

void ZGEESX( const char* jobvs, const char* sort,
             MKL_Z_SELECT_FUNCTION_1 select, const char* sense,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* sdim, MKL_Complex16* w, MKL_Complex16* vs,
             const long long int* ldvs, double* rconde, double* rcondv,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* bwork, long long int* info );
void ZGEESX_( const char* jobvs, const char* sort,
              MKL_Z_SELECT_FUNCTION_1 select, const char* sense,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* sdim, MKL_Complex16* w, MKL_Complex16* vs,
              const long long int* ldvs, double* rconde, double* rcondv,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* bwork, long long int* info );
void zgeesx( const char* jobvs, const char* sort,
             MKL_Z_SELECT_FUNCTION_1 select, const char* sense,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* sdim, MKL_Complex16* w, MKL_Complex16* vs,
             const long long int* ldvs, double* rconde, double* rcondv,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* bwork, long long int* info );
void zgeesx_( const char* jobvs, const char* sort,
              MKL_Z_SELECT_FUNCTION_1 select, const char* sense,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* sdim, MKL_Complex16* w, MKL_Complex16* vs,
              const long long int* ldvs, double* rconde, double* rcondv,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* bwork, long long int* info );

void ZGEEV( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* w,
            MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
            const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* info );
void ZGEEV_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* w,
             MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
             const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void zgeev( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* w,
            MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
            const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* info );
void zgeev_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* w,
             MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
             const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );

void ZGEEVX( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* w, MKL_Complex16* vl,
             const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, double* scale, double* abnrm,
             double* rconde, double* rcondv, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* info );
void ZGEEVX_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* w, MKL_Complex16* vl,
              const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, double* scale, double* abnrm,
              double* rconde, double* rcondv, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* info );
void zgeevx( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* w, MKL_Complex16* vl,
             const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, double* scale, double* abnrm,
             double* rconde, double* rcondv, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* info );
void zgeevx_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* w, MKL_Complex16* vl,
              const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, double* scale, double* abnrm,
              double* rconde, double* rcondv, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* info );

void ZGEGS( const char* jobvsl, const char* jobvsr, const long long int* n,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
            const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
            MKL_Complex16* vsl, const long long int* ldvsl, MKL_Complex16* vsr,
            const long long int* ldvsr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* info );
void ZGEGS_( const char* jobvsl, const char* jobvsr, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
             MKL_Complex16* vsl, const long long int* ldvsl, MKL_Complex16* vsr,
             const long long int* ldvsr, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void zgegs( const char* jobvsl, const char* jobvsr, const long long int* n,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
            const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
            MKL_Complex16* vsl, const long long int* ldvsl, MKL_Complex16* vsr,
            const long long int* ldvsr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* info );
void zgegs_( const char* jobvsl, const char* jobvsr, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
             MKL_Complex16* vsl, const long long int* ldvsl, MKL_Complex16* vsr,
             const long long int* ldvsr, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );

void ZGEGV( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
            const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
            MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
            const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* info );
void ZGEGV_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
             MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
             const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void zgegv( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
            const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
            MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
            const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* info );
void zgegv_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
             MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
             const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );

void ZGEHD2( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void ZGEHD2_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );
void zgehd2( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void zgehd2_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );

void ZGEHRD( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZGEHRD_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zgehrd( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zgehrd_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZGELQ2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             long long int* info );
void ZGELQ2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );
void zgelq2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             long long int* info );
void zgelq2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );

void ZGELQF( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZGELQF_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zgelqf( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zgelqf_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );

void ZGELSD( const long long int* m, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, double* s, const double* rcond, long long int* rank,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* iwork, long long int* info );
void ZGELSD_( const long long int* m, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, double* s, const double* rcond,
              long long int* rank, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* iwork, long long int* info );
void zgelsd( const long long int* m, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, double* s, const double* rcond, long long int* rank,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* iwork, long long int* info );
void zgelsd_( const long long int* m, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, double* s, const double* rcond,
              long long int* rank, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* iwork, long long int* info );

void ZGELS( const char* trans, const long long int* m, const long long int* n,
            const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
            MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
            const long long int* lwork, long long int* info );
void ZGELS_( const char* trans, const long long int* m, const long long int* n,
             const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zgels( const char* trans, const long long int* m, const long long int* n,
            const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
            MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
            const long long int* lwork, long long int* info );
void zgels_( const char* trans, const long long int* m, const long long int* n,
             const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
             const long long int* lwork, long long int* info );

void ZGELSS( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, double* s, const double* rcond, long long int* rank,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void ZGELSS_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, double* s, const double* rcond,
              long long int* rank, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* info );
void zgelss( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, double* s, const double* rcond, long long int* rank,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void zgelss_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, double* s, const double* rcond,
              long long int* rank, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* info );

void ZGELSX( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* jpvt, const double* rcond,
             long long int* rank, MKL_Complex16* work, double* rwork,
             long long int* info );
void ZGELSX_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, long long int* jpvt, const double* rcond,
              long long int* rank, MKL_Complex16* work, double* rwork,
              long long int* info );
void zgelsx( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* jpvt, const double* rcond,
             long long int* rank, MKL_Complex16* work, double* rwork,
             long long int* info );
void zgelsx_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, long long int* jpvt, const double* rcond,
              long long int* rank, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZGELSY( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* jpvt, const double* rcond,
             long long int* rank, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void ZGELSY_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, long long int* jpvt, const double* rcond,
              long long int* rank, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* info );
void zgelsy( const long long int* m, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* jpvt, const double* rcond,
             long long int* rank, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void zgelsy_( const long long int* m, const long long int* n, const long long int* nrhs,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, long long int* jpvt, const double* rcond,
              long long int* rank, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* info );

void ZGEQL2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             long long int* info );
void ZGEQL2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );
void zgeql2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             long long int* info );
void zgeql2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );

void ZGEQLF( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZGEQLF_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zgeqlf( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zgeqlf_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );

void ZGEQP3( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void ZGEQP3_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* info );
void zgeqp3( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void zgeqp3_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* info );

void ZGEQPF( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZGEQPF_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgeqpf( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
             MKL_Complex16* work, double* rwork, long long int* info );
void zgeqpf_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZGEQR2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             long long int* info );
void ZGEQR2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );
void zgeqr2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             long long int* info );
void zgeqr2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );

void ZGEQR2P( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );
void ZGEQR2P_( const long long int* m, const long long int* n, MKL_Complex16* a,
               const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
               long long int* info );
void zgeqr2p( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );
void zgeqr2p_( const long long int* m, const long long int* n, MKL_Complex16* a,
               const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
               long long int* info );

void ZGEQRF( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZGEQRF_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zgeqrf( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zgeqrf_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );

void ZGEQRFP( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void ZGEQRFP_( const long long int* m, const long long int* n, MKL_Complex16* a,
               const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
               const long long int* lwork, long long int* info );
void zgeqrfp( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zgeqrfp_( const long long int* m, const long long int* n, MKL_Complex16* a,
               const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
               const long long int* lwork, long long int* info );

void ZGERFS( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* af, const long long int* ldaf, const long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZGERFS_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgerfs( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* af, const long long int* ldaf, const long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zgerfs_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZGERFSX( const char* trans, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const double* r, const double* c,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void ZGERFSX_( const char* trans, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
               const MKL_Complex16* af, const long long int* ldaf,
               const long long int* ipiv, const double* r, const double* c,
               const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );
void zgerfsx( const char* trans, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const double* r, const double* c,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgerfsx_( const char* trans, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
               const MKL_Complex16* af, const long long int* ldaf,
               const long long int* ipiv, const double* r, const double* c,
               const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );

void ZGERQ2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             long long int* info );
void ZGERQ2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );
void zgerq2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             long long int* info );
void zgerq2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              long long int* info );

void ZGERQF( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZGERQF_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zgerqf( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zgerqf_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );

void ZGESC2( const long long int* n, const MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* rhs, const long long int* ipiv, const long long int* jpiv,
             double* scale );
void ZGESC2_( const long long int* n, const MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* rhs, const long long int* ipiv, const long long int* jpiv,
              double* scale );
void zgesc2( const long long int* n, const MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* rhs, const long long int* ipiv, const long long int* jpiv,
             double* scale );
void zgesc2_( const long long int* n, const MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* rhs, const long long int* ipiv, const long long int* jpiv,
              double* scale );

void ZGESDD( const char* jobz, const long long int* m, const long long int* n,
             MKL_Complex16* a, const long long int* lda, double* s, MKL_Complex16* u,
             const long long int* ldu, MKL_Complex16* vt, const long long int* ldvt,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* iwork, long long int* info );
void ZGESDD_( const char* jobz, const long long int* m, const long long int* n,
              MKL_Complex16* a, const long long int* lda, double* s,
              MKL_Complex16* u, const long long int* ldu, MKL_Complex16* vt,
              const long long int* ldvt, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* iwork, long long int* info );
void zgesdd( const char* jobz, const long long int* m, const long long int* n,
             MKL_Complex16* a, const long long int* lda, double* s, MKL_Complex16* u,
             const long long int* ldu, MKL_Complex16* vt, const long long int* ldvt,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* iwork, long long int* info );
void zgesdd_( const char* jobz, const long long int* m, const long long int* n,
              MKL_Complex16* a, const long long int* lda, double* s,
              MKL_Complex16* u, const long long int* ldu, MKL_Complex16* vt,
              const long long int* ldvt, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* iwork, long long int* info );

void ZGESVD( const char* jobu, const char* jobvt, const long long int* m,
             const long long int* n, MKL_Complex16* a, const long long int* lda, double* s,
             MKL_Complex16* u, const long long int* ldu, MKL_Complex16* vt,
             const long long int* ldvt, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void ZGESVD_( const char* jobu, const char* jobvt, const long long int* m,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              double* s, MKL_Complex16* u, const long long int* ldu,
              MKL_Complex16* vt, const long long int* ldvt, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* info );
void zgesvd( const char* jobu, const char* jobvt, const long long int* m,
             const long long int* n, MKL_Complex16* a, const long long int* lda, double* s,
             MKL_Complex16* u, const long long int* ldu, MKL_Complex16* vt,
             const long long int* ldvt, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void zgesvd_( const char* jobu, const char* jobvt, const long long int* m,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              double* s, MKL_Complex16* u, const long long int* ldu,
              MKL_Complex16* vt, const long long int* ldvt, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* info );

void ZGESV( const long long int* n, const long long int* nrhs, MKL_Complex16* a,
            const long long int* lda, long long int* ipiv, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void ZGESV_( const long long int* n, const long long int* nrhs, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zgesv( const long long int* n, const long long int* nrhs, MKL_Complex16* a,
            const long long int* lda, long long int* ipiv, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void zgesv_( const long long int* n, const long long int* nrhs, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );

void ZGESVX( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
             char* equed, double* r, double* c, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             double* rcond, double* ferr, double* berr, MKL_Complex16* work,
             double* rwork, long long int* info );
void ZGESVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              char* equed, double* r, double* c, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* ferr, double* berr, MKL_Complex16* work,
              double* rwork, long long int* info );
void zgesvx( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
             char* equed, double* r, double* c, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             double* rcond, double* ferr, double* berr, MKL_Complex16* work,
             double* rwork, long long int* info );
void zgesvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              char* equed, double* r, double* c, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* ferr, double* berr, MKL_Complex16* work,
              double* rwork, long long int* info );

void ZGESVXX( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              char* equed, double* r, double* c, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void ZGESVXX_( const char* fact, const char* trans, const long long int* n,
               const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
               char* equed, double* r, double* c, MKL_Complex16* b,
               const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
               double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );
void zgesvxx( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              char* equed, double* r, double* c, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgesvxx_( const char* fact, const char* trans, const long long int* n,
               const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
               char* equed, double* r, double* c, MKL_Complex16* b,
               const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
               double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );

void ZGETC2( const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* ipiv, long long int* jpiv, long long int* info );
void ZGETC2_( const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* ipiv, long long int* jpiv, long long int* info );
void zgetc2( const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* ipiv, long long int* jpiv, long long int* info );
void zgetc2_( const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* ipiv, long long int* jpiv, long long int* info );

void ZGETF2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void ZGETF2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void zgetf2( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void zgetf2_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void ZGETRF( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void ZGETRF_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void zgetrf( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void zgetrf_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void MKL_ZGETRFNPI( const long long int* m, const long long int* n, const long long int* nfact,
                    MKL_Complex16* a, const long long int* lda, long long int* info );
void MKL_ZGETRFNPI_( const long long int* m, const long long int* n, const long long int* nfact,
                     MKL_Complex16* a, const long long int* lda, long long int* info );
void mkl_zgetrfnpi( const long long int* m, const long long int* n, const long long int* nfact,
                    MKL_Complex16* a, const long long int* lda, long long int* info );
void mkl_zgetrfnpi_( const long long int* m, const long long int* n, const long long int* nfact,
                     MKL_Complex16* a, const long long int* lda, long long int* info );

void ZGETRI( const long long int* n, MKL_Complex16* a, const long long int* lda,
             const long long int* ipiv, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZGETRI_( const long long int* n, MKL_Complex16* a, const long long int* lda,
              const long long int* ipiv, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zgetri( const long long int* n, MKL_Complex16* a, const long long int* lda,
             const long long int* ipiv, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zgetri_( const long long int* n, MKL_Complex16* a, const long long int* lda,
              const long long int* ipiv, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZGETRS( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void ZGETRS_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex16* b, const long long int* ldb, long long int* info );
void zgetrs( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void zgetrs_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex16* b, const long long int* ldb, long long int* info );

void ZGGBAK( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const double* lscale,
             const double* rscale, const long long int* m, MKL_Complex16* v,
             const long long int* ldv, long long int* info );
void ZGGBAK_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const double* lscale,
              const double* rscale, const long long int* m, MKL_Complex16* v,
              const long long int* ldv, long long int* info );
void zggbak( const char* job, const char* side, const long long int* n,
             const long long int* ilo, const long long int* ihi, const double* lscale,
             const double* rscale, const long long int* m, MKL_Complex16* v,
             const long long int* ldv, long long int* info );
void zggbak_( const char* job, const char* side, const long long int* n,
              const long long int* ilo, const long long int* ihi, const double* lscale,
              const double* rscale, const long long int* m, MKL_Complex16* v,
              const long long int* ldv, long long int* info );

void ZGGBAL( const char* job, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             long long int* ilo, long long int* ihi, double* lscale, double* rscale,
             double* work, long long int* info );
void ZGGBAL_( const char* job, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              long long int* ilo, long long int* ihi, double* lscale, double* rscale,
              double* work, long long int* info );
void zggbal( const char* job, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             long long int* ilo, long long int* ihi, double* lscale, double* rscale,
             double* work, long long int* info );
void zggbal_( const char* job, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              long long int* ilo, long long int* ihi, double* lscale, double* rscale,
              double* work, long long int* info );

void ZGGES( const char* jobvsl, const char* jobvsr, const char* sort,
            MKL_Z_SELECT_FUNCTION_2 selctg, const long long int* n, MKL_Complex16* a,
            const long long int* lda, MKL_Complex16* b, const long long int* ldb,
            long long int* sdim, MKL_Complex16* alpha, MKL_Complex16* beta,
            MKL_Complex16* vsl, const long long int* ldvsl, MKL_Complex16* vsr,
            const long long int* ldvsr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* bwork, long long int* info );
void ZGGES_( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_Z_SELECT_FUNCTION_2 selctg, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* sdim, MKL_Complex16* alpha,
             MKL_Complex16* beta, MKL_Complex16* vsl, const long long int* ldvsl,
             MKL_Complex16* vsr, const long long int* ldvsr, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* bwork,
             long long int* info );
void zgges( const char* jobvsl, const char* jobvsr, const char* sort,
            MKL_Z_SELECT_FUNCTION_2 selctg, const long long int* n, MKL_Complex16* a,
            const long long int* lda, MKL_Complex16* b, const long long int* ldb,
            long long int* sdim, MKL_Complex16* alpha, MKL_Complex16* beta,
            MKL_Complex16* vsl, const long long int* ldvsl, MKL_Complex16* vsr,
            const long long int* ldvsr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* bwork, long long int* info );
void zgges_( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_Z_SELECT_FUNCTION_2 selctg, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* sdim, MKL_Complex16* alpha,
             MKL_Complex16* beta, MKL_Complex16* vsl, const long long int* ldvsl,
             MKL_Complex16* vsr, const long long int* ldvsr, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* bwork,
             long long int* info );

void ZGGESX( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_Z_SELECT_FUNCTION_2 selctg, const char* sense,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, long long int* sdim,
             MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* vsl,
             const long long int* ldvsl, MKL_Complex16* vsr, const long long int* ldvsr,
             double* rconde, double* rcondv, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* iwork,
             const long long int* liwork, long long int* bwork, long long int* info );
void ZGGESX_( const char* jobvsl, const char* jobvsr, const char* sort,
              MKL_Z_SELECT_FUNCTION_2 selctg, const char* sense,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb, long long int* sdim,
              MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* vsl,
              const long long int* ldvsl, MKL_Complex16* vsr, const long long int* ldvsr,
              double* rconde, double* rcondv, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* iwork,
              const long long int* liwork, long long int* bwork, long long int* info );
void zggesx( const char* jobvsl, const char* jobvsr, const char* sort,
             MKL_Z_SELECT_FUNCTION_2 selctg, const char* sense,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, long long int* sdim,
             MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* vsl,
             const long long int* ldvsl, MKL_Complex16* vsr, const long long int* ldvsr,
             double* rconde, double* rcondv, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* iwork,
             const long long int* liwork, long long int* bwork, long long int* info );
void zggesx_( const char* jobvsl, const char* jobvsr, const char* sort,
              MKL_Z_SELECT_FUNCTION_2 selctg, const char* sense,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb, long long int* sdim,
              MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* vsl,
              const long long int* ldvsl, MKL_Complex16* vsr, const long long int* ldvsr,
              double* rconde, double* rcondv, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* iwork,
              const long long int* liwork, long long int* bwork, long long int* info );

void ZGGEV( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
            const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
            MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
            const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* info );
void ZGGEV_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
             MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
             const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void zggev( const char* jobvl, const char* jobvr, const long long int* n,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
            const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
            MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
            const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
            double* rwork, long long int* info );
void zggev_( const char* jobvl, const char* jobvr, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* alpha, MKL_Complex16* beta,
             MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
             const long long int* ldvr, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );

void ZGGEVX( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* vl,
             const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, double* lscale, double* rscale,
             double* abnrm, double* bbnrm, double* rconde, double* rcondv,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* iwork, long long int* bwork, long long int* info );
void ZGGEVX_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* vl,
              const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, double* lscale, double* rscale,
              double* abnrm, double* bbnrm, double* rconde, double* rcondv,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* iwork, long long int* bwork, long long int* info );
void zggevx( const char* balanc, const char* jobvl, const char* jobvr,
             const char* sense, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* vl,
             const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
             long long int* ilo, long long int* ihi, double* lscale, double* rscale,
             double* abnrm, double* bbnrm, double* rconde, double* rcondv,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* iwork, long long int* bwork, long long int* info );
void zggevx_( const char* balanc, const char* jobvl, const char* jobvr,
              const char* sense, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* vl,
              const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
              long long int* ilo, long long int* ihi, double* lscale, double* rscale,
              double* abnrm, double* bbnrm, double* rconde, double* rcondv,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* iwork, long long int* bwork, long long int* info );

void ZGGGLM( const long long int* n, const long long int* m, const long long int* p,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* d, MKL_Complex16* x,
             MKL_Complex16* y, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZGGGLM_( const long long int* n, const long long int* m, const long long int* p,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* d, MKL_Complex16* x,
              MKL_Complex16* y, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zggglm( const long long int* n, const long long int* m, const long long int* p,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* d, MKL_Complex16* x,
             MKL_Complex16* y, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zggglm_( const long long int* n, const long long int* m, const long long int* p,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* d, MKL_Complex16* x,
              MKL_Complex16* y, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZGGHRD( const char* compq, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* z,
             const long long int* ldz, long long int* info );
void ZGGHRD_( const char* compq, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* z,
              const long long int* ldz, long long int* info );
void zgghrd( const char* compq, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* z,
             const long long int* ldz, long long int* info );
void zgghrd_( const char* compq, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* z,
              const long long int* ldz, long long int* info );

void ZGGLSE( const long long int* m, const long long int* n, const long long int* p,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* c, MKL_Complex16* d,
             MKL_Complex16* x, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZGGLSE_( const long long int* m, const long long int* n, const long long int* p,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* c, MKL_Complex16* d,
              MKL_Complex16* x, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zgglse( const long long int* m, const long long int* n, const long long int* p,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* c, MKL_Complex16* d,
             MKL_Complex16* x, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zgglse_( const long long int* m, const long long int* n, const long long int* p,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* c, MKL_Complex16* d,
              MKL_Complex16* x, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZGGQRF( const long long int* n, const long long int* m, const long long int* p,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* taua,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* taub,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZGGQRF_( const long long int* n, const long long int* m, const long long int* p,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* taua,
              MKL_Complex16* b, const long long int* ldb, MKL_Complex16* taub,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zggqrf( const long long int* n, const long long int* m, const long long int* p,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* taua,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* taub,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zggqrf_( const long long int* n, const long long int* m, const long long int* p,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* taua,
              MKL_Complex16* b, const long long int* ldb, MKL_Complex16* taub,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZGGRQF( const long long int* m, const long long int* p, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* taua,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* taub,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZGGRQF_( const long long int* m, const long long int* p, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* taua,
              MKL_Complex16* b, const long long int* ldb, MKL_Complex16* taub,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zggrqf( const long long int* m, const long long int* p, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* taua,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* taub,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zggrqf_( const long long int* m, const long long int* p, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* taua,
              MKL_Complex16* b, const long long int* ldb, MKL_Complex16* taub,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZGGSVD( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* n, const long long int* p, long long int* k,
             long long int* l, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, double* alpha, double* beta,
             MKL_Complex16* u, const long long int* ldu, MKL_Complex16* v,
             const long long int* ldv, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* work, double* rwork, long long int* iwork,
             long long int* info );
void ZGGSVD_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* n, const long long int* p, long long int* k,
              long long int* l, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb, double* alpha,
              double* beta, MKL_Complex16* u, const long long int* ldu,
              MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
              const long long int* ldq, MKL_Complex16* work, double* rwork,
              long long int* iwork, long long int* info );
void zggsvd( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* n, const long long int* p, long long int* k,
             long long int* l, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, double* alpha, double* beta,
             MKL_Complex16* u, const long long int* ldu, MKL_Complex16* v,
             const long long int* ldv, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* work, double* rwork, long long int* iwork,
             long long int* info );
void zggsvd_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* n, const long long int* p, long long int* k,
              long long int* l, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb, double* alpha,
              double* beta, MKL_Complex16* u, const long long int* ldu,
              MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
              const long long int* ldq, MKL_Complex16* work, double* rwork,
              long long int* iwork, long long int* info );

void ZGGSVP( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, const double* tola, const double* tolb,
             long long int* k, long long int* l, MKL_Complex16* u, const long long int* ldu,
             MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
             const long long int* ldq, long long int* iwork, double* rwork,
             MKL_Complex16* tau, MKL_Complex16* work, long long int* info );
void ZGGSVP_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, const double* tola, const double* tolb,
              long long int* k, long long int* l, MKL_Complex16* u, const long long int* ldu,
              MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
              const long long int* ldq, long long int* iwork, double* rwork,
              MKL_Complex16* tau, MKL_Complex16* work, long long int* info );
void zggsvp( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, const double* tola, const double* tolb,
             long long int* k, long long int* l, MKL_Complex16* u, const long long int* ldu,
             MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
             const long long int* ldq, long long int* iwork, double* rwork,
             MKL_Complex16* tau, MKL_Complex16* work, long long int* info );
void zggsvp_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, const double* tola, const double* tolb,
              long long int* k, long long int* l, MKL_Complex16* u, const long long int* ldu,
              MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
              const long long int* ldq, long long int* iwork, double* rwork,
              MKL_Complex16* tau, MKL_Complex16* work, long long int* info );

void ZGTCON( const char* norm, const long long int* n, const MKL_Complex16* dl,
             const MKL_Complex16* d, const MKL_Complex16* du,
             const MKL_Complex16* du2, const long long int* ipiv,
             const double* anorm, double* rcond, MKL_Complex16* work,
             long long int* info );
void ZGTCON_( const char* norm, const long long int* n, const MKL_Complex16* dl,
              const MKL_Complex16* d, const MKL_Complex16* du,
              const MKL_Complex16* du2, const long long int* ipiv,
              const double* anorm, double* rcond, MKL_Complex16* work,
              long long int* info );
void zgtcon( const char* norm, const long long int* n, const MKL_Complex16* dl,
             const MKL_Complex16* d, const MKL_Complex16* du,
             const MKL_Complex16* du2, const long long int* ipiv,
             const double* anorm, double* rcond, MKL_Complex16* work,
             long long int* info );
void zgtcon_( const char* norm, const long long int* n, const MKL_Complex16* dl,
              const MKL_Complex16* d, const MKL_Complex16* du,
              const MKL_Complex16* du2, const long long int* ipiv,
              const double* anorm, double* rcond, MKL_Complex16* work,
              long long int* info );

void ZGTRFS( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* dl, const MKL_Complex16* d,
             const MKL_Complex16* du, const MKL_Complex16* dlf,
             const MKL_Complex16* df, const MKL_Complex16* duf,
             const MKL_Complex16* du2, const long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZGTRFS_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* dl, const MKL_Complex16* d,
              const MKL_Complex16* du, const MKL_Complex16* dlf,
              const MKL_Complex16* df, const MKL_Complex16* duf,
              const MKL_Complex16* du2, const long long int* ipiv,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zgtrfs( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* dl, const MKL_Complex16* d,
             const MKL_Complex16* du, const MKL_Complex16* dlf,
             const MKL_Complex16* df, const MKL_Complex16* duf,
             const MKL_Complex16* du2, const long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zgtrfs_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* dl, const MKL_Complex16* d,
              const MKL_Complex16* du, const MKL_Complex16* dlf,
              const MKL_Complex16* df, const MKL_Complex16* duf,
              const MKL_Complex16* du2, const long long int* ipiv,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZGTSV( const long long int* n, const long long int* nrhs, MKL_Complex16* dl,
            MKL_Complex16* d, MKL_Complex16* du, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void ZGTSV_( const long long int* n, const long long int* nrhs, MKL_Complex16* dl,
             MKL_Complex16* d, MKL_Complex16* du, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zgtsv( const long long int* n, const long long int* nrhs, MKL_Complex16* dl,
            MKL_Complex16* d, MKL_Complex16* du, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void zgtsv_( const long long int* n, const long long int* nrhs, MKL_Complex16* dl,
             MKL_Complex16* d, MKL_Complex16* du, MKL_Complex16* b,
             const long long int* ldb, long long int* info );

void ZGTSVX( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* dl,
             const MKL_Complex16* d, const MKL_Complex16* du,
             MKL_Complex16* dlf, MKL_Complex16* df, MKL_Complex16* duf,
             MKL_Complex16* du2, long long int* ipiv, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             double* rcond, double* ferr, double* berr, MKL_Complex16* work,
             double* rwork, long long int* info );
void ZGTSVX_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* dl,
              const MKL_Complex16* d, const MKL_Complex16* du,
              MKL_Complex16* dlf, MKL_Complex16* df, MKL_Complex16* duf,
              MKL_Complex16* du2, long long int* ipiv, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* ferr, double* berr, MKL_Complex16* work,
              double* rwork, long long int* info );
void zgtsvx( const char* fact, const char* trans, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* dl,
             const MKL_Complex16* d, const MKL_Complex16* du,
             MKL_Complex16* dlf, MKL_Complex16* df, MKL_Complex16* duf,
             MKL_Complex16* du2, long long int* ipiv, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             double* rcond, double* ferr, double* berr, MKL_Complex16* work,
             double* rwork, long long int* info );
void zgtsvx_( const char* fact, const char* trans, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* dl,
              const MKL_Complex16* d, const MKL_Complex16* du,
              MKL_Complex16* dlf, MKL_Complex16* df, MKL_Complex16* duf,
              MKL_Complex16* du2, long long int* ipiv, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* ferr, double* berr, MKL_Complex16* work,
              double* rwork, long long int* info );

void ZGTTRF( const long long int* n, MKL_Complex16* dl, MKL_Complex16* d,
             MKL_Complex16* du, MKL_Complex16* du2, long long int* ipiv,
             long long int* info );
void ZGTTRF_( const long long int* n, MKL_Complex16* dl, MKL_Complex16* d,
              MKL_Complex16* du, MKL_Complex16* du2, long long int* ipiv,
              long long int* info );
void zgttrf( const long long int* n, MKL_Complex16* dl, MKL_Complex16* d,
             MKL_Complex16* du, MKL_Complex16* du2, long long int* ipiv,
             long long int* info );
void zgttrf_( const long long int* n, MKL_Complex16* dl, MKL_Complex16* d,
              MKL_Complex16* du, MKL_Complex16* du2, long long int* ipiv,
              long long int* info );

void ZGTTRS( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* dl, const MKL_Complex16* d,
             const MKL_Complex16* du, const MKL_Complex16* du2,
             const long long int* ipiv, MKL_Complex16* b, const long long int* ldb,
             long long int* info );
void ZGTTRS_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* dl, const MKL_Complex16* d,
              const MKL_Complex16* du, const MKL_Complex16* du2,
              const long long int* ipiv, MKL_Complex16* b, const long long int* ldb,
              long long int* info );
void zgttrs( const char* trans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* dl, const MKL_Complex16* d,
             const MKL_Complex16* du, const MKL_Complex16* du2,
             const long long int* ipiv, MKL_Complex16* b, const long long int* ldb,
             long long int* info );
void zgttrs_( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* dl, const MKL_Complex16* d,
              const MKL_Complex16* du, const MKL_Complex16* du2,
              const long long int* ipiv, MKL_Complex16* b, const long long int* ldb,
              long long int* info );

void ZGTTS2( const long long int* itrans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* dl, const MKL_Complex16* d,
             const MKL_Complex16* du, const MKL_Complex16* du2,
             const long long int* ipiv, MKL_Complex16* b, const long long int* ldb );
void ZGTTS2_( const long long int* itrans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* dl, const MKL_Complex16* d,
              const MKL_Complex16* du, const MKL_Complex16* du2,
              const long long int* ipiv, MKL_Complex16* b, const long long int* ldb );
void zgtts2( const long long int* itrans, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* dl, const MKL_Complex16* d,
             const MKL_Complex16* du, const MKL_Complex16* du2,
             const long long int* ipiv, MKL_Complex16* b, const long long int* ldb );
void zgtts2_( const long long int* itrans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* dl, const MKL_Complex16* d,
              const MKL_Complex16* du, const MKL_Complex16* du2,
              const long long int* ipiv, MKL_Complex16* b, const long long int* ldb );

void ZHBEVD( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
             double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void ZHBEVD_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
              double* w, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void zhbevd( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
             double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void zhbevd_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
              double* w, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void ZHBEV( const char* jobz, const char* uplo, const long long int* n,
            const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
            double* w, MKL_Complex16* z, const long long int* ldz,
            MKL_Complex16* work, double* rwork, long long int* info );
void ZHBEV_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
             double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, double* rwork, long long int* info );
void zhbev( const char* jobz, const char* uplo, const long long int* n,
            const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
            double* w, MKL_Complex16* z, const long long int* ldz,
            MKL_Complex16* work, double* rwork, long long int* info );
void zhbev_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
             double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, double* rwork, long long int* info );

void ZHBEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* kd, MKL_Complex16* ab,
             const long long int* ldab, MKL_Complex16* q, const long long int* ldq,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             double* rwork, long long int* iwork, long long int* ifail, long long int* info );
void ZHBEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* kd, MKL_Complex16* ab,
              const long long int* ldab, MKL_Complex16* q, const long long int* ldq,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              double* rwork, long long int* iwork, long long int* ifail, long long int* info );
void zhbevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* kd, MKL_Complex16* ab,
             const long long int* ldab, MKL_Complex16* q, const long long int* ldq,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             double* rwork, long long int* iwork, long long int* ifail, long long int* info );
void zhbevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* kd, MKL_Complex16* ab,
              const long long int* ldab, MKL_Complex16* q, const long long int* ldq,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              double* rwork, long long int* iwork, long long int* ifail, long long int* info );

void ZHBGST( const char* vect, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex16* ab,
             const long long int* ldab, const MKL_Complex16* bb, const long long int* ldbb,
             MKL_Complex16* x, const long long int* ldx, MKL_Complex16* work,
             double* rwork, long long int* info );
void ZHBGST_( const char* vect, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, MKL_Complex16* ab,
              const long long int* ldab, const MKL_Complex16* bb,
              const long long int* ldbb, MKL_Complex16* x, const long long int* ldx,
              MKL_Complex16* work, double* rwork, long long int* info );
void zhbgst( const char* vect, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex16* ab,
             const long long int* ldab, const MKL_Complex16* bb, const long long int* ldbb,
             MKL_Complex16* x, const long long int* ldx, MKL_Complex16* work,
             double* rwork, long long int* info );
void zhbgst_( const char* vect, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, MKL_Complex16* ab,
              const long long int* ldab, const MKL_Complex16* bb,
              const long long int* ldbb, MKL_Complex16* x, const long long int* ldx,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZHBGVD( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex16* ab,
             const long long int* ldab, MKL_Complex16* bb, const long long int* ldbb,
             double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void ZHBGVD_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, MKL_Complex16* ab,
              const long long int* ldab, MKL_Complex16* bb, const long long int* ldbb,
              double* w, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void zhbgvd( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex16* ab,
             const long long int* ldab, MKL_Complex16* bb, const long long int* ldbb,
             double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void zhbgvd_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* ka, const long long int* kb, MKL_Complex16* ab,
              const long long int* ldab, MKL_Complex16* bb, const long long int* ldbb,
              double* w, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void ZHBGV( const char* jobz, const char* uplo, const long long int* n,
            const long long int* ka, const long long int* kb, MKL_Complex16* ab,
            const long long int* ldab, MKL_Complex16* bb, const long long int* ldbb,
            double* w, MKL_Complex16* z, const long long int* ldz,
            MKL_Complex16* work, double* rwork, long long int* info );
void ZHBGV_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex16* ab,
             const long long int* ldab, MKL_Complex16* bb, const long long int* ldbb,
             double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, double* rwork, long long int* info );
void zhbgv( const char* jobz, const char* uplo, const long long int* n,
            const long long int* ka, const long long int* kb, MKL_Complex16* ab,
            const long long int* ldab, MKL_Complex16* bb, const long long int* ldbb,
            double* w, MKL_Complex16* z, const long long int* ldz,
            MKL_Complex16* work, double* rwork, long long int* info );
void zhbgv_( const char* jobz, const char* uplo, const long long int* n,
             const long long int* ka, const long long int* kb, MKL_Complex16* ab,
             const long long int* ldab, MKL_Complex16* bb, const long long int* ldbb,
             double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, double* rwork, long long int* info );

void ZHBGVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* ka, const long long int* kb,
             MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* bb,
             const long long int* ldbb, MKL_Complex16* q, const long long int* ldq,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             double* rwork, long long int* iwork, long long int* ifail, long long int* info );
void ZHBGVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* ka, const long long int* kb,
              MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* bb,
              const long long int* ldbb, MKL_Complex16* q, const long long int* ldq,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              double* rwork, long long int* iwork, long long int* ifail, long long int* info );
void zhbgvx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, const long long int* ka, const long long int* kb,
             MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* bb,
             const long long int* ldbb, MKL_Complex16* q, const long long int* ldq,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             double* rwork, long long int* iwork, long long int* ifail, long long int* info );
void zhbgvx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, const long long int* ka, const long long int* kb,
              MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* bb,
              const long long int* ldbb, MKL_Complex16* q, const long long int* ldq,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              double* rwork, long long int* iwork, long long int* ifail, long long int* info );

void ZHBTRD( const char* vect, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
             double* d, double* e, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* work, long long int* info );
void ZHBTRD_( const char* vect, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
              double* d, double* e, MKL_Complex16* q, const long long int* ldq,
              MKL_Complex16* work, long long int* info );
void zhbtrd( const char* vect, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
             double* d, double* e, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* work, long long int* info );
void zhbtrd_( const char* vect, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex16* ab, const long long int* ldab,
              double* d, double* e, MKL_Complex16* q, const long long int* ldq,
              MKL_Complex16* work, long long int* info );

void ZHECON( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const long long int* ipiv, const double* anorm,
             double* rcond, MKL_Complex16* work, long long int* info );
void ZHECON_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, const double* anorm,
              double* rcond, MKL_Complex16* work, long long int* info );
void zhecon( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const long long int* ipiv, const double* anorm,
             double* rcond, MKL_Complex16* work, long long int* info );
void zhecon_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, const double* anorm,
              double* rcond, MKL_Complex16* work, long long int* info );

void ZHEEQUB( char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, double* s, double* scond, double* amax,
              MKL_Complex16* work, long long int* info );
void ZHEEQUB_( char* uplo, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* s, double* scond, double* amax,
               MKL_Complex16* work, long long int* info );
void zheequb( char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, double* s, double* scond, double* amax,
              MKL_Complex16* work, long long int* info );
void zheequb_( char* uplo, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* s, double* scond, double* amax,
               MKL_Complex16* work, long long int* info );

void ZHEEVD( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex16* a, const long long int* lda, double* w,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void ZHEEVD_( const char* jobz, const char* uplo, const long long int* n,
              MKL_Complex16* a, const long long int* lda, double* w,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void zheevd( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex16* a, const long long int* lda, double* w,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void zheevd_( const char* jobz, const char* uplo, const long long int* n,
              MKL_Complex16* a, const long long int* lda, double* w,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void ZHEEV( const char* jobz, const char* uplo, const long long int* n,
            MKL_Complex16* a, const long long int* lda, double* w,
            MKL_Complex16* work, const long long int* lwork, double* rwork,
            long long int* info );
void ZHEEV_( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex16* a, const long long int* lda, double* w,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void zheev( const char* jobz, const char* uplo, const long long int* n,
            MKL_Complex16* a, const long long int* lda, double* w,
            MKL_Complex16* work, const long long int* lwork, double* rwork,
            long long int* info );
void zheev_( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex16* a, const long long int* lda, double* w,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );

void ZHEEVR( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, long long int* isuppz,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void ZHEEVR_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, long long int* isuppz,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void zheevr( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, long long int* isuppz,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void zheevr_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, long long int* isuppz,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void ZHEEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void ZHEEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* iwork,
              long long int* ifail, long long int* info );
void zheevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void zheevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* iwork,
              long long int* ifail, long long int* info );

void ZHEGS2( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZHEGS2_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void zhegs2( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zhegs2_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZHEGST( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZHEGST_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void zhegst( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zhegst_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZHEGVD( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, double* w,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void ZHEGVD_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb, double* w,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void zhegvd( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, double* w,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             const long long int* lrwork, long long int* iwork, const long long int* liwork,
             long long int* info );
void zhegvd_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* b, const long long int* ldb, double* w,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void ZHEGV( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, MKL_Complex16* a, const long long int* lda,
            MKL_Complex16* b, const long long int* ldb, double* w,
            MKL_Complex16* work, const long long int* lwork, double* rwork,
            long long int* info );
void ZHEGV_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, double* w,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void zhegv( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, MKL_Complex16* a, const long long int* lda,
            MKL_Complex16* b, const long long int* ldb, double* w,
            MKL_Complex16* work, const long long int* lwork, double* rwork,
            long long int* info );
void zhegv_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* b, const long long int* ldb, double* w,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );

void ZHEGVX( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void ZHEGVX_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* iwork,
              long long int* ifail, long long int* info );
void zhegvx( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             const long long int* lwork, double* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void zhegvx_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              const long long int* lwork, double* rwork, long long int* iwork,
              long long int* ifail, long long int* info );

void ZHERFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* af, const long long int* ldaf, const long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZHERFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zherfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* af, const long long int* ldaf, const long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zherfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZHERFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const double* s, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void ZHERFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
               const MKL_Complex16* af, const long long int* ldaf,
               const long long int* ipiv, const double* s, const MKL_Complex16* b,
               const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
               double* rcond, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );
void zherfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const double* s, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void zherfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
               const MKL_Complex16* af, const long long int* ldaf,
               const long long int* ipiv, const double* s, const MKL_Complex16* b,
               const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
               double* rcond, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );

void ZHESV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* a, const long long int* lda, long long int* ipiv,
            MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
            const long long int* lwork, long long int* info );
void ZHESV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zhesv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* a, const long long int* lda, long long int* ipiv,
            MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
            const long long int* lwork, long long int* info );
void zhesv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
             const long long int* lwork, long long int* info );

void ZHESVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void ZHESVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* info );
void zhesvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void zhesvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* info );

void ZHESVXX( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* rpvgrw, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void ZHESVXX_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
               char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* x, const long long int* ldx, double* rcond,
               double* rpvgrw, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );
void zhesvxx( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* rpvgrw, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void zhesvxx_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
               char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* x, const long long int* ldx, double* rcond,
               double* rpvgrw, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );

void ZHETD2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, double* d, double* e, MKL_Complex16* tau,
             long long int* info );
void ZHETD2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, double* d, double* e, MKL_Complex16* tau,
              long long int* info );
void zhetd2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, double* d, double* e, MKL_Complex16* tau,
             long long int* info );
void zhetd2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, double* d, double* e, MKL_Complex16* tau,
              long long int* info );

void ZHETF2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void ZHETF2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void zhetf2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void zhetf2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void ZHETRD( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, double* d, double* e, MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZHETRD_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, double* d, double* e, MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zhetrd( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, double* d, double* e, MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zhetrd_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, double* d, double* e, MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZHETRF( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZHETRF_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zhetrf( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zhetrf_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, MKL_Complex16* work,
              const long long int* lwork, long long int* info );

void ZHETRI( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
             long long int* info );
void ZHETRI_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              long long int* info );
void zhetri( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
             long long int* info );
void zhetri_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              long long int* info );

void ZHETRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void ZHETRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex16* b, const long long int* ldb, long long int* info );
void zhetrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void zhetrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex16* b, const long long int* ldb, long long int* info );

void ZHFRK( const char* transr, const char* uplo, const char* trans,
            const long long int* n, const long long int* k, const double* alpha,
            const MKL_Complex16* a, const long long int* lda, const double* beta,
            MKL_Complex16* c );
void ZHFRK_( const char* transr, const char* uplo, const char* trans,
             const long long int* n, const long long int* k, const double* alpha,
             const MKL_Complex16* a, const long long int* lda, const double* beta,
             MKL_Complex16* c );
void zhfrk( const char* transr, const char* uplo, const char* trans,
            const long long int* n, const long long int* k, const double* alpha,
            const MKL_Complex16* a, const long long int* lda, const double* beta,
            MKL_Complex16* c );
void zhfrk_( const char* transr, const char* uplo, const char* trans,
             const long long int* n, const long long int* k, const double* alpha,
             const MKL_Complex16* a, const long long int* lda, const double* beta,
             MKL_Complex16* c );

void ZHGEQZ( const char* job, const char* compq, const char* compz,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex16* h, const long long int* ldh, MKL_Complex16* t,
             const long long int* ldt, MKL_Complex16* alpha, MKL_Complex16* beta,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void ZHGEQZ_( const char* job, const char* compq, const char* compz,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex16* h, const long long int* ldh, MKL_Complex16* t,
              const long long int* ldt, MKL_Complex16* alpha, MKL_Complex16* beta,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* info );
void zhgeqz( const char* job, const char* compq, const char* compz,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex16* h, const long long int* ldh, MKL_Complex16* t,
             const long long int* ldt, MKL_Complex16* alpha, MKL_Complex16* beta,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
             double* rwork, long long int* info );
void zhgeqz_( const char* job, const char* compq, const char* compz,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex16* h, const long long int* ldh, MKL_Complex16* t,
              const long long int* ldt, MKL_Complex16* alpha, MKL_Complex16* beta,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
              double* rwork, long long int* info );

void ZHPCON( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             const long long int* ipiv, const double* anorm, double* rcond,
             MKL_Complex16* work, long long int* info );
void ZHPCON_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              const long long int* ipiv, const double* anorm, double* rcond,
              MKL_Complex16* work, long long int* info );
void zhpcon( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             const long long int* ipiv, const double* anorm, double* rcond,
             MKL_Complex16* work, long long int* info );
void zhpcon_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              const long long int* ipiv, const double* anorm, double* rcond,
              MKL_Complex16* work, long long int* info );

void ZHPEVD( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex16* ap, double* w, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
             double* rwork, const long long int* lrwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void ZHPEVD_( const char* jobz, const char* uplo, const long long int* n,
              MKL_Complex16* ap, double* w, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
              double* rwork, const long long int* lrwork, long long int* iwork,
              const long long int* liwork, long long int* info );
void zhpevd( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex16* ap, double* w, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
             double* rwork, const long long int* lrwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void zhpevd_( const char* jobz, const char* uplo, const long long int* n,
              MKL_Complex16* ap, double* w, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
              double* rwork, const long long int* lrwork, long long int* iwork,
              const long long int* liwork, long long int* info );

void ZHPEV( const char* jobz, const char* uplo, const long long int* n,
            MKL_Complex16* ap, double* w, MKL_Complex16* z, const long long int* ldz,
            MKL_Complex16* work, double* rwork, long long int* info );
void ZHPEV_( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex16* ap, double* w, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, double* rwork,
             long long int* info );
void zhpev( const char* jobz, const char* uplo, const long long int* n,
            MKL_Complex16* ap, double* w, MKL_Complex16* z, const long long int* ldz,
            MKL_Complex16* work, double* rwork, long long int* info );
void zhpev_( const char* jobz, const char* uplo, const long long int* n,
             MKL_Complex16* ap, double* w, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, double* rwork,
             long long int* info );

void ZHPEVX( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex16* ap, const double* vl,
             const double* vu, const long long int* il, const long long int* iu,
             const double* abstol, long long int* m, double* w, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, double* rwork,
             long long int* iwork, long long int* ifail, long long int* info );
void ZHPEVX_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex16* ap, const double* vl,
              const double* vu, const long long int* il, const long long int* iu,
              const double* abstol, long long int* m, double* w, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, double* rwork,
              long long int* iwork, long long int* ifail, long long int* info );
void zhpevx( const char* jobz, const char* range, const char* uplo,
             const long long int* n, MKL_Complex16* ap, const double* vl,
             const double* vu, const long long int* il, const long long int* iu,
             const double* abstol, long long int* m, double* w, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, double* rwork,
             long long int* iwork, long long int* ifail, long long int* info );
void zhpevx_( const char* jobz, const char* range, const char* uplo,
              const long long int* n, MKL_Complex16* ap, const double* vl,
              const double* vu, const long long int* il, const long long int* iu,
              const double* abstol, long long int* m, double* w, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, double* rwork,
              long long int* iwork, long long int* ifail, long long int* info );

void ZHPGST( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex16* ap, const MKL_Complex16* bp, long long int* info );
void ZHPGST_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex16* ap, const MKL_Complex16* bp, long long int* info );
void zhpgst( const long long int* itype, const char* uplo, const long long int* n,
             MKL_Complex16* ap, const MKL_Complex16* bp, long long int* info );
void zhpgst_( const long long int* itype, const char* uplo, const long long int* n,
              MKL_Complex16* ap, const MKL_Complex16* bp, long long int* info );

void ZHPGVD( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex16* ap, MKL_Complex16* bp, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             const long long int* lwork, double* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void ZHPGVD_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, MKL_Complex16* ap, MKL_Complex16* bp,
              double* w, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );
void zhpgvd( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex16* ap, MKL_Complex16* bp, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             const long long int* lwork, double* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void zhpgvd_( const long long int* itype, const char* jobz, const char* uplo,
              const long long int* n, MKL_Complex16* ap, MKL_Complex16* bp,
              double* w, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              const long long int* lrwork, long long int* iwork, const long long int* liwork,
              long long int* info );

void ZHPGV( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, MKL_Complex16* ap, MKL_Complex16* bp, double* w,
            MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
            double* rwork, long long int* info );
void ZHPGV_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex16* ap, MKL_Complex16* bp, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             double* rwork, long long int* info );
void zhpgv( const long long int* itype, const char* jobz, const char* uplo,
            const long long int* n, MKL_Complex16* ap, MKL_Complex16* bp, double* w,
            MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
            double* rwork, long long int* info );
void zhpgv_( const long long int* itype, const char* jobz, const char* uplo,
             const long long int* n, MKL_Complex16* ap, MKL_Complex16* bp, double* w,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             double* rwork, long long int* info );

void ZHPGVX( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, MKL_Complex16* ap,
             MKL_Complex16* bp, const double* vl, const double* vu,
             const long long int* il, const long long int* iu, const double* abstol,
             long long int* m, double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, double* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void ZHPGVX_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, MKL_Complex16* ap,
              MKL_Complex16* bp, const double* vl, const double* vu,
              const long long int* il, const long long int* iu, const double* abstol,
              long long int* m, double* w, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, double* rwork, long long int* iwork,
              long long int* ifail, long long int* info );
void zhpgvx( const long long int* itype, const char* jobz, const char* range,
             const char* uplo, const long long int* n, MKL_Complex16* ap,
             MKL_Complex16* bp, const double* vl, const double* vu,
             const long long int* il, const long long int* iu, const double* abstol,
             long long int* m, double* w, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, double* rwork, long long int* iwork,
             long long int* ifail, long long int* info );
void zhpgvx_( const long long int* itype, const char* jobz, const char* range,
              const char* uplo, const long long int* n, MKL_Complex16* ap,
              MKL_Complex16* bp, const double* vl, const double* vu,
              const long long int* il, const long long int* iu, const double* abstol,
              long long int* m, double* w, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, double* rwork, long long int* iwork,
              long long int* ifail, long long int* info );

void ZHPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const MKL_Complex16* afp,
             const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZHPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const MKL_Complex16* afp,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zhprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const MKL_Complex16* afp,
             const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zhprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const MKL_Complex16* afp,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZHPSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* ap, long long int* ipiv, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void ZHPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* ap, long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zhpsv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* ap, long long int* ipiv, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void zhpsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* ap, long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );

void ZHPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* ap, MKL_Complex16* afp,
             long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ZHPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* ap, MKL_Complex16* afp,
              long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void zhpsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* ap, MKL_Complex16* afp,
             long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void zhpsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* ap, MKL_Complex16* afp,
              long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZHPTRD( const char* uplo, const long long int* n, MKL_Complex16* ap, double* d,
             double* e, MKL_Complex16* tau, long long int* info );
void ZHPTRD_( const char* uplo, const long long int* n, MKL_Complex16* ap, double* d,
              double* e, MKL_Complex16* tau, long long int* info );
void zhptrd( const char* uplo, const long long int* n, MKL_Complex16* ap, double* d,
             double* e, MKL_Complex16* tau, long long int* info );
void zhptrd_( const char* uplo, const long long int* n, MKL_Complex16* ap, double* d,
              double* e, MKL_Complex16* tau, long long int* info );

void ZHPTRF( const char* uplo, const long long int* n, MKL_Complex16* ap,
             long long int* ipiv, long long int* info );
void ZHPTRF_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              long long int* ipiv, long long int* info );
void zhptrf( const char* uplo, const long long int* n, MKL_Complex16* ap,
             long long int* ipiv, long long int* info );
void zhptrf_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              long long int* ipiv, long long int* info );

void ZHPTRI( const char* uplo, const long long int* n, MKL_Complex16* ap,
             const long long int* ipiv, MKL_Complex16* work, long long int* info );
void ZHPTRI_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              const long long int* ipiv, MKL_Complex16* work, long long int* info );
void zhptri( const char* uplo, const long long int* n, MKL_Complex16* ap,
             const long long int* ipiv, MKL_Complex16* work, long long int* info );
void zhptri_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              const long long int* ipiv, MKL_Complex16* work, long long int* info );

void ZHPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZHPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const long long int* ipiv, MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void zhptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zhptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const long long int* ipiv, MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZHSEIN( const char* side, const char* eigsrc, const char* initv,
             const long long int* select, const long long int* n, const MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, MKL_Complex16* vl,
             const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, MKL_Complex16* work, double* rwork,
             long long int* ifaill, long long int* ifailr, long long int* info );
void ZHSEIN_( const char* side, const char* eigsrc, const char* initv,
              const long long int* select, const long long int* n, const MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, MKL_Complex16* vl,
              const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, MKL_Complex16* work,
              double* rwork, long long int* ifaill, long long int* ifailr, long long int* info );
void zhsein( const char* side, const char* eigsrc, const char* initv,
             const long long int* select, const long long int* n, const MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, MKL_Complex16* vl,
             const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, MKL_Complex16* work, double* rwork,
             long long int* ifaill, long long int* ifailr, long long int* info );
void zhsein_( const char* side, const char* eigsrc, const char* initv,
              const long long int* select, const long long int* n, const MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, MKL_Complex16* vl,
              const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, MKL_Complex16* work,
              double* rwork, long long int* ifaill, long long int* ifailr, long long int* info );

void ZHSEQR( const char* job, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZHSEQR_( const char* job, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zhseqr( const char* job, const char* compz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zhseqr_( const char* job, const char* compz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZLABRD( const long long int* m, const long long int* n, const long long int* nb,
             MKL_Complex16* a, const long long int* lda, double* d, double* e,
             MKL_Complex16* tauq, MKL_Complex16* taup, MKL_Complex16* x,
             const long long int* ldx, MKL_Complex16* y, const long long int* ldy );
void ZLABRD_( const long long int* m, const long long int* n, const long long int* nb,
              MKL_Complex16* a, const long long int* lda, double* d, double* e,
              MKL_Complex16* tauq, MKL_Complex16* taup, MKL_Complex16* x,
              const long long int* ldx, MKL_Complex16* y, const long long int* ldy );
void zlabrd( const long long int* m, const long long int* n, const long long int* nb,
             MKL_Complex16* a, const long long int* lda, double* d, double* e,
             MKL_Complex16* tauq, MKL_Complex16* taup, MKL_Complex16* x,
             const long long int* ldx, MKL_Complex16* y, const long long int* ldy );
void zlabrd_( const long long int* m, const long long int* n, const long long int* nb,
              MKL_Complex16* a, const long long int* lda, double* d, double* e,
              MKL_Complex16* tauq, MKL_Complex16* taup, MKL_Complex16* x,
              const long long int* ldx, MKL_Complex16* y, const long long int* ldy );

void ZLACGV( const long long int* n, MKL_Complex16* x, const long long int* incx );
void ZLACGV_( const long long int* n, MKL_Complex16* x, const long long int* incx );
void zlacgv( const long long int* n, MKL_Complex16* x, const long long int* incx );
void zlacgv_( const long long int* n, MKL_Complex16* x, const long long int* incx );

void ZLACN2( const long long int* n, MKL_Complex16* v, MKL_Complex16* x, double* est,
             long long int* kase, long long int* isave );
void ZLACN2_( const long long int* n, MKL_Complex16* v, MKL_Complex16* x,
              double* est, long long int* kase, long long int* isave );
void zlacn2( const long long int* n, MKL_Complex16* v, MKL_Complex16* x, double* est,
             long long int* kase, long long int* isave );
void zlacn2_( const long long int* n, MKL_Complex16* v, MKL_Complex16* x,
              double* est, long long int* kase, long long int* isave );

void ZLACON( const long long int* n, MKL_Complex16* v, MKL_Complex16* x, double* est,
             long long int* kase );
void ZLACON_( const long long int* n, MKL_Complex16* v, MKL_Complex16* x,
              double* est, long long int* kase );
void zlacon( const long long int* n, MKL_Complex16* v, MKL_Complex16* x, double* est,
             long long int* kase );
void zlacon_( const long long int* n, MKL_Complex16* v, MKL_Complex16* x,
              double* est, long long int* kase );

void ZLACP2( const char* uplo, const long long int* m, const long long int* n,
             const double* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb );
void ZLACP2_( const char* uplo, const long long int* m, const long long int* n,
              const double* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb );
void zlacp2( const char* uplo, const long long int* m, const long long int* n,
             const double* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb );
void zlacp2_( const char* uplo, const long long int* m, const long long int* n,
              const double* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb );

void ZLACPY( const char* uplo, const long long int* m, const long long int* n,
             const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb );
void ZLACPY_( const char* uplo, const long long int* m, const long long int* n,
              const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb );
void zlacpy( const char* uplo, const long long int* m, const long long int* n,
             const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb );
void zlacpy_( const char* uplo, const long long int* m, const long long int* n,
              const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb );

void ZLACRM( const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const double* b, const long long int* ldb,
             const MKL_Complex16* c, const long long int* ldc, double* rwork );
void ZLACRM_( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const double* b, const long long int* ldb,
              const MKL_Complex16* c, const long long int* ldc, double* rwork );
void zlacrm( const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const double* b, const long long int* ldb,
             const MKL_Complex16* c, const long long int* ldc, double* rwork );
void zlacrm_( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const double* b, const long long int* ldb,
              const MKL_Complex16* c, const long long int* ldc, double* rwork );

void ZLACRT( const long long int* n, MKL_Complex16* cx, const long long int* incx,
             MKL_Complex16* cy, const long long int* incy, const MKL_Complex16* c,
             const MKL_Complex16* s );
void ZLACRT_( const long long int* n, MKL_Complex16* cx, const long long int* incx,
              MKL_Complex16* cy, const long long int* incy, const MKL_Complex16* c,
              const MKL_Complex16* s );
void zlacrt( const long long int* n, MKL_Complex16* cx, const long long int* incx,
             MKL_Complex16* cy, const long long int* incy, const MKL_Complex16* c,
             const MKL_Complex16* s );
void zlacrt_( const long long int* n, MKL_Complex16* cx, const long long int* incx,
              MKL_Complex16* cy, const long long int* incy, const MKL_Complex16* c,
              const MKL_Complex16* s );

void ZLADIV( MKL_Complex16* ret_value, const MKL_Complex16* x,
             const MKL_Complex16* y );
void ZLADIV_( MKL_Complex16* ret_value, const MKL_Complex16* x,
              const MKL_Complex16* y );
void zladiv( MKL_Complex16* ret_value, const MKL_Complex16* x,
             const MKL_Complex16* y );
void zladiv_( MKL_Complex16* ret_value, const MKL_Complex16* x,
              const MKL_Complex16* y );

void ZLAED0( const long long int* qsiz, const long long int* n, double* d, double* e,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* qstore,
             const long long int* ldqs, double* rwork, long long int* iwork,
             long long int* info );
void ZLAED0_( const long long int* qsiz, const long long int* n, double* d, double* e,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* qstore,
              const long long int* ldqs, double* rwork, long long int* iwork,
              long long int* info );
void zlaed0( const long long int* qsiz, const long long int* n, double* d, double* e,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* qstore,
             const long long int* ldqs, double* rwork, long long int* iwork,
             long long int* info );
void zlaed0_( const long long int* qsiz, const long long int* n, double* d, double* e,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* qstore,
              const long long int* ldqs, double* rwork, long long int* iwork,
              long long int* info );

void ZLAED7( const long long int* n, const long long int* cutpnt, const long long int* qsiz,
             const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, double* d, MKL_Complex16* q,
             const long long int* ldq, const double* rho, long long int* indxq,
             double* qstore, long long int* qptr, const long long int* prmptr,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const double* givnum, MKL_Complex16* work, double* rwork,
             long long int* iwork, long long int* info );
void ZLAED7_( const long long int* n, const long long int* cutpnt, const long long int* qsiz,
              const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, double* d, MKL_Complex16* q,
              const long long int* ldq, const double* rho, long long int* indxq,
              double* qstore, long long int* qptr, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const double* givnum, MKL_Complex16* work,
              double* rwork, long long int* iwork, long long int* info );
void zlaed7( const long long int* n, const long long int* cutpnt, const long long int* qsiz,
             const long long int* tlvls, const long long int* curlvl,
             const long long int* curpbm, double* d, MKL_Complex16* q,
             const long long int* ldq, const double* rho, long long int* indxq,
             double* qstore, long long int* qptr, const long long int* prmptr,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const double* givnum, MKL_Complex16* work, double* rwork,
             long long int* iwork, long long int* info );
void zlaed7_( const long long int* n, const long long int* cutpnt, const long long int* qsiz,
              const long long int* tlvls, const long long int* curlvl,
              const long long int* curpbm, double* d, MKL_Complex16* q,
              const long long int* ldq, const double* rho, long long int* indxq,
              double* qstore, long long int* qptr, const long long int* prmptr,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const double* givnum, MKL_Complex16* work,
              double* rwork, long long int* iwork, long long int* info );

void ZLAED8( long long int* k, const long long int* n, const long long int* qsiz,
             MKL_Complex16* q, const long long int* ldq, double* d, double* rho,
             const long long int* cutpnt, const double* z, double* dlamda,
             MKL_Complex16* q2, const long long int* ldq2, double* w, long long int* indxp,
             long long int* indx, const long long int* indxq, long long int* perm,
             long long int* givptr, long long int* givcol, double* givnum, long long int* info );
void ZLAED8_( long long int* k, const long long int* n, const long long int* qsiz,
              MKL_Complex16* q, const long long int* ldq, double* d, double* rho,
              const long long int* cutpnt, const double* z, double* dlamda,
              MKL_Complex16* q2, const long long int* ldq2, double* w,
              long long int* indxp, long long int* indx, const long long int* indxq,
              long long int* perm, long long int* givptr, long long int* givcol, double* givnum,
              long long int* info );
void zlaed8( long long int* k, const long long int* n, const long long int* qsiz,
             MKL_Complex16* q, const long long int* ldq, double* d, double* rho,
             const long long int* cutpnt, const double* z, double* dlamda,
             MKL_Complex16* q2, const long long int* ldq2, double* w, long long int* indxp,
             long long int* indx, const long long int* indxq, long long int* perm,
             long long int* givptr, long long int* givcol, double* givnum, long long int* info );
void zlaed8_( long long int* k, const long long int* n, const long long int* qsiz,
              MKL_Complex16* q, const long long int* ldq, double* d, double* rho,
              const long long int* cutpnt, const double* z, double* dlamda,
              MKL_Complex16* q2, const long long int* ldq2, double* w,
              long long int* indxp, long long int* indx, const long long int* indxq,
              long long int* perm, long long int* givptr, long long int* givcol, double* givnum,
              long long int* info );

void ZLAEIN( const long long int* rightv, const long long int* noinit, const long long int* n,
             const MKL_Complex16* h, const long long int* ldh,
             const MKL_Complex16* w, MKL_Complex16* v, MKL_Complex16* b,
             const long long int* ldb, double* rwork, const double* eps3,
             const double* smlnum, long long int* info );
void ZLAEIN_( const long long int* rightv, const long long int* noinit, const long long int* n,
              const MKL_Complex16* h, const long long int* ldh,
              const MKL_Complex16* w, MKL_Complex16* v, MKL_Complex16* b,
              const long long int* ldb, double* rwork, const double* eps3,
              const double* smlnum, long long int* info );
void zlaein( const long long int* rightv, const long long int* noinit, const long long int* n,
             const MKL_Complex16* h, const long long int* ldh,
             const MKL_Complex16* w, MKL_Complex16* v, MKL_Complex16* b,
             const long long int* ldb, double* rwork, const double* eps3,
             const double* smlnum, long long int* info );
void zlaein_( const long long int* rightv, const long long int* noinit, const long long int* n,
              const MKL_Complex16* h, const long long int* ldh,
              const MKL_Complex16* w, MKL_Complex16* v, MKL_Complex16* b,
              const long long int* ldb, double* rwork, const double* eps3,
              const double* smlnum, long long int* info );

void ZLAESY( const MKL_Complex16* a, const MKL_Complex16* b,
             const MKL_Complex16* c, MKL_Complex16* rt1, MKL_Complex16* rt2,
             MKL_Complex16* evscal, MKL_Complex16* cs1, MKL_Complex16* sn1 );
void ZLAESY_( const MKL_Complex16* a, const MKL_Complex16* b,
              const MKL_Complex16* c, MKL_Complex16* rt1, MKL_Complex16* rt2,
              MKL_Complex16* evscal, MKL_Complex16* cs1, MKL_Complex16* sn1 );
void zlaesy( const MKL_Complex16* a, const MKL_Complex16* b,
             const MKL_Complex16* c, MKL_Complex16* rt1, MKL_Complex16* rt2,
             MKL_Complex16* evscal, MKL_Complex16* cs1, MKL_Complex16* sn1 );
void zlaesy_( const MKL_Complex16* a, const MKL_Complex16* b,
              const MKL_Complex16* c, MKL_Complex16* rt1, MKL_Complex16* rt2,
              MKL_Complex16* evscal, MKL_Complex16* cs1, MKL_Complex16* sn1 );

void ZLAEV2( const MKL_Complex16* a, const MKL_Complex16* b,
             const MKL_Complex16* c, double* rt1, double* rt2, double* cs1,
             MKL_Complex16* sn1 );
void ZLAEV2_( const MKL_Complex16* a, const MKL_Complex16* b,
              const MKL_Complex16* c, double* rt1, double* rt2, double* cs1,
              MKL_Complex16* sn1 );
void zlaev2( const MKL_Complex16* a, const MKL_Complex16* b,
             const MKL_Complex16* c, double* rt1, double* rt2, double* cs1,
             MKL_Complex16* sn1 );
void zlaev2_( const MKL_Complex16* a, const MKL_Complex16* b,
              const MKL_Complex16* c, double* rt1, double* rt2, double* cs1,
              MKL_Complex16* sn1 );

void ZLAG2C( const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex8* sa, const long long int* ldsa,
             long long int* info );
void ZLAG2C_( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex8* sa, const long long int* ldsa,
              long long int* info );
void zlag2c( const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex8* sa, const long long int* ldsa,
             long long int* info );
void zlag2c_( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex8* sa, const long long int* ldsa,
              long long int* info );

void ZLAGS2( const long long int* upper, const double* a1, const MKL_Complex16* a2,
             const double* a3, const double* b1, const MKL_Complex16* b2,
             const double* b3, double* csu, MKL_Complex16* snu, double* csv,
             MKL_Complex16* snv, double* csq, MKL_Complex16* snq );
void ZLAGS2_( const long long int* upper, const double* a1, const MKL_Complex16* a2,
              const double* a3, const double* b1, const MKL_Complex16* b2,
              const double* b3, double* csu, MKL_Complex16* snu, double* csv,
              MKL_Complex16* snv, double* csq, MKL_Complex16* snq );
void zlags2( const long long int* upper, const double* a1, const MKL_Complex16* a2,
             const double* a3, const double* b1, const MKL_Complex16* b2,
             const double* b3, double* csu, MKL_Complex16* snu, double* csv,
             MKL_Complex16* snv, double* csq, MKL_Complex16* snq );
void zlags2_( const long long int* upper, const double* a1, const MKL_Complex16* a2,
              const double* a3, const double* b1, const MKL_Complex16* b2,
              const double* b3, double* csu, MKL_Complex16* snu, double* csv,
              MKL_Complex16* snv, double* csq, MKL_Complex16* snq );

void ZLAGTM( const char* trans, const long long int* n, const long long int* nrhs,
             const double* alpha, const MKL_Complex16* dl,
             const MKL_Complex16* d, const MKL_Complex16* du,
             const MKL_Complex16* x, const long long int* ldx, const double* beta,
             MKL_Complex16* b, const long long int* ldb );
void ZLAGTM_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* alpha, const MKL_Complex16* dl,
              const MKL_Complex16* d, const MKL_Complex16* du,
              const MKL_Complex16* x, const long long int* ldx, const double* beta,
              MKL_Complex16* b, const long long int* ldb );
void zlagtm( const char* trans, const long long int* n, const long long int* nrhs,
             const double* alpha, const MKL_Complex16* dl,
             const MKL_Complex16* d, const MKL_Complex16* du,
             const MKL_Complex16* x, const long long int* ldx, const double* beta,
             MKL_Complex16* b, const long long int* ldb );
void zlagtm_( const char* trans, const long long int* n, const long long int* nrhs,
              const double* alpha, const MKL_Complex16* dl,
              const MKL_Complex16* d, const MKL_Complex16* du,
              const MKL_Complex16* x, const long long int* ldx, const double* beta,
              MKL_Complex16* b, const long long int* ldb );

void ZLAHEF( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
             MKL_Complex16* w, const long long int* ldw, long long int* info );
void ZLAHEF_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
              MKL_Complex16* w, const long long int* ldw, long long int* info );
void zlahef( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
             MKL_Complex16* w, const long long int* ldw, long long int* info );
void zlahef_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
              MKL_Complex16* w, const long long int* ldw, long long int* info );

void ZLAHQR( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, const long long int* iloz,
             const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             long long int* info );
void ZLAHQR_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, const long long int* iloz,
              const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              long long int* info );
void zlahqr( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, const long long int* iloz,
             const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             long long int* info );
void zlahqr_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, const long long int* iloz,
              const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              long long int* info );

void ZLAHR2( const long long int* n, const long long int* k, const long long int* nb,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* t, const long long int* ldt, MKL_Complex16* y,
             const long long int* ldy );
void ZLAHR2_( const long long int* n, const long long int* k, const long long int* nb,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* t, const long long int* ldt, MKL_Complex16* y,
              const long long int* ldy );
void zlahr2( const long long int* n, const long long int* k, const long long int* nb,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* t, const long long int* ldt, MKL_Complex16* y,
             const long long int* ldy );
void zlahr2_( const long long int* n, const long long int* k, const long long int* nb,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* t, const long long int* ldt, MKL_Complex16* y,
              const long long int* ldy );

void ZLAHRD( const long long int* n, const long long int* k, const long long int* nb,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* t, const long long int* ldt, MKL_Complex16* y,
             const long long int* ldy );
void ZLAHRD_( const long long int* n, const long long int* k, const long long int* nb,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* t, const long long int* ldt, MKL_Complex16* y,
              const long long int* ldy );
void zlahrd( const long long int* n, const long long int* k, const long long int* nb,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* t, const long long int* ldt, MKL_Complex16* y,
             const long long int* ldy );
void zlahrd_( const long long int* n, const long long int* k, const long long int* nb,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* t, const long long int* ldt, MKL_Complex16* y,
              const long long int* ldy );

void ZLAIC1( const long long int* job, const long long int* j, const MKL_Complex16* x,
             const double* sest, const MKL_Complex16* w,
             const MKL_Complex16* gamma, double* sestpr, MKL_Complex16* s,
             MKL_Complex16* c );
void ZLAIC1_( const long long int* job, const long long int* j, const MKL_Complex16* x,
              const double* sest, const MKL_Complex16* w,
              const MKL_Complex16* gamma, double* sestpr, MKL_Complex16* s,
              MKL_Complex16* c );
void zlaic1( const long long int* job, const long long int* j, const MKL_Complex16* x,
             const double* sest, const MKL_Complex16* w,
             const MKL_Complex16* gamma, double* sestpr, MKL_Complex16* s,
             MKL_Complex16* c );
void zlaic1_( const long long int* job, const long long int* j, const MKL_Complex16* x,
              const double* sest, const MKL_Complex16* w,
              const MKL_Complex16* gamma, double* sestpr, MKL_Complex16* s,
              MKL_Complex16* c );

void ZLALS0( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, const long long int* nrhs, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* bx, const long long int* ldbx,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const double* givnum,
             const long long int* ldgnum, const double* poles, const double* difl,
             const double* difr, const double* z, const long long int* k,
             const double* c, const double* s, double* rwork, long long int* info );
void ZLALS0_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, const long long int* nrhs, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* bx, const long long int* ldbx,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const double* givnum, const long long int* ldgnum, const double* poles,
              const double* difl, const double* difr, const double* z,
              const long long int* k, const double* c, const double* s,
              double* rwork, long long int* info );
void zlals0( const long long int* icompq, const long long int* nl, const long long int* nr,
             const long long int* sqre, const long long int* nrhs, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* bx, const long long int* ldbx,
             const long long int* perm, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const double* givnum,
             const long long int* ldgnum, const double* poles, const double* difl,
             const double* difr, const double* z, const long long int* k,
             const double* c, const double* s, double* rwork, long long int* info );
void zlals0_( const long long int* icompq, const long long int* nl, const long long int* nr,
              const long long int* sqre, const long long int* nrhs, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* bx, const long long int* ldbx,
              const long long int* perm, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const double* givnum, const long long int* ldgnum, const double* poles,
              const double* difl, const double* difr, const double* z,
              const long long int* k, const double* c, const double* s,
              double* rwork, long long int* info );

void ZLALSA( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* bx, const long long int* ldbx, const double* u,
             const long long int* ldu, const double* vt, const long long int* k,
             const double* difl, const double* difr, const double* z,
             const double* poles, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const long long int* perm, const double* givnum,
             const double* c, const double* s, double* rwork, long long int* iwork,
             long long int* info );
void ZLALSA_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* bx, const long long int* ldbx, const double* u,
              const long long int* ldu, const double* vt, const long long int* k,
              const double* difl, const double* difr, const double* z,
              const double* poles, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const long long int* perm, const double* givnum, const double* c,
              const double* s, double* rwork, long long int* iwork, long long int* info );
void zlalsa( const long long int* icompq, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* bx, const long long int* ldbx, const double* u,
             const long long int* ldu, const double* vt, const long long int* k,
             const double* difl, const double* difr, const double* z,
             const double* poles, const long long int* givptr, const long long int* givcol,
             const long long int* ldgcol, const long long int* perm, const double* givnum,
             const double* c, const double* s, double* rwork, long long int* iwork,
             long long int* info );
void zlalsa_( const long long int* icompq, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* bx, const long long int* ldbx, const double* u,
              const long long int* ldu, const double* vt, const long long int* k,
              const double* difl, const double* difr, const double* z,
              const double* poles, const long long int* givptr,
              const long long int* givcol, const long long int* ldgcol,
              const long long int* perm, const double* givnum, const double* c,
              const double* s, double* rwork, long long int* iwork, long long int* info );

void ZLALSD( const char* uplo, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, double* d, double* e, MKL_Complex16* b,
             const long long int* ldb, const double* rcond, long long int* rank,
             MKL_Complex16* work, double* rwork, long long int* iwork,
             long long int* info );
void ZLALSD_( const char* uplo, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, double* d, double* e, MKL_Complex16* b,
              const long long int* ldb, const double* rcond, long long int* rank,
              MKL_Complex16* work, double* rwork, long long int* iwork,
              long long int* info );
void zlalsd( const char* uplo, const long long int* smlsiz, const long long int* n,
             const long long int* nrhs, double* d, double* e, MKL_Complex16* b,
             const long long int* ldb, const double* rcond, long long int* rank,
             MKL_Complex16* work, double* rwork, long long int* iwork,
             long long int* info );
void zlalsd_( const char* uplo, const long long int* smlsiz, const long long int* n,
              const long long int* nrhs, double* d, double* e, MKL_Complex16* b,
              const long long int* ldb, const double* rcond, long long int* rank,
              MKL_Complex16* work, double* rwork, long long int* iwork,
              long long int* info );

double ZLANGB( const char* norm, const long long int* n, const long long int* kl,
               const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
               double* work );
double ZLANGB_( const char* norm, const long long int* n, const long long int* kl,
                const long long int* ku, const MKL_Complex16* ab,
                const long long int* ldab, double* work );
double zlangb( const char* norm, const long long int* n, const long long int* kl,
               const long long int* ku, const MKL_Complex16* ab, const long long int* ldab,
               double* work );
double zlangb_( const char* norm, const long long int* n, const long long int* kl,
                const long long int* ku, const MKL_Complex16* ab,
                const long long int* ldab, double* work );

double ZLANGE( const char* norm, const long long int* m, const long long int* n,
               const MKL_Complex16* a, const long long int* lda, double* work );
double ZLANGE_( const char* norm, const long long int* m, const long long int* n,
                const MKL_Complex16* a, const long long int* lda, double* work );
double zlange( const char* norm, const long long int* m, const long long int* n,
               const MKL_Complex16* a, const long long int* lda, double* work );
double zlange_( const char* norm, const long long int* m, const long long int* n,
                const MKL_Complex16* a, const long long int* lda, double* work );

double ZLANGT( const char* norm, const long long int* n, const MKL_Complex16* dl,
               const MKL_Complex16* d, const MKL_Complex16* du );
double ZLANGT_( const char* norm, const long long int* n, const MKL_Complex16* dl,
                const MKL_Complex16* d, const MKL_Complex16* du );
double zlangt( const char* norm, const long long int* n, const MKL_Complex16* dl,
               const MKL_Complex16* d, const MKL_Complex16* du );
double zlangt_( const char* norm, const long long int* n, const MKL_Complex16* dl,
                const MKL_Complex16* d, const MKL_Complex16* du );

double ZLANHB( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const MKL_Complex16* ab, const long long int* ldab,
               double* work );
double ZLANHB_( const char* norm, const char* uplo, const long long int* n,
                const long long int* k, const MKL_Complex16* ab, const long long int* ldab,
                double* work );
double zlanhb( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const MKL_Complex16* ab, const long long int* ldab,
               double* work );
double zlanhb_( const char* norm, const char* uplo, const long long int* n,
                const long long int* k, const MKL_Complex16* ab, const long long int* ldab,
                double* work );

double ZLANHE( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex16* a, const long long int* lda, double* work );
double ZLANHE_( const char* norm, const char* uplo, const long long int* n,
                const MKL_Complex16* a, const long long int* lda, double* work );
double zlanhe( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex16* a, const long long int* lda, double* work );
double zlanhe_( const char* norm, const char* uplo, const long long int* n,
                const MKL_Complex16* a, const long long int* lda, double* work );

double ZLANHF( const char* norm, const char* transr, const char* uplo,
               const long long int* n, const MKL_Complex16* a, double* work );
double ZLANHF_( const char* norm, const char* transr, const char* uplo,
                const long long int* n, const MKL_Complex16* a, double* work );
double zlanhf( const char* norm, const char* transr, const char* uplo,
               const long long int* n, const MKL_Complex16* a, double* work );
double zlanhf_( const char* norm, const char* transr, const char* uplo,
                const long long int* n, const MKL_Complex16* a, double* work );

double ZLANHP( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex16* ap, double* work );
double ZLANHP_( const char* norm, const char* uplo, const long long int* n,
                const MKL_Complex16* ap, double* work );
double zlanhp( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex16* ap, double* work );
double zlanhp_( const char* norm, const char* uplo, const long long int* n,
                const MKL_Complex16* ap, double* work );

double ZLANHS( const char* norm, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* work );
double ZLANHS_( const char* norm, const long long int* n, const MKL_Complex16* a,
                const long long int* lda, double* work );
double zlanhs( const char* norm, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* work );
double zlanhs_( const char* norm, const long long int* n, const MKL_Complex16* a,
                const long long int* lda, double* work );

double ZLANHT( const char* norm, const long long int* n, const double* d,
               const MKL_Complex16* e );
double ZLANHT_( const char* norm, const long long int* n, const double* d,
                const MKL_Complex16* e );
double zlanht( const char* norm, const long long int* n, const double* d,
               const MKL_Complex16* e );
double zlanht_( const char* norm, const long long int* n, const double* d,
                const MKL_Complex16* e );

double ZLANSB( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const MKL_Complex16* ab, const long long int* ldab,
               double* work );
double ZLANSB_( const char* norm, const char* uplo, const long long int* n,
                const long long int* k, const MKL_Complex16* ab, const long long int* ldab,
                double* work );
double zlansb( const char* norm, const char* uplo, const long long int* n,
               const long long int* k, const MKL_Complex16* ab, const long long int* ldab,
               double* work );
double zlansb_( const char* norm, const char* uplo, const long long int* n,
                const long long int* k, const MKL_Complex16* ab, const long long int* ldab,
                double* work );

double ZLANSP( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex16* ap, double* work );
double ZLANSP_( const char* norm, const char* uplo, const long long int* n,
                const MKL_Complex16* ap, double* work );
double zlansp( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex16* ap, double* work );
double zlansp_( const char* norm, const char* uplo, const long long int* n,
                const MKL_Complex16* ap, double* work );

double ZLANSY( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex16* a, const long long int* lda, double* work );
double ZLANSY_( const char* norm, const char* uplo, const long long int* n,
                const MKL_Complex16* a, const long long int* lda, double* work );
double zlansy( const char* norm, const char* uplo, const long long int* n,
               const MKL_Complex16* a, const long long int* lda, double* work );
double zlansy_( const char* norm, const char* uplo, const long long int* n,
                const MKL_Complex16* a, const long long int* lda, double* work );

double ZLANTB( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const long long int* k, const MKL_Complex16* ab,
               const long long int* ldab, double* work );
double ZLANTB_( const char* norm, const char* uplo, const char* diag,
                const long long int* n, const long long int* k, const MKL_Complex16* ab,
                const long long int* ldab, double* work );
double zlantb( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const long long int* k, const MKL_Complex16* ab,
               const long long int* ldab, double* work );
double zlantb_( const char* norm, const char* uplo, const char* diag,
                const long long int* n, const long long int* k, const MKL_Complex16* ab,
                const long long int* ldab, double* work );

double ZLANTP( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const MKL_Complex16* ap, double* work );
double ZLANTP_( const char* norm, const char* uplo, const char* diag,
                const long long int* n, const MKL_Complex16* ap, double* work );
double zlantp( const char* norm, const char* uplo, const char* diag,
               const long long int* n, const MKL_Complex16* ap, double* work );
double zlantp_( const char* norm, const char* uplo, const char* diag,
                const long long int* n, const MKL_Complex16* ap, double* work );

double ZLANTR( const char* norm, const char* uplo, const char* diag,
               const long long int* m, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* work );
double ZLANTR_( const char* norm, const char* uplo, const char* diag,
                const long long int* m, const long long int* n, const MKL_Complex16* a,
                const long long int* lda, double* work );
double zlantr( const char* norm, const char* uplo, const char* diag,
               const long long int* m, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* work );
double zlantr_( const char* norm, const char* uplo, const char* diag,
                const long long int* m, const long long int* n, const MKL_Complex16* a,
                const long long int* lda, double* work );

void ZLAPLL( const long long int* n, MKL_Complex16* x, const long long int* incx,
             MKL_Complex16* y, const long long int* incy, double* ssmin );
void ZLAPLL_( const long long int* n, MKL_Complex16* x, const long long int* incx,
              MKL_Complex16* y, const long long int* incy, double* ssmin );
void zlapll( const long long int* n, MKL_Complex16* x, const long long int* incx,
             MKL_Complex16* y, const long long int* incy, double* ssmin );
void zlapll_( const long long int* n, MKL_Complex16* x, const long long int* incx,
              MKL_Complex16* y, const long long int* incy, double* ssmin );

void ZLAPMT( const long long int* forwrd, const long long int* m, const long long int* n,
             MKL_Complex16* x, const long long int* ldx, long long int* k );
void ZLAPMT_( const long long int* forwrd, const long long int* m, const long long int* n,
              MKL_Complex16* x, const long long int* ldx, long long int* k );
void zlapmt( const long long int* forwrd, const long long int* m, const long long int* n,
             MKL_Complex16* x, const long long int* ldx, long long int* k );
void zlapmt_( const long long int* forwrd, const long long int* m, const long long int* n,
              MKL_Complex16* x, const long long int* ldx, long long int* k );

void ZLAQGB( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
             const double* r, const double* c, const double* rowcnd,
             const double* colcnd, const double* amax, char* equed );
void ZLAQGB_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
              const double* r, const double* c, const double* rowcnd,
              const double* colcnd, const double* amax, char* equed );
void zlaqgb( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
             const double* r, const double* c, const double* rowcnd,
             const double* colcnd, const double* amax, char* equed );
void zlaqgb_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, MKL_Complex16* ab, const long long int* ldab,
              const double* r, const double* c, const double* rowcnd,
              const double* colcnd, const double* amax, char* equed );

void ZLAQGE( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const double* r, const double* c,
             const double* rowcnd, const double* colcnd, const double* amax,
             char* equed );
void ZLAQGE_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const double* r, const double* c,
              const double* rowcnd, const double* colcnd, const double* amax,
              char* equed );
void zlaqge( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const double* r, const double* c,
             const double* rowcnd, const double* colcnd, const double* amax,
             char* equed );
void zlaqge_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const double* r, const double* c,
              const double* rowcnd, const double* colcnd, const double* amax,
              char* equed );

void ZLAQHB( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, double* s,
             const double* scond, const double* amax, char* equed );
void ZLAQHB_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, double* s,
              const double* scond, const double* amax, char* equed );
void zlaqhb( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, double* s,
             const double* scond, const double* amax, char* equed );
void zlaqhb_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, double* s,
              const double* scond, const double* amax, char* equed );

void ZLAQHE( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const double* s, const double* scond,
             const double* amax, char* equed );
void ZLAQHE_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const double* s, const double* scond,
              const double* amax, char* equed );
void zlaqhe( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const double* s, const double* scond,
             const double* amax, char* equed );
void zlaqhe_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const double* s, const double* scond,
              const double* amax, char* equed );

void ZLAQHP( const char* uplo, const long long int* n, MKL_Complex16* ap,
             const double* s, const double* scond, const double* amax,
             char* equed );
void ZLAQHP_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              const double* s, const double* scond, const double* amax,
              char* equed );
void zlaqhp( const char* uplo, const long long int* n, MKL_Complex16* ap,
             const double* s, const double* scond, const double* amax,
             char* equed );
void zlaqhp_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              const double* s, const double* scond, const double* amax,
              char* equed );

void ZLAQP2( const long long int* m, const long long int* n, const long long int* offset,
             MKL_Complex16* a, const long long int* lda, long long int* jpvt,
             MKL_Complex16* tau, double* vn1, double* vn2,
             MKL_Complex16* work );
void ZLAQP2_( const long long int* m, const long long int* n, const long long int* offset,
              MKL_Complex16* a, const long long int* lda, long long int* jpvt,
              MKL_Complex16* tau, double* vn1, double* vn2,
              MKL_Complex16* work );
void zlaqp2( const long long int* m, const long long int* n, const long long int* offset,
             MKL_Complex16* a, const long long int* lda, long long int* jpvt,
             MKL_Complex16* tau, double* vn1, double* vn2,
             MKL_Complex16* work );
void zlaqp2_( const long long int* m, const long long int* n, const long long int* offset,
              MKL_Complex16* a, const long long int* lda, long long int* jpvt,
              MKL_Complex16* tau, double* vn1, double* vn2,
              MKL_Complex16* work );

void ZLAQPS( const long long int* m, const long long int* n, const long long int* offset,
             const long long int* nb, long long int* kb, MKL_Complex16* a,
             const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
             double* vn1, double* vn2, MKL_Complex16* auxv, MKL_Complex16* f,
             const long long int* ldf );
void ZLAQPS_( const long long int* m, const long long int* n, const long long int* offset,
              const long long int* nb, long long int* kb, MKL_Complex16* a,
              const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
              double* vn1, double* vn2, MKL_Complex16* auxv, MKL_Complex16* f,
              const long long int* ldf );
void zlaqps( const long long int* m, const long long int* n, const long long int* offset,
             const long long int* nb, long long int* kb, MKL_Complex16* a,
             const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
             double* vn1, double* vn2, MKL_Complex16* auxv, MKL_Complex16* f,
             const long long int* ldf );
void zlaqps_( const long long int* m, const long long int* n, const long long int* offset,
              const long long int* nb, long long int* kb, MKL_Complex16* a,
              const long long int* lda, long long int* jpvt, MKL_Complex16* tau,
              double* vn1, double* vn2, MKL_Complex16* auxv, MKL_Complex16* f,
              const long long int* ldf );

void ZLAQR0( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, long long int* iloz,
             long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZLAQR0_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, long long int* iloz,
              long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zlaqr0( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, long long int* iloz,
             long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zlaqr0_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, long long int* iloz,
              long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZLAQR1( const long long int* n, const MKL_Complex16* h, const long long int* ldh,
             const MKL_Complex16* s1, MKL_Complex16* s2, MKL_Complex16* v );
void ZLAQR1_( const long long int* n, const MKL_Complex16* h, const long long int* ldh,
              const MKL_Complex16* s1, MKL_Complex16* s2, MKL_Complex16* v );
void zlaqr1( const long long int* n, const MKL_Complex16* h, const long long int* ldh,
             const MKL_Complex16* s1, MKL_Complex16* s2, MKL_Complex16* v );
void zlaqr1_( const long long int* n, const MKL_Complex16* h, const long long int* ldh,
              const MKL_Complex16* s1, MKL_Complex16* s2, MKL_Complex16* v );

void ZLAQR2( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             long long int* ns, long long int* nd, MKL_Complex16* sh, MKL_Complex16* v,
             const long long int* ldv, const long long int* nh, MKL_Complex16* t,
             const long long int* ldt, const long long int* nv, MKL_Complex16* wv,
             const long long int* ldwv, MKL_Complex16* work, const long long int* lwork );
void ZLAQR2_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              long long int* ns, long long int* nd, MKL_Complex16* sh, MKL_Complex16* v,
              const long long int* ldv, const long long int* nh, MKL_Complex16* t,
              const long long int* ldt, const long long int* nv, MKL_Complex16* wv,
              const long long int* ldwv, MKL_Complex16* work, const long long int* lwork );
void zlaqr2( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             long long int* ns, long long int* nd, MKL_Complex16* sh, MKL_Complex16* v,
             const long long int* ldv, const long long int* nh, MKL_Complex16* t,
             const long long int* ldt, const long long int* nv, MKL_Complex16* wv,
             const long long int* ldwv, MKL_Complex16* work, const long long int* lwork );
void zlaqr2_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              long long int* ns, long long int* nd, MKL_Complex16* sh, MKL_Complex16* v,
              const long long int* ldv, const long long int* nh, MKL_Complex16* t,
              const long long int* ldt, const long long int* nv, MKL_Complex16* wv,
              const long long int* ldwv, MKL_Complex16* work, const long long int* lwork );

void ZLAQR3( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             long long int* ns, long long int* nd, MKL_Complex16* sh, MKL_Complex16* v,
             const long long int* ldv, const long long int* nh, MKL_Complex16* t,
             const long long int* ldt, const long long int* nv, MKL_Complex16* wv,
             const long long int* ldwv, MKL_Complex16* work, const long long int* lwork );
void ZLAQR3_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              long long int* ns, long long int* nd, MKL_Complex16* sh, MKL_Complex16* v,
              const long long int* ldv, const long long int* nh, MKL_Complex16* t,
              const long long int* ldt, const long long int* nv, MKL_Complex16* wv,
              const long long int* ldwv, MKL_Complex16* work, const long long int* lwork );
void zlaqr3( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ktop, const long long int* kbot, const long long int* nw,
             MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
             const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             long long int* ns, long long int* nd, MKL_Complex16* sh, MKL_Complex16* v,
             const long long int* ldv, const long long int* nh, MKL_Complex16* t,
             const long long int* ldt, const long long int* nv, MKL_Complex16* wv,
             const long long int* ldwv, MKL_Complex16* work, const long long int* lwork );
void zlaqr3_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ktop, const long long int* kbot, const long long int* nw,
              MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              long long int* ns, long long int* nd, MKL_Complex16* sh, MKL_Complex16* v,
              const long long int* ldv, const long long int* nh, MKL_Complex16* t,
              const long long int* ldt, const long long int* nv, MKL_Complex16* wv,
              const long long int* ldwv, MKL_Complex16* work, const long long int* lwork );

void ZLAQR4( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, long long int* iloz,
             long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZLAQR4_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, long long int* iloz,
              long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zlaqr4( const long long int* wantt, const long long int* wantz, const long long int* n,
             const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
             const long long int* ldh, MKL_Complex16* w, long long int* iloz,
             long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zlaqr4_( const long long int* wantt, const long long int* wantz, const long long int* n,
              const long long int* ilo, const long long int* ihi, MKL_Complex16* h,
              const long long int* ldh, MKL_Complex16* w, long long int* iloz,
              long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZLAQR5( const long long int* wantt, const long long int* wantz, const long long int* kacc22,
             const long long int* n, const long long int* ktop, const long long int* kbot,
             const long long int* nshfts, MKL_Complex16* s, MKL_Complex16* h,
             const long long int* ldh, const long long int* iloz, const long long int* ihiz,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* v,
             const long long int* ldv, MKL_Complex16* u, const long long int* ldu,
             const long long int* nv, MKL_Complex16* wv, const long long int* ldwv,
             const long long int* nh, MKL_Complex16* wh, const long long int* ldwh );
void ZLAQR5_( const long long int* wantt, const long long int* wantz,
              const long long int* kacc22, const long long int* n, const long long int* ktop,
              const long long int* kbot, const long long int* nshfts, MKL_Complex16* s,
              MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* v, const long long int* ldv, MKL_Complex16* u,
              const long long int* ldu, const long long int* nv, MKL_Complex16* wv,
              const long long int* ldwv, const long long int* nh, MKL_Complex16* wh,
              const long long int* ldwh );
void zlaqr5( const long long int* wantt, const long long int* wantz, const long long int* kacc22,
             const long long int* n, const long long int* ktop, const long long int* kbot,
             const long long int* nshfts, MKL_Complex16* s, MKL_Complex16* h,
             const long long int* ldh, const long long int* iloz, const long long int* ihiz,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* v,
             const long long int* ldv, MKL_Complex16* u, const long long int* ldu,
             const long long int* nv, MKL_Complex16* wv, const long long int* ldwv,
             const long long int* nh, MKL_Complex16* wh, const long long int* ldwh );
void zlaqr5_( const long long int* wantt, const long long int* wantz,
              const long long int* kacc22, const long long int* n, const long long int* ktop,
              const long long int* kbot, const long long int* nshfts, MKL_Complex16* s,
              MKL_Complex16* h, const long long int* ldh, const long long int* iloz,
              const long long int* ihiz, MKL_Complex16* z, const long long int* ldz,
              MKL_Complex16* v, const long long int* ldv, MKL_Complex16* u,
              const long long int* ldu, const long long int* nv, MKL_Complex16* wv,
              const long long int* ldwv, const long long int* nh, MKL_Complex16* wh,
              const long long int* ldwh );

void ZLAQSB( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, const double* s,
             const double* scond, const double* amax, char* equed );
void ZLAQSB_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, const double* s,
              const double* scond, const double* amax, char* equed );
void zlaqsb( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, const double* s,
             const double* scond, const double* amax, char* equed );
void zlaqsb_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, const double* s,
              const double* scond, const double* amax, char* equed );

void ZLAQSP( const char* uplo, const long long int* n, MKL_Complex16* ap,
             const double* s, const double* scond, const double* amax,
             char* equed );
void ZLAQSP_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              const double* s, const double* scond, const double* amax,
              char* equed );
void zlaqsp( const char* uplo, const long long int* n, MKL_Complex16* ap,
             const double* s, const double* scond, const double* amax,
             char* equed );
void zlaqsp_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              const double* s, const double* scond, const double* amax,
              char* equed );

void ZLAQSY( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const double* s, const double* scond,
             const double* amax, char* equed );
void ZLAQSY_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const double* s, const double* scond,
              const double* amax, char* equed );
void zlaqsy( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const double* s, const double* scond,
             const double* amax, char* equed );
void zlaqsy_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const double* s, const double* scond,
              const double* amax, char* equed );

void ZLAR1V( const long long int* n, const long long int* b1, const long long int* bn,
             const double* lambda, const double* d, const double* l,
             const double* ld, const double* lld, const double* pivmin,
             const double* gaptol, MKL_Complex16* z, const long long int* wantnc,
             long long int* negcnt, double* ztz, double* mingma, long long int* r,
             long long int* isuppz, double* nrminv, double* resid, double* rqcorr,
             double* work );
void ZLAR1V_( const long long int* n, const long long int* b1, const long long int* bn,
              const double* lambda, const double* d, const double* l,
              const double* ld, const double* lld, const double* pivmin,
              const double* gaptol, MKL_Complex16* z, const long long int* wantnc,
              long long int* negcnt, double* ztz, double* mingma, long long int* r,
              long long int* isuppz, double* nrminv, double* resid, double* rqcorr,
              double* work );
void zlar1v( const long long int* n, const long long int* b1, const long long int* bn,
             const double* lambda, const double* d, const double* l,
             const double* ld, const double* lld, const double* pivmin,
             const double* gaptol, MKL_Complex16* z, const long long int* wantnc,
             long long int* negcnt, double* ztz, double* mingma, long long int* r,
             long long int* isuppz, double* nrminv, double* resid, double* rqcorr,
             double* work );
void zlar1v_( const long long int* n, const long long int* b1, const long long int* bn,
              const double* lambda, const double* d, const double* l,
              const double* ld, const double* lld, const double* pivmin,
              const double* gaptol, MKL_Complex16* z, const long long int* wantnc,
              long long int* negcnt, double* ztz, double* mingma, long long int* r,
              long long int* isuppz, double* nrminv, double* resid, double* rqcorr,
              double* work );

void ZLAR2V( const long long int* n, MKL_Complex16* x, MKL_Complex16* y,
             MKL_Complex16* z, const long long int* incx, const double* c,
             const MKL_Complex16* s, const long long int* incc );
void ZLAR2V_( const long long int* n, MKL_Complex16* x, MKL_Complex16* y,
              MKL_Complex16* z, const long long int* incx, const double* c,
              const MKL_Complex16* s, const long long int* incc );
void zlar2v( const long long int* n, MKL_Complex16* x, MKL_Complex16* y,
             MKL_Complex16* z, const long long int* incx, const double* c,
             const MKL_Complex16* s, const long long int* incc );
void zlar2v_( const long long int* n, MKL_Complex16* x, MKL_Complex16* y,
              MKL_Complex16* z, const long long int* incx, const double* c,
              const MKL_Complex16* s, const long long int* incc );

void ZLARCM( const long long int* m, const long long int* n, const double* a,
             const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* c, const long long int* ldc, double* rwork );
void ZLARCM_( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* c, const long long int* ldc, double* rwork );
void zlarcm( const long long int* m, const long long int* n, const double* a,
             const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* c, const long long int* ldc, double* rwork );
void zlarcm_( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* c, const long long int* ldc, double* rwork );

void ZLARFB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const MKL_Complex16* v, const long long int* ldv,
             const MKL_Complex16* t, const long long int* ldt, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* ldwork );
void ZLARFB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* t, const long long int* ldt, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* ldwork );
void zlarfb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const MKL_Complex16* v, const long long int* ldv,
             const MKL_Complex16* t, const long long int* ldt, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* ldwork );
void zlarfb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* t, const long long int* ldt, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* ldwork );

void ZLARF( const char* side, const long long int* m, const long long int* n,
            const MKL_Complex16* v, const long long int* incv,
            const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
            MKL_Complex16* work );
void ZLARF_( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex16* v, const long long int* incv,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work );
void zlarf( const char* side, const long long int* m, const long long int* n,
            const MKL_Complex16* v, const long long int* incv,
            const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
            MKL_Complex16* work );
void zlarf_( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex16* v, const long long int* incv,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work );

void ZLARFG( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
             const long long int* incx, MKL_Complex16* tau );
void ZLARFG_( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
              const long long int* incx, MKL_Complex16* tau );
void zlarfg( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
             const long long int* incx, MKL_Complex16* tau );
void zlarfg_( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
              const long long int* incx, MKL_Complex16* tau );

void ZLARFGP( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
              const long long int* incx, MKL_Complex16* tau );
void ZLARFGP_( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
               const long long int* incx, MKL_Complex16* tau );
void zlarfgp( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
              const long long int* incx, MKL_Complex16* tau );
void zlarfgp_( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
               const long long int* incx, MKL_Complex16* tau );

void ZLARFP( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
             const long long int* incx, MKL_Complex16* tau );
void ZLARFP_( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
              const long long int* incx, MKL_Complex16* tau );
void zlarfp( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
             const long long int* incx, MKL_Complex16* tau );
void zlarfp_( const long long int* n, MKL_Complex16* alpha, MKL_Complex16* x,
              const long long int* incx, MKL_Complex16* tau );

void ZLARFT( const char* direct, const char* storev, const long long int* n,
             const long long int* k, MKL_Complex16* v, const long long int* ldv,
             const MKL_Complex16* tau, MKL_Complex16* t, const long long int* ldt );
void ZLARFT_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* tau, MKL_Complex16* t, const long long int* ldt );
void zlarft( const char* direct, const char* storev, const long long int* n,
             const long long int* k, MKL_Complex16* v, const long long int* ldv,
             const MKL_Complex16* tau, MKL_Complex16* t, const long long int* ldt );
void zlarft_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* tau, MKL_Complex16* t, const long long int* ldt );

void ZLARFX( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex16* v, const MKL_Complex16* tau,
             MKL_Complex16* c, const long long int* ldc, MKL_Complex16* work );
void ZLARFX_( const char* side, const long long int* m, const long long int* n,
              const MKL_Complex16* v, const MKL_Complex16* tau,
              MKL_Complex16* c, const long long int* ldc, MKL_Complex16* work );
void zlarfx( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex16* v, const MKL_Complex16* tau,
             MKL_Complex16* c, const long long int* ldc, MKL_Complex16* work );
void zlarfx_( const char* side, const long long int* m, const long long int* n,
              const MKL_Complex16* v, const MKL_Complex16* tau,
              MKL_Complex16* c, const long long int* ldc, MKL_Complex16* work );

void ZLARGV( const long long int* n, MKL_Complex16* x, const long long int* incx,
             MKL_Complex16* y, const long long int* incy, double* c,
             const long long int* incc );
void ZLARGV_( const long long int* n, MKL_Complex16* x, const long long int* incx,
              MKL_Complex16* y, const long long int* incy, double* c,
              const long long int* incc );
void zlargv( const long long int* n, MKL_Complex16* x, const long long int* incx,
             MKL_Complex16* y, const long long int* incy, double* c,
             const long long int* incc );
void zlargv_( const long long int* n, MKL_Complex16* x, const long long int* incx,
              MKL_Complex16* y, const long long int* incy, double* c,
              const long long int* incc );

void ZLARNV( const long long int* idist, long long int* iseed, const long long int* n,
             MKL_Complex16* x );
void ZLARNV_( const long long int* idist, long long int* iseed, const long long int* n,
              MKL_Complex16* x );
void zlarnv( const long long int* idist, long long int* iseed, const long long int* n,
             MKL_Complex16* x );
void zlarnv_( const long long int* idist, long long int* iseed, const long long int* n,
              MKL_Complex16* x );

void ZLARRV( const long long int* n, const double* vl, const double* vu, double* d,
             double* l, double* pivmin, const long long int* isplit,
             const long long int* m, const long long int* dol, const long long int* dou,
             const double* minrgp, const double* rtol1, const double* rtol2,
             double* w, double* werr, double* wgap, const long long int* iblock,
             const long long int* indexw, const double* gers, MKL_Complex16* z,
             const long long int* ldz, long long int* isuppz, double* work, long long int* iwork,
             long long int* info );
void ZLARRV_( const long long int* n, const double* vl, const double* vu, double* d,
              double* l, double* pivmin, const long long int* isplit,
              const long long int* m, const long long int* dol, const long long int* dou,
              const double* minrgp, const double* rtol1, const double* rtol2,
              double* w, double* werr, double* wgap, const long long int* iblock,
              const long long int* indexw, const double* gers, MKL_Complex16* z,
              const long long int* ldz, long long int* isuppz, double* work,
              long long int* iwork, long long int* info );
void zlarrv( const long long int* n, const double* vl, const double* vu, double* d,
             double* l, double* pivmin, const long long int* isplit,
             const long long int* m, const long long int* dol, const long long int* dou,
             const double* minrgp, const double* rtol1, const double* rtol2,
             double* w, double* werr, double* wgap, const long long int* iblock,
             const long long int* indexw, const double* gers, MKL_Complex16* z,
             const long long int* ldz, long long int* isuppz, double* work, long long int* iwork,
             long long int* info );
void zlarrv_( const long long int* n, const double* vl, const double* vu, double* d,
              double* l, double* pivmin, const long long int* isplit,
              const long long int* m, const long long int* dol, const long long int* dou,
              const double* minrgp, const double* rtol1, const double* rtol2,
              double* w, double* werr, double* wgap, const long long int* iblock,
              const long long int* indexw, const double* gers, MKL_Complex16* z,
              const long long int* ldz, long long int* isuppz, double* work,
              long long int* iwork, long long int* info );

void ZLARSCL2( const long long int* m, const long long int* n, const double* d, MKL_Complex16* x,
               const long long int* ldx );
void ZLARSCL2_( const long long int* m, const long long int* n, const double* d, MKL_Complex16* x,
                const long long int* ldx );
void zlarscl2( const long long int* m, const long long int* n, const double* d, MKL_Complex16* x,
               const long long int* ldx );
void zlarscl2_( const long long int* m, const long long int* n, const double* d, MKL_Complex16* x,
                const long long int* ldx );

void ZLARTG( const MKL_Complex16* f, const MKL_Complex16* g, double* cs,
             MKL_Complex16* sn, MKL_Complex16* r );
void ZLARTG_( const MKL_Complex16* f, const MKL_Complex16* g, double* cs,
              MKL_Complex16* sn, MKL_Complex16* r );
void zlartg( const MKL_Complex16* f, const MKL_Complex16* g, double* cs,
             MKL_Complex16* sn, MKL_Complex16* r );
void zlartg_( const MKL_Complex16* f, const MKL_Complex16* g, double* cs,
              MKL_Complex16* sn, MKL_Complex16* r );

void ZLARTV( const long long int* n, MKL_Complex16* x, const long long int* incx,
             MKL_Complex16* y, const long long int* incy, const double* c,
             const MKL_Complex16* s, const long long int* incc );
void ZLARTV_( const long long int* n, MKL_Complex16* x, const long long int* incx,
              MKL_Complex16* y, const long long int* incy, const double* c,
              const MKL_Complex16* s, const long long int* incc );
void zlartv( const long long int* n, MKL_Complex16* x, const long long int* incx,
             MKL_Complex16* y, const long long int* incy, const double* c,
             const MKL_Complex16* s, const long long int* incc );
void zlartv_( const long long int* n, MKL_Complex16* x, const long long int* incx,
              MKL_Complex16* y, const long long int* incy, const double* c,
              const MKL_Complex16* s, const long long int* incc );

void ZLARZB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const MKL_Complex16* v,
             const long long int* ldv, const MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* c, const long long int* ldc, MKL_Complex16* work,
             const long long int* ldwork );
void ZLARZB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const MKL_Complex16* v,
              const long long int* ldv, const MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* c, const long long int* ldc, MKL_Complex16* work,
              const long long int* ldwork );
void zlarzb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const MKL_Complex16* v,
             const long long int* ldv, const MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* c, const long long int* ldc, MKL_Complex16* work,
             const long long int* ldwork );
void zlarzb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const MKL_Complex16* v,
              const long long int* ldv, const MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* c, const long long int* ldc, MKL_Complex16* work,
              const long long int* ldwork );

void ZLARZ( const char* side, const long long int* m, const long long int* n,
            const long long int* l, const MKL_Complex16* v, const long long int* incv,
            const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
            MKL_Complex16* work );
void ZLARZ_( const char* side, const long long int* m, const long long int* n,
             const long long int* l, const MKL_Complex16* v, const long long int* incv,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work );
void zlarz( const char* side, const long long int* m, const long long int* n,
            const long long int* l, const MKL_Complex16* v, const long long int* incv,
            const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
            MKL_Complex16* work );
void zlarz_( const char* side, const long long int* m, const long long int* n,
             const long long int* l, const MKL_Complex16* v, const long long int* incv,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work );

void ZLARZT( const char* direct, const char* storev, const long long int* n,
             const long long int* k, MKL_Complex16* v, const long long int* ldv,
             const MKL_Complex16* tau, MKL_Complex16* t, const long long int* ldt );
void ZLARZT_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* tau, MKL_Complex16* t, const long long int* ldt );
void zlarzt( const char* direct, const char* storev, const long long int* n,
             const long long int* k, MKL_Complex16* v, const long long int* ldv,
             const MKL_Complex16* tau, MKL_Complex16* t, const long long int* ldt );
void zlarzt_( const char* direct, const char* storev, const long long int* n,
              const long long int* k, MKL_Complex16* v, const long long int* ldv,
              const MKL_Complex16* tau, MKL_Complex16* t, const long long int* ldt );

void ZLASCL( const char* type, const long long int* kl, const long long int* ku,
             const double* cfrom, const double* cto, const long long int* m,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* info );
void ZLASCL_( const char* type, const long long int* kl, const long long int* ku,
              const double* cfrom, const double* cto, const long long int* m,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* info );
void zlascl( const char* type, const long long int* kl, const long long int* ku,
             const double* cfrom, const double* cto, const long long int* m,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* info );
void zlascl_( const char* type, const long long int* kl, const long long int* ku,
              const double* cfrom, const double* cto, const long long int* m,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* info );

void ZLASCL2( const long long int* m, const long long int* n, const double* d, MKL_Complex16* x,
              const long long int* ldx );
void ZLASCL2_( const long long int* m, const long long int* n, const double* d, MKL_Complex16* x,
               const long long int* ldx );
void zlascl2( const long long int* m, const long long int* n, const double* d, MKL_Complex16* x,
              const long long int* ldx );
void zlascl2_( const long long int* m, const long long int* n, const double* d, MKL_Complex16* x,
               const long long int* ldx );

void ZLASET( const char* uplo, const long long int* m, const long long int* n,
             const MKL_Complex16* alpha, const MKL_Complex16* beta,
             MKL_Complex16* a, const long long int* lda );
void ZLASET_( const char* uplo, const long long int* m, const long long int* n,
              const MKL_Complex16* alpha, const MKL_Complex16* beta,
              MKL_Complex16* a, const long long int* lda );
void zlaset( const char* uplo, const long long int* m, const long long int* n,
             const MKL_Complex16* alpha, const MKL_Complex16* beta,
             MKL_Complex16* a, const long long int* lda );
void zlaset_( const char* uplo, const long long int* m, const long long int* n,
              const MKL_Complex16* alpha, const MKL_Complex16* beta,
              MKL_Complex16* a, const long long int* lda );

void ZLASR( const char* side, const char* pivot, const char* direct,
            const long long int* m, const long long int* n, const double* c,
            const double* s, MKL_Complex16* a, const long long int* lda );
void ZLASR_( const char* side, const char* pivot, const char* direct,
             const long long int* m, const long long int* n, const double* c,
             const double* s, MKL_Complex16* a, const long long int* lda );
void zlasr( const char* side, const char* pivot, const char* direct,
            const long long int* m, const long long int* n, const double* c,
            const double* s, MKL_Complex16* a, const long long int* lda );
void zlasr_( const char* side, const char* pivot, const char* direct,
             const long long int* m, const long long int* n, const double* c,
             const double* s, MKL_Complex16* a, const long long int* lda );

void ZLASSQ( const long long int* n, const MKL_Complex16* x, const long long int* incx,
             double* scale, double* sumsq );
void ZLASSQ_( const long long int* n, const MKL_Complex16* x, const long long int* incx,
              double* scale, double* sumsq );
void zlassq( const long long int* n, const MKL_Complex16* x, const long long int* incx,
             double* scale, double* sumsq );
void zlassq_( const long long int* n, const MKL_Complex16* x, const long long int* incx,
              double* scale, double* sumsq );

void ZLASWP( const long long int* n, MKL_Complex16* a, const long long int* lda,
             const long long int* k1, const long long int* k2, const long long int* ipiv,
             const long long int* incx );
void ZLASWP_( const long long int* n, MKL_Complex16* a, const long long int* lda,
              const long long int* k1, const long long int* k2, const long long int* ipiv,
              const long long int* incx );
void zlaswp( const long long int* n, MKL_Complex16* a, const long long int* lda,
             const long long int* k1, const long long int* k2, const long long int* ipiv,
             const long long int* incx );
void zlaswp_( const long long int* n, MKL_Complex16* a, const long long int* lda,
              const long long int* k1, const long long int* k2, const long long int* ipiv,
              const long long int* incx );

void ZLASYF( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
             MKL_Complex16* w, const long long int* ldw, long long int* info );
void ZLASYF_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
              MKL_Complex16* w, const long long int* ldw, long long int* info );
void zlasyf( const char* uplo, const long long int* n, const long long int* nb,
             long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
             MKL_Complex16* w, const long long int* ldw, long long int* info );
void zlasyf_( const char* uplo, const long long int* n, const long long int* nb,
              long long int* kb, MKL_Complex16* a, const long long int* lda, long long int* ipiv,
              MKL_Complex16* w, const long long int* ldw, long long int* info );

void ZLAT2C( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex8* sa, const long long int* ldsa,
             long long int* info );
void ZLAT2C_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex8* sa, const long long int* ldsa,
              long long int* info );
void zlat2c( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex8* sa, const long long int* ldsa,
             long long int* info );
void zlat2c_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex8* sa, const long long int* ldsa,
              long long int* info );

void ZLATBS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const long long int* kd,
             const MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* x,
             double* scale, double* cnorm, long long int* info );
void ZLATBS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const long long int* kd,
              const MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* x,
              double* scale, double* cnorm, long long int* info );
void zlatbs( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const long long int* kd,
             const MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* x,
             double* scale, double* cnorm, long long int* info );
void zlatbs_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const long long int* kd,
              const MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* x,
              double* scale, double* cnorm, long long int* info );

void ZLATDF( const long long int* ijob, const long long int* n, const MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* rhs, double* rdsum,
             double* rdscal, const long long int* ipiv, const long long int* jpiv );
void ZLATDF_( const long long int* ijob, const long long int* n, const MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* rhs, double* rdsum,
              double* rdscal, const long long int* ipiv, const long long int* jpiv );
void zlatdf( const long long int* ijob, const long long int* n, const MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* rhs, double* rdsum,
             double* rdscal, const long long int* ipiv, const long long int* jpiv );
void zlatdf_( const long long int* ijob, const long long int* n, const MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* rhs, double* rdsum,
              double* rdscal, const long long int* ipiv, const long long int* jpiv );

void ZLATPS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const MKL_Complex16* ap,
             MKL_Complex16* x, double* scale, double* cnorm, long long int* info );
void ZLATPS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const MKL_Complex16* ap,
              MKL_Complex16* x, double* scale, double* cnorm, long long int* info );
void zlatps( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const MKL_Complex16* ap,
             MKL_Complex16* x, double* scale, double* cnorm, long long int* info );
void zlatps_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const MKL_Complex16* ap,
              MKL_Complex16* x, double* scale, double* cnorm, long long int* info );

void ZLATRD( const char* uplo, const long long int* n, const long long int* nb,
             MKL_Complex16* a, const long long int* lda, double* e,
             MKL_Complex16* tau, MKL_Complex16* w, const long long int* ldw );
void ZLATRD_( const char* uplo, const long long int* n, const long long int* nb,
              MKL_Complex16* a, const long long int* lda, double* e,
              MKL_Complex16* tau, MKL_Complex16* w, const long long int* ldw );
void zlatrd( const char* uplo, const long long int* n, const long long int* nb,
             MKL_Complex16* a, const long long int* lda, double* e,
             MKL_Complex16* tau, MKL_Complex16* w, const long long int* ldw );
void zlatrd_( const char* uplo, const long long int* n, const long long int* nb,
              MKL_Complex16* a, const long long int* lda, double* e,
              MKL_Complex16* tau, MKL_Complex16* w, const long long int* ldw );

void ZLATRS( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* x, double* scale,
             double* cnorm, long long int* info );
void ZLATRS_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* x, double* scale,
              double* cnorm, long long int* info );
void zlatrs( const char* uplo, const char* trans, const char* diag,
             const char* normin, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* x, double* scale,
             double* cnorm, long long int* info );
void zlatrs_( const char* uplo, const char* trans, const char* diag,
              const char* normin, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* x, double* scale,
              double* cnorm, long long int* info );

void ZLATRZ( const long long int* m, const long long int* n, const long long int* l,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* work );
void ZLATRZ_( const long long int* m, const long long int* n, const long long int* l,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* work );
void zlatrz( const long long int* m, const long long int* n, const long long int* l,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
             MKL_Complex16* work );
void zlatrz_( const long long int* m, const long long int* n, const long long int* l,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* tau,
              MKL_Complex16* work );

void ZLATZM( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex16* v, const long long int* incv,
             const MKL_Complex16* tau, MKL_Complex16* c1, MKL_Complex16* c2,
             const long long int* ldc, MKL_Complex16* work );
void ZLATZM_( const char* side, const long long int* m, const long long int* n,
              const MKL_Complex16* v, const long long int* incv,
              const MKL_Complex16* tau, MKL_Complex16* c1, MKL_Complex16* c2,
              const long long int* ldc, MKL_Complex16* work );
void zlatzm( const char* side, const long long int* m, const long long int* n,
             const MKL_Complex16* v, const long long int* incv,
             const MKL_Complex16* tau, MKL_Complex16* c1, MKL_Complex16* c2,
             const long long int* ldc, MKL_Complex16* work );
void zlatzm_( const char* side, const long long int* m, const long long int* n,
              const MKL_Complex16* v, const long long int* incv,
              const MKL_Complex16* tau, MKL_Complex16* c1, MKL_Complex16* c2,
              const long long int* ldc, MKL_Complex16* work );

void ZLAUU2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void ZLAUU2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );
void zlauu2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void zlauu2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );

void ZLAUUM( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void ZLAUUM_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );
void zlauum( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void zlauum_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );

void ZPBCON( const char* uplo, const long long int* n, const long long int* kd,
             const MKL_Complex16* ab, const long long int* ldab, const double* anorm,
             double* rcond, MKL_Complex16* work, double* rwork,
             long long int* info );
void ZPBCON_( const char* uplo, const long long int* n, const long long int* kd,
              const MKL_Complex16* ab, const long long int* ldab,
              const double* anorm, double* rcond, MKL_Complex16* work,
              double* rwork, long long int* info );
void zpbcon( const char* uplo, const long long int* n, const long long int* kd,
             const MKL_Complex16* ab, const long long int* ldab, const double* anorm,
             double* rcond, MKL_Complex16* work, double* rwork,
             long long int* info );
void zpbcon_( const char* uplo, const long long int* n, const long long int* kd,
              const MKL_Complex16* ab, const long long int* ldab,
              const double* anorm, double* rcond, MKL_Complex16* work,
              double* rwork, long long int* info );

void ZPBEQU( const char* uplo, const long long int* n, const long long int* kd,
             const MKL_Complex16* ab, const long long int* ldab, double* s,
             double* scond, double* amax, long long int* info );
void ZPBEQU_( const char* uplo, const long long int* n, const long long int* kd,
              const MKL_Complex16* ab, const long long int* ldab, double* s,
              double* scond, double* amax, long long int* info );
void zpbequ( const char* uplo, const long long int* n, const long long int* kd,
             const MKL_Complex16* ab, const long long int* ldab, double* s,
             double* scond, double* amax, long long int* info );
void zpbequ_( const char* uplo, const long long int* n, const long long int* kd,
              const MKL_Complex16* ab, const long long int* ldab, double* s,
              double* scond, double* amax, long long int* info );

void ZPBRFS( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const MKL_Complex16* ab, const long long int* ldab,
             const MKL_Complex16* afb, const long long int* ldafb,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZPBRFS_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const MKL_Complex16* ab,
              const long long int* ldab, const MKL_Complex16* afb,
              const long long int* ldafb, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zpbrfs( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const MKL_Complex16* ab, const long long int* ldab,
             const MKL_Complex16* afb, const long long int* ldafb,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zpbrfs_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const MKL_Complex16* ab,
              const long long int* ldab, const MKL_Complex16* afb,
              const long long int* ldafb, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZPBSTF( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, long long int* info );
void ZPBSTF_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, long long int* info );
void zpbstf( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, long long int* info );
void zpbstf_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, long long int* info );

void ZPBSV( const char* uplo, const long long int* n, const long long int* kd,
            const long long int* nrhs, MKL_Complex16* ab, const long long int* ldab,
            MKL_Complex16* b, const long long int* ldb, long long int* info );
void ZPBSV_( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, MKL_Complex16* ab, const long long int* ldab,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void zpbsv( const char* uplo, const long long int* n, const long long int* kd,
            const long long int* nrhs, MKL_Complex16* ab, const long long int* ldab,
            MKL_Complex16* b, const long long int* ldb, long long int* info );
void zpbsv_( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, MKL_Complex16* ab, const long long int* ldab,
             MKL_Complex16* b, const long long int* ldb, long long int* info );

void ZPBSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* kd, const long long int* nrhs, MKL_Complex16* ab,
             const long long int* ldab, MKL_Complex16* afb, const long long int* ldafb,
             char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ZPBSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* kd, const long long int* nrhs, MKL_Complex16* ab,
              const long long int* ldab, MKL_Complex16* afb, const long long int* ldafb,
              char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void zpbsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* kd, const long long int* nrhs, MKL_Complex16* ab,
             const long long int* ldab, MKL_Complex16* afb, const long long int* ldafb,
             char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void zpbsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* kd, const long long int* nrhs, MKL_Complex16* ab,
              const long long int* ldab, MKL_Complex16* afb, const long long int* ldafb,
              char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZPBTF2( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, long long int* info );
void ZPBTF2_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, long long int* info );
void zpbtf2( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, long long int* info );
void zpbtf2_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, long long int* info );

void ZPBTRF( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, long long int* info );
void ZPBTRF_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, long long int* info );
void zpbtrf( const char* uplo, const long long int* n, const long long int* kd,
             MKL_Complex16* ab, const long long int* ldab, long long int* info );
void zpbtrf_( const char* uplo, const long long int* n, const long long int* kd,
              MKL_Complex16* ab, const long long int* ldab, long long int* info );

void ZPBTRS( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const MKL_Complex16* ab, const long long int* ldab,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void ZPBTRS_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const MKL_Complex16* ab,
              const long long int* ldab, MKL_Complex16* b, const long long int* ldb,
              long long int* info );
void zpbtrs( const char* uplo, const long long int* n, const long long int* kd,
             const long long int* nrhs, const MKL_Complex16* ab, const long long int* ldab,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void zpbtrs_( const char* uplo, const long long int* n, const long long int* kd,
              const long long int* nrhs, const MKL_Complex16* ab,
              const long long int* ldab, MKL_Complex16* b, const long long int* ldb,
              long long int* info );

void ZPFTRF( const char* transr, const char* uplo, const long long int* n,
             MKL_Complex16* a, long long int* info );
void ZPFTRF_( const char* transr, const char* uplo, const long long int* n,
              MKL_Complex16* a, long long int* info );
void zpftrf( const char* transr, const char* uplo, const long long int* n,
             MKL_Complex16* a, long long int* info );
void zpftrf_( const char* transr, const char* uplo, const long long int* n,
              MKL_Complex16* a, long long int* info );

void ZPFTRI( const char* transr, const char* uplo, const long long int* n,
             MKL_Complex16* a, long long int* info );
void ZPFTRI_( const char* transr, const char* uplo, const long long int* n,
              MKL_Complex16* a, long long int* info );
void zpftri( const char* transr, const char* uplo, const long long int* n,
             MKL_Complex16* a, long long int* info );
void zpftri_( const char* transr, const char* uplo, const long long int* n,
              MKL_Complex16* a, long long int* info );

void ZPFTRS( const char* transr, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* a, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZPFTRS_( const char* transr, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void zpftrs( const char* transr, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* a, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zpftrs_( const char* transr, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZPOCON( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const double* anorm, double* rcond,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZPOCON_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const double* anorm, double* rcond,
              MKL_Complex16* work, double* rwork, long long int* info );
void zpocon( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const double* anorm, double* rcond,
             MKL_Complex16* work, double* rwork, long long int* info );
void zpocon_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const double* anorm, double* rcond,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZPOEQUB( const long long int* n, const MKL_Complex16* a, const long long int* lda,
              double* s, double* scond, double* amax, long long int* info );
void ZPOEQUB_( const long long int* n, const MKL_Complex16* a, const long long int* lda,
               double* s, double* scond, double* amax, long long int* info );
void zpoequb( const long long int* n, const MKL_Complex16* a, const long long int* lda,
              double* s, double* scond, double* amax, long long int* info );
void zpoequb_( const long long int* n, const MKL_Complex16* a, const long long int* lda,
               double* s, double* scond, double* amax, long long int* info );

void ZPOEQU( const long long int* n, const MKL_Complex16* a, const long long int* lda,
             double* s, double* scond, double* amax, long long int* info );
void ZPOEQU_( const long long int* n, const MKL_Complex16* a, const long long int* lda,
              double* s, double* scond, double* amax, long long int* info );
void zpoequ( const long long int* n, const MKL_Complex16* a, const long long int* lda,
             double* s, double* scond, double* amax, long long int* info );
void zpoequ_( const long long int* n, const MKL_Complex16* a, const long long int* lda,
              double* s, double* scond, double* amax, long long int* info );

void ZPORFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* af, const long long int* ldaf,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZPORFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zporfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* af, const long long int* ldaf,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zporfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZPORFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf, const double* s,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void ZPORFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
               const MKL_Complex16* af, const long long int* ldaf, const double* s,
               const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );
void zporfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf, const double* s,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void zporfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
               const MKL_Complex16* af, const long long int* ldaf, const double* s,
               const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
               const long long int* ldx, double* rcond, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );

void ZPOSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void ZPOSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zposv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void zposv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* info );

void ZPOSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* af, const long long int* ldaf, char* equed, double* s,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZPOSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, char* equed, double* s,
              MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zposvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* af, const long long int* ldaf, char* equed, double* s,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zposvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, char* equed, double* s,
              MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZPOSVXX( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, char* equed, double* s,
              MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void ZPOSVXX_( const char* fact, const char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* af, const long long int* ldaf, char* equed, double* s,
               MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
               const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );
void zposvxx( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, char* equed, double* s,
              MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
              const long long int* n_err_bnds, double* err_bnds_norm,
              double* err_bnds_comp, const long long int* nparams, double* params,
              MKL_Complex16* work, double* rwork, long long int* info );
void zposvxx_( const char* fact, const char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* af, const long long int* ldaf, char* equed, double* s,
               MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
               const long long int* ldx, double* rcond, double* rpvgrw, double* berr,
               const long long int* n_err_bnds, double* err_bnds_norm,
               double* err_bnds_comp, const long long int* nparams, double* params,
               MKL_Complex16* work, double* rwork, long long int* info );

void ZPOTF2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void ZPOTF2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );
void zpotf2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void zpotf2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );

void ZPOTRF( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void ZPOTRF_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );
void zpotrf( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void zpotrf_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );

void ZPOTRI( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void ZPOTRI_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );
void zpotri( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* info );
void zpotri_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* info );

void ZPOTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZPOTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void zpotrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zpotrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZPPCON( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             const double* anorm, double* rcond, MKL_Complex16* work,
             double* rwork, long long int* info );
void ZPPCON_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              const double* anorm, double* rcond, MKL_Complex16* work,
              double* rwork, long long int* info );
void zppcon( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             const double* anorm, double* rcond, MKL_Complex16* work,
             double* rwork, long long int* info );
void zppcon_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              const double* anorm, double* rcond, MKL_Complex16* work,
              double* rwork, long long int* info );

void ZPPEQU( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             double* s, double* scond, double* amax, long long int* info );
void ZPPEQU_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              double* s, double* scond, double* amax, long long int* info );
void zppequ( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             double* s, double* scond, double* amax, long long int* info );
void zppequ_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              double* s, double* scond, double* amax, long long int* info );

void ZPPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const MKL_Complex16* afp,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZPPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const MKL_Complex16* afp,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zpprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const MKL_Complex16* afp,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zpprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const MKL_Complex16* afp,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZPPSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* ap, MKL_Complex16* b, const long long int* ldb,
            long long int* info );
void ZPPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* ap, MKL_Complex16* b, const long long int* ldb,
             long long int* info );
void zppsv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* ap, MKL_Complex16* b, const long long int* ldb,
            long long int* info );
void zppsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* ap, MKL_Complex16* b, const long long int* ldb,
             long long int* info );

void ZPPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, MKL_Complex16* ap, MKL_Complex16* afp,
             char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ZPPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* ap, MKL_Complex16* afp,
              char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void zppsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, MKL_Complex16* ap, MKL_Complex16* afp,
             char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void zppsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* ap, MKL_Complex16* afp,
              char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZPPTRF( const char* uplo, const long long int* n, MKL_Complex16* ap,
             long long int* info );
void ZPPTRF_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              long long int* info );
void zpptrf( const char* uplo, const long long int* n, MKL_Complex16* ap,
             long long int* info );
void zpptrf_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              long long int* info );

void ZPPTRI( const char* uplo, const long long int* n, MKL_Complex16* ap,
             long long int* info );
void ZPPTRI_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              long long int* info );
void zpptri( const char* uplo, const long long int* n, MKL_Complex16* ap,
             long long int* info );
void zpptri_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              long long int* info );

void ZPPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, MKL_Complex16* b, const long long int* ldb,
             long long int* info );
void ZPPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, MKL_Complex16* b, const long long int* ldb,
              long long int* info );
void zpptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, MKL_Complex16* b, const long long int* ldb,
             long long int* info );
void zpptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, MKL_Complex16* b, const long long int* ldb,
              long long int* info );

void ZPSTF2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* piv, long long int* rank,
             const double* tol, double* work, long long int* info );
void ZPSTF2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const double* tol, double* work, long long int* info );
void zpstf2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* piv, long long int* rank,
             const double* tol, double* work, long long int* info );
void zpstf2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const double* tol, double* work, long long int* info );

void ZPSTRF( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* piv, long long int* rank,
             const double* tol, double* work, long long int* info );
void ZPSTRF_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const double* tol, double* work, long long int* info );
void zpstrf( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* piv, long long int* rank,
             const double* tol, double* work, long long int* info );
void zpstrf_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* piv, long long int* rank,
              const double* tol, double* work, long long int* info );

void ZPTCON( const long long int* n, const double* d, const MKL_Complex16* e,
             const double* anorm, double* rcond, double* rwork,
             long long int* info );
void ZPTCON_( const long long int* n, const double* d, const MKL_Complex16* e,
              const double* anorm, double* rcond, double* rwork,
              long long int* info );
void zptcon( const long long int* n, const double* d, const MKL_Complex16* e,
             const double* anorm, double* rcond, double* rwork,
             long long int* info );
void zptcon_( const long long int* n, const double* d, const MKL_Complex16* e,
              const double* anorm, double* rcond, double* rwork,
              long long int* info );

void ZPTEQR( const char* compz, const long long int* n, double* d, double* e,
             MKL_Complex16* z, const long long int* ldz, double* work,
             long long int* info );
void ZPTEQR_( const char* compz, const long long int* n, double* d, double* e,
              MKL_Complex16* z, const long long int* ldz, double* work,
              long long int* info );
void zpteqr( const char* compz, const long long int* n, double* d, double* e,
             MKL_Complex16* z, const long long int* ldz, double* work,
             long long int* info );
void zpteqr_( const char* compz, const long long int* n, double* d, double* e,
              MKL_Complex16* z, const long long int* ldz, double* work,
              long long int* info );

void ZPTRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* d, const MKL_Complex16* e, const double* df,
             const MKL_Complex16* ef, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             double* ferr, double* berr, MKL_Complex16* work, double* rwork,
             long long int* info );
void ZPTRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* d, const MKL_Complex16* e, const double* df,
              const MKL_Complex16* ef, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void zptrfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* d, const MKL_Complex16* e, const double* df,
             const MKL_Complex16* ef, const MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
             double* ferr, double* berr, MKL_Complex16* work, double* rwork,
             long long int* info );
void zptrfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* d, const MKL_Complex16* e, const double* df,
              const MKL_Complex16* ef, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZPTSV( const long long int* n, const long long int* nrhs, double* d, MKL_Complex16* e,
            MKL_Complex16* b, const long long int* ldb, long long int* info );
void ZPTSV_( const long long int* n, const long long int* nrhs, double* d,
             MKL_Complex16* e, MKL_Complex16* b, const long long int* ldb,
             long long int* info );
void zptsv( const long long int* n, const long long int* nrhs, double* d, MKL_Complex16* e,
            MKL_Complex16* b, const long long int* ldb, long long int* info );
void zptsv_( const long long int* n, const long long int* nrhs, double* d,
             MKL_Complex16* e, MKL_Complex16* b, const long long int* ldb,
             long long int* info );

void ZPTSVX( const char* fact, const long long int* n, const long long int* nrhs,
             const double* d, const MKL_Complex16* e, double* df,
             MKL_Complex16* ef, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ZPTSVX_( const char* fact, const long long int* n, const long long int* nrhs,
              const double* d, const MKL_Complex16* e, double* df,
              MKL_Complex16* ef, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void zptsvx( const char* fact, const long long int* n, const long long int* nrhs,
             const double* d, const MKL_Complex16* e, double* df,
             MKL_Complex16* ef, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void zptsvx_( const char* fact, const long long int* n, const long long int* nrhs,
              const double* d, const MKL_Complex16* e, double* df,
              MKL_Complex16* ef, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZPTTRF( const long long int* n, double* d, MKL_Complex16* e, long long int* info );
void ZPTTRF_( const long long int* n, double* d, MKL_Complex16* e, long long int* info );
void zpttrf( const long long int* n, double* d, MKL_Complex16* e, long long int* info );
void zpttrf_( const long long int* n, double* d, MKL_Complex16* e, long long int* info );

void ZPTTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* d, const MKL_Complex16* e, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZPTTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* d, const MKL_Complex16* e, MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void zpttrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const double* d, const MKL_Complex16* e, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zpttrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const double* d, const MKL_Complex16* e, MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZPTTS2( const long long int* iuplo, const long long int* n, const long long int* nrhs,
             const double* d, const MKL_Complex16* e, MKL_Complex16* b,
             const long long int* ldb );
void ZPTTS2_( const long long int* iuplo, const long long int* n, const long long int* nrhs,
              const double* d, const MKL_Complex16* e, MKL_Complex16* b,
              const long long int* ldb );
void zptts2( const long long int* iuplo, const long long int* n, const long long int* nrhs,
             const double* d, const MKL_Complex16* e, MKL_Complex16* b,
             const long long int* ldb );
void zptts2_( const long long int* iuplo, const long long int* n, const long long int* nrhs,
              const double* d, const MKL_Complex16* e, MKL_Complex16* b,
              const long long int* ldb );

void ZROT( const long long int* n, MKL_Complex16* cx, const long long int* incx,
           MKL_Complex16* cy, const long long int* incy, const double* c,
           const MKL_Complex16* s );
void ZROT_( const long long int* n, MKL_Complex16* cx, const long long int* incx,
            MKL_Complex16* cy, const long long int* incy, const double* c,
            const MKL_Complex16* s );
void zrot( const long long int* n, MKL_Complex16* cx, const long long int* incx,
           MKL_Complex16* cy, const long long int* incy, const double* c,
           const MKL_Complex16* s );
void zrot_( const long long int* n, MKL_Complex16* cx, const long long int* incx,
            MKL_Complex16* cy, const long long int* incy, const double* c,
            const MKL_Complex16* s );

void ZSPCON( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             const long long int* ipiv, const double* anorm, double* rcond,
             MKL_Complex16* work, long long int* info );
void ZSPCON_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              const long long int* ipiv, const double* anorm, double* rcond,
              MKL_Complex16* work, long long int* info );
void zspcon( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             const long long int* ipiv, const double* anorm, double* rcond,
             MKL_Complex16* work, long long int* info );
void zspcon_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              const long long int* ipiv, const double* anorm, double* rcond,
              MKL_Complex16* work, long long int* info );

void ZSPMV( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* ap, const MKL_Complex16* x,
            const long long int* incx, const MKL_Complex16* beta, MKL_Complex16* y,
            const long long int* incy );
void ZSPMV_( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
             const MKL_Complex16* ap, const MKL_Complex16* x,
             const long long int* incx, const MKL_Complex16* beta, MKL_Complex16* y,
             const long long int* incy );
void zspmv( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* ap, const MKL_Complex16* x,
            const long long int* incx, const MKL_Complex16* beta, MKL_Complex16* y,
            const long long int* incy );
void zspmv_( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
             const MKL_Complex16* ap, const MKL_Complex16* x,
             const long long int* incx, const MKL_Complex16* beta, MKL_Complex16* y,
             const long long int* incy );

void ZSPR( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
           const MKL_Complex16* x, const long long int* incx, MKL_Complex16* ap );
void ZSPR_( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* x, const long long int* incx, MKL_Complex16* ap );
void zspr( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
           const MKL_Complex16* x, const long long int* incx, MKL_Complex16* ap );
void zspr_( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* x, const long long int* incx, MKL_Complex16* ap );

void ZSPRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const MKL_Complex16* afp,
             const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZSPRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const MKL_Complex16* afp,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zsprfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const MKL_Complex16* afp,
             const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zsprfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const MKL_Complex16* afp,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZSPSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* ap, long long int* ipiv, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void ZSPSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* ap, long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zspsv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* ap, long long int* ipiv, MKL_Complex16* b,
            const long long int* ldb, long long int* info );
void zspsv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* ap, long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );

void ZSPSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* ap, MKL_Complex16* afp,
             long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ZSPSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* ap, MKL_Complex16* afp,
              long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void zspsvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* ap, MKL_Complex16* afp,
             long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* x, const long long int* ldx, double* rcond, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void zspsvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* ap, MKL_Complex16* afp,
              long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* ferr, double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZSPTRF( const char* uplo, const long long int* n, MKL_Complex16* ap,
             long long int* ipiv, long long int* info );
void ZSPTRF_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              long long int* ipiv, long long int* info );
void zsptrf( const char* uplo, const long long int* n, MKL_Complex16* ap,
             long long int* ipiv, long long int* info );
void zsptrf_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              long long int* ipiv, long long int* info );

void ZSPTRI( const char* uplo, const long long int* n, MKL_Complex16* ap,
             const long long int* ipiv, MKL_Complex16* work, long long int* info );
void ZSPTRI_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              const long long int* ipiv, MKL_Complex16* work, long long int* info );
void zsptri( const char* uplo, const long long int* n, MKL_Complex16* ap,
             const long long int* ipiv, MKL_Complex16* work, long long int* info );
void zsptri_( const char* uplo, const long long int* n, MKL_Complex16* ap,
              const long long int* ipiv, MKL_Complex16* work, long long int* info );

void ZSPTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZSPTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const long long int* ipiv, MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void zsptrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* ap, const long long int* ipiv, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zsptrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* ap, const long long int* ipiv, MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZSTEDC( const char* compz, const long long int* n, double* d, double* e,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             const long long int* lwork, double* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void ZSTEDC_( const char* compz, const long long int* n, double* d, double* e,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              const long long int* lwork, double* rwork, const long long int* lrwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void zstedc( const char* compz, const long long int* n, double* d, double* e,
             MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
             const long long int* lwork, double* rwork, const long long int* lrwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void zstedc_( const char* compz, const long long int* n, double* d, double* e,
              MKL_Complex16* z, const long long int* ldz, MKL_Complex16* work,
              const long long int* lwork, double* rwork, const long long int* lrwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void ZSTEGR( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, long long int* isuppz,
             double* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void ZSTEGR_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, long long int* isuppz,
              double* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );
void zstegr( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, const double* abstol, long long int* m, double* w,
             MKL_Complex16* z, const long long int* ldz, long long int* isuppz,
             double* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void zstegr_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, const double* abstol, long long int* m, double* w,
              MKL_Complex16* z, const long long int* ldz, long long int* isuppz,
              double* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );

void ZSTEIN( const long long int* n, const double* d, const double* e,
             const long long int* m, const double* w, const long long int* iblock,
             const long long int* isplit, MKL_Complex16* z, const long long int* ldz,
             double* work, long long int* iwork, long long int* ifail, long long int* info );
void ZSTEIN_( const long long int* n, const double* d, const double* e,
              const long long int* m, const double* w, const long long int* iblock,
              const long long int* isplit, MKL_Complex16* z, const long long int* ldz,
              double* work, long long int* iwork, long long int* ifail, long long int* info );
void zstein( const long long int* n, const double* d, const double* e,
             const long long int* m, const double* w, const long long int* iblock,
             const long long int* isplit, MKL_Complex16* z, const long long int* ldz,
             double* work, long long int* iwork, long long int* ifail, long long int* info );
void zstein_( const long long int* n, const double* d, const double* e,
              const long long int* m, const double* w, const long long int* iblock,
              const long long int* isplit, MKL_Complex16* z, const long long int* ldz,
              double* work, long long int* iwork, long long int* ifail, long long int* info );

void ZSTEMR( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, long long int* m, double* w, MKL_Complex16* z,
             const long long int* ldz, const long long int* nzc, long long int* isuppz,
             long long int* tryrac, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void ZSTEMR_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, long long int* m, double* w, MKL_Complex16* z,
              const long long int* ldz, const long long int* nzc, long long int* isuppz,
              long long int* tryrac, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );
void zstemr( const char* jobz, const char* range, const long long int* n, double* d,
             double* e, const double* vl, const double* vu, const long long int* il,
             const long long int* iu, long long int* m, double* w, MKL_Complex16* z,
             const long long int* ldz, const long long int* nzc, long long int* isuppz,
             long long int* tryrac, double* work, const long long int* lwork,
             long long int* iwork, const long long int* liwork, long long int* info );
void zstemr_( const char* jobz, const char* range, const long long int* n, double* d,
              double* e, const double* vl, const double* vu, const long long int* il,
              const long long int* iu, long long int* m, double* w, MKL_Complex16* z,
              const long long int* ldz, const long long int* nzc, long long int* isuppz,
              long long int* tryrac, double* work, const long long int* lwork,
              long long int* iwork, const long long int* liwork, long long int* info );

void ZSTEQR( const char* compz, const long long int* n, double* d, double* e,
             MKL_Complex16* z, const long long int* ldz, double* work,
             long long int* info );
void ZSTEQR_( const char* compz, const long long int* n, double* d, double* e,
              MKL_Complex16* z, const long long int* ldz, double* work,
              long long int* info );
void zsteqr( const char* compz, const long long int* n, double* d, double* e,
             MKL_Complex16* z, const long long int* ldz, double* work,
             long long int* info );
void zsteqr_( const char* compz, const long long int* n, double* d, double* e,
              MKL_Complex16* z, const long long int* ldz, double* work,
              long long int* info );

void ZSYCON( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const long long int* ipiv, const double* anorm,
             double* rcond, MKL_Complex16* work, long long int* info );
void ZSYCON_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, const double* anorm,
              double* rcond, MKL_Complex16* work, long long int* info );
void zsycon( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const long long int* ipiv, const double* anorm,
             double* rcond, MKL_Complex16* work, long long int* info );
void zsycon_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, const double* anorm,
              double* rcond, MKL_Complex16* work, long long int* info );

void ZSYEQUB( char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, double* s, double* scond, double* amax,
              MKL_Complex16* work, long long int* info );
void ZSYEQUB_( char* uplo, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* s, double* scond, double* amax,
               MKL_Complex16* work, long long int* info );
void zsyequb( char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, double* s, double* scond, double* amax,
              MKL_Complex16* work, long long int* info );
void zsyequb_( char* uplo, const long long int* n, const MKL_Complex16* a,
               const long long int* lda, double* s, double* scond, double* amax,
               MKL_Complex16* work, long long int* info );

void ZSYMV( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* a, const long long int* lda, const MKL_Complex16* x,
            const long long int* incx, const MKL_Complex16* beta, MKL_Complex16* y,
            const long long int* incy );
void ZSYMV_( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* x, const long long int* incx,
             const MKL_Complex16* beta, MKL_Complex16* y,
             const long long int* incy );
void zsymv( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* a, const long long int* lda, const MKL_Complex16* x,
            const long long int* incx, const MKL_Complex16* beta, MKL_Complex16* y,
            const long long int* incy );
void zsymv_( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* x, const long long int* incx,
             const MKL_Complex16* beta, MKL_Complex16* y,
             const long long int* incy );

void ZSYR( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
           const MKL_Complex16* x, const long long int* incx, MKL_Complex16* a,
           const long long int* lda );
void ZSYR_( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* x, const long long int* incx, MKL_Complex16* a,
            const long long int* lda );
void zsyr( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
           const MKL_Complex16* x, const long long int* incx, MKL_Complex16* a,
           const long long int* lda );
void zsyr_( const char* uplo, const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* x, const long long int* incx, MKL_Complex16* a,
            const long long int* lda );

void ZSYRFS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* af, const long long int* ldaf, const long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZSYRFS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );
void zsyrfs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* af, const long long int* ldaf, const long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* ferr, double* berr,
             MKL_Complex16* work, double* rwork, long long int* info );
void zsyrfs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* ferr, double* berr,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZSYRFSX( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const double* s, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void ZSYRFSX_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
               const MKL_Complex16* af, const long long int* ldaf,
               const long long int* ipiv, const double* s, const MKL_Complex16* b,
               const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
               double* rcond, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );
void zsyrfsx( const char* uplo, const char* equed, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* af, const long long int* ldaf,
              const long long int* ipiv, const double* s, const MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
              double* rcond, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void zsyrfsx_( const char* uplo, const char* equed, const long long int* n,
               const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
               const MKL_Complex16* af, const long long int* ldaf,
               const long long int* ipiv, const double* s, const MKL_Complex16* b,
               const long long int* ldb, MKL_Complex16* x, const long long int* ldx,
               double* rcond, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );

void ZSYSV( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* a, const long long int* lda, long long int* ipiv,
            MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
            const long long int* lwork, long long int* info );
void ZSYSV_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zsysv( const char* uplo, const long long int* n, const long long int* nrhs,
            MKL_Complex16* a, const long long int* lda, long long int* ipiv,
            MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
            const long long int* lwork, long long int* info );
void zsysv_( const char* uplo, const long long int* n, const long long int* nrhs,
             MKL_Complex16* a, const long long int* lda, long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, MKL_Complex16* work,
             const long long int* lwork, long long int* info );

void ZSYSVX( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void ZSYSVX_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* info );
void zsysvx( const char* fact, const char* uplo, const long long int* n,
             const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
             const long long int* ldx, double* rcond, double* ferr, double* berr,
             MKL_Complex16* work, const long long int* lwork, double* rwork,
             long long int* info );
void zsysvx_( const char* fact, const char* uplo, const long long int* n,
              const long long int* nrhs, const MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* x,
              const long long int* ldx, double* rcond, double* ferr, double* berr,
              MKL_Complex16* work, const long long int* lwork, double* rwork,
              long long int* info );

void ZSYSVXX( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* rpvgrw, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void ZSYSVXX_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
               char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* x, const long long int* ldx, double* rcond,
               double* rpvgrw, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );
void zsysvxx( const char* fact, char* uplo, const long long int* n,
              const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
              char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* x, const long long int* ldx, double* rcond,
              double* rpvgrw, double* berr, const long long int* n_err_bnds,
              double* err_bnds_norm, double* err_bnds_comp,
              const long long int* nparams, double* params, MKL_Complex16* work,
              double* rwork, long long int* info );
void zsysvxx_( const char* fact, char* uplo, const long long int* n,
               const long long int* nrhs, MKL_Complex16* a, const long long int* lda,
               MKL_Complex16* af, const long long int* ldaf, long long int* ipiv,
               char* equed, double* s, MKL_Complex16* b, const long long int* ldb,
               MKL_Complex16* x, const long long int* ldx, double* rcond,
               double* rpvgrw, double* berr, const long long int* n_err_bnds,
               double* err_bnds_norm, double* err_bnds_comp,
               const long long int* nparams, double* params, MKL_Complex16* work,
               double* rwork, long long int* info );

void ZSYTF2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void ZSYTF2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, long long int* info );
void zsytf2( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, long long int* info );
void zsytf2_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, long long int* info );

void ZSYTRF( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZSYTRF_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zsytrf( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, long long int* ipiv, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zsytrf_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, long long int* ipiv, MKL_Complex16* work,
              const long long int* lwork, long long int* info );

void ZSYTRI( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
             long long int* info );
void ZSYTRI_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              long long int* info );
void zsytri( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
             long long int* info );
void zsytri_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              long long int* info );

void ZSYTRS( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void ZSYTRS_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex16* b, const long long int* ldb, long long int* info );
void zsytrs( const char* uplo, const long long int* n, const long long int* nrhs,
             const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void zsytrs_( const char* uplo, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* a, const long long int* lda, const long long int* ipiv,
              MKL_Complex16* b, const long long int* ldb, long long int* info );

void ZTBCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const long long int* kd, const MKL_Complex16* ab,
             const long long int* ldab, double* rcond, MKL_Complex16* work,
             double* rwork, long long int* info );
void ZTBCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* kd, const MKL_Complex16* ab,
              const long long int* ldab, double* rcond, MKL_Complex16* work,
              double* rwork, long long int* info );
void ztbcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const long long int* kd, const MKL_Complex16* ab,
             const long long int* ldab, double* rcond, MKL_Complex16* work,
             double* rwork, long long int* info );
void ztbcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const long long int* kd, const MKL_Complex16* ab,
              const long long int* ldab, double* rcond, MKL_Complex16* work,
              double* rwork, long long int* info );

void ZTBRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const MKL_Complex16* ab, const long long int* ldab,
             const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* x, const long long int* ldx, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ZTBRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const MKL_Complex16* ab, const long long int* ldab,
              const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* x, const long long int* ldx, double* ferr,
              double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void ztbrfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const MKL_Complex16* ab, const long long int* ldab,
             const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* x, const long long int* ldx, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ztbrfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const MKL_Complex16* ab, const long long int* ldab,
              const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* x, const long long int* ldx, double* ferr,
              double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZTBTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZTBTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void ztbtrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* kd, const long long int* nrhs,
             const MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ztbtrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* kd, const long long int* nrhs,
              const MKL_Complex16* ab, const long long int* ldab, MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZTFSM( const char* transr, const char* side, const char* uplo,
            const char* trans, const char* diag, const long long int* m,
            const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* a, MKL_Complex16* b, const long long int* ldb );
void ZTFSM_( const char* transr, const char* side, const char* uplo,
             const char* trans, const char* diag, const long long int* m,
             const long long int* n, const MKL_Complex16* alpha,
             const MKL_Complex16* a, MKL_Complex16* b, const long long int* ldb );
void ztfsm( const char* transr, const char* side, const char* uplo,
            const char* trans, const char* diag, const long long int* m,
            const long long int* n, const MKL_Complex16* alpha,
            const MKL_Complex16* a, MKL_Complex16* b, const long long int* ldb );
void ztfsm_( const char* transr, const char* side, const char* uplo,
             const char* trans, const char* diag, const long long int* m,
             const long long int* n, const MKL_Complex16* alpha,
             const MKL_Complex16* a, MKL_Complex16* b, const long long int* ldb );

void ZTFTRI( const char* transr, const char* uplo, const char* diag,
             const long long int* n, MKL_Complex16* a, long long int* info );
void ZTFTRI_( const char* transr, const char* uplo, const char* diag,
              const long long int* n, MKL_Complex16* a, long long int* info );
void ztftri( const char* transr, const char* uplo, const char* diag,
             const long long int* n, MKL_Complex16* a, long long int* info );
void ztftri_( const char* transr, const char* uplo, const char* diag,
              const long long int* n, MKL_Complex16* a, long long int* info );

void ZTFTTP( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex16* arf, MKL_Complex16* ap, long long int* info );
void ZTFTTP_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex16* arf, MKL_Complex16* ap, long long int* info );
void ztfttp( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex16* arf, MKL_Complex16* ap, long long int* info );
void ztfttp_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex16* arf, MKL_Complex16* ap, long long int* info );

void ZTFTTR( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex16* arf, MKL_Complex16* a, const long long int* lda,
             long long int* info );
void ZTFTTR_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex16* arf, MKL_Complex16* a, const long long int* lda,
              long long int* info );
void ztfttr( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex16* arf, MKL_Complex16* a, const long long int* lda,
             long long int* info );
void ztfttr_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex16* arf, MKL_Complex16* a, const long long int* lda,
              long long int* info );

void ZTGEVC( const char* side, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex16* s, const long long int* lds,
             const MKL_Complex16* p, const long long int* ldp, MKL_Complex16* vl,
             const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, MKL_Complex16* work, double* rwork,
             long long int* info );
void ZTGEVC_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex16* s, const long long int* lds,
              const MKL_Complex16* p, const long long int* ldp, MKL_Complex16* vl,
              const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, MKL_Complex16* work,
              double* rwork, long long int* info );
void ztgevc( const char* side, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex16* s, const long long int* lds,
             const MKL_Complex16* p, const long long int* ldp, MKL_Complex16* vl,
             const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
             const long long int* mm, long long int* m, MKL_Complex16* work, double* rwork,
             long long int* info );
void ztgevc_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex16* s, const long long int* lds,
              const MKL_Complex16* p, const long long int* ldp, MKL_Complex16* vl,
              const long long int* ldvl, MKL_Complex16* vr, const long long int* ldvr,
              const long long int* mm, long long int* m, MKL_Complex16* work,
              double* rwork, long long int* info );

void ZTGEX2( const long long int* wantq, const long long int* wantz, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* z, const long long int* ldz, const long long int* j1,
             long long int* info );
void ZTGEX2_( const long long int* wantq, const long long int* wantz, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* q, const long long int* ldq,
              MKL_Complex16* z, const long long int* ldz, const long long int* j1,
              long long int* info );
void ztgex2( const long long int* wantq, const long long int* wantz, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* z, const long long int* ldz, const long long int* j1,
             long long int* info );
void ztgex2_( const long long int* wantq, const long long int* wantz, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* q, const long long int* ldq,
              MKL_Complex16* z, const long long int* ldz, const long long int* j1,
              long long int* info );

void ZTGEXC( const long long int* wantq, const long long int* wantz, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* z, const long long int* ldz, const long long int* ifst,
             long long int* ilst, long long int* info );
void ZTGEXC_( const long long int* wantq, const long long int* wantz, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* q, const long long int* ldq,
              MKL_Complex16* z, const long long int* ldz, const long long int* ifst,
              long long int* ilst, long long int* info );
void ztgexc( const long long int* wantq, const long long int* wantz, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* z, const long long int* ldz, const long long int* ifst,
             long long int* ilst, long long int* info );
void ztgexc_( const long long int* wantq, const long long int* wantz, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* q, const long long int* ldq,
              MKL_Complex16* z, const long long int* ldz, const long long int* ifst,
              long long int* ilst, long long int* info );

void ZTGSEN( const long long int* ijob, const long long int* wantq, const long long int* wantz,
             const long long int* select, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* q,
             const long long int* ldq, MKL_Complex16* z, const long long int* ldz,
             long long int* m, double* pl, double* pr, double* dif,
             MKL_Complex16* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void ZTGSEN_( const long long int* ijob, const long long int* wantq, const long long int* wantz,
              const long long int* select, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* q,
              const long long int* ldq, MKL_Complex16* z, const long long int* ldz,
              long long int* m, double* pl, double* pr, double* dif,
              MKL_Complex16* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );
void ztgsen( const long long int* ijob, const long long int* wantq, const long long int* wantz,
             const long long int* select, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* q,
             const long long int* ldq, MKL_Complex16* z, const long long int* ldz,
             long long int* m, double* pl, double* pr, double* dif,
             MKL_Complex16* work, const long long int* lwork, long long int* iwork,
             const long long int* liwork, long long int* info );
void ztgsen_( const long long int* ijob, const long long int* wantq, const long long int* wantz,
              const long long int* select, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* alpha, MKL_Complex16* beta, MKL_Complex16* q,
              const long long int* ldq, MKL_Complex16* z, const long long int* ldz,
              long long int* m, double* pl, double* pr, double* dif,
              MKL_Complex16* work, const long long int* lwork, long long int* iwork,
              const long long int* liwork, long long int* info );

void ZTGSJA( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             const long long int* k, const long long int* l, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             const double* tola, const double* tolb, double* alpha,
             double* beta, MKL_Complex16* u, const long long int* ldu,
             MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
             const long long int* ldq, MKL_Complex16* work, long long int* ncycle,
             long long int* info );
void ZTGSJA_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              const long long int* k, const long long int* l, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              const double* tola, const double* tolb, double* alpha,
              double* beta, MKL_Complex16* u, const long long int* ldu,
              MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
              const long long int* ldq, MKL_Complex16* work, long long int* ncycle,
              long long int* info );
void ztgsja( const char* jobu, const char* jobv, const char* jobq,
             const long long int* m, const long long int* p, const long long int* n,
             const long long int* k, const long long int* l, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             const double* tola, const double* tolb, double* alpha,
             double* beta, MKL_Complex16* u, const long long int* ldu,
             MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
             const long long int* ldq, MKL_Complex16* work, long long int* ncycle,
             long long int* info );
void ztgsja_( const char* jobu, const char* jobv, const char* jobq,
              const long long int* m, const long long int* p, const long long int* n,
              const long long int* k, const long long int* l, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              const double* tola, const double* tolb, double* alpha,
              double* beta, MKL_Complex16* u, const long long int* ldu,
              MKL_Complex16* v, const long long int* ldv, MKL_Complex16* q,
              const long long int* ldq, MKL_Complex16* work, long long int* ncycle,
              long long int* info );

void ZTGSNA( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* vl, const long long int* ldvl,
             const MKL_Complex16* vr, const long long int* ldvr, double* s,
             double* dif, const long long int* mm, long long int* m, MKL_Complex16* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void ZTGSNA_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* vl, const long long int* ldvl,
              const MKL_Complex16* vr, const long long int* ldvr, double* s,
              double* dif, const long long int* mm, long long int* m, MKL_Complex16* work,
              const long long int* lwork, long long int* iwork, long long int* info );
void ztgsna( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* vl, const long long int* ldvl,
             const MKL_Complex16* vr, const long long int* ldvr, double* s,
             double* dif, const long long int* mm, long long int* m, MKL_Complex16* work,
             const long long int* lwork, long long int* iwork, long long int* info );
void ztgsna_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* vl, const long long int* ldvl,
              const MKL_Complex16* vr, const long long int* ldvr, double* s,
              double* dif, const long long int* mm, long long int* m, MKL_Complex16* work,
              const long long int* lwork, long long int* iwork, long long int* info );

void ZTGSY2( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* c,
             const long long int* ldc, const MKL_Complex16* d, const long long int* ldd,
             const MKL_Complex16* e, const long long int* lde, MKL_Complex16* f,
             const long long int* ldf, double* scale, double* rdsum, double* rdscal,
             long long int* info );
void ZTGSY2_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* c,
              const long long int* ldc, const MKL_Complex16* d, const long long int* ldd,
              const MKL_Complex16* e, const long long int* lde, MKL_Complex16* f,
              const long long int* ldf, double* scale, double* rdsum, double* rdscal,
              long long int* info );
void ztgsy2( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* c,
             const long long int* ldc, const MKL_Complex16* d, const long long int* ldd,
             const MKL_Complex16* e, const long long int* lde, MKL_Complex16* f,
             const long long int* ldf, double* scale, double* rdsum, double* rdscal,
             long long int* info );
void ztgsy2_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* c,
              const long long int* ldc, const MKL_Complex16* d, const long long int* ldd,
              const MKL_Complex16* e, const long long int* lde, MKL_Complex16* f,
              const long long int* ldf, double* scale, double* rdsum, double* rdscal,
              long long int* info );

void ZTGSYL( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* c,
             const long long int* ldc, const MKL_Complex16* d, const long long int* ldd,
             const MKL_Complex16* e, const long long int* lde, MKL_Complex16* f,
             const long long int* ldf, double* scale, double* dif,
             MKL_Complex16* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void ZTGSYL_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* c,
              const long long int* ldc, const MKL_Complex16* d, const long long int* ldd,
              const MKL_Complex16* e, const long long int* lde, MKL_Complex16* f,
              const long long int* ldf, double* scale, double* dif,
              MKL_Complex16* work, const long long int* lwork, long long int* iwork,
              long long int* info );
void ztgsyl( const char* trans, const long long int* ijob, const long long int* m,
             const long long int* n, const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* c,
             const long long int* ldc, const MKL_Complex16* d, const long long int* ldd,
             const MKL_Complex16* e, const long long int* lde, MKL_Complex16* f,
             const long long int* ldf, double* scale, double* dif,
             MKL_Complex16* work, const long long int* lwork, long long int* iwork,
             long long int* info );
void ztgsyl_( const char* trans, const long long int* ijob, const long long int* m,
              const long long int* n, const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* b, const long long int* ldb, MKL_Complex16* c,
              const long long int* ldc, const MKL_Complex16* d, const long long int* ldd,
              const MKL_Complex16* e, const long long int* lde, MKL_Complex16* f,
              const long long int* ldf, double* scale, double* dif,
              MKL_Complex16* work, const long long int* lwork, long long int* iwork,
              long long int* info );

void ZTPCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const MKL_Complex16* ap, double* rcond,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZTPCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex16* ap, double* rcond,
              MKL_Complex16* work, double* rwork, long long int* info );
void ztpcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const MKL_Complex16* ap, double* rcond,
             MKL_Complex16* work, double* rwork, long long int* info );
void ztpcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex16* ap, double* rcond,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZTPRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex16* ap,
             const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* x, const long long int* ldx, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ZTPRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex16* ap,
              const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* x, const long long int* ldx, double* ferr,
              double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void ztprfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex16* ap,
             const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* x, const long long int* ldx, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ztprfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex16* ap,
              const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* x, const long long int* ldx, double* ferr,
              double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZTPTRI( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex16* ap, long long int* info );
void ZTPTRI_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex16* ap, long long int* info );
void ztptri( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex16* ap, long long int* info );
void ztptri_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex16* ap, long long int* info );

void ZTPTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex16* ap,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void ZTPTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex16* ap,
              MKL_Complex16* b, const long long int* ldb, long long int* info );
void ztptrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex16* ap,
             MKL_Complex16* b, const long long int* ldb, long long int* info );
void ztptrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex16* ap,
              MKL_Complex16* b, const long long int* ldb, long long int* info );

void ZTPTTF( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex16* ap, MKL_Complex16* arf, long long int* info );
void ZTPTTF_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex16* ap, MKL_Complex16* arf, long long int* info );
void ztpttf( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex16* ap, MKL_Complex16* arf, long long int* info );
void ztpttf_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex16* ap, MKL_Complex16* arf, long long int* info );

void ZTPTTR( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             MKL_Complex16* a, const long long int* lda, long long int* info );
void ZTPTTR_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              MKL_Complex16* a, const long long int* lda, long long int* info );
void ztpttr( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             MKL_Complex16* a, const long long int* lda, long long int* info );
void ztpttr_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              MKL_Complex16* a, const long long int* lda, long long int* info );

void ZTRCON( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const MKL_Complex16* a, const long long int* lda,
             double* rcond, MKL_Complex16* work, double* rwork,
             long long int* info );
void ZTRCON_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex16* a, const long long int* lda,
              double* rcond, MKL_Complex16* work, double* rwork,
              long long int* info );
void ztrcon( const char* norm, const char* uplo, const char* diag,
             const long long int* n, const MKL_Complex16* a, const long long int* lda,
             double* rcond, MKL_Complex16* work, double* rwork,
             long long int* info );
void ztrcon_( const char* norm, const char* uplo, const char* diag,
              const long long int* n, const MKL_Complex16* a, const long long int* lda,
              double* rcond, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZTREVC( const char* side, const char* howmny, const long long int* select,
             const long long int* n, MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
             const long long int* ldvr, const long long int* mm, long long int* m,
             MKL_Complex16* work, double* rwork, long long int* info );
void ZTREVC_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
              const long long int* ldvr, const long long int* mm, long long int* m,
              MKL_Complex16* work, double* rwork, long long int* info );
void ztrevc( const char* side, const char* howmny, const long long int* select,
             const long long int* n, MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
             const long long int* ldvr, const long long int* mm, long long int* m,
             MKL_Complex16* work, double* rwork, long long int* info );
void ztrevc_( const char* side, const char* howmny, const long long int* select,
              const long long int* n, MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* vl, const long long int* ldvl, MKL_Complex16* vr,
              const long long int* ldvr, const long long int* mm, long long int* m,
              MKL_Complex16* work, double* rwork, long long int* info );

void ZTREXC( const char* compq, const long long int* n, MKL_Complex16* t,
             const long long int* ldt, MKL_Complex16* q, const long long int* ldq,
             const long long int* ifst, const long long int* ilst, long long int* info );
void ZTREXC_( const char* compq, const long long int* n, MKL_Complex16* t,
              const long long int* ldt, MKL_Complex16* q, const long long int* ldq,
              const long long int* ifst, const long long int* ilst, long long int* info );
void ztrexc( const char* compq, const long long int* n, MKL_Complex16* t,
             const long long int* ldt, MKL_Complex16* q, const long long int* ldq,
             const long long int* ifst, const long long int* ilst, long long int* info );
void ztrexc_( const char* compq, const long long int* n, MKL_Complex16* t,
              const long long int* ldt, MKL_Complex16* q, const long long int* ldq,
              const long long int* ifst, const long long int* ilst, long long int* info );

void ZTRRFS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* x, const long long int* ldx, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ZTRRFS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* x, const long long int* ldx, double* ferr,
              double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );
void ztrrfs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
             const MKL_Complex16* x, const long long int* ldx, double* ferr,
             double* berr, MKL_Complex16* work, double* rwork, long long int* info );
void ztrrfs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
              const MKL_Complex16* x, const long long int* ldx, double* ferr,
              double* berr, MKL_Complex16* work, double* rwork,
              long long int* info );

void ZTRSEN( const char* job, const char* compq, const long long int* select,
             const long long int* n, MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* w,
             long long int* m, double* s, double* sep, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZTRSEN_( const char* job, const char* compq, const long long int* select,
              const long long int* n, MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* w,
              long long int* m, double* s, double* sep, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void ztrsen( const char* job, const char* compq, const long long int* select,
             const long long int* n, MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* q, const long long int* ldq, MKL_Complex16* w,
             long long int* m, double* s, double* sep, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ztrsen_( const char* job, const char* compq, const long long int* select,
              const long long int* n, MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* q, const long long int* ldq, MKL_Complex16* w,
              long long int* m, double* s, double* sep, MKL_Complex16* work,
              const long long int* lwork, long long int* info );

void ZTRSNA( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex16* t, const long long int* ldt,
             const MKL_Complex16* vl, const long long int* ldvl,
             const MKL_Complex16* vr, const long long int* ldvr, double* s,
             double* sep, const long long int* mm, long long int* m, MKL_Complex16* work,
             const long long int* ldwork, double* rwork, long long int* info );
void ZTRSNA_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex16* t, const long long int* ldt,
              const MKL_Complex16* vl, const long long int* ldvl,
              const MKL_Complex16* vr, const long long int* ldvr, double* s,
              double* sep, const long long int* mm, long long int* m, MKL_Complex16* work,
              const long long int* ldwork, double* rwork, long long int* info );
void ztrsna( const char* job, const char* howmny, const long long int* select,
             const long long int* n, const MKL_Complex16* t, const long long int* ldt,
             const MKL_Complex16* vl, const long long int* ldvl,
             const MKL_Complex16* vr, const long long int* ldvr, double* s,
             double* sep, const long long int* mm, long long int* m, MKL_Complex16* work,
             const long long int* ldwork, double* rwork, long long int* info );
void ztrsna_( const char* job, const char* howmny, const long long int* select,
              const long long int* n, const MKL_Complex16* t, const long long int* ldt,
              const MKL_Complex16* vl, const long long int* ldvl,
              const MKL_Complex16* vr, const long long int* ldvr, double* s,
              double* sep, const long long int* mm, long long int* m, MKL_Complex16* work,
              const long long int* ldwork, double* rwork, long long int* info );

void ZTRSYL( const char* trana, const char* tranb, const long long int* isgn,
             const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* c, const long long int* ldc, double* scale,
             long long int* info );
void ZTRSYL_( const char* trana, const char* tranb, const long long int* isgn,
              const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* c, const long long int* ldc, double* scale,
              long long int* info );
void ztrsyl( const char* trana, const char* tranb, const long long int* isgn,
             const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
             MKL_Complex16* c, const long long int* ldc, double* scale,
             long long int* info );
void ztrsyl_( const char* trana, const char* tranb, const long long int* isgn,
              const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* b, const long long int* ldb,
              MKL_Complex16* c, const long long int* ldc, double* scale,
              long long int* info );

void ZTRTI2( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex16* a, const long long int* lda, long long int* info );
void ZTRTI2_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex16* a, const long long int* lda, long long int* info );
void ztrti2( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex16* a, const long long int* lda, long long int* info );
void ztrti2_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex16* a, const long long int* lda, long long int* info );

void ZTRTRI( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex16* a, const long long int* lda, long long int* info );
void ZTRTRI_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex16* a, const long long int* lda, long long int* info );
void ztrtri( const char* uplo, const char* diag, const long long int* n,
             MKL_Complex16* a, const long long int* lda, long long int* info );
void ztrtri_( const char* uplo, const char* diag, const long long int* n,
              MKL_Complex16* a, const long long int* lda, long long int* info );

void ZTRTRS( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             long long int* info );
void ZTRTRS_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              long long int* info );
void ztrtrs( const char* uplo, const char* trans, const char* diag,
             const long long int* n, const long long int* nrhs, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, const long long int* ldb,
             long long int* info );
void ztrtrs_( const char* uplo, const char* trans, const char* diag,
              const long long int* n, const long long int* nrhs, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, const long long int* ldb,
              long long int* info );

void ZTRTTF( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex16* a, const long long int* lda, MKL_Complex16* arf,
             long long int* info );
void ZTRTTF_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex16* a, const long long int* lda, MKL_Complex16* arf,
              long long int* info );
void ztrttf( const char* transr, const char* uplo, const long long int* n,
             const MKL_Complex16* a, const long long int* lda, MKL_Complex16* arf,
             long long int* info );
void ztrttf_( const char* transr, const char* uplo, const long long int* n,
              const MKL_Complex16* a, const long long int* lda, MKL_Complex16* arf,
              long long int* info );

void ZTRTTP( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* ap, long long int* info );
void ZTRTTP_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* ap, long long int* info );
void ztrttp( const char* uplo, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* ap, long long int* info );
void ztrttp_( const char* uplo, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* ap, long long int* info );

void ZTZRQF( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, long long int* info );
void ZTZRQF_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, long long int* info );
void ztzrqf( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, long long int* info );
void ztzrqf_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, long long int* info );

void ZTZRZF( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZTZRZF_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void ztzrzf( const long long int* m, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ztzrzf_( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );

void ZUNG2L( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void ZUNG2L_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );
void zung2l( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void zung2l_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );

void ZUNG2R( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void ZUNG2R_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );
void zung2r( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void zung2r_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );

void ZUNGBR( const char* vect, const long long int* m, const long long int* n,
             const long long int* k, MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZUNGBR_( const char* vect, const long long int* m, const long long int* n,
              const long long int* k, MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zungbr( const char* vect, const long long int* m, const long long int* n,
             const long long int* k, MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zungbr_( const char* vect, const long long int* m, const long long int* n,
              const long long int* k, MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* work,
              const long long int* lwork, long long int* info );

void ZUNGHR( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNGHR_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunghr( const long long int* n, const long long int* ilo, const long long int* ihi,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunghr_( const long long int* n, const long long int* ilo, const long long int* ihi,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNGL2( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void ZUNGL2_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );
void zungl2( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void zungl2_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );

void ZUNGLQ( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNGLQ_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunglq( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunglq_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNGQL( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNGQL_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zungql( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zungql_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNGQR( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNGQR_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zungqr( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zungqr_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNGR2( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void ZUNGR2_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );
void zungr2( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, long long int* info );
void zungr2_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, long long int* info );

void ZUNGRQ( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNGRQ_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zungrq( const long long int* m, const long long int* n, const long long int* k,
             MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zungrq_( const long long int* m, const long long int* n, const long long int* k,
              MKL_Complex16* a, const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNGTR( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void ZUNGTR_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zungtr( const char* uplo, const long long int* n, MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* work,
             const long long int* lwork, long long int* info );
void zungtr_( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNM2L( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, long long int* info );
void ZUNM2L_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, long long int* info );
void zunm2l( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, long long int* info );
void zunm2l_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, long long int* info );

void ZUNM2R( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, long long int* info );
void ZUNM2R_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, long long int* info );
void zunm2r( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, long long int* info );
void zunm2r_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, long long int* info );

void ZUNMBR( const char* vect, const char* side, const char* trans,
             const long long int* m, const long long int* n, const long long int* k,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNMBR_( const char* vect, const char* side, const char* trans,
              const long long int* m, const long long int* n, const long long int* k,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunmbr( const char* vect, const char* side, const char* trans,
             const long long int* m, const long long int* n, const long long int* k,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunmbr_( const char* vect, const char* side, const char* trans,
              const long long int* m, const long long int* n, const long long int* k,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNMHR( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNMHR_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunmhr( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* ilo, const long long int* ihi,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunmhr_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* ilo, const long long int* ihi,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNML2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, long long int* info );
void ZUNML2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, long long int* info );
void zunml2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, long long int* info );
void zunml2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, long long int* info );

void ZUNMLQ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZUNMLQ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zunmlq( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zunmlq_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZUNMQL( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZUNMQL_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zunmql( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zunmql_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZUNMQR( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZUNMQR_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zunmqr( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zunmqr_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZUNMR2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, long long int* info );
void ZUNMR2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, long long int* info );
void zunmr2( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, long long int* info );
void zunmr2_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, long long int* info );

void ZUNMR3( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, long long int* info );
void ZUNMR3_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, long long int* info );
void zunmr3( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, long long int* info );
void zunmr3_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, long long int* info );

void ZUNMRQ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZUNMRQ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zunmrq( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zunmrq_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZUNMRZ( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void ZUNMRZ_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunmrz( const char* side, const char* trans, const long long int* m,
             const long long int* n, const long long int* k, const long long int* l,
             const MKL_Complex16* a, const long long int* lda,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, const long long int* lwork, long long int* info );
void zunmrz_( const char* side, const char* trans, const long long int* m,
              const long long int* n, const long long int* k, const long long int* l,
              const MKL_Complex16* a, const long long int* lda,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, const long long int* lwork, long long int* info );

void ZUNMTR( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZUNMTR_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zunmtr( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
             const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zunmtr_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* tau, MKL_Complex16* c,
              const long long int* ldc, MKL_Complex16* work, const long long int* lwork,
              long long int* info );

void ZUPGTR( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             const MKL_Complex16* tau, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* work, long long int* info );
void ZUPGTR_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              const MKL_Complex16* tau, MKL_Complex16* q, const long long int* ldq,
              MKL_Complex16* work, long long int* info );
void zupgtr( const char* uplo, const long long int* n, const MKL_Complex16* ap,
             const MKL_Complex16* tau, MKL_Complex16* q, const long long int* ldq,
             MKL_Complex16* work, long long int* info );
void zupgtr_( const char* uplo, const long long int* n, const MKL_Complex16* ap,
              const MKL_Complex16* tau, MKL_Complex16* q, const long long int* ldq,
              MKL_Complex16* work, long long int* info );

void ZUPMTR( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const MKL_Complex16* ap,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, long long int* info );
void ZUPMTR_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const MKL_Complex16* ap,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, long long int* info );
void zupmtr( const char* side, const char* uplo, const char* trans,
             const long long int* m, const long long int* n, const MKL_Complex16* ap,
             const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* work, long long int* info );
void zupmtr_( const char* side, const char* uplo, const char* trans,
              const long long int* m, const long long int* n, const MKL_Complex16* ap,
              const MKL_Complex16* tau, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* work, long long int* info );




void CGEQRT2( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* t, const long long int* ldt,
              long long int* info );
void CGEQRT2_( const long long int* m, const long long int* n, MKL_Complex8* a,
               const long long int* lda, MKL_Complex8* t, const long long int* ldt,
               long long int* info );
void cgeqrt2( const long long int* m, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* t, const long long int* ldt,
              long long int* info );
void cgeqrt2_( const long long int* m, const long long int* n, MKL_Complex8* a,
               const long long int* lda, MKL_Complex8* t, const long long int* ldt,
               long long int* info );

void CHESWAPR( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void CHESWAPR_( const char* uplo, const long long int* n, MKL_Complex8* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );
void cheswapr( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void cheswapr_( const char* uplo, const long long int* n, MKL_Complex8* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );

void CHETRI2( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void CHETRI2_( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
               const long long int* lwork, long long int* info );
void chetri2( const char* uplo, const long long int* n, MKL_Complex8* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
              const long long int* lwork, long long int* info );
void chetri2_( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
               const long long int* lwork, long long int* info );

void CHETRI2X( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
               const long long int* nb, long long int* info );
void CHETRI2X_( const char* uplo, const long long int* n, MKL_Complex8* a,
                const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                const long long int* nb, long long int* info );
void chetri2x( const char* uplo, const long long int* n, MKL_Complex8* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
               const long long int* nb, long long int* info );
void chetri2x_( const char* uplo, const long long int* n, MKL_Complex8* a,
                const long long int* lda, const long long int* ipiv, MKL_Complex8* work,
                const long long int* nb, long long int* info );

void CLA_GBAMV( const long long int* trans, const long long int* m, const long long int* n,
                const long long int* kl, const long long int* ku, const float* alpha,
                const MKL_Complex8* ab, const long long int* ldab,
                const MKL_Complex8* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void CLA_GBAMV_( const long long int* trans, const long long int* m, const long long int* n,
                 const long long int* kl, const long long int* ku, const float* alpha,
                 const MKL_Complex8* ab, const long long int* ldab,
                 const MKL_Complex8* x, const long long int* incx,
                 const float* beta, float* y, const long long int* incy );
void cla_gbamv( const long long int* trans, const long long int* m, const long long int* n,
                const long long int* kl, const long long int* ku, const float* alpha,
                const MKL_Complex8* ab, const long long int* ldab,
                const MKL_Complex8* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void cla_gbamv_( const long long int* trans, const long long int* m, const long long int* n,
                 const long long int* kl, const long long int* ku, const float* alpha,
                 const MKL_Complex8* ab, const long long int* ldab,
                 const MKL_Complex8* x, const long long int* incx,
                 const float* beta, float* y, const long long int* incy );

float CLA_GBRCOND_C( const char* trans, const long long int* n, const long long int* kl,
                     const long long int* ku, const MKL_Complex8* ab,
                     const long long int* ldab, const MKL_Complex8* afb,
                     const long long int* ldafb, const long long int* ipiv,
                     const float* c, const long long int* capply, long long int* info,
                     MKL_Complex8* work, float* rwork );
float CLA_GBRCOND_C_( const char* trans, const long long int* n, const long long int* kl,
                      const long long int* ku, const MKL_Complex8* ab,
                      const long long int* ldab, const MKL_Complex8* afb,
                      const long long int* ldafb, const long long int* ipiv,
                      const float* c, const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );
float cla_gbrcond_c( const char* trans, const long long int* n, const long long int* kl,
                     const long long int* ku, const MKL_Complex8* ab,
                     const long long int* ldab, const MKL_Complex8* afb,
                     const long long int* ldafb, const long long int* ipiv,
                     const float* c, const long long int* capply, long long int* info,
                     MKL_Complex8* work, float* rwork );
float cla_gbrcond_c_( const char* trans, const long long int* n, const long long int* kl,
                      const long long int* ku, const MKL_Complex8* ab,
                      const long long int* ldab, const MKL_Complex8* afb,
                      const long long int* ldafb, const long long int* ipiv,
                      const float* c, const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );

float CLA_GBRCOND_X( const char* trans, const long long int* n, const long long int* kl,
                     const long long int* ku, const MKL_Complex8* ab,
                     const long long int* ldab, const MKL_Complex8* afb,
                     const long long int* ldafb, const long long int* ipiv,
                     const MKL_Complex8* x, long long int* info, MKL_Complex8* work,
                     float* rwork );
float CLA_GBRCOND_X_( const char* trans, const long long int* n, const long long int* kl,
                      const long long int* ku, const MKL_Complex8* ab,
                      const long long int* ldab, const MKL_Complex8* afb,
                      const long long int* ldafb, const long long int* ipiv,
                      const MKL_Complex8* x, long long int* info,
                      MKL_Complex8* work, float* rwork );
float cla_gbrcond_x( const char* trans, const long long int* n, const long long int* kl,
                     const long long int* ku, const MKL_Complex8* ab,
                     const long long int* ldab, const MKL_Complex8* afb,
                     const long long int* ldafb, const long long int* ipiv,
                     const MKL_Complex8* x, long long int* info, MKL_Complex8* work,
                     float* rwork );
float cla_gbrcond_x_( const char* trans, const long long int* n, const long long int* kl,
                      const long long int* ku, const MKL_Complex8* ab,
                      const long long int* ldab, const MKL_Complex8* afb,
                      const long long int* ldafb, const long long int* ipiv,
                      const MKL_Complex8* x, long long int* info,
                      MKL_Complex8* work, float* rwork );

void CLA_GBRFSX_EXTENDED( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* kl, const long long int* ku,
                          const long long int* nrhs, const MKL_Complex8* ab,
                          const long long int* ldab, const MKL_Complex8* afb,
                          const long long int* ldafb, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const MKL_Complex8* b, const long long int* ldb,
                          MKL_Complex8* y, const long long int* ldy,
                          float* berr_out, const long long int* n_norms,
                          float* err_bnds_norm, float* err_bnds_comp,
                          MKL_Complex8* res, float* ayb, MKL_Complex8* dy,
                          MKL_Complex8* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void CLA_GBRFSX_EXTENDED_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* kl, const long long int* ku,
                           const long long int* nrhs, const MKL_Complex8* ab,
                           const long long int* ldab, const MKL_Complex8* afb,
                           const long long int* ldafb, const long long int* ipiv,
                           const long long int* colequ, const float* c,
                           const MKL_Complex8* b, const long long int* ldb,
                           MKL_Complex8* y, const long long int* ldy,
                           float* berr_out, const long long int* n_norms,
                           float* err_bnds_norm, float* err_bnds_comp,
                           MKL_Complex8* res, float* ayb, MKL_Complex8* dy,
                           MKL_Complex8* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void cla_gbrfsx_extended( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* kl, const long long int* ku,
                          const long long int* nrhs, const MKL_Complex8* ab,
                          const long long int* ldab, const MKL_Complex8* afb,
                          const long long int* ldafb, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const MKL_Complex8* b, const long long int* ldb,
                          MKL_Complex8* y, const long long int* ldy,
                          float* berr_out, const long long int* n_norms,
                          float* err_bnds_norm, float* err_bnds_comp,
                          MKL_Complex8* res, float* ayb, MKL_Complex8* dy,
                          MKL_Complex8* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void cla_gbrfsx_extended_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* kl, const long long int* ku,
                           const long long int* nrhs, const MKL_Complex8* ab,
                           const long long int* ldab, const MKL_Complex8* afb,
                           const long long int* ldafb, const long long int* ipiv,
                           const long long int* colequ, const float* c,
                           const MKL_Complex8* b, const long long int* ldb,
                           MKL_Complex8* y, const long long int* ldy,
                           float* berr_out, const long long int* n_norms,
                           float* err_bnds_norm, float* err_bnds_comp,
                           MKL_Complex8* res, float* ayb, MKL_Complex8* dy,
                           MKL_Complex8* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

float CLA_GBRPVGRW( const long long int* n, const long long int* kl, const long long int* ku,
                    const long long int* ncols, const MKL_Complex8* ab,
                    const long long int* ldab, const MKL_Complex8* afb,
                    const long long int* ldafb );
float CLA_GBRPVGRW_( const long long int* n, const long long int* kl, const long long int* ku,
                     const long long int* ncols, const MKL_Complex8* ab,
                     const long long int* ldab, const MKL_Complex8* afb,
                     const long long int* ldafb );
float cla_gbrpvgrw( const long long int* n, const long long int* kl, const long long int* ku,
                    const long long int* ncols, const MKL_Complex8* ab,
                    const long long int* ldab, const MKL_Complex8* afb,
                    const long long int* ldafb );
float cla_gbrpvgrw_( const long long int* n, const long long int* kl, const long long int* ku,
                     const long long int* ncols, const MKL_Complex8* ab,
                     const long long int* ldab, const MKL_Complex8* afb,
                     const long long int* ldafb );

void CLA_GEAMV( const long long int* trans, const long long int* m, const long long int* n,
                const float* alpha, const MKL_Complex8* a, const long long int* lda,
                const MKL_Complex8* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void CLA_GEAMV_( const long long int* trans, const long long int* m, const long long int* n,
                 const float* alpha, const MKL_Complex8* a,
                 const long long int* lda, const MKL_Complex8* x,
                 const long long int* incx, const float* beta, float* y,
                 const long long int* incy );
void cla_geamv( const long long int* trans, const long long int* m, const long long int* n,
                const float* alpha, const MKL_Complex8* a, const long long int* lda,
                const MKL_Complex8* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void cla_geamv_( const long long int* trans, const long long int* m, const long long int* n,
                 const float* alpha, const MKL_Complex8* a,
                 const long long int* lda, const MKL_Complex8* x,
                 const long long int* incx, const float* beta, float* y,
                 const long long int* incy );

float CLA_GERCOND_C( const char* trans, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const float* c,
                     const long long int* capply, long long int* info, MKL_Complex8* work,
                     float* rwork );
float CLA_GERCOND_C_( const char* trans, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const float* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );
float cla_gercond_c( const char* trans, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const float* c,
                     const long long int* capply, long long int* info, MKL_Complex8* work,
                     float* rwork );
float cla_gercond_c_( const char* trans, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const float* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );

float CLA_GERCOND_X( const char* trans, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const MKL_Complex8* x,
                     long long int* info, MKL_Complex8* work, float* rwork );
float CLA_GERCOND_X_( const char* trans, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex8* x,
                      long long int* info, MKL_Complex8* work, float* rwork );
float cla_gercond_x( const char* trans, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const MKL_Complex8* x,
                     long long int* info, MKL_Complex8* work, float* rwork );
float cla_gercond_x_( const char* trans, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex8* x,
                      long long int* info, MKL_Complex8* work, float* rwork );

void CLA_GERFSX_EXTENDED( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* nrhs, const MKL_Complex8* a,
                          const long long int* lda, const MKL_Complex8* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const MKL_Complex8* b, const long long int* ldb,
                          MKL_Complex8* y, const long long int* ldy,
                          float* berr_out, const long long int* n_norms,
                          float* errs_n, float* errs_c, MKL_Complex8* res,
                          float* ayb, MKL_Complex8* dy, MKL_Complex8* y_tail,
                          const float* rcond, const long long int* ithresh,
                          const float* rthresh, const float* dz_ub,
                          const long long int* ignore_cwise, long long int* info );
void CLA_GERFSX_EXTENDED_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* nrhs, const MKL_Complex8* a,
                           const long long int* lda, const MKL_Complex8* af,
                           const long long int* ldaf, const long long int* ipiv,
                           const long long int* colequ, const float* c,
                           const MKL_Complex8* b, const long long int* ldb,
                           MKL_Complex8* y, const long long int* ldy,
                           float* berr_out, const long long int* n_norms,
                           float* errs_n, float* errs_c, MKL_Complex8* res,
                           float* ayb, MKL_Complex8* dy, MKL_Complex8* y_tail,
                           const float* rcond, const long long int* ithresh,
                           const float* rthresh, const float* dz_ub,
                           const long long int* ignore_cwise, long long int* info );
void cla_gerfsx_extended( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* nrhs, const MKL_Complex8* a,
                          const long long int* lda, const MKL_Complex8* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const MKL_Complex8* b, const long long int* ldb,
                          MKL_Complex8* y, const long long int* ldy,
                          float* berr_out, const long long int* n_norms,
                          float* errs_n, float* errs_c, MKL_Complex8* res,
                          float* ayb, MKL_Complex8* dy, MKL_Complex8* y_tail,
                          const float* rcond, const long long int* ithresh,
                          const float* rthresh, const float* dz_ub,
                          const long long int* ignore_cwise, long long int* info );
void cla_gerfsx_extended_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* nrhs, const MKL_Complex8* a,
                           const long long int* lda, const MKL_Complex8* af,
                           const long long int* ldaf, const long long int* ipiv,
                           const long long int* colequ, const float* c,
                           const MKL_Complex8* b, const long long int* ldb,
                           MKL_Complex8* y, const long long int* ldy,
                           float* berr_out, const long long int* n_norms,
                           float* errs_n, float* errs_c, MKL_Complex8* res,
                           float* ayb, MKL_Complex8* dy, MKL_Complex8* y_tail,
                           const float* rcond, const long long int* ithresh,
                           const float* rthresh, const float* dz_ub,
                           const long long int* ignore_cwise, long long int* info );

float CLA_GERPVGRW( const long long int* n, const long long int* ncols,
                    const MKL_Complex8* a, const long long int* lda,
                    const MKL_Complex8* af, const long long int* ldaf );
float CLA_GERPVGRW_( const long long int* n, const long long int* ncols,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf );
float cla_gerpvgrw( const long long int* n, const long long int* ncols,
                    const MKL_Complex8* a, const long long int* lda,
                    const MKL_Complex8* af, const long long int* ldaf );
float cla_gerpvgrw_( const long long int* n, const long long int* ncols,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf );

void CLA_HEAMV( const long long int* uplo, const long long int* n, const float* alpha,
                const MKL_Complex8* a, const long long int* lda,
                const MKL_Complex8* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void CLA_HEAMV_( const long long int* uplo, const long long int* n, const float* alpha,
                 const MKL_Complex8* a, const long long int* lda,
                 const MKL_Complex8* x, const long long int* incx,
                 const float* beta, float* y, const long long int* incy );
void cla_heamv( const long long int* uplo, const long long int* n, const float* alpha,
                const MKL_Complex8* a, const long long int* lda,
                const MKL_Complex8* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void cla_heamv_( const long long int* uplo, const long long int* n, const float* alpha,
                 const MKL_Complex8* a, const long long int* lda,
                 const MKL_Complex8* x, const long long int* incx,
                 const float* beta, float* y, const long long int* incy );

float CLA_HERCOND_C( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const float* c,
                     const long long int* capply, long long int* info, MKL_Complex8* work,
                     float* rwork );
float CLA_HERCOND_C_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const float* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );
float cla_hercond_c( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const float* c,
                     const long long int* capply, long long int* info, MKL_Complex8* work,
                     float* rwork );
float cla_hercond_c_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const float* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );

float CLA_HERCOND_X( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const MKL_Complex8* x,
                     long long int* info, MKL_Complex8* work, float* rwork );
float CLA_HERCOND_X_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex8* x,
                      long long int* info, MKL_Complex8* work, float* rwork );
float cla_hercond_x( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const MKL_Complex8* x,
                     long long int* info, MKL_Complex8* work, float* rwork );
float cla_hercond_x_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex8* x,
                      long long int* info, MKL_Complex8* work, float* rwork );

void CLA_HERFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex8* a, const long long int* lda,
                          const MKL_Complex8* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const float* c, const MKL_Complex8* b,
                          const long long int* ldb, MKL_Complex8* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, MKL_Complex8* res, float* ayb,
                          MKL_Complex8* dy, MKL_Complex8* y_tail,
                          const float* rcond, const long long int* ithresh,
                          const float* rthresh, const float* dz_ub,
                          const long long int* ignore_cwise, long long int* info );
void CLA_HERFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex8* a, const long long int* lda,
                           const MKL_Complex8* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const float* c, const MKL_Complex8* b,
                           const long long int* ldb, MKL_Complex8* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, MKL_Complex8* res,
                           float* ayb, MKL_Complex8* dy, MKL_Complex8* y_tail,
                           const float* rcond, const long long int* ithresh,
                           const float* rthresh, const float* dz_ub,
                           const long long int* ignore_cwise, long long int* info );
void cla_herfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex8* a, const long long int* lda,
                          const MKL_Complex8* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const float* c, const MKL_Complex8* b,
                          const long long int* ldb, MKL_Complex8* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, MKL_Complex8* res, float* ayb,
                          MKL_Complex8* dy, MKL_Complex8* y_tail,
                          const float* rcond, const long long int* ithresh,
                          const float* rthresh, const float* dz_ub,
                          const long long int* ignore_cwise, long long int* info );
void cla_herfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex8* a, const long long int* lda,
                           const MKL_Complex8* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const float* c, const MKL_Complex8* b,
                           const long long int* ldb, MKL_Complex8* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, MKL_Complex8* res,
                           float* ayb, MKL_Complex8* dy, MKL_Complex8* y_tail,
                           const float* rcond, const long long int* ithresh,
                           const float* rthresh, const float* dz_ub,
                           const long long int* ignore_cwise, long long int* info );

float CLA_HERPVGRW( const char* uplo, const long long int* n, const long long int* info,
                    const MKL_Complex8* a, const long long int* lda,
                    const MKL_Complex8* af, const long long int* ldaf,
                    const long long int* ipiv, float* work );
float CLA_HERPVGRW_( const char* uplo, const long long int* n, const long long int* info,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, float* work );
float cla_herpvgrw( const char* uplo, const long long int* n, const long long int* info,
                    const MKL_Complex8* a, const long long int* lda,
                    const MKL_Complex8* af, const long long int* ldaf,
                    const long long int* ipiv, float* work );
float cla_herpvgrw_( const char* uplo, const long long int* n, const long long int* info,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, float* work );

void CLA_LIN_BERR( const long long int* n, const long long int* nz, const long long int* nrhs,
                   const MKL_Complex8* res, const float* ayb, float* berr );
void CLA_LIN_BERR_( const long long int* n, const long long int* nz, const long long int* nrhs,
                    const MKL_Complex8* res, const float* ayb, float* berr );
void cla_lin_berr( const long long int* n, const long long int* nz, const long long int* nrhs,
                   const MKL_Complex8* res, const float* ayb, float* berr );
void cla_lin_berr_( const long long int* n, const long long int* nz, const long long int* nrhs,
                    const MKL_Complex8* res, const float* ayb, float* berr );

float CLA_PORCOND_C( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const float* c, const long long int* capply, long long int* info,
                     MKL_Complex8* work, float* rwork );
float CLA_PORCOND_C_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const float* c, const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );
float cla_porcond_c( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const float* c, const long long int* capply, long long int* info,
                     MKL_Complex8* work, float* rwork );
float cla_porcond_c_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const float* c, const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );

float CLA_PORCOND_X( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const MKL_Complex8* x, long long int* info, MKL_Complex8* work,
                     float* rwork );
float CLA_PORCOND_X_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const MKL_Complex8* x, long long int* info,
                      MKL_Complex8* work, float* rwork );
float cla_porcond_x( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const MKL_Complex8* x, long long int* info, MKL_Complex8* work,
                     float* rwork );
float cla_porcond_x_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const MKL_Complex8* x, long long int* info,
                      MKL_Complex8* work, float* rwork );

void CLA_PORFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex8* a, const long long int* lda,
                          const MKL_Complex8* af, const long long int* ldaf,
                          const long long int* colequ, const float* c,
                          const MKL_Complex8* b, const long long int* ldb,
                          MKL_Complex8* y, const long long int* ldy,
                          float* berr_out, const long long int* n_norms,
                          float* err_bnds_norm, float* err_bnds_comp,
                          MKL_Complex8* res, float* ayb, MKL_Complex8* dy,
                          MKL_Complex8* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void CLA_PORFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex8* a, const long long int* lda,
                           const MKL_Complex8* af, const long long int* ldaf,
                           const long long int* colequ, const float* c,
                           const MKL_Complex8* b, const long long int* ldb,
                           MKL_Complex8* y, const long long int* ldy,
                           float* berr_out, const long long int* n_norms,
                           float* err_bnds_norm, float* err_bnds_comp,
                           MKL_Complex8* res, float* ayb, MKL_Complex8* dy,
                           MKL_Complex8* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void cla_porfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex8* a, const long long int* lda,
                          const MKL_Complex8* af, const long long int* ldaf,
                          const long long int* colequ, const float* c,
                          const MKL_Complex8* b, const long long int* ldb,
                          MKL_Complex8* y, const long long int* ldy,
                          float* berr_out, const long long int* n_norms,
                          float* err_bnds_norm, float* err_bnds_comp,
                          MKL_Complex8* res, float* ayb, MKL_Complex8* dy,
                          MKL_Complex8* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void cla_porfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex8* a, const long long int* lda,
                           const MKL_Complex8* af, const long long int* ldaf,
                           const long long int* colequ, const float* c,
                           const MKL_Complex8* b, const long long int* ldb,
                           MKL_Complex8* y, const long long int* ldy,
                           float* berr_out, const long long int* n_norms,
                           float* err_bnds_norm, float* err_bnds_comp,
                           MKL_Complex8* res, float* ayb, MKL_Complex8* dy,
                           MKL_Complex8* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

float CLA_PORPVGRW( const char* uplo, const long long int* ncols,
                    const MKL_Complex8* a, const long long int* lda,
                    const MKL_Complex8* af, const long long int* ldaf, float* work );
float CLA_PORPVGRW_( const char* uplo, const long long int* ncols,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf, float* work );
float cla_porpvgrw( const char* uplo, const long long int* ncols,
                    const MKL_Complex8* a, const long long int* lda,
                    const MKL_Complex8* af, const long long int* ldaf, float* work );
float cla_porpvgrw_( const char* uplo, const long long int* ncols,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf, float* work );

void CLA_SYAMV( const long long int* uplo, const long long int* n, const float* alpha,
                const MKL_Complex8* a, const long long int* lda,
                const MKL_Complex8* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void CLA_SYAMV_( const long long int* uplo, const long long int* n, const float* alpha,
                 const MKL_Complex8* a, const long long int* lda,
                 const MKL_Complex8* x, const long long int* incx,
                 const float* beta, float* y, const long long int* incy );
void cla_syamv( const long long int* uplo, const long long int* n, const float* alpha,
                const MKL_Complex8* a, const long long int* lda,
                const MKL_Complex8* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void cla_syamv_( const long long int* uplo, const long long int* n, const float* alpha,
                 const MKL_Complex8* a, const long long int* lda,
                 const MKL_Complex8* x, const long long int* incx,
                 const float* beta, float* y, const long long int* incy );

float CLA_SYRCOND_C( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const float* c,
                     const long long int* capply, long long int* info, MKL_Complex8* work,
                     float* rwork );
float CLA_SYRCOND_C_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const float* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );
float cla_syrcond_c( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const float* c,
                     const long long int* capply, long long int* info, MKL_Complex8* work,
                     float* rwork );
float cla_syrcond_c_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const float* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex8* work, float* rwork );

float CLA_SYRCOND_X( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const MKL_Complex8* x,
                     long long int* info, MKL_Complex8* work, float* rwork );
float CLA_SYRCOND_X_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex8* x,
                      long long int* info, MKL_Complex8* work, float* rwork );
float cla_syrcond_x( const char* uplo, const long long int* n,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, const MKL_Complex8* x,
                     long long int* info, MKL_Complex8* work, float* rwork );
float cla_syrcond_x_( const char* uplo, const long long int* n,
                      const MKL_Complex8* a, const long long int* lda,
                      const MKL_Complex8* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex8* x,
                      long long int* info, MKL_Complex8* work, float* rwork );

void CLA_SYRFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex8* a, const long long int* lda,
                          const MKL_Complex8* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const float* c, const MKL_Complex8* b,
                          const long long int* ldb, MKL_Complex8* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, MKL_Complex8* res, float* ayb,
                          MKL_Complex8* dy, MKL_Complex8* y_tail,
                          const float* rcond, const long long int* ithresh,
                          const float* rthresh, const float* dz_ub,
                          const long long int* ignore_cwise, long long int* info );
void CLA_SYRFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex8* a, const long long int* lda,
                           const MKL_Complex8* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const float* c, const MKL_Complex8* b,
                           const long long int* ldb, MKL_Complex8* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, MKL_Complex8* res,
                           float* ayb, MKL_Complex8* dy, MKL_Complex8* y_tail,
                           const float* rcond, const long long int* ithresh,
                           const float* rthresh, const float* dz_ub,
                           const long long int* ignore_cwise, long long int* info );
void cla_syrfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex8* a, const long long int* lda,
                          const MKL_Complex8* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const float* c, const MKL_Complex8* b,
                          const long long int* ldb, MKL_Complex8* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, MKL_Complex8* res, float* ayb,
                          MKL_Complex8* dy, MKL_Complex8* y_tail,
                          const float* rcond, const long long int* ithresh,
                          const float* rthresh, const float* dz_ub,
                          const long long int* ignore_cwise, long long int* info );
void cla_syrfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex8* a, const long long int* lda,
                           const MKL_Complex8* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const float* c, const MKL_Complex8* b,
                           const long long int* ldb, MKL_Complex8* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, MKL_Complex8* res,
                           float* ayb, MKL_Complex8* dy, MKL_Complex8* y_tail,
                           const float* rcond, const long long int* ithresh,
                           const float* rthresh, const float* dz_ub,
                           const long long int* ignore_cwise, long long int* info );

float CLA_SYRPVGRW( const char* uplo, const long long int* n, const long long int* info,
                    const MKL_Complex8* a, const long long int* lda,
                    const MKL_Complex8* af, const long long int* ldaf,
                    const long long int* ipiv, float* work );
float CLA_SYRPVGRW_( const char* uplo, const long long int* n, const long long int* info,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, float* work );
float cla_syrpvgrw( const char* uplo, const long long int* n, const long long int* info,
                    const MKL_Complex8* a, const long long int* lda,
                    const MKL_Complex8* af, const long long int* ldaf,
                    const long long int* ipiv, float* work );
float cla_syrpvgrw_( const char* uplo, const long long int* n, const long long int* info,
                     const MKL_Complex8* a, const long long int* lda,
                     const MKL_Complex8* af, const long long int* ldaf,
                     const long long int* ipiv, float* work );

void CLA_WWADDW( const long long int* n, MKL_Complex8* x, MKL_Complex8* y,
                 const MKL_Complex8* w );
void CLA_WWADDW_( const long long int* n, MKL_Complex8* x, MKL_Complex8* y,
                  const MKL_Complex8* w );
void cla_wwaddw( const long long int* n, MKL_Complex8* x, MKL_Complex8* y,
                 const MKL_Complex8* w );
void cla_wwaddw_( const long long int* n, MKL_Complex8* x, MKL_Complex8* y,
                  const MKL_Complex8* w );

void CTPRFB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const MKL_Complex8* v,
             const long long int* ldv, const MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* work, const long long int* ldwork );
void CTPRFB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const MKL_Complex8* v,
              const long long int* ldv, const MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* work, const long long int* ldwork );
void ctprfb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const MKL_Complex8* v,
             const long long int* ldv, const MKL_Complex8* t, const long long int* ldt,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* work, const long long int* ldwork );
void ctprfb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const MKL_Complex8* v,
              const long long int* ldv, const MKL_Complex8* t, const long long int* ldt,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* work, const long long int* ldwork );

void DGEQRT2( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* t, const long long int* ldt, long long int* info );
void DGEQRT2_( const long long int* m, const long long int* n, double* a,
               const long long int* lda, double* t, const long long int* ldt,
               long long int* info );
void dgeqrt2( const long long int* m, const long long int* n, double* a,
              const long long int* lda, double* t, const long long int* ldt, long long int* info );
void dgeqrt2_( const long long int* m, const long long int* n, double* a,
               const long long int* lda, double* t, const long long int* ldt,
               long long int* info );

void DLA_GBAMV( const long long int* trans, const long long int* m, const long long int* n,
                const long long int* kl, const long long int* ku, const double* alpha,
                const double* ab, const long long int* ldab, const double* x,
                const long long int* incx, const double* beta, double* y,
                const long long int* incy );
void DLA_GBAMV_( const long long int* trans, const long long int* m, const long long int* n,
                 const long long int* kl, const long long int* ku, const double* alpha,
                 const double* ab, const long long int* ldab, const double* x,
                 const long long int* incx, const double* beta, double* y,
                 const long long int* incy );
void dla_gbamv( const long long int* trans, const long long int* m, const long long int* n,
                const long long int* kl, const long long int* ku, const double* alpha,
                const double* ab, const long long int* ldab, const double* x,
                const long long int* incx, const double* beta, double* y,
                const long long int* incy );
void dla_gbamv_( const long long int* trans, const long long int* m, const long long int* n,
                 const long long int* kl, const long long int* ku, const double* alpha,
                 const double* ab, const long long int* ldab, const double* x,
                 const long long int* incx, const double* beta, double* y,
                 const long long int* incy );

double DLA_GBRCOND( const char* trans, const long long int* n, const long long int* kl,
                    const long long int* ku, const double* ab, const long long int* ldab,
                    const double* afb, const long long int* ldafb,
                    const long long int* ipiv, const long long int* cmode,
                    const double* c, long long int* info, double* work,
                    long long int* iwork );
double DLA_GBRCOND_( const char* trans, const long long int* n, const long long int* kl,
                     const long long int* ku, const double* ab, const long long int* ldab,
                     const double* afb, const long long int* ldafb,
                     const long long int* ipiv, const long long int* cmode,
                     const double* c, long long int* info, double* work,
                     long long int* iwork );
double dla_gbrcond( const char* trans, const long long int* n, const long long int* kl,
                    const long long int* ku, const double* ab, const long long int* ldab,
                    const double* afb, const long long int* ldafb,
                    const long long int* ipiv, const long long int* cmode,
                    const double* c, long long int* info, double* work,
                    long long int* iwork );
double dla_gbrcond_( const char* trans, const long long int* n, const long long int* kl,
                     const long long int* ku, const double* ab, const long long int* ldab,
                     const double* afb, const long long int* ldafb,
                     const long long int* ipiv, const long long int* cmode,
                     const double* c, long long int* info, double* work,
                     long long int* iwork );

void DLA_GBRFSX_EXTENDED( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* kl, const long long int* ku,
                          const long long int* nrhs, const double* ab,
                          const long long int* ldab, const double* afb,
                          const long long int* ldafb, const long long int* ipiv,
                          const long long int* colequ, const double* c,
                          const double* b, const long long int* ldb, double* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* err_bnds_norm,
                          double* err_bnds_comp, double* res, double* ayb,
                          double* dy, double* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void DLA_GBRFSX_EXTENDED_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* kl, const long long int* ku,
                           const long long int* nrhs, const double* ab,
                           const long long int* ldab, const double* afb,
                           const long long int* ldafb, const long long int* ipiv,
                           const long long int* colequ, const double* c,
                           const double* b, const long long int* ldb, double* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* err_bnds_norm,
                           double* err_bnds_comp, double* res, double* ayb,
                           double* dy, double* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void dla_gbrfsx_extended( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* kl, const long long int* ku,
                          const long long int* nrhs, const double* ab,
                          const long long int* ldab, const double* afb,
                          const long long int* ldafb, const long long int* ipiv,
                          const long long int* colequ, const double* c,
                          const double* b, const long long int* ldb, double* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* err_bnds_norm,
                          double* err_bnds_comp, double* res, double* ayb,
                          double* dy, double* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void dla_gbrfsx_extended_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* kl, const long long int* ku,
                           const long long int* nrhs, const double* ab,
                           const long long int* ldab, const double* afb,
                           const long long int* ldafb, const long long int* ipiv,
                           const long long int* colequ, const double* c,
                           const double* b, const long long int* ldb, double* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* err_bnds_norm,
                           double* err_bnds_comp, double* res, double* ayb,
                           double* dy, double* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

double DLA_GBRPVGRW( const long long int* n, const long long int* kl, const long long int* ku,
                     const long long int* ncols, const double* ab,
                     const long long int* ldab, const double* afb,
                     const long long int* ldafb );
double DLA_GBRPVGRW_( const long long int* n, const long long int* kl, const long long int* ku,
                      const long long int* ncols, const double* ab,
                      const long long int* ldab, const double* afb,
                      const long long int* ldafb );
double dla_gbrpvgrw( const long long int* n, const long long int* kl, const long long int* ku,
                     const long long int* ncols, const double* ab,
                     const long long int* ldab, const double* afb,
                     const long long int* ldafb );
double dla_gbrpvgrw_( const long long int* n, const long long int* kl, const long long int* ku,
                      const long long int* ncols, const double* ab,
                      const long long int* ldab, const double* afb,
                      const long long int* ldafb );

void DLA_GEAMV( const long long int* trans, const long long int* m, const long long int* n,
                const double* alpha, const double* a, const long long int* lda,
                const double* x, const long long int* incx, const double* beta,
                double* y, const long long int* incy );
void DLA_GEAMV_( const long long int* trans, const long long int* m, const long long int* n,
                 const double* alpha, const double* a, const long long int* lda,
                 const double* x, const long long int* incx, const double* beta,
                 double* y, const long long int* incy );
void dla_geamv( const long long int* trans, const long long int* m, const long long int* n,
                const double* alpha, const double* a, const long long int* lda,
                const double* x, const long long int* incx, const double* beta,
                double* y, const long long int* incy );
void dla_geamv_( const long long int* trans, const long long int* m, const long long int* n,
                 const double* alpha, const double* a, const long long int* lda,
                 const double* x, const long long int* incx, const double* beta,
                 double* y, const long long int* incy );

double DLA_GERCOND( const char* trans, const long long int* n, const double* a,
                    const long long int* lda, const double* af, const long long int* ldaf,
                    const long long int* ipiv, const long long int* cmode,
                    const double* c, long long int* info, double* work,
                    long long int* iwork );
double DLA_GERCOND_( const char* trans, const long long int* n, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf, const long long int* ipiv,
                     const long long int* cmode, const double* c, long long int* info,
                     double* work, long long int* iwork );
double dla_gercond( const char* trans, const long long int* n, const double* a,
                    const long long int* lda, const double* af, const long long int* ldaf,
                    const long long int* ipiv, const long long int* cmode,
                    const double* c, long long int* info, double* work,
                    long long int* iwork );
double dla_gercond_( const char* trans, const long long int* n, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf, const long long int* ipiv,
                     const long long int* cmode, const double* c, long long int* info,
                     double* work, long long int* iwork );

void DLA_GERFSX_EXTENDED( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* nrhs, const double* a,
                          const long long int* lda, const double* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const double* c,
                          const double* b, const long long int* ldb, double* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* errs_n,
                          double* errs_c, double* res, double* ayb, double* dy,
                          double* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void DLA_GERFSX_EXTENDED_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* nrhs, const double* a,
                           const long long int* lda, const double* af,
                           const long long int* ldaf, const long long int* ipiv,
                           const long long int* colequ, const double* c,
                           const double* b, const long long int* ldb, double* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* errs_n,
                           double* errs_c, double* res, double* ayb,
                           double* dy, double* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void dla_gerfsx_extended( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* nrhs, const double* a,
                          const long long int* lda, const double* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const double* c,
                          const double* b, const long long int* ldb, double* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* errs_n,
                          double* errs_c, double* res, double* ayb, double* dy,
                          double* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void dla_gerfsx_extended_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* nrhs, const double* a,
                           const long long int* lda, const double* af,
                           const long long int* ldaf, const long long int* ipiv,
                           const long long int* colequ, const double* c,
                           const double* b, const long long int* ldb, double* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* errs_n,
                           double* errs_c, double* res, double* ayb,
                           double* dy, double* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

double DLA_GERPVGRW( const long long int* n, const long long int* ncols, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf );
double DLA_GERPVGRW_( const long long int* n, const long long int* ncols, const double* a,
                      const long long int* lda, const double* af,
                      const long long int* ldaf );
double dla_gerpvgrw( const long long int* n, const long long int* ncols, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf );
double dla_gerpvgrw_( const long long int* n, const long long int* ncols, const double* a,
                      const long long int* lda, const double* af,
                      const long long int* ldaf );

void DLA_LIN_BERR( const long long int* n, const long long int* nz, const long long int* nrhs,
                   const double* res, const double* ayb, double* berr );
void DLA_LIN_BERR_( const long long int* n, const long long int* nz, const long long int* nrhs,
                    const double* res, const double* ayb, double* berr );
void dla_lin_berr( const long long int* n, const long long int* nz, const long long int* nrhs,
                   const double* res, const double* ayb, double* berr );
void dla_lin_berr_( const long long int* n, const long long int* nz, const long long int* nrhs,
                    const double* res, const double* ayb, double* berr );

double DLA_PORCOND( const char* uplo, const long long int* n, const double* a,
                    const long long int* lda, const double* af, const long long int* ldaf,
                    const long long int* cmode, const double* c, long long int* info,
                    double* work, long long int* iwork );
double DLA_PORCOND_( const char* uplo, const long long int* n, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf, const long long int* cmode,
                     const double* c, long long int* info, double* work,
                     long long int* iwork );
double dla_porcond( const char* uplo, const long long int* n, const double* a,
                    const long long int* lda, const double* af, const long long int* ldaf,
                    const long long int* cmode, const double* c, long long int* info,
                    double* work, long long int* iwork );
double dla_porcond_( const char* uplo, const long long int* n, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf, const long long int* cmode,
                     const double* c, long long int* info, double* work,
                     long long int* iwork );

void DLA_PORFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const double* a, const long long int* lda,
                          const double* af, const long long int* ldaf,
                          const long long int* colequ, const double* c,
                          const double* b, const long long int* ldb, double* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* err_bnds_norm,
                          double* err_bnds_comp, double* res, double* ayb,
                          double* dy, double* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void DLA_PORFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const double* a, const long long int* lda,
                           const double* af, const long long int* ldaf,
                           const long long int* colequ, const double* c,
                           const double* b, const long long int* ldb, double* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* err_bnds_norm,
                           double* err_bnds_comp, double* res, double* ayb,
                           double* dy, double* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void dla_porfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const double* a, const long long int* lda,
                          const double* af, const long long int* ldaf,
                          const long long int* colequ, const double* c,
                          const double* b, const long long int* ldb, double* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* err_bnds_norm,
                          double* err_bnds_comp, double* res, double* ayb,
                          double* dy, double* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void dla_porfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const double* a, const long long int* lda,
                           const double* af, const long long int* ldaf,
                           const long long int* colequ, const double* c,
                           const double* b, const long long int* ldb, double* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* err_bnds_norm,
                           double* err_bnds_comp, double* res, double* ayb,
                           double* dy, double* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

double DLA_PORPVGRW( const char* uplo, const long long int* ncols, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf, double* work );
double DLA_PORPVGRW_( const char* uplo, const long long int* ncols, const double* a,
                      const long long int* lda, const double* af,
                      const long long int* ldaf, double* work );
double dla_porpvgrw( const char* uplo, const long long int* ncols, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf, double* work );
double dla_porpvgrw_( const char* uplo, const long long int* ncols, const double* a,
                      const long long int* lda, const double* af,
                      const long long int* ldaf, double* work );

void DLA_SYAMV( const long long int* uplo, const long long int* n, const double* alpha,
                const double* a, const long long int* lda, const double* x,
                const long long int* incx, const double* beta, double* y,
                const long long int* incy );
void DLA_SYAMV_( const long long int* uplo, const long long int* n, const double* alpha,
                 const double* a, const long long int* lda, const double* x,
                 const long long int* incx, const double* beta, double* y,
                 const long long int* incy );
void dla_syamv( const long long int* uplo, const long long int* n, const double* alpha,
                const double* a, const long long int* lda, const double* x,
                const long long int* incx, const double* beta, double* y,
                const long long int* incy );
void dla_syamv_( const long long int* uplo, const long long int* n, const double* alpha,
                 const double* a, const long long int* lda, const double* x,
                 const long long int* incx, const double* beta, double* y,
                 const long long int* incy );

double DLA_SYRCOND( const char* uplo, const long long int* n, const double* a,
                    const long long int* lda, const double* af, const long long int* ldaf,
                    const long long int* ipiv, const long long int* cmode,
                    const double* c, long long int* info, double* work,
                    long long int* iwork );
double DLA_SYRCOND_( const char* uplo, const long long int* n, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf, const long long int* ipiv,
                     const long long int* cmode, const double* c, long long int* info,
                     double* work, long long int* iwork );
double dla_syrcond( const char* uplo, const long long int* n, const double* a,
                    const long long int* lda, const double* af, const long long int* ldaf,
                    const long long int* ipiv, const long long int* cmode,
                    const double* c, long long int* info, double* work,
                    long long int* iwork );
double dla_syrcond_( const char* uplo, const long long int* n, const double* a,
                     const long long int* lda, const double* af,
                     const long long int* ldaf, const long long int* ipiv,
                     const long long int* cmode, const double* c, long long int* info,
                     double* work, long long int* iwork );

void DLA_SYRFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const double* a, const long long int* lda,
                          const double* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const double* c, const double* b,
                          const long long int* ldb, double* y, const long long int* ldy,
                          double* berr_out, const long long int* n_norms,
                          double* err_bnds_norm, double* err_bnds_comp,
                          double* res, double* ayb, double* dy, double* y_tail,
                          const double* rcond, const long long int* ithresh,
                          const double* rthresh, const double* dz_ub,
                          const long long int* ignore_cwise, long long int* info );
void DLA_SYRFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const double* a, const long long int* lda,
                           const double* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const double* c, const double* b,
                           const long long int* ldb, double* y, const long long int* ldy,
                           double* berr_out, const long long int* n_norms,
                           double* err_bnds_norm, double* err_bnds_comp,
                           double* res, double* ayb, double* dy,
                           double* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void dla_syrfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const double* a, const long long int* lda,
                          const double* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const double* c, const double* b,
                          const long long int* ldb, double* y, const long long int* ldy,
                          double* berr_out, const long long int* n_norms,
                          double* err_bnds_norm, double* err_bnds_comp,
                          double* res, double* ayb, double* dy, double* y_tail,
                          const double* rcond, const long long int* ithresh,
                          const double* rthresh, const double* dz_ub,
                          const long long int* ignore_cwise, long long int* info );
void dla_syrfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const double* a, const long long int* lda,
                           const double* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const double* c, const double* b,
                           const long long int* ldb, double* y, const long long int* ldy,
                           double* berr_out, const long long int* n_norms,
                           double* err_bnds_norm, double* err_bnds_comp,
                           double* res, double* ayb, double* dy,
                           double* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

double DLA_SYRPVGRW( const char* uplo, const long long int* n, const long long int* info,
                     const double* a, const long long int* lda, const double* af,
                     const long long int* ldaf, const long long int* ipiv, double* work );
double DLA_SYRPVGRW_( const char* uplo, const long long int* n, const long long int* info,
                      const double* a, const long long int* lda, const double* af,
                      const long long int* ldaf, const long long int* ipiv, double* work );
double dla_syrpvgrw( const char* uplo, const long long int* n, const long long int* info,
                     const double* a, const long long int* lda, const double* af,
                     const long long int* ldaf, const long long int* ipiv, double* work );
double dla_syrpvgrw_( const char* uplo, const long long int* n, const long long int* info,
                      const double* a, const long long int* lda, const double* af,
                      const long long int* ldaf, const long long int* ipiv, double* work );

void DLA_WWADDW( const long long int* n, double* x, double* y, const double* w );
void DLA_WWADDW_( const long long int* n, double* x, double* y, const double* w );
void dla_wwaddw( const long long int* n, double* x, double* y, const double* w );
void dla_wwaddw_( const long long int* n, double* x, double* y, const double* w );

void DTPRFB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const double* v,
             const long long int* ldv, const double* t, const long long int* ldt,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* work, const long long int* ldwork );
void DTPRFB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const double* v,
              const long long int* ldv, const double* t, const long long int* ldt,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* work, const long long int* ldwork );
void dtprfb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const double* v,
             const long long int* ldv, const double* t, const long long int* ldt,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* work, const long long int* ldwork );
void dtprfb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const double* v,
              const long long int* ldv, const double* t, const long long int* ldt,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* work, const long long int* ldwork );

void SGEQRT2( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* t, const long long int* ldt, long long int* info );
void SGEQRT2_( const long long int* m, const long long int* n, float* a,
               const long long int* lda, float* t, const long long int* ldt, long long int* info );
void sgeqrt2( const long long int* m, const long long int* n, float* a, const long long int* lda,
              float* t, const long long int* ldt, long long int* info );
void sgeqrt2_( const long long int* m, const long long int* n, float* a,
               const long long int* lda, float* t, const long long int* ldt, long long int* info );

void SLA_GBAMV( const long long int* trans, const long long int* m, const long long int* n,
                const long long int* kl, const long long int* ku, const float* alpha,
                const float* ab, const long long int* ldab, const float* x,
                const long long int* incx, const float* beta, float* y,
                const long long int* incy );
void SLA_GBAMV_( const long long int* trans, const long long int* m, const long long int* n,
                 const long long int* kl, const long long int* ku, const float* alpha,
                 const float* ab, const long long int* ldab, const float* x,
                 const long long int* incx, const float* beta, float* y,
                 const long long int* incy );
void sla_gbamv( const long long int* trans, const long long int* m, const long long int* n,
                const long long int* kl, const long long int* ku, const float* alpha,
                const float* ab, const long long int* ldab, const float* x,
                const long long int* incx, const float* beta, float* y,
                const long long int* incy );
void sla_gbamv_( const long long int* trans, const long long int* m, const long long int* n,
                 const long long int* kl, const long long int* ku, const float* alpha,
                 const float* ab, const long long int* ldab, const float* x,
                 const long long int* incx, const float* beta, float* y,
                 const long long int* incy );

float SLA_GBRCOND( const char* trans, const long long int* n, const long long int* kl,
                   const long long int* ku, const float* ab, const long long int* ldab,
                   const float* afb, const long long int* ldafb,
                   const long long int* ipiv, const long long int* cmode, const float* c,
                   long long int* info, float* work, long long int* iwork );
float SLA_GBRCOND_( const char* trans, const long long int* n, const long long int* kl,
                    const long long int* ku, const float* ab, const long long int* ldab,
                    const float* afb, const long long int* ldafb,
                    const long long int* ipiv, const long long int* cmode, const float* c,
                    long long int* info, float* work, long long int* iwork );
float sla_gbrcond( const char* trans, const long long int* n, const long long int* kl,
                   const long long int* ku, const float* ab, const long long int* ldab,
                   const float* afb, const long long int* ldafb,
                   const long long int* ipiv, const long long int* cmode, const float* c,
                   long long int* info, float* work, long long int* iwork );
float sla_gbrcond_( const char* trans, const long long int* n, const long long int* kl,
                    const long long int* ku, const float* ab, const long long int* ldab,
                    const float* afb, const long long int* ldafb,
                    const long long int* ipiv, const long long int* cmode, const float* c,
                    long long int* info, float* work, long long int* iwork );

void SLA_GBRFSX_EXTENDED( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* kl, const long long int* ku,
                          const long long int* nrhs, const float* ab,
                          const long long int* ldab, const float* afb,
                          const long long int* ldafb, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const float* b, const long long int* ldb, float* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, float* res, float* ayb,
                          float* dy, float* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void SLA_GBRFSX_EXTENDED_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* kl, const long long int* ku,
                           const long long int* nrhs, const float* ab,
                           const long long int* ldab, const float* afb,
                           const long long int* ldafb, const long long int* ipiv,
                           const long long int* colequ, const float* c,
                           const float* b, const long long int* ldb, float* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, float* res, float* ayb,
                           float* dy, float* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void sla_gbrfsx_extended( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* kl, const long long int* ku,
                          const long long int* nrhs, const float* ab,
                          const long long int* ldab, const float* afb,
                          const long long int* ldafb, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const float* b, const long long int* ldb, float* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, float* res, float* ayb,
                          float* dy, float* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void sla_gbrfsx_extended_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* kl, const long long int* ku,
                           const long long int* nrhs, const float* ab,
                           const long long int* ldab, const float* afb,
                           const long long int* ldafb, const long long int* ipiv,
                           const long long int* colequ, const float* c,
                           const float* b, const long long int* ldb, float* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, float* res, float* ayb,
                           float* dy, float* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

float SLA_GBRPVGRW( const long long int* n, const long long int* kl, const long long int* ku,
                    const long long int* ncols, const float* ab,
                    const long long int* ldab, const float* afb,
                    const long long int* ldafb );
float SLA_GBRPVGRW_( const long long int* n, const long long int* kl, const long long int* ku,
                     const long long int* ncols, const float* ab,
                     const long long int* ldab, const float* afb,
                     const long long int* ldafb );
float sla_gbrpvgrw( const long long int* n, const long long int* kl, const long long int* ku,
                    const long long int* ncols, const float* ab,
                    const long long int* ldab, const float* afb,
                    const long long int* ldafb );
float sla_gbrpvgrw_( const long long int* n, const long long int* kl, const long long int* ku,
                     const long long int* ncols, const float* ab,
                     const long long int* ldab, const float* afb,
                     const long long int* ldafb );

void SLA_GEAMV( const long long int* trans, const long long int* m, const long long int* n,
                const float* alpha, const float* a, const long long int* lda,
                const float* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void SLA_GEAMV_( const long long int* trans, const long long int* m, const long long int* n,
                 const float* alpha, const float* a, const long long int* lda,
                 const float* x, const long long int* incx, const float* beta,
                 float* y, const long long int* incy );
void sla_geamv( const long long int* trans, const long long int* m, const long long int* n,
                const float* alpha, const float* a, const long long int* lda,
                const float* x, const long long int* incx, const float* beta,
                float* y, const long long int* incy );
void sla_geamv_( const long long int* trans, const long long int* m, const long long int* n,
                 const float* alpha, const float* a, const long long int* lda,
                 const float* x, const long long int* incx, const float* beta,
                 float* y, const long long int* incy );

float SLA_GERCOND( const char* trans, const long long int* n, const float* a,
                   const long long int* lda, const float* af, const long long int* ldaf,
                   const long long int* ipiv, const long long int* cmode, const float* c,
                   long long int* info, float* work, long long int* iwork );
float SLA_GERCOND_( const char* trans, const long long int* n, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf,
                    const long long int* ipiv, const long long int* cmode, const float* c,
                    long long int* info, float* work, long long int* iwork );
float sla_gercond( const char* trans, const long long int* n, const float* a,
                   const long long int* lda, const float* af, const long long int* ldaf,
                   const long long int* ipiv, const long long int* cmode, const float* c,
                   long long int* info, float* work, long long int* iwork );
float sla_gercond_( const char* trans, const long long int* n, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf,
                    const long long int* ipiv, const long long int* cmode, const float* c,
                    long long int* info, float* work, long long int* iwork );

void SLA_GERFSX_EXTENDED( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* nrhs, const float* a,
                          const long long int* lda, const float* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const float* b, const long long int* ldb, float* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* errs_n,
                          float* errs_c, float* res, float* ayb, float* dy,
                          float* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void SLA_GERFSX_EXTENDED_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* nrhs, const float* a,
                           const long long int* lda, const float* af,
                           const long long int* ldaf, const long long int* ipiv,
                           const long long int* colequ, const float* c,
                           const float* b, const long long int* ldb, float* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* errs_n,
                           float* errs_c, float* res, float* ayb, float* dy,
                           float* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void sla_gerfsx_extended( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* nrhs, const float* a,
                          const long long int* lda, const float* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const float* b, const long long int* ldb, float* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* errs_n,
                          float* errs_c, float* res, float* ayb, float* dy,
                          float* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void sla_gerfsx_extended_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* nrhs, const float* a,
                           const long long int* lda, const float* af,
                           const long long int* ldaf, const long long int* ipiv,
                           const long long int* colequ, const float* c,
                           const float* b, const long long int* ldb, float* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* errs_n,
                           float* errs_c, float* res, float* ayb, float* dy,
                           float* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

float SLA_GERPVGRW( const long long int* n, const long long int* ncols, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf );
float SLA_GERPVGRW_( const long long int* n, const long long int* ncols, const float* a,
                     const long long int* lda, const float* af, const long long int* ldaf );
float sla_gerpvgrw( const long long int* n, const long long int* ncols, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf );
float sla_gerpvgrw_( const long long int* n, const long long int* ncols, const float* a,
                     const long long int* lda, const float* af, const long long int* ldaf );

void SLA_LIN_BERR( const long long int* n, const long long int* nz, const long long int* nrhs,
                   const float* res, const float* ayb, float* berr );
void SLA_LIN_BERR_( const long long int* n, const long long int* nz, const long long int* nrhs,
                    const float* res, const float* ayb, float* berr );
void sla_lin_berr( const long long int* n, const long long int* nz, const long long int* nrhs,
                   const float* res, const float* ayb, float* berr );
void sla_lin_berr_( const long long int* n, const long long int* nz, const long long int* nrhs,
                    const float* res, const float* ayb, float* berr );

float SLA_PORCOND( const char* uplo, const long long int* n, const float* a,
                   const long long int* lda, const float* af, const long long int* ldaf,
                   const long long int* cmode, const float* c, long long int* info,
                   float* work, long long int* iwork );
float SLA_PORCOND_( const char* uplo, const long long int* n, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf,
                    const long long int* cmode, const float* c, long long int* info,
                    float* work, long long int* iwork );
float sla_porcond( const char* uplo, const long long int* n, const float* a,
                   const long long int* lda, const float* af, const long long int* ldaf,
                   const long long int* cmode, const float* c, long long int* info,
                   float* work, long long int* iwork );
float sla_porcond_( const char* uplo, const long long int* n, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf,
                    const long long int* cmode, const float* c, long long int* info,
                    float* work, long long int* iwork );

void SLA_PORFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const float* a, const long long int* lda, const float* af,
                          const long long int* ldaf, const long long int* colequ,
                          const float* c, const float* b, const long long int* ldb,
                          float* y, const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, float* res, float* ayb,
                          float* dy, float* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void SLA_PORFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const float* a, const long long int* lda,
                           const float* af, const long long int* ldaf,
                           const long long int* colequ, const float* c,
                           const float* b, const long long int* ldb, float* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, float* res, float* ayb,
                           float* dy, float* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void sla_porfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const float* a, const long long int* lda, const float* af,
                          const long long int* ldaf, const long long int* colequ,
                          const float* c, const float* b, const long long int* ldb,
                          float* y, const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, float* res, float* ayb,
                          float* dy, float* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void sla_porfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const float* a, const long long int* lda,
                           const float* af, const long long int* ldaf,
                           const long long int* colequ, const float* c,
                           const float* b, const long long int* ldb, float* y,
                           const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, float* res, float* ayb,
                           float* dy, float* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

float SLA_PORPVGRW( const char* uplo, const long long int* ncols, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf,
                    float* work );
float SLA_PORPVGRW_( const char* uplo, const long long int* ncols, const float* a,
                     const long long int* lda, const float* af, const long long int* ldaf,
                     float* work );
float sla_porpvgrw( const char* uplo, const long long int* ncols, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf,
                    float* work );
float sla_porpvgrw_( const char* uplo, const long long int* ncols, const float* a,
                     const long long int* lda, const float* af, const long long int* ldaf,
                     float* work );

void SLA_SYAMV( const long long int* uplo, const long long int* n, const float* alpha,
                const float* a, const long long int* lda, const float* x,
                const long long int* incx, const float* beta, float* y,
                const long long int* incy );
void SLA_SYAMV_( const long long int* uplo, const long long int* n, const float* alpha,
                 const float* a, const long long int* lda, const float* x,
                 const long long int* incx, const float* beta, float* y,
                 const long long int* incy );
void sla_syamv( const long long int* uplo, const long long int* n, const float* alpha,
                const float* a, const long long int* lda, const float* x,
                const long long int* incx, const float* beta, float* y,
                const long long int* incy );
void sla_syamv_( const long long int* uplo, const long long int* n, const float* alpha,
                 const float* a, const long long int* lda, const float* x,
                 const long long int* incx, const float* beta, float* y,
                 const long long int* incy );

float SLA_SYRCOND( const char* uplo, const long long int* n, const float* a,
                   const long long int* lda, const float* af, const long long int* ldaf,
                   const long long int* ipiv, const long long int* cmode, const float* c,
                   long long int* info, float* work, long long int* iwork );
float SLA_SYRCOND_( const char* uplo, const long long int* n, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf,
                    const long long int* ipiv, const long long int* cmode, const float* c,
                    long long int* info, float* work, long long int* iwork );
float sla_syrcond( const char* uplo, const long long int* n, const float* a,
                   const long long int* lda, const float* af, const long long int* ldaf,
                   const long long int* ipiv, const long long int* cmode, const float* c,
                   long long int* info, float* work, long long int* iwork );
float sla_syrcond_( const char* uplo, const long long int* n, const float* a,
                    const long long int* lda, const float* af, const long long int* ldaf,
                    const long long int* ipiv, const long long int* cmode, const float* c,
                    long long int* info, float* work, long long int* iwork );

void SLA_SYRFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const float* a, const long long int* lda, const float* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const float* b, const long long int* ldb, float* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, float* res, float* ayb,
                          float* dy, float* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void SLA_SYRFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const float* a, const long long int* lda,
                           const float* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const float* c, const float* b, const long long int* ldb,
                           float* y, const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, float* res, float* ayb,
                           float* dy, float* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void sla_syrfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const float* a, const long long int* lda, const float* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const float* c,
                          const float* b, const long long int* ldb, float* y,
                          const long long int* ldy, float* berr_out,
                          const long long int* n_norms, float* err_bnds_norm,
                          float* err_bnds_comp, float* res, float* ayb,
                          float* dy, float* y_tail, const float* rcond,
                          const long long int* ithresh, const float* rthresh,
                          const float* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void sla_syrfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const float* a, const long long int* lda,
                           const float* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const float* c, const float* b, const long long int* ldb,
                           float* y, const long long int* ldy, float* berr_out,
                           const long long int* n_norms, float* err_bnds_norm,
                           float* err_bnds_comp, float* res, float* ayb,
                           float* dy, float* y_tail, const float* rcond,
                           const long long int* ithresh, const float* rthresh,
                           const float* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

float SLA_SYRPVGRW( const char* uplo, const long long int* n, const long long int* info,
                    const float* a, const long long int* lda, const float* af,
                    const long long int* ldaf, const long long int* ipiv, float* work );
float SLA_SYRPVGRW_( const char* uplo, const long long int* n, const long long int* info,
                     const float* a, const long long int* lda, const float* af,
                     const long long int* ldaf, const long long int* ipiv, float* work );
float sla_syrpvgrw( const char* uplo, const long long int* n, const long long int* info,
                    const float* a, const long long int* lda, const float* af,
                    const long long int* ldaf, const long long int* ipiv, float* work );
float sla_syrpvgrw_( const char* uplo, const long long int* n, const long long int* info,
                     const float* a, const long long int* lda, const float* af,
                     const long long int* ldaf, const long long int* ipiv, float* work );

void SLA_WWADDW( const long long int* n, float* x, float* y, const float* w );
void SLA_WWADDW_( const long long int* n, float* x, float* y, const float* w );
void sla_wwaddw( const long long int* n, float* x, float* y, const float* w );
void sla_wwaddw_( const long long int* n, float* x, float* y, const float* w );

void STPRFB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const float* v,
             const long long int* ldv, const float* t, const long long int* ldt, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* work,
             const long long int* ldwork );
void STPRFB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const float* v,
              const long long int* ldv, const float* t, const long long int* ldt, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* work,
              const long long int* ldwork );
void stprfb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const float* v,
             const long long int* ldv, const float* t, const long long int* ldt, float* a,
             const long long int* lda, float* b, const long long int* ldb, float* work,
             const long long int* ldwork );
void stprfb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const float* v,
              const long long int* ldv, const float* t, const long long int* ldt, float* a,
              const long long int* lda, float* b, const long long int* ldb, float* work,
              const long long int* ldwork );

void ZGEQRT2( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* t, const long long int* ldt,
              long long int* info );
void ZGEQRT2_( const long long int* m, const long long int* n, MKL_Complex16* a,
               const long long int* lda, MKL_Complex16* t, const long long int* ldt,
               long long int* info );
void zgeqrt2( const long long int* m, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* t, const long long int* ldt,
              long long int* info );
void zgeqrt2_( const long long int* m, const long long int* n, MKL_Complex16* a,
               const long long int* lda, MKL_Complex16* t, const long long int* ldt,
               long long int* info );

void ZHESWAPR( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void ZHESWAPR_( const char* uplo, const long long int* n, MKL_Complex16* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );
void zheswapr( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* i1, const long long int* i2 );
void zheswapr_( const char* uplo, const long long int* n, MKL_Complex16* a,
                const long long int* lda, const long long int* i1, const long long int* i2 );

void ZHETRI2( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void ZHETRI2_( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
               const long long int* lwork, long long int* info );
void zhetri2( const char* uplo, const long long int* n, MKL_Complex16* a,
              const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
              const long long int* lwork, long long int* info );
void zhetri2_( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
               const long long int* lwork, long long int* info );

void ZHETRI2X( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
               const long long int* nb, long long int* info );
void ZHETRI2X_( const char* uplo, const long long int* n, MKL_Complex16* a,
                const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                const long long int* nb, long long int* info );
void zhetri2x( const char* uplo, const long long int* n, MKL_Complex16* a,
               const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
               const long long int* nb, long long int* info );
void zhetri2x_( const char* uplo, const long long int* n, MKL_Complex16* a,
                const long long int* lda, const long long int* ipiv, MKL_Complex16* work,
                const long long int* nb, long long int* info );

void ZLA_GBAMV( const long long int* trans, const long long int* m, const long long int* n,
                const long long int* kl, const long long int* ku, const double* alpha,
                const MKL_Complex16* ab, const long long int* ldab,
                const MKL_Complex16* x, const long long int* incx,
                const double* beta, double* y, const long long int* incy );
void ZLA_GBAMV_( const long long int* trans, const long long int* m, const long long int* n,
                 const long long int* kl, const long long int* ku, const double* alpha,
                 const MKL_Complex16* ab, const long long int* ldab,
                 const MKL_Complex16* x, const long long int* incx,
                 const double* beta, double* y, const long long int* incy );
void zla_gbamv( const long long int* trans, const long long int* m, const long long int* n,
                const long long int* kl, const long long int* ku, const double* alpha,
                const MKL_Complex16* ab, const long long int* ldab,
                const MKL_Complex16* x, const long long int* incx,
                const double* beta, double* y, const long long int* incy );
void zla_gbamv_( const long long int* trans, const long long int* m, const long long int* n,
                 const long long int* kl, const long long int* ku, const double* alpha,
                 const MKL_Complex16* ab, const long long int* ldab,
                 const MKL_Complex16* x, const long long int* incx,
                 const double* beta, double* y, const long long int* incy );

double ZLA_GBRCOND_C( const char* trans, const long long int* n, const long long int* kl,
                      const long long int* ku, const MKL_Complex16* ab,
                      const long long int* ldab, const MKL_Complex16* afb,
                      const long long int* ldafb, const long long int* ipiv,
                      const double* c, const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double ZLA_GBRCOND_C_( const char* trans, const long long int* n, const long long int* kl,
                       const long long int* ku, const MKL_Complex16* ab,
                       const long long int* ldab, const MKL_Complex16* afb,
                       const long long int* ldafb, const long long int* ipiv,
                       const double* c, const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );
double zla_gbrcond_c( const char* trans, const long long int* n, const long long int* kl,
                      const long long int* ku, const MKL_Complex16* ab,
                      const long long int* ldab, const MKL_Complex16* afb,
                      const long long int* ldafb, const long long int* ipiv,
                      const double* c, const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double zla_gbrcond_c_( const char* trans, const long long int* n, const long long int* kl,
                       const long long int* ku, const MKL_Complex16* ab,
                       const long long int* ldab, const MKL_Complex16* afb,
                       const long long int* ldafb, const long long int* ipiv,
                       const double* c, const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );

double ZLA_GBRCOND_X( const char* trans, const long long int* n, const long long int* kl,
                      const long long int* ku, const MKL_Complex16* ab,
                      const long long int* ldab, const MKL_Complex16* afb,
                      const long long int* ldafb, const long long int* ipiv,
                      const MKL_Complex16* x, long long int* info,
                      MKL_Complex16* work, double* rwork );
double ZLA_GBRCOND_X_( const char* trans, const long long int* n, const long long int* kl,
                       const long long int* ku, const MKL_Complex16* ab,
                       const long long int* ldab, const MKL_Complex16* afb,
                       const long long int* ldafb, const long long int* ipiv,
                       const MKL_Complex16* x, long long int* info,
                       MKL_Complex16* work, double* rwork );
double zla_gbrcond_x( const char* trans, const long long int* n, const long long int* kl,
                      const long long int* ku, const MKL_Complex16* ab,
                      const long long int* ldab, const MKL_Complex16* afb,
                      const long long int* ldafb, const long long int* ipiv,
                      const MKL_Complex16* x, long long int* info,
                      MKL_Complex16* work, double* rwork );
double zla_gbrcond_x_( const char* trans, const long long int* n, const long long int* kl,
                       const long long int* ku, const MKL_Complex16* ab,
                       const long long int* ldab, const MKL_Complex16* afb,
                       const long long int* ldafb, const long long int* ipiv,
                       const MKL_Complex16* x, long long int* info,
                       MKL_Complex16* work, double* rwork );

void ZLA_GBRFSX_EXTENDED( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* kl, const long long int* ku,
                          const long long int* nrhs, const MKL_Complex16* ab,
                          const long long int* ldab, const MKL_Complex16* afb,
                          const long long int* ldafb, const long long int* ipiv,
                          const long long int* colequ, const double* c,
                          const MKL_Complex16* b, const long long int* ldb,
                          MKL_Complex16* y, const long long int* ldy,
                          double* berr_out, const long long int* n_norms,
                          double* err_bnds_norm, double* err_bnds_comp,
                          MKL_Complex16* res, double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void ZLA_GBRFSX_EXTENDED_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* kl, const long long int* ku,
                           const long long int* nrhs, const MKL_Complex16* ab,
                           const long long int* ldab, const MKL_Complex16* afb,
                           const long long int* ldafb, const long long int* ipiv,
                           const long long int* colequ, const double* c,
                           const MKL_Complex16* b, const long long int* ldb,
                           MKL_Complex16* y, const long long int* ldy,
                           double* berr_out, const long long int* n_norms,
                           double* err_bnds_norm, double* err_bnds_comp,
                           MKL_Complex16* res, double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void zla_gbrfsx_extended( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* kl, const long long int* ku,
                          const long long int* nrhs, const MKL_Complex16* ab,
                          const long long int* ldab, const MKL_Complex16* afb,
                          const long long int* ldafb, const long long int* ipiv,
                          const long long int* colequ, const double* c,
                          const MKL_Complex16* b, const long long int* ldb,
                          MKL_Complex16* y, const long long int* ldy,
                          double* berr_out, const long long int* n_norms,
                          double* err_bnds_norm, double* err_bnds_comp,
                          MKL_Complex16* res, double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void zla_gbrfsx_extended_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* kl, const long long int* ku,
                           const long long int* nrhs, const MKL_Complex16* ab,
                           const long long int* ldab, const MKL_Complex16* afb,
                           const long long int* ldafb, const long long int* ipiv,
                           const long long int* colequ, const double* c,
                           const MKL_Complex16* b, const long long int* ldb,
                           MKL_Complex16* y, const long long int* ldy,
                           double* berr_out, const long long int* n_norms,
                           double* err_bnds_norm, double* err_bnds_comp,
                           MKL_Complex16* res, double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

double ZLA_GBRPVGRW( const long long int* n, const long long int* kl, const long long int* ku,
                     const long long int* ncols, const MKL_Complex16* ab,
                     const long long int* ldab, const MKL_Complex16* afb,
                     const long long int* ldafb );
double ZLA_GBRPVGRW_( const long long int* n, const long long int* kl, const long long int* ku,
                      const long long int* ncols, const MKL_Complex16* ab,
                      const long long int* ldab, const MKL_Complex16* afb,
                      const long long int* ldafb );
double zla_gbrpvgrw( const long long int* n, const long long int* kl, const long long int* ku,
                     const long long int* ncols, const MKL_Complex16* ab,
                     const long long int* ldab, const MKL_Complex16* afb,
                     const long long int* ldafb );
double zla_gbrpvgrw_( const long long int* n, const long long int* kl, const long long int* ku,
                      const long long int* ncols, const MKL_Complex16* ab,
                      const long long int* ldab, const MKL_Complex16* afb,
                      const long long int* ldafb );

void ZLA_GEAMV( const long long int* trans, const long long int* m, const long long int* n,
                const double* alpha, const MKL_Complex16* a,
                const long long int* lda, const MKL_Complex16* x,
                const long long int* incx, const double* beta, double* y,
                const long long int* incy );
void ZLA_GEAMV_( const long long int* trans, const long long int* m, const long long int* n,
                 const double* alpha, const MKL_Complex16* a,
                 const long long int* lda, const MKL_Complex16* x,
                 const long long int* incx, const double* beta, double* y,
                 const long long int* incy );
void zla_geamv( const long long int* trans, const long long int* m, const long long int* n,
                const double* alpha, const MKL_Complex16* a,
                const long long int* lda, const MKL_Complex16* x,
                const long long int* incx, const double* beta, double* y,
                const long long int* incy );
void zla_geamv_( const long long int* trans, const long long int* m, const long long int* n,
                 const double* alpha, const MKL_Complex16* a,
                 const long long int* lda, const MKL_Complex16* x,
                 const long long int* incx, const double* beta, double* y,
                 const long long int* incy );

double ZLA_GERCOND_C( const char* trans, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const double* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double ZLA_GERCOND_C_( const char* trans, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const double* c,
                       const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );
double zla_gercond_c( const char* trans, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const double* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double zla_gercond_c_( const char* trans, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const double* c,
                       const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );

double ZLA_GERCOND_X( const char* trans, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex16* x,
                      long long int* info, MKL_Complex16* work, double* rwork );
double ZLA_GERCOND_X_( const char* trans, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const MKL_Complex16* x,
                       long long int* info, MKL_Complex16* work, double* rwork );
double zla_gercond_x( const char* trans, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex16* x,
                      long long int* info, MKL_Complex16* work, double* rwork );
double zla_gercond_x_( const char* trans, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const MKL_Complex16* x,
                       long long int* info, MKL_Complex16* work, double* rwork );

void ZLA_GERFSX_EXTENDED( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* nrhs, const MKL_Complex16* a,
                          const long long int* lda, const MKL_Complex16* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const double* c,
                          const MKL_Complex16* b, const long long int* ldb,
                          MKL_Complex16* y, const long long int* ldy,
                          double* berr_out, const long long int* n_norms,
                          double* errs_n, double* errs_c, MKL_Complex16* res,
                          double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void ZLA_GERFSX_EXTENDED_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* nrhs, const MKL_Complex16* a,
                           const long long int* lda, const MKL_Complex16* af,
                           const long long int* ldaf, const long long int* ipiv,
                           const long long int* colequ, const double* c,
                           const MKL_Complex16* b, const long long int* ldb,
                           MKL_Complex16* y, const long long int* ldy,
                           double* berr_out, const long long int* n_norms,
                           double* errs_n, double* errs_c, MKL_Complex16* res,
                           double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void zla_gerfsx_extended( const long long int* prec_type,
                          const long long int* trans_type, const long long int* n,
                          const long long int* nrhs, const MKL_Complex16* a,
                          const long long int* lda, const MKL_Complex16* af,
                          const long long int* ldaf, const long long int* ipiv,
                          const long long int* colequ, const double* c,
                          const MKL_Complex16* b, const long long int* ldb,
                          MKL_Complex16* y, const long long int* ldy,
                          double* berr_out, const long long int* n_norms,
                          double* errs_n, double* errs_c, MKL_Complex16* res,
                          double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void zla_gerfsx_extended_( const long long int* prec_type,
                           const long long int* trans_type, const long long int* n,
                           const long long int* nrhs, const MKL_Complex16* a,
                           const long long int* lda, const MKL_Complex16* af,
                           const long long int* ldaf, const long long int* ipiv,
                           const long long int* colequ, const double* c,
                           const MKL_Complex16* b, const long long int* ldb,
                           MKL_Complex16* y, const long long int* ldy,
                           double* berr_out, const long long int* n_norms,
                           double* errs_n, double* errs_c, MKL_Complex16* res,
                           double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

double ZLA_GERPVGRW( const long long int* n, const long long int* ncols,
                     const MKL_Complex16* a, const long long int* lda,
                     const MKL_Complex16* af, const long long int* ldaf );
double ZLA_GERPVGRW_( const long long int* n, const long long int* ncols,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf );
double zla_gerpvgrw( const long long int* n, const long long int* ncols,
                     const MKL_Complex16* a, const long long int* lda,
                     const MKL_Complex16* af, const long long int* ldaf );
double zla_gerpvgrw_( const long long int* n, const long long int* ncols,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf );

void ZLA_HEAMV( const long long int* uplo, const long long int* n, const double* alpha,
                const MKL_Complex16* a, const long long int* lda,
                const MKL_Complex16* x, const long long int* incx,
                const double* beta, double* y, const long long int* incy );
void ZLA_HEAMV_( const long long int* uplo, const long long int* n, const double* alpha,
                 const MKL_Complex16* a, const long long int* lda,
                 const MKL_Complex16* x, const long long int* incx,
                 const double* beta, double* y, const long long int* incy );
void zla_heamv( const long long int* uplo, const long long int* n, const double* alpha,
                const MKL_Complex16* a, const long long int* lda,
                const MKL_Complex16* x, const long long int* incx,
                const double* beta, double* y, const long long int* incy );
void zla_heamv_( const long long int* uplo, const long long int* n, const double* alpha,
                 const MKL_Complex16* a, const long long int* lda,
                 const MKL_Complex16* x, const long long int* incx,
                 const double* beta, double* y, const long long int* incy );

double ZLA_HERCOND_C( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const double* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double ZLA_HERCOND_C_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const double* c,
                       const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );
double zla_hercond_c( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const double* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double zla_hercond_c_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const double* c,
                       const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );

double ZLA_HERCOND_X( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex16* x,
                      long long int* info, MKL_Complex16* work, double* rwork );
double ZLA_HERCOND_X_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const MKL_Complex16* x,
                       long long int* info, MKL_Complex16* work, double* rwork );
double zla_hercond_x( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex16* x,
                      long long int* info, MKL_Complex16* work, double* rwork );
double zla_hercond_x_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const MKL_Complex16* x,
                       long long int* info, MKL_Complex16* work, double* rwork );

void ZLA_HERFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex16* a, const long long int* lda,
                          const MKL_Complex16* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const double* c, const MKL_Complex16* b,
                          const long long int* ldb, MKL_Complex16* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* err_bnds_norm,
                          double* err_bnds_comp, MKL_Complex16* res,
                          double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void ZLA_HERFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex16* a, const long long int* lda,
                           const MKL_Complex16* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const double* c, const MKL_Complex16* b,
                           const long long int* ldb, MKL_Complex16* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* err_bnds_norm,
                           double* err_bnds_comp, MKL_Complex16* res,
                           double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void zla_herfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex16* a, const long long int* lda,
                          const MKL_Complex16* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const double* c, const MKL_Complex16* b,
                          const long long int* ldb, MKL_Complex16* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* err_bnds_norm,
                          double* err_bnds_comp, MKL_Complex16* res,
                          double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void zla_herfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex16* a, const long long int* lda,
                           const MKL_Complex16* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const double* c, const MKL_Complex16* b,
                           const long long int* ldb, MKL_Complex16* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* err_bnds_norm,
                           double* err_bnds_comp, MKL_Complex16* res,
                           double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

double ZLA_HERPVGRW( const char* uplo, const long long int* n, const long long int* info,
                     const MKL_Complex16* a, const long long int* lda,
                     const MKL_Complex16* af, const long long int* ldaf,
                     const long long int* ipiv, double* work );
double ZLA_HERPVGRW_( const char* uplo, const long long int* n, const long long int* info,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, double* work );
double zla_herpvgrw( const char* uplo, const long long int* n, const long long int* info,
                     const MKL_Complex16* a, const long long int* lda,
                     const MKL_Complex16* af, const long long int* ldaf,
                     const long long int* ipiv, double* work );
double zla_herpvgrw_( const char* uplo, const long long int* n, const long long int* info,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, double* work );

void ZLA_LIN_BERR( const long long int* n, const long long int* nz, const long long int* nrhs,
                   const MKL_Complex16* res, const double* ayb, double* berr );
void ZLA_LIN_BERR_( const long long int* n, const long long int* nz, const long long int* nrhs,
                    const MKL_Complex16* res, const double* ayb, double* berr );
void zla_lin_berr( const long long int* n, const long long int* nz, const long long int* nrhs,
                   const MKL_Complex16* res, const double* ayb, double* berr );
void zla_lin_berr_( const long long int* n, const long long int* nz, const long long int* nrhs,
                    const MKL_Complex16* res, const double* ayb, double* berr );

double ZLA_PORCOND_C( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const double* c, const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double ZLA_PORCOND_C_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const double* c, const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );
double zla_porcond_c( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const double* c, const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double zla_porcond_c_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const double* c, const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );

double ZLA_PORCOND_X( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const MKL_Complex16* x, long long int* info,
                      MKL_Complex16* work, double* rwork );
double ZLA_PORCOND_X_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const MKL_Complex16* x, long long int* info,
                       MKL_Complex16* work, double* rwork );
double zla_porcond_x( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const MKL_Complex16* x, long long int* info,
                      MKL_Complex16* work, double* rwork );
double zla_porcond_x_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const MKL_Complex16* x, long long int* info,
                       MKL_Complex16* work, double* rwork );

void ZLA_PORFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex16* a, const long long int* lda,
                          const MKL_Complex16* af, const long long int* ldaf,
                          const long long int* colequ, const double* c,
                          const MKL_Complex16* b, const long long int* ldb,
                          MKL_Complex16* y, const long long int* ldy,
                          double* berr_out, const long long int* n_norms,
                          double* err_bnds_norm, double* err_bnds_comp,
                          MKL_Complex16* res, double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void ZLA_PORFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex16* a, const long long int* lda,
                           const MKL_Complex16* af, const long long int* ldaf,
                           const long long int* colequ, const double* c,
                           const MKL_Complex16* b, const long long int* ldb,
                           MKL_Complex16* y, const long long int* ldy,
                           double* berr_out, const long long int* n_norms,
                           double* err_bnds_norm, double* err_bnds_comp,
                           MKL_Complex16* res, double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void zla_porfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex16* a, const long long int* lda,
                          const MKL_Complex16* af, const long long int* ldaf,
                          const long long int* colequ, const double* c,
                          const MKL_Complex16* b, const long long int* ldb,
                          MKL_Complex16* y, const long long int* ldy,
                          double* berr_out, const long long int* n_norms,
                          double* err_bnds_norm, double* err_bnds_comp,
                          MKL_Complex16* res, double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void zla_porfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex16* a, const long long int* lda,
                           const MKL_Complex16* af, const long long int* ldaf,
                           const long long int* colequ, const double* c,
                           const MKL_Complex16* b, const long long int* ldb,
                           MKL_Complex16* y, const long long int* ldy,
                           double* berr_out, const long long int* n_norms,
                           double* err_bnds_norm, double* err_bnds_comp,
                           MKL_Complex16* res, double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

double ZLA_PORPVGRW( const char* uplo, const long long int* ncols,
                     const MKL_Complex16* a, const long long int* lda,
                     const MKL_Complex16* af, const long long int* ldaf,
                     double* work );
double ZLA_PORPVGRW_( const char* uplo, const long long int* ncols,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      double* work );
double zla_porpvgrw( const char* uplo, const long long int* ncols,
                     const MKL_Complex16* a, const long long int* lda,
                     const MKL_Complex16* af, const long long int* ldaf,
                     double* work );
double zla_porpvgrw_( const char* uplo, const long long int* ncols,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      double* work );

void ZLA_SYAMV( const long long int* uplo, const long long int* n, const double* alpha,
                const MKL_Complex16* a, const long long int* lda,
                const MKL_Complex16* x, const long long int* incx,
                const double* beta, double* y, const long long int* incy );
void ZLA_SYAMV_( const long long int* uplo, const long long int* n, const double* alpha,
                 const MKL_Complex16* a, const long long int* lda,
                 const MKL_Complex16* x, const long long int* incx,
                 const double* beta, double* y, const long long int* incy );
void zla_syamv( const long long int* uplo, const long long int* n, const double* alpha,
                const MKL_Complex16* a, const long long int* lda,
                const MKL_Complex16* x, const long long int* incx,
                const double* beta, double* y, const long long int* incy );
void zla_syamv_( const long long int* uplo, const long long int* n, const double* alpha,
                 const MKL_Complex16* a, const long long int* lda,
                 const MKL_Complex16* x, const long long int* incx,
                 const double* beta, double* y, const long long int* incy );

double ZLA_SYRCOND_C( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const double* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double ZLA_SYRCOND_C_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const double* c,
                       const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );
double zla_syrcond_c( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const double* c,
                      const long long int* capply, long long int* info,
                      MKL_Complex16* work, double* rwork );
double zla_syrcond_c_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const double* c,
                       const long long int* capply, long long int* info,
                       MKL_Complex16* work, double* rwork );

double ZLA_SYRCOND_X( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex16* x,
                      long long int* info, MKL_Complex16* work, double* rwork );
double ZLA_SYRCOND_X_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const MKL_Complex16* x,
                       long long int* info, MKL_Complex16* work, double* rwork );
double zla_syrcond_x( const char* uplo, const long long int* n,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, const MKL_Complex16* x,
                      long long int* info, MKL_Complex16* work, double* rwork );
double zla_syrcond_x_( const char* uplo, const long long int* n,
                       const MKL_Complex16* a, const long long int* lda,
                       const MKL_Complex16* af, const long long int* ldaf,
                       const long long int* ipiv, const MKL_Complex16* x,
                       long long int* info, MKL_Complex16* work, double* rwork );

void ZLA_SYRFSX_EXTENDED( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex16* a, const long long int* lda,
                          const MKL_Complex16* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const double* c, const MKL_Complex16* b,
                          const long long int* ldb, MKL_Complex16* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* err_bnds_norm,
                          double* err_bnds_comp, MKL_Complex16* res,
                          double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void ZLA_SYRFSX_EXTENDED_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex16* a, const long long int* lda,
                           const MKL_Complex16* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const double* c, const MKL_Complex16* b,
                           const long long int* ldb, MKL_Complex16* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* err_bnds_norm,
                           double* err_bnds_comp, MKL_Complex16* res,
                           double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );
void zla_syrfsx_extended( const long long int* prec_type, const char* uplo,
                          const long long int* n, const long long int* nrhs,
                          const MKL_Complex16* a, const long long int* lda,
                          const MKL_Complex16* af, const long long int* ldaf,
                          const long long int* ipiv, const long long int* colequ,
                          const double* c, const MKL_Complex16* b,
                          const long long int* ldb, MKL_Complex16* y,
                          const long long int* ldy, double* berr_out,
                          const long long int* n_norms, double* err_bnds_norm,
                          double* err_bnds_comp, MKL_Complex16* res,
                          double* ayb, MKL_Complex16* dy,
                          MKL_Complex16* y_tail, const double* rcond,
                          const long long int* ithresh, const double* rthresh,
                          const double* dz_ub, const long long int* ignore_cwise,
                          long long int* info );
void zla_syrfsx_extended_( const long long int* prec_type, const char* uplo,
                           const long long int* n, const long long int* nrhs,
                           const MKL_Complex16* a, const long long int* lda,
                           const MKL_Complex16* af, const long long int* ldaf,
                           const long long int* ipiv, const long long int* colequ,
                           const double* c, const MKL_Complex16* b,
                           const long long int* ldb, MKL_Complex16* y,
                           const long long int* ldy, double* berr_out,
                           const long long int* n_norms, double* err_bnds_norm,
                           double* err_bnds_comp, MKL_Complex16* res,
                           double* ayb, MKL_Complex16* dy,
                           MKL_Complex16* y_tail, const double* rcond,
                           const long long int* ithresh, const double* rthresh,
                           const double* dz_ub, const long long int* ignore_cwise,
                           long long int* info );

double ZLA_SYRPVGRW( const char* uplo, const long long int* n, const long long int* info,
                     const MKL_Complex16* a, const long long int* lda,
                     const MKL_Complex16* af, const long long int* ldaf,
                     const long long int* ipiv, double* work );
double ZLA_SYRPVGRW_( const char* uplo, const long long int* n, const long long int* info,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, double* work );
double zla_syrpvgrw( const char* uplo, const long long int* n, const long long int* info,
                     const MKL_Complex16* a, const long long int* lda,
                     const MKL_Complex16* af, const long long int* ldaf,
                     const long long int* ipiv, double* work );
double zla_syrpvgrw_( const char* uplo, const long long int* n, const long long int* info,
                      const MKL_Complex16* a, const long long int* lda,
                      const MKL_Complex16* af, const long long int* ldaf,
                      const long long int* ipiv, double* work );

void ZLA_WWADDW( const long long int* n, MKL_Complex16* x, MKL_Complex16* y,
                 const MKL_Complex16* w );
void ZLA_WWADDW_( const long long int* n, MKL_Complex16* x, MKL_Complex16* y,
                  const MKL_Complex16* w );
void zla_wwaddw( const long long int* n, MKL_Complex16* x, MKL_Complex16* y,
                 const MKL_Complex16* w );
void zla_wwaddw_( const long long int* n, MKL_Complex16* x, MKL_Complex16* y,
                  const MKL_Complex16* w );

void ZTPRFB( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const MKL_Complex16* v,
             const long long int* ldv, const MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* work, const long long int* ldwork );
void ZTPRFB_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const MKL_Complex16* v,
              const long long int* ldv, const MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* work, const long long int* ldwork );
void ztprfb( const char* side, const char* trans, const char* direct,
             const char* storev, const long long int* m, const long long int* n,
             const long long int* k, const long long int* l, const MKL_Complex16* v,
             const long long int* ldv, const MKL_Complex16* t, const long long int* ldt,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* work, const long long int* ldwork );
void ztprfb_( const char* side, const char* trans, const char* direct,
              const char* storev, const long long int* m, const long long int* n,
              const long long int* k, const long long int* l, const MKL_Complex16* v,
              const long long int* ldv, const MKL_Complex16* t, const long long int* ldt,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* work, const long long int* ldwork );





void CHERDB( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex8* a, const long long int* lda, float* d,
             float* e, MKL_Complex8* tau, MKL_Complex8* z, const long long int* ldz,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void CHERDB_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex8* a, const long long int* lda, float* d,
              float* e, MKL_Complex8* tau, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, long long int* info );
void cherdb( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex8* a, const long long int* lda, float* d,
             float* e, MKL_Complex8* tau, MKL_Complex8* z, const long long int* ldz,
             MKL_Complex8* work, const long long int* lwork, long long int* info );
void cherdb_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex8* a, const long long int* lda, float* d,
              float* e, MKL_Complex8* tau, MKL_Complex8* z, const long long int* ldz,
              MKL_Complex8* work, const long long int* lwork, long long int* info );

void DSYRDB( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, double* a, const long long int* lda, double* d,
             double* e, double* tau, double* z, const long long int* ldz,
             double* work, const long long int* lwork, long long int* info );
void DSYRDB_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, double* a, const long long int* lda, double* d,
              double* e, double* tau, double* z, const long long int* ldz,
              double* work, const long long int* lwork, long long int* info );
void dsyrdb( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, double* a, const long long int* lda, double* d,
             double* e, double* tau, double* z, const long long int* ldz,
             double* work, const long long int* lwork, long long int* info );
void dsyrdb_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, double* a, const long long int* lda, double* d,
              double* e, double* tau, double* z, const long long int* ldz,
              double* work, const long long int* lwork, long long int* info );

void SSYRDB( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, float* a, const long long int* lda, float* d,
             float* e, float* tau, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* info );
void SSYRDB_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, float* a, const long long int* lda, float* d,
              float* e, float* tau, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* info );
void ssyrdb( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, float* a, const long long int* lda, float* d,
             float* e, float* tau, float* z, const long long int* ldz, float* work,
             const long long int* lwork, long long int* info );
void ssyrdb_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, float* a, const long long int* lda, float* d,
              float* e, float* tau, float* z, const long long int* ldz, float* work,
              const long long int* lwork, long long int* info );

void ZHERDB( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex16* a, const long long int* lda,
             double* d, double* e, MKL_Complex16* tau, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void ZHERDB_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex16* a, const long long int* lda,
              double* d, double* e, MKL_Complex16* tau, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
              long long int* info );
void zherdb( const char* jobz, const char* uplo, const long long int* n,
             const long long int* kd, MKL_Complex16* a, const long long int* lda,
             double* d, double* e, MKL_Complex16* tau, MKL_Complex16* z,
             const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
             long long int* info );
void zherdb_( const char* jobz, const char* uplo, const long long int* n,
              const long long int* kd, MKL_Complex16* a, const long long int* lda,
              double* d, double* e, MKL_Complex16* tau, MKL_Complex16* z,
              const long long int* ldz, MKL_Complex16* work, const long long int* lwork,
              long long int* info );




void CDTSVB( const long long int* n, const long long int* nrhs, MKL_Complex8* dl,
             MKL_Complex8* d, const MKL_Complex8* du, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void CDTSVB_( const long long int* n, const long long int* nrhs, MKL_Complex8* dl,
              MKL_Complex8* d, const MKL_Complex8* du, MKL_Complex8* b,
              const long long int* ldb, long long int* info );
void cdtsvb( const long long int* n, const long long int* nrhs, MKL_Complex8* dl,
             MKL_Complex8* d, const MKL_Complex8* du, MKL_Complex8* b,
             const long long int* ldb, long long int* info );
void cdtsvb_( const long long int* n, const long long int* nrhs, MKL_Complex8* dl,
              MKL_Complex8* d, const MKL_Complex8* du, MKL_Complex8* b,
              const long long int* ldb, long long int* info );

void CDTTRFB( const long long int* n, MKL_Complex8* dl, MKL_Complex8* d,
              const MKL_Complex8* du, long long int* info );
void CDTTRFB_( const long long int* n, MKL_Complex8* dl, MKL_Complex8* d,
               const MKL_Complex8* du, long long int* info );
void cdttrfb( const long long int* n, MKL_Complex8* dl, MKL_Complex8* d,
              const MKL_Complex8* du, long long int* info );
void cdttrfb_( const long long int* n, MKL_Complex8* dl, MKL_Complex8* d,
               const MKL_Complex8* du, long long int* info );

void CDTTRSB( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* dl, const MKL_Complex8* d,
              const MKL_Complex8* du, MKL_Complex8* b, const long long int* ldb,
              long long int* info );
void CDTTRSB_( const char* trans, const long long int* n, const long long int* nrhs,
               const MKL_Complex8* dl, const MKL_Complex8* d,
               const MKL_Complex8* du, MKL_Complex8* b, const long long int* ldb,
               long long int* info );
void cdttrsb( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex8* dl, const MKL_Complex8* d,
              const MKL_Complex8* du, MKL_Complex8* b, const long long int* ldb,
              long long int* info );
void cdttrsb_( const char* trans, const long long int* n, const long long int* nrhs,
               const MKL_Complex8* dl, const MKL_Complex8* d,
               const MKL_Complex8* du, MKL_Complex8* b, const long long int* ldb,
               long long int* info );

void DDTSVB( const long long int* n, const long long int* nrhs, double* dl, double* d,
             const double* du, double* b, const long long int* ldb, long long int* info );
void DDTSVB_( const long long int* n, const long long int* nrhs, double* dl, double* d,
              const double* du, double* b, const long long int* ldb, long long int* info );
void ddtsvb( const long long int* n, const long long int* nrhs, double* dl, double* d,
             const double* du, double* b, const long long int* ldb, long long int* info );
void ddtsvb_( const long long int* n, const long long int* nrhs, double* dl, double* d,
              const double* du, double* b, const long long int* ldb, long long int* info );

void DDTTRFB( const long long int* n, double* dl, double* d, const double* du,
              long long int* info );
void DDTTRFB_( const long long int* n, double* dl, double* d, const double* du,
               long long int* info );
void ddttrfb( const long long int* n, double* dl, double* d, const double* du,
              long long int* info );
void ddttrfb_( const long long int* n, double* dl, double* d, const double* du,
               long long int* info );

void DDTTRSB( const char* trans, const long long int* n, const long long int* nrhs,
              const double* dl, const double* d, const double* du, double* b,
              const long long int* ldb, long long int* info );
void DDTTRSB_( const char* trans, const long long int* n, const long long int* nrhs,
               const double* dl, const double* d, const double* du, double* b,
               const long long int* ldb, long long int* info );
void ddttrsb( const char* trans, const long long int* n, const long long int* nrhs,
              const double* dl, const double* d, const double* du, double* b,
              const long long int* ldb, long long int* info );
void ddttrsb_( const char* trans, const long long int* n, const long long int* nrhs,
               const double* dl, const double* d, const double* du, double* b,
               const long long int* ldb, long long int* info );

void SDTSVB( const long long int* n, const long long int* nrhs, float* dl, float* d,
             const float* du, float* b, const long long int* ldb, long long int* info );
void SDTSVB_( const long long int* n, const long long int* nrhs, float* dl, float* d,
              const float* du, float* b, const long long int* ldb, long long int* info );
void sdtsvb( const long long int* n, const long long int* nrhs, float* dl, float* d,
             const float* du, float* b, const long long int* ldb, long long int* info );
void sdtsvb_( const long long int* n, const long long int* nrhs, float* dl, float* d,
              const float* du, float* b, const long long int* ldb, long long int* info );

void SDTTRFB( const long long int* n, float* dl, float* d, const float* du,
              long long int* info );
void SDTTRFB_( const long long int* n, float* dl, float* d, const float* du,
               long long int* info );
void sdttrfb( const long long int* n, float* dl, float* d, const float* du,
              long long int* info );
void sdttrfb_( const long long int* n, float* dl, float* d, const float* du,
               long long int* info );

void SDTTRSB( const char* trans, const long long int* n, const long long int* nrhs,
              const float* dl, const float* d, const float* du, float* b,
              const long long int* ldb, long long int* info );
void SDTTRSB_( const char* trans, const long long int* n, const long long int* nrhs,
               const float* dl, const float* d, const float* du, float* b,
               const long long int* ldb, long long int* info );
void sdttrsb( const char* trans, const long long int* n, const long long int* nrhs,
              const float* dl, const float* d, const float* du, float* b,
              const long long int* ldb, long long int* info );
void sdttrsb_( const char* trans, const long long int* n, const long long int* nrhs,
               const float* dl, const float* d, const float* du, float* b,
               const long long int* ldb, long long int* info );

void ZDTSVB( const long long int* n, const long long int* nrhs, MKL_Complex16* dl,
             MKL_Complex16* d, const MKL_Complex16* du, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void ZDTSVB_( const long long int* n, const long long int* nrhs, MKL_Complex16* dl,
              MKL_Complex16* d, const MKL_Complex16* du, MKL_Complex16* b,
              const long long int* ldb, long long int* info );
void zdtsvb( const long long int* n, const long long int* nrhs, MKL_Complex16* dl,
             MKL_Complex16* d, const MKL_Complex16* du, MKL_Complex16* b,
             const long long int* ldb, long long int* info );
void zdtsvb_( const long long int* n, const long long int* nrhs, MKL_Complex16* dl,
              MKL_Complex16* d, const MKL_Complex16* du, MKL_Complex16* b,
              const long long int* ldb, long long int* info );

void ZDTTRFB( const long long int* n, MKL_Complex16* dl, MKL_Complex16* d,
              const MKL_Complex16* du, long long int* info );
void ZDTTRFB_( const long long int* n, MKL_Complex16* dl, MKL_Complex16* d,
               const MKL_Complex16* du, long long int* info );
void zdttrfb( const long long int* n, MKL_Complex16* dl, MKL_Complex16* d,
              const MKL_Complex16* du, long long int* info );
void zdttrfb_( const long long int* n, MKL_Complex16* dl, MKL_Complex16* d,
               const MKL_Complex16* du, long long int* info );

void ZDTTRSB( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* dl, const MKL_Complex16* d,
              const MKL_Complex16* du, MKL_Complex16* b, const long long int* ldb,
              long long int* info );
void ZDTTRSB_( const char* trans, const long long int* n, const long long int* nrhs,
               const MKL_Complex16* dl, const MKL_Complex16* d,
               const MKL_Complex16* du, MKL_Complex16* b, const long long int* ldb,
               long long int* info );
void zdttrsb( const char* trans, const long long int* n, const long long int* nrhs,
              const MKL_Complex16* dl, const MKL_Complex16* d,
              const MKL_Complex16* du, MKL_Complex16* b, const long long int* ldb,
              long long int* info );
void zdttrsb_( const char* trans, const long long int* n, const long long int* nrhs,
               const MKL_Complex16* dl, const MKL_Complex16* d,
               const MKL_Complex16* du, MKL_Complex16* b, const long long int* ldb,
               long long int* info );



void MKL_CTPPACK( const char* uplo, const char* trans, const long long int* n,
                  MKL_Complex8* ap, const long long int* i, const long long int* j,
                  const long long int* rows, const long long int* cols,
                  const MKL_Complex8* a, const long long int* lda, long long int* info );
void MKL_CTPPACK_( const char* uplo, const char* trans, const long long int* n,
                   MKL_Complex8* ap, const long long int* i, const long long int* j,
                   const long long int* rows, const long long int* cols,
                   const MKL_Complex8* a, const long long int* lda, long long int* info );
void mkl_ctppack( const char* uplo, const char* trans, const long long int* n,
                  MKL_Complex8* ap, const long long int* i, const long long int* j,
                  const long long int* rows, const long long int* cols,
                  const MKL_Complex8* a, const long long int* lda, long long int* info );
void mkl_ctppack_( const char* uplo, const char* trans, const long long int* n,
                   MKL_Complex8* ap, const long long int* i, const long long int* j,
                   const long long int* rows, const long long int* cols,
                   const MKL_Complex8* a, const long long int* lda, long long int* info );

void MKL_DTPPACK( const char* uplo, const char* trans, const long long int* n,
                  double* ap, const long long int* i, const long long int* j,
                  const long long int* rows, const long long int* cols,
                  const double* a, const long long int* lda, long long int* info );
void MKL_DTPPACK_( const char* uplo, const char* trans, const long long int* n,
                   double* ap, const long long int* i, const long long int* j,
                   const long long int* rows, const long long int* cols,
                   const double* a, const long long int* lda, long long int* info );
void mkl_dtppack( const char* uplo, const char* trans, const long long int* n,
                  double* ap, const long long int* i, const long long int* j,
                  const long long int* rows, const long long int* cols,
                  const double* a, const long long int* lda, long long int* info );
void mkl_dtppack_( const char* uplo, const char* trans, const long long int* n,
                   double* ap, const long long int* i, const long long int* j,
                   const long long int* rows, const long long int* cols,
                   const double* a, const long long int* lda, long long int* info );

void MKL_STPPACK( const char* uplo, const char* trans, const long long int* n,
                  float* ap, const long long int* i, const long long int* j,
                  const long long int* rows, const long long int* cols,
                  const float* a, const long long int* lda, long long int* info );
void MKL_STPPACK_( const char* uplo, const char* trans, const long long int* n,
                   float* ap, const long long int* i, const long long int* j,
                   const long long int* rows, const long long int* cols,
                   const float* a, const long long int* lda, long long int* info );
void mkl_stppack( const char* uplo, const char* trans, const long long int* n,
                  float* ap, const long long int* i, const long long int* j,
                  const long long int* rows, const long long int* cols,
                  const float* a, const long long int* lda, long long int* info );
void mkl_stppack_( const char* uplo, const char* trans, const long long int* n,
                   float* ap, const long long int* i, const long long int* j,
                   const long long int* rows, const long long int* cols,
                   const float* a, const long long int* lda, long long int* info );

void MKL_ZTPPACK( const char* uplo, const char* trans, const long long int* n,
                  MKL_Complex16* ap, const long long int* i, const long long int* j,
                  const long long int* rows, const long long int* cols,
                  const MKL_Complex16* a, const long long int* lda, long long int* info );
void MKL_ZTPPACK_( const char* uplo, const char* trans, const long long int* n,
                   MKL_Complex16* ap, const long long int* i, const long long int* j,
                   const long long int* rows, const long long int* cols,
                   const MKL_Complex16* a, const long long int* lda, long long int* info );
void mkl_ztppack( const char* uplo, const char* trans, const long long int* n,
                  MKL_Complex16* ap, const long long int* i, const long long int* j,
                  const long long int* rows, const long long int* cols,
                  const MKL_Complex16* a, const long long int* lda, long long int* info );
void mkl_ztppack_( const char* uplo, const char* trans, const long long int* n,
                   MKL_Complex16* ap, const long long int* i, const long long int* j,
                   const long long int* rows, const long long int* cols,
                   const MKL_Complex16* a, const long long int* lda, long long int* info );

void MKL_CTPUNPACK( const char* uplo, const char* trans, const long long int* n,
                    const MKL_Complex8* ap, const long long int* i, const long long int* j,
                    const long long int* rows, const long long int* cols,
                    MKL_Complex8* a, const long long int* lda, long long int* info );
void MKL_CTPUNPACK_( const char* uplo, const char* trans, const long long int* n,
                     const MKL_Complex8* ap, const long long int* i, const long long int* j,
                     const long long int* rows, const long long int* cols,
                     MKL_Complex8* a, const long long int* lda, long long int* info );
void mkl_ctpunpack( const char* uplo, const char* trans, const long long int* n,
                    const MKL_Complex8* ap, const long long int* i, const long long int* j,
                    const long long int* rows, const long long int* cols,
                    MKL_Complex8* a, const long long int* lda, long long int* info );
void mkl_ctpunpack_( const char* uplo, const char* trans, const long long int* n,
                     const MKL_Complex8* ap, const long long int* i, const long long int* j,
                     const long long int* rows, const long long int* cols,
                     MKL_Complex8* a, const long long int* lda, long long int* info );

void MKL_DTPUNPACK( const char* uplo, const char* trans, const long long int* n,
                    const double* ap, const long long int* i, const long long int* j,
                    const long long int* rows, const long long int* cols,
                    double* a, const long long int* lda, long long int* info );
void MKL_DTPUNPACK_( const char* uplo, const char* trans, const long long int* n,
                     const double* ap, const long long int* i, const long long int* j,
                     const long long int* rows, const long long int* cols,
                     double* a, const long long int* lda, long long int* info );
void mkl_dtpunpack( const char* uplo, const char* trans, const long long int* n,
                    const double* ap, const long long int* i, const long long int* j,
                    const long long int* rows, const long long int* cols,
                    double* a, const long long int* lda, long long int* info );
void mkl_dtpunpack_( const char* uplo, const char* trans, const long long int* n,
                     const double* ap, const long long int* i, const long long int* j,
                     const long long int* rows, const long long int* cols,
                     double* a, const long long int* lda, long long int* info );

void MKL_STPUNPACK( const char* uplo, const char* trans, const long long int* n,
                    const float* ap, const long long int* i, const long long int* j,
                    const long long int* rows, const long long int* cols,
                    float* a, const long long int* lda, long long int* info );
void MKL_STPUNPACK_( const char* uplo, const char* trans, const long long int* n,
                     const float* ap, const long long int* i, const long long int* j,
                     const long long int* rows, const long long int* cols,
                     float* a, const long long int* lda, long long int* info );
void mkl_stpunpack( const char* uplo, const char* trans, const long long int* n,
                    const float* ap, const long long int* i, const long long int* j,
                    const long long int* rows, const long long int* cols,
                    float* a, const long long int* lda, long long int* info );
void mkl_stpunpack_( const char* uplo, const char* trans, const long long int* n,
                     const float* ap, const long long int* i, const long long int* j,
                     const long long int* rows, const long long int* cols,
                     float* a, const long long int* lda, long long int* info );

void MKL_ZTPUNPACK( const char* uplo, const char* trans, const long long int* n,
                    const MKL_Complex16* ap, const long long int* i, const long long int* j,
                    const long long int* rows, const long long int* cols,
                    MKL_Complex16* a, const long long int* lda, long long int* info );
void MKL_ZTPUNPACK_( const char* uplo, const char* trans, const long long int* n,
                     const MKL_Complex16* ap, const long long int* i, const long long int* j,
                     const long long int* rows, const long long int* cols,
                     MKL_Complex16* a, const long long int* lda, long long int* info );
void mkl_ztpunpack( const char* uplo, const char* trans, const long long int* n,
                    const MKL_Complex16* ap, const long long int* i, const long long int* j,
                    const long long int* rows, const long long int* cols,
                    MKL_Complex16* a, const long long int* lda, long long int* info );
void mkl_ztpunpack_( const char* uplo, const char* trans, const long long int* n,
                     const MKL_Complex16* ap, const long long int* i, const long long int* j,
                     const long long int* rows, const long long int* cols,
                     MKL_Complex16* a, const long long int* lda, long long int* info );


void DLATM1( const long long int* mode, const double* cond, const long long int* irsign,
             const long long int* idist, long long int* iseed, double* d,
             const long long int* n, long long int* info );
void DLATM1_( const long long int* mode, const double* cond, const long long int* irsign,
              const long long int* idist, long long int* iseed, double* d,
              const long long int* n, long long int* info );
void dlatm1( const long long int* mode, const double* cond, const long long int* irsign,
             const long long int* idist, long long int* iseed, double* d,
             const long long int* n, long long int* info );
void dlatm1_( const long long int* mode, const double* cond, const long long int* irsign,
              const long long int* idist, long long int* iseed, double* d,
              const long long int* n, long long int* info );

void SLATM1( const long long int* mode, const float* cond, const long long int* irsign,
             const long long int* idist, long long int* iseed, float* d,
             const long long int* n, long long int* info );
void SLATM1_( const long long int* mode, const float* cond, const long long int* irsign,
              const long long int* idist, long long int* iseed, float* d,
              const long long int* n, long long int* info );
void slatm1( const long long int* mode, const float* cond, const long long int* irsign,
             const long long int* idist, long long int* iseed, float* d,
             const long long int* n, long long int* info );
void slatm1_( const long long int* mode, const float* cond, const long long int* irsign,
              const long long int* idist, long long int* iseed, float* d,
              const long long int* n, long long int* info );

void CLATM1( const long long int* mode, const float* cond, const long long int* irsign,
             const long long int* idist, long long int* iseed, MKL_Complex8* d,
             const long long int* n, long long int* info );
void CLATM1_( const long long int* mode, const float* cond, const long long int* irsign,
              const long long int* idist, long long int* iseed, MKL_Complex8* d,
              const long long int* n, long long int* info );
void clatm1( const long long int* mode, const float* cond, const long long int* irsign,
             const long long int* idist, long long int* iseed, MKL_Complex8* d,
             const long long int* n, long long int* info );
void clatm1_( const long long int* mode, const float* cond, const long long int* irsign,
              const long long int* idist, long long int* iseed, MKL_Complex8* d,
              const long long int* n, long long int* info );

void ZLATM1( const long long int* mode, const double* cond, const long long int* irsign,
             const long long int* idist, long long int* iseed, MKL_Complex16* d,
             const long long int* n, long long int* info );
void ZLATM1_( const long long int* mode, const double* cond, const long long int* irsign,
              const long long int* idist, long long int* iseed, MKL_Complex16* d,
              const long long int* n, long long int* info );
void zlatm1( const long long int* mode, const double* cond, const long long int* irsign,
             const long long int* idist, long long int* iseed, MKL_Complex16* d,
             const long long int* n, long long int* info );
void zlatm1_( const long long int* mode, const double* cond, const long long int* irsign,
              const long long int* idist, long long int* iseed, MKL_Complex16* d,
              const long long int* n, long long int* info );

double DLATM2( const long long int* m, const long long int* n, long long int* ii,
               const long long int* j, const long long int* kl, const long long int* ku,
               const long long int* idist, long long int* iseed, const double* d,
               const long long int* igrade, const double* dl, const double* dr,
               const long long int* ipvtng, long long int* iwork, const double* sparse );
double DLATM2_( const long long int* m, const long long int* n, long long int* ii,
                const long long int* j, const long long int* kl, const long long int* ku,
                const long long int* idist, long long int* iseed, const double* d,
                const long long int* igrade, const double* dl, const double* dr,
                const long long int* ipvtng, long long int* iwork, const double* sparse );
double dlatm2( const long long int* m, const long long int* n, long long int* ii,
               const long long int* j, const long long int* kl, const long long int* ku,
               const long long int* idist, long long int* iseed, const double* d,
               const long long int* igrade, const double* dl, const double* dr,
               const long long int* ipvtng, long long int* iwork, const double* sparse );
double dlatm2_( const long long int* m, const long long int* n, long long int* ii,
                const long long int* j, const long long int* kl, const long long int* ku,
                const long long int* idist, long long int* iseed, const double* d,
                const long long int* igrade, const double* dl, const double* dr,
                const long long int* ipvtng, long long int* iwork, const double* sparse );

float SLATM2( const long long int* m, const long long int* n, long long int* ii,
              const long long int* j, const long long int* kl, const long long int* ku,
              const long long int* idist, long long int* iseed, const float* d,
              const long long int* igrade, const float* dl, const float* dr,
              const long long int* ipvtng, long long int* iwork, const float* sparse );
float SLATM2_( const long long int* m, const long long int* n, long long int* ii,
               const long long int* j, const long long int* kl, const long long int* ku,
               const long long int* idist, long long int* iseed, const float* d,
               const long long int* igrade, const float* dl, const float* dr,
               const long long int* ipvtng, long long int* iwork, const float* sparse );
float slatm2( const long long int* m, const long long int* n, long long int* ii,
              const long long int* j, const long long int* kl, const long long int* ku,
              const long long int* idist, long long int* iseed, const float* d,
              const long long int* igrade, const float* dl, const float* dr,
              const long long int* ipvtng, long long int* iwork, const float* sparse );
float slatm2_( const long long int* m, const long long int* n, long long int* ii,
               const long long int* j, const long long int* kl, const long long int* ku,
               const long long int* idist, long long int* iseed, const float* d,
               const long long int* igrade, const float* dl, const float* dr,
               const long long int* ipvtng, long long int* iwork, const float* sparse );

void CLATM2( MKL_Complex8* retval, const long long int* m, const long long int* n,
             long long int* ii, const long long int* j, const long long int* kl,
             const long long int* ku, const long long int* idist, long long int* iseed,
             const MKL_Complex8* d, const long long int* igrade,
             const MKL_Complex8* dl, const MKL_Complex8* dr,
             const long long int* ipvtng, long long int* iwork, const float* sparse );
void CLATM2_( MKL_Complex8* retval, const long long int* m, const long long int* n,
              long long int* ii, const long long int* j, const long long int* kl,
              const long long int* ku, const long long int* idist, long long int* iseed,
              const MKL_Complex8* d, const long long int* igrade,
              const MKL_Complex8* dl, const MKL_Complex8* dr,
              const long long int* ipvtng, long long int* iwork, const float* sparse );
void clatm2( MKL_Complex8* retval, const long long int* m, const long long int* n,
             long long int* ii, const long long int* j, const long long int* kl,
             const long long int* ku, const long long int* idist, long long int* iseed,
             const MKL_Complex8* d, const long long int* igrade,
             const MKL_Complex8* dl, const MKL_Complex8* dr,
             const long long int* ipvtng, long long int* iwork, const float* sparse );
void clatm2_( MKL_Complex8* retval, const long long int* m, const long long int* n,
              long long int* ii, const long long int* j, const long long int* kl,
              const long long int* ku, const long long int* idist, long long int* iseed,
              const MKL_Complex8* d, const long long int* igrade,
              const MKL_Complex8* dl, const MKL_Complex8* dr,
              const long long int* ipvtng, long long int* iwork, const float* sparse );

void ZLATM2( MKL_Complex16* retval, const long long int* m, const long long int* n,
             long long int* ii, const long long int* j, const long long int* kl,
             const long long int* ku, const long long int* idist, long long int* iseed,
             const MKL_Complex16* d, const long long int* igrade,
             const MKL_Complex16* dl, const MKL_Complex16* dr,
             const long long int* ipvtng, long long int* iwork, const double* sparse );
void ZLATM2_( MKL_Complex16* retval, const long long int* m, const long long int* n,
              long long int* ii, const long long int* j, const long long int* kl,
              const long long int* ku, const long long int* idist, long long int* iseed,
              const MKL_Complex16* d, const long long int* igrade,
              const MKL_Complex16* dl, const MKL_Complex16* dr,
              const long long int* ipvtng, long long int* iwork, const double* sparse );
void zlatm2( MKL_Complex16* retval, const long long int* m, const long long int* n,
             long long int* ii, const long long int* j, const long long int* kl,
             const long long int* ku, const long long int* idist, long long int* iseed,
             const MKL_Complex16* d, const long long int* igrade,
             const MKL_Complex16* dl, const MKL_Complex16* dr,
             const long long int* ipvtng, long long int* iwork, const double* sparse );
void zlatm2_( MKL_Complex16* retval, const long long int* m, const long long int* n,
              long long int* ii, const long long int* j, const long long int* kl,
              const long long int* ku, const long long int* idist, long long int* iseed,
              const MKL_Complex16* d, const long long int* igrade,
              const MKL_Complex16* dl, const MKL_Complex16* dr,
              const long long int* ipvtng, long long int* iwork, const double* sparse );

double DLATM3( const long long int* m, const long long int* n, long long int* ii,
               const long long int* j, long long int* isub, long long int* jsub,
               const long long int* kl, const long long int* ku, const long long int* idist,
               long long int* iseed, const double* d, const long long int* igrade,
               const double* dl, const double* dr, const long long int* ipvtng,
               const long long int* iwork, const double* sparse );
double DLATM3_( const long long int* m, const long long int* n, long long int* ii,
                const long long int* j, long long int* isub, long long int* jsub,
                const long long int* kl, const long long int* ku, const long long int* idist,
                long long int* iseed, const double* d, const long long int* igrade,
                const double* dl, const double* dr, const long long int* ipvtng,
                const long long int* iwork, const double* sparse );
double dlatm3( const long long int* m, const long long int* n, long long int* ii,
               const long long int* j, long long int* isub, long long int* jsub,
               const long long int* kl, const long long int* ku, const long long int* idist,
               long long int* iseed, const double* d, const long long int* igrade,
               const double* dl, const double* dr, const long long int* ipvtng,
               const long long int* iwork, const double* sparse );
double dlatm3_( const long long int* m, const long long int* n, long long int* ii,
                const long long int* j, long long int* isub, long long int* jsub,
                const long long int* kl, const long long int* ku, const long long int* idist,
                long long int* iseed, const double* d, const long long int* igrade,
                const double* dl, const double* dr, const long long int* ipvtng,
                const long long int* iwork, const double* sparse );

float SLATM3( const long long int* m, const long long int* n, long long int* ii,
              const long long int* j, long long int* isub, long long int* jsub,
              const long long int* kl, const long long int* ku, const long long int* idist,
              long long int* iseed, const float* d, const long long int* igrade,
              const float* dl, const float* dr, const long long int* ipvtng,
              const long long int* iwork, const float* sparse );
float SLATM3_( const long long int* m, const long long int* n, long long int* ii,
               const long long int* j, long long int* isub, long long int* jsub,
               const long long int* kl, const long long int* ku, const long long int* idist,
               long long int* iseed, const float* d, const long long int* igrade,
               const float* dl, const float* dr, const long long int* ipvtng,
               const long long int* iwork, const float* sparse );
float slatm3( const long long int* m, const long long int* n, long long int* ii,
              const long long int* j, long long int* isub, long long int* jsub,
              const long long int* kl, const long long int* ku, const long long int* idist,
              long long int* iseed, const float* d, const long long int* igrade,
              const float* dl, const float* dr, const long long int* ipvtng,
              const long long int* iwork, const float* sparse );
float slatm3_( const long long int* m, const long long int* n, long long int* ii,
               const long long int* j, long long int* isub, long long int* jsub,
               const long long int* kl, const long long int* ku, const long long int* idist,
               long long int* iseed, const float* d, const long long int* igrade,
               const float* dl, const float* dr, const long long int* ipvtng,
               const long long int* iwork, const float* sparse );

void CLATM3( MKL_Complex8* retval, const long long int* m, const long long int* n,
             long long int* ii, const long long int* j, long long int* isub, long long int* jsub,
             const long long int* kl, const long long int* ku, const long long int* idist,
             long long int* iseed, const MKL_Complex8* d, const long long int* igrade,
             const MKL_Complex8* dl, const MKL_Complex8* dr,
             const long long int* ipvtng, const long long int* iwork,
             const float* sparse );
void CLATM3_( MKL_Complex8* retval, const long long int* m, const long long int* n,
              long long int* ii, const long long int* j, long long int* isub, long long int* jsub,
              const long long int* kl, const long long int* ku, const long long int* idist,
              long long int* iseed, const MKL_Complex8* d, const long long int* igrade,
              const MKL_Complex8* dl, const MKL_Complex8* dr,
              const long long int* ipvtng, const long long int* iwork,
              const float* sparse );
void clatm3( MKL_Complex8* retval, const long long int* m, const long long int* n,
             long long int* ii, const long long int* j, long long int* isub, long long int* jsub,
             const long long int* kl, const long long int* ku, const long long int* idist,
             long long int* iseed, const MKL_Complex8* d, const long long int* igrade,
             const MKL_Complex8* dl, const MKL_Complex8* dr,
             const long long int* ipvtng, const long long int* iwork,
             const float* sparse );
void clatm3_( MKL_Complex8* retval, const long long int* m, const long long int* n,
              long long int* ii, const long long int* j, long long int* isub, long long int* jsub,
              const long long int* kl, const long long int* ku, const long long int* idist,
              long long int* iseed, const MKL_Complex8* d, const long long int* igrade,
              const MKL_Complex8* dl, const MKL_Complex8* dr,
              const long long int* ipvtng, const long long int* iwork,
              const float* sparse );

void ZLATM3( MKL_Complex16* retval, const long long int* m, const long long int* n,
             long long int* ii, const long long int* j, long long int* isub, long long int* jsub,
             const long long int* kl, const long long int* ku, const long long int* idist,
             long long int* iseed, const MKL_Complex16* d, const long long int* igrade,
             const MKL_Complex16* dl, const MKL_Complex16* dr,
             const long long int* ipvtng, const long long int* iwork,
             const double* sparse );
void ZLATM3_( MKL_Complex16* retval, const long long int* m, const long long int* n,
              long long int* ii, const long long int* j, long long int* isub, long long int* jsub,
              const long long int* kl, const long long int* ku, const long long int* idist,
              long long int* iseed, const MKL_Complex16* d, const long long int* igrade,
              const MKL_Complex16* dl, const MKL_Complex16* dr,
              const long long int* ipvtng, const long long int* iwork,
              const double* sparse );
void zlatm3( MKL_Complex16* retval, const long long int* m, const long long int* n,
             long long int* ii, const long long int* j, long long int* isub, long long int* jsub,
             const long long int* kl, const long long int* ku, const long long int* idist,
             long long int* iseed, const MKL_Complex16* d, const long long int* igrade,
             const MKL_Complex16* dl, const MKL_Complex16* dr,
             const long long int* ipvtng, const long long int* iwork,
             const double* sparse );
void zlatm3_( MKL_Complex16* retval, const long long int* m, const long long int* n,
              long long int* ii, const long long int* j, long long int* isub, long long int* jsub,
              const long long int* kl, const long long int* ku, const long long int* idist,
              long long int* iseed, const MKL_Complex16* d, const long long int* igrade,
              const MKL_Complex16* dl, const MKL_Complex16* dr,
              const long long int* ipvtng, const long long int* iwork,
              const double* sparse );

void DLATM5( const long long int* prtype, const long long int* m, const long long int* n,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* c, const long long int* ldc, double* d, const long long int* ldd,
             double* e, const long long int* lde, double* f, const long long int* ldf,
             double* r, const long long int* ldr, double* l, const long long int* ldl,
             const double* alpha, const long long int* qblcka,
             const long long int* qblckb );
void DLATM5_( const long long int* prtype, const long long int* m, const long long int* n,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* c, const long long int* ldc, double* d, const long long int* ldd,
              double* e, const long long int* lde, double* f, const long long int* ldf,
              double* r, const long long int* ldr, double* l, const long long int* ldl,
              const double* alpha, const long long int* qblcka,
              const long long int* qblckb );
void dlatm5( const long long int* prtype, const long long int* m, const long long int* n,
             double* a, const long long int* lda, double* b, const long long int* ldb,
             double* c, const long long int* ldc, double* d, const long long int* ldd,
             double* e, const long long int* lde, double* f, const long long int* ldf,
             double* r, const long long int* ldr, double* l, const long long int* ldl,
             const double* alpha, const long long int* qblcka,
             const long long int* qblckb );
void dlatm5_( const long long int* prtype, const long long int* m, const long long int* n,
              double* a, const long long int* lda, double* b, const long long int* ldb,
              double* c, const long long int* ldc, double* d, const long long int* ldd,
              double* e, const long long int* lde, double* f, const long long int* ldf,
              double* r, const long long int* ldr, double* l, const long long int* ldl,
              const double* alpha, const long long int* qblcka,
              const long long int* qblckb );

void SLATM5( const long long int* prtype, const long long int* m, const long long int* n,
             float* a, const long long int* lda, float* b, const long long int* ldb,
             float* c, const long long int* ldc, float* d, const long long int* ldd,
             float* e, const long long int* lde, float* f, const long long int* ldf,
             float* r, const long long int* ldr, float* l, const long long int* ldl,
             const float* alpha, const long long int* qblcka,
             const long long int* qblckb );
void SLATM5_( const long long int* prtype, const long long int* m, const long long int* n,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              float* c, const long long int* ldc, float* d, const long long int* ldd,
              float* e, const long long int* lde, float* f, const long long int* ldf,
              float* r, const long long int* ldr, float* l, const long long int* ldl,
              const float* alpha, const long long int* qblcka,
              const long long int* qblckb );
void slatm5( const long long int* prtype, const long long int* m, const long long int* n,
             float* a, const long long int* lda, float* b, const long long int* ldb,
             float* c, const long long int* ldc, float* d, const long long int* ldd,
             float* e, const long long int* lde, float* f, const long long int* ldf,
             float* r, const long long int* ldr, float* l, const long long int* ldl,
             const float* alpha, const long long int* qblcka,
             const long long int* qblckb );
void slatm5_( const long long int* prtype, const long long int* m, const long long int* n,
              float* a, const long long int* lda, float* b, const long long int* ldb,
              float* c, const long long int* ldc, float* d, const long long int* ldd,
              float* e, const long long int* lde, float* f, const long long int* ldf,
              float* r, const long long int* ldr, float* l, const long long int* ldl,
              const float* alpha, const long long int* qblcka,
              const long long int* qblckb );

void CLATM5( const long long int* prtype, const long long int* m, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* d, const long long int* ldd, MKL_Complex8* e,
             const long long int* lde, MKL_Complex8* f, const long long int* ldf,
             MKL_Complex8* r, const long long int* ldr, MKL_Complex8* l,
             const long long int* ldl, const float* alpha, const long long int* qblcka,
             const long long int* qblckb );
void CLATM5_( const long long int* prtype, const long long int* m, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* d, const long long int* ldd, MKL_Complex8* e,
              const long long int* lde, MKL_Complex8* f, const long long int* ldf,
              MKL_Complex8* r, const long long int* ldr, MKL_Complex8* l,
              const long long int* ldl, const float* alpha, const long long int* qblcka,
              const long long int* qblckb );
void clatm5( const long long int* prtype, const long long int* m, const long long int* n,
             MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
             const long long int* ldb, MKL_Complex8* c, const long long int* ldc,
             MKL_Complex8* d, const long long int* ldd, MKL_Complex8* e,
             const long long int* lde, MKL_Complex8* f, const long long int* ldf,
             MKL_Complex8* r, const long long int* ldr, MKL_Complex8* l,
             const long long int* ldl, const float* alpha, const long long int* qblcka,
             const long long int* qblckb );
void clatm5_( const long long int* prtype, const long long int* m, const long long int* n,
              MKL_Complex8* a, const long long int* lda, MKL_Complex8* b,
              const long long int* ldb, MKL_Complex8* c, const long long int* ldc,
              MKL_Complex8* d, const long long int* ldd, MKL_Complex8* e,
              const long long int* lde, MKL_Complex8* f, const long long int* ldf,
              MKL_Complex8* r, const long long int* ldr, MKL_Complex8* l,
              const long long int* ldl, const float* alpha, const long long int* qblcka,
              const long long int* qblckb );

void ZLATM5( const long long int* prtype, const long long int* m, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* d, const long long int* ldd, MKL_Complex16* e,
             const long long int* lde, MKL_Complex16* f, const long long int* ldf,
             MKL_Complex16* r, const long long int* ldr, MKL_Complex16* l,
             const long long int* ldl, const double* alpha, const long long int* qblcka,
             const long long int* qblckb );
void ZLATM5_( const long long int* prtype, const long long int* m, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* d, const long long int* ldd, MKL_Complex16* e,
              const long long int* lde, MKL_Complex16* f, const long long int* ldf,
              MKL_Complex16* r, const long long int* ldr, MKL_Complex16* l,
              const long long int* ldl, const double* alpha, const long long int* qblcka,
              const long long int* qblckb );
void zlatm5( const long long int* prtype, const long long int* m, const long long int* n,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
             const long long int* ldb, MKL_Complex16* c, const long long int* ldc,
             MKL_Complex16* d, const long long int* ldd, MKL_Complex16* e,
             const long long int* lde, MKL_Complex16* f, const long long int* ldf,
             MKL_Complex16* r, const long long int* ldr, MKL_Complex16* l,
             const long long int* ldl, const double* alpha, const long long int* qblcka,
             const long long int* qblckb );
void zlatm5_( const long long int* prtype, const long long int* m, const long long int* n,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* b,
              const long long int* ldb, MKL_Complex16* c, const long long int* ldc,
              MKL_Complex16* d, const long long int* ldd, MKL_Complex16* e,
              const long long int* lde, MKL_Complex16* f, const long long int* ldf,
              MKL_Complex16* r, const long long int* ldr, MKL_Complex16* l,
              const long long int* ldl, const double* alpha, const long long int* qblcka,
              const long long int* qblckb );

void DLATM6( const long long int* type, const long long int* n, double* a,
             const long long int* lda, double* b, double* x, const long long int* ldx,
             double* y, const long long int* ldy, const double* alpha,
             const double* beta, const double* wx, const double* wy, double* s,
             double* dif );
void DLATM6_( const long long int* type, const long long int* n, double* a,
              const long long int* lda, double* b, double* x, const long long int* ldx,
              double* y, const long long int* ldy, const double* alpha,
              const double* beta, const double* wx, const double* wy,
              double* s, double* dif );
void dlatm6( const long long int* type, const long long int* n, double* a,
             const long long int* lda, double* b, double* x, const long long int* ldx,
             double* y, const long long int* ldy, const double* alpha,
             const double* beta, const double* wx, const double* wy, double* s,
             double* dif );
void dlatm6_( const long long int* type, const long long int* n, double* a,
              const long long int* lda, double* b, double* x, const long long int* ldx,
              double* y, const long long int* ldy, const double* alpha,
              const double* beta, const double* wx, const double* wy,
              double* s, double* dif );

void SLATM6( const long long int* type, const long long int* n, float* a,
             const long long int* lda, float* b, float* x, const long long int* ldx,
             float* y, const long long int* ldy, const float* alpha,
             const float* beta, const float* wx, const float* wy, float* s,
             float* dif );
void SLATM6_( const long long int* type, const long long int* n, float* a,
              const long long int* lda, float* b, float* x, const long long int* ldx,
              float* y, const long long int* ldy, const float* alpha,
              const float* beta, const float* wx, const float* wy, float* s,
              float* dif );
void slatm6( const long long int* type, const long long int* n, float* a,
             const long long int* lda, float* b, float* x, const long long int* ldx,
             float* y, const long long int* ldy, const float* alpha,
             const float* beta, const float* wx, const float* wy, float* s,
             float* dif );
void slatm6_( const long long int* type, const long long int* n, float* a,
              const long long int* lda, float* b, float* x, const long long int* ldx,
              float* y, const long long int* ldy, const float* alpha,
              const float* beta, const float* wx, const float* wy, float* s,
              float* dif );

void CLATM6( const long long int* type, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, MKL_Complex8* x,
             const long long int* ldx, MKL_Complex8* y, const long long int* ldy,
             const MKL_Complex8* alpha, const MKL_Complex8* beta,
             const MKL_Complex8* wx, const MKL_Complex8* wy, float* s,
             float* dif );
void CLATM6_( const long long int* type, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, MKL_Complex8* x,
              const long long int* ldx, MKL_Complex8* y, const long long int* ldy,
              const MKL_Complex8* alpha, const MKL_Complex8* beta,
              const MKL_Complex8* wx, const MKL_Complex8* wy, float* s,
              float* dif );
void clatm6( const long long int* type, const long long int* n, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* b, MKL_Complex8* x,
             const long long int* ldx, MKL_Complex8* y, const long long int* ldy,
             const MKL_Complex8* alpha, const MKL_Complex8* beta,
             const MKL_Complex8* wx, const MKL_Complex8* wy, float* s,
             float* dif );
void clatm6_( const long long int* type, const long long int* n, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* b, MKL_Complex8* x,
              const long long int* ldx, MKL_Complex8* y, const long long int* ldy,
              const MKL_Complex8* alpha, const MKL_Complex8* beta,
              const MKL_Complex8* wx, const MKL_Complex8* wy, float* s,
              float* dif );

void ZLATM6( const long long int* type, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, MKL_Complex16* x,
             const long long int* ldx, MKL_Complex16* y, const long long int* ldy,
             const MKL_Complex16* alpha, const MKL_Complex16* beta,
             const MKL_Complex16* wx, const MKL_Complex16* wy, double* s,
             double* dif );
void ZLATM6_( const long long int* type, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, MKL_Complex16* x,
              const long long int* ldx, MKL_Complex16* y, const long long int* ldy,
              const MKL_Complex16* alpha, const MKL_Complex16* beta,
              const MKL_Complex16* wx, const MKL_Complex16* wy, double* s,
              double* dif );
void zlatm6( const long long int* type, const long long int* n, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* b, MKL_Complex16* x,
             const long long int* ldx, MKL_Complex16* y, const long long int* ldy,
             const MKL_Complex16* alpha, const MKL_Complex16* beta,
             const MKL_Complex16* wx, const MKL_Complex16* wy, double* s,
             double* dif );
void zlatm6_( const long long int* type, const long long int* n, MKL_Complex16* a,
              const long long int* lda, MKL_Complex16* b, MKL_Complex16* x,
              const long long int* ldx, MKL_Complex16* y, const long long int* ldy,
              const MKL_Complex16* alpha, const MKL_Complex16* beta,
              const MKL_Complex16* wx, const MKL_Complex16* wy, double* s,
              double* dif );

void DLATME( const long long int* n, const char* dist, long long int* iseed, double* d,
             const long long int* mode, const double* cond, const double* dmax,
             const char* ei, const char* rsign, const char* upper,
             const char* sim, double* ds, const long long int* modes,
             const double* conds, const long long int* kl, const long long int* ku,
             const double* anorm, double* a, const long long int* lda, double* work,
             long long int* info );
void DLATME_( const long long int* n, const char* dist, long long int* iseed, double* d,
              const long long int* mode, const double* cond, const double* dmax,
              const char* ei, const char* rsign, const char* upper,
              const char* sim, double* ds, const long long int* modes,
              const double* conds, const long long int* kl, const long long int* ku,
              const double* anorm, double* a, const long long int* lda,
              double* work, long long int* info );
void dlatme( const long long int* n, const char* dist, long long int* iseed, double* d,
             const long long int* mode, const double* cond, const double* dmax,
             const char* ei, const char* rsign, const char* upper,
             const char* sim, double* ds, const long long int* modes,
             const double* conds, const long long int* kl, const long long int* ku,
             const double* anorm, double* a, const long long int* lda, double* work,
             long long int* info );
void dlatme_( const long long int* n, const char* dist, long long int* iseed, double* d,
              const long long int* mode, const double* cond, const double* dmax,
              const char* ei, const char* rsign, const char* upper,
              const char* sim, double* ds, const long long int* modes,
              const double* conds, const long long int* kl, const long long int* ku,
              const double* anorm, double* a, const long long int* lda,
              double* work, long long int* info );

void SLATME( const long long int* n, const char* dist, long long int* iseed, float* d,
             const long long int* mode, const float* cond, const float* dmax,
             const char* ei, const char* rsign, const char* upper,
             const char* sim, float* ds, const long long int* modes,
             const float* conds, const long long int* kl, const long long int* ku,
             const float* anorm, float* a, const long long int* lda, float* work,
             long long int* info );
void SLATME_( const long long int* n, const char* dist, long long int* iseed, float* d,
              const long long int* mode, const float* cond, const float* dmax,
              const char* ei, const char* rsign, const char* upper,
              const char* sim, float* ds, const long long int* modes,
              const float* conds, const long long int* kl, const long long int* ku,
              const float* anorm, float* a, const long long int* lda, float* work,
              long long int* info );
void slatme( const long long int* n, const char* dist, long long int* iseed, float* d,
             const long long int* mode, const float* cond, const float* dmax,
             const char* ei, const char* rsign, const char* upper,
             const char* sim, float* ds, const long long int* modes,
             const float* conds, const long long int* kl, const long long int* ku,
             const float* anorm, float* a, const long long int* lda, float* work,
             long long int* info );
void slatme_( const long long int* n, const char* dist, long long int* iseed, float* d,
              const long long int* mode, const float* cond, const float* dmax,
              const char* ei, const char* rsign, const char* upper,
              const char* sim, float* ds, const long long int* modes,
              const float* conds, const long long int* kl, const long long int* ku,
              const float* anorm, float* a, const long long int* lda, float* work,
              long long int* info );

void CLATME( const long long int* n, const char* dist, long long int* iseed,
             MKL_Complex8* d, const long long int* mode, const float* cond,
             const MKL_Complex8* dmax, const char* rsign, const char* upper,
             const char* sim, float* ds, const long long int* modes,
             const float* conds, const long long int* kl, const long long int* ku,
             const float* anorm, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* work, long long int* info );
void CLATME_( const long long int* n, const char* dist, long long int* iseed,
              MKL_Complex8* d, const long long int* mode, const float* cond,
              const MKL_Complex8* dmax, const char* rsign, const char* upper,
              const char* sim, float* ds, const long long int* modes,
              const float* conds, const long long int* kl, const long long int* ku,
              const float* anorm, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* work, long long int* info );
void clatme( const long long int* n, const char* dist, long long int* iseed,
             MKL_Complex8* d, const long long int* mode, const float* cond,
             const MKL_Complex8* dmax, const char* rsign, const char* upper,
             const char* sim, float* ds, const long long int* modes,
             const float* conds, const long long int* kl, const long long int* ku,
             const float* anorm, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* work, long long int* info );
void clatme_( const long long int* n, const char* dist, long long int* iseed,
              MKL_Complex8* d, const long long int* mode, const float* cond,
              const MKL_Complex8* dmax, const char* rsign, const char* upper,
              const char* sim, float* ds, const long long int* modes,
              const float* conds, const long long int* kl, const long long int* ku,
              const float* anorm, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* work, long long int* info );

void ZLATME( const long long int* n, const char* dist, long long int* iseed,
             MKL_Complex16* d, const long long int* mode, const double* cond,
             const MKL_Complex16* dmax, const char* rsign, const char* upper,
             const char* sim, double* ds, const long long int* modes,
             const double* conds, const long long int* kl, const long long int* ku,
             const double* anorm, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* work, long long int* info );
void ZLATME_( const long long int* n, const char* dist, long long int* iseed,
              MKL_Complex16* d, const long long int* mode, const double* cond,
              const MKL_Complex16* dmax, const char* rsign, const char* upper,
              const char* sim, double* ds, const long long int* modes,
              const double* conds, const long long int* kl, const long long int* ku,
              const double* anorm, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* work, long long int* info );
void zlatme( const long long int* n, const char* dist, long long int* iseed,
             MKL_Complex16* d, const long long int* mode, const double* cond,
             const MKL_Complex16* dmax, const char* rsign, const char* upper,
             const char* sim, double* ds, const long long int* modes,
             const double* conds, const long long int* kl, const long long int* ku,
             const double* anorm, MKL_Complex16* a, const long long int* lda,
             MKL_Complex16* work, long long int* info );
void zlatme_( const long long int* n, const char* dist, long long int* iseed,
              MKL_Complex16* d, const long long int* mode, const double* cond,
              const MKL_Complex16* dmax, const char* rsign, const char* upper,
              const char* sim, double* ds, const long long int* modes,
              const double* conds, const long long int* kl, const long long int* ku,
              const double* anorm, MKL_Complex16* a, const long long int* lda,
              MKL_Complex16* work, long long int* info );

void DLATMR( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, double* d, const long long int* mode,
             const double* cond, const double* dmax, const char* rsign,
             const char* grade, double* dl, const long long int* model,
             const double* condl, double* dr, const long long int* moder,
             const double* condr, const char* pivtng, const long long int* ipivot,
             const long long int* kl, const long long int* ku, const double* sparse,
             const double* anorm, const char* pack, double* a,
             const long long int* lda, long long int* iwork, long long int* info );
void DLATMR_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, double* d,
              const long long int* mode, const double* cond, const double* dmax,
              const char* rsign, const char* grade, double* dl,
              const long long int* model, const double* condl, double* dr,
              const long long int* moder, const double* condr, const char* pivtng,
              const long long int* ipivot, const long long int* kl, const long long int* ku,
              const double* sparse, const double* anorm, const char* pack,
              double* a, const long long int* lda, long long int* iwork, long long int* info );
void dlatmr( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, double* d, const long long int* mode,
             const double* cond, const double* dmax, const char* rsign,
             const char* grade, double* dl, const long long int* model,
             const double* condl, double* dr, const long long int* moder,
             const double* condr, const char* pivtng, const long long int* ipivot,
             const long long int* kl, const long long int* ku, const double* sparse,
             const double* anorm, const char* pack, double* a,
             const long long int* lda, long long int* iwork, long long int* info );
void dlatmr_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, double* d,
              const long long int* mode, const double* cond, const double* dmax,
              const char* rsign, const char* grade, double* dl,
              const long long int* model, const double* condl, double* dr,
              const long long int* moder, const double* condr, const char* pivtng,
              const long long int* ipivot, const long long int* kl, const long long int* ku,
              const double* sparse, const double* anorm, const char* pack,
              double* a, const long long int* lda, long long int* iwork, long long int* info );

void SLATMR( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, const float* d,
             const long long int* mode, const float* cond, const float* dmax,
             const char* rsign, const char* grade, float* dl,
             const long long int* model, const float* condl, float* dr,
             const long long int* moder, const float* condr, const char* pivtng,
             const long long int* ipivot, const long long int* kl, const long long int* ku,
             const float* sparse, const float* anorm, const char* pack,
             float* a, const long long int* lda, long long int* iwork, long long int* info );
void SLATMR_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, const float* d,
              const long long int* mode, const float* cond, const float* dmax,
              const char* rsign, const char* grade, float* dl,
              const long long int* model, const float* condl, float* dr,
              const long long int* moder, const float* condr, const char* pivtng,
              const long long int* ipivot, const long long int* kl, const long long int* ku,
              const float* sparse, const float* anorm, const char* pack,
              float* a, const long long int* lda, long long int* iwork, long long int* info );
void slatmr( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, const float* d,
             const long long int* mode, const float* cond, const float* dmax,
             const char* rsign, const char* grade, float* dl,
             const long long int* model, const float* condl, float* dr,
             const long long int* moder, const float* condr, const char* pivtng,
             const long long int* ipivot, const long long int* kl, const long long int* ku,
             const float* sparse, const float* anorm, const char* pack,
             float* a, const long long int* lda, long long int* iwork, long long int* info );
void slatmr_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, const float* d,
              const long long int* mode, const float* cond, const float* dmax,
              const char* rsign, const char* grade, float* dl,
              const long long int* model, const float* condl, float* dr,
              const long long int* moder, const float* condr, const char* pivtng,
              const long long int* ipivot, const long long int* kl, const long long int* ku,
              const float* sparse, const float* anorm, const char* pack,
              float* a, const long long int* lda, long long int* iwork, long long int* info );

void CLATMR( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, MKL_Complex8* d,
             const long long int* mode, const float* cond,
             const MKL_Complex8* dmax, const char* rsign, const char* grade,
             MKL_Complex8* dl, const long long int* model, const float* condl,
             MKL_Complex8* dr, const long long int* moder, const float* condr,
             const char* pivtng, const long long int* ipivot, const long long int* kl,
             const long long int* ku, const float* sparse, const float* anorm,
             const char* pack, MKL_Complex8* a, const long long int* lda,
             long long int* iwork, long long int* info );
void CLATMR_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, MKL_Complex8* d,
              const long long int* mode, const float* cond,
              const MKL_Complex8* dmax, const char* rsign, const char* grade,
              MKL_Complex8* dl, const long long int* model, const float* condl,
              MKL_Complex8* dr, const long long int* moder, const float* condr,
              const char* pivtng, const long long int* ipivot, const long long int* kl,
              const long long int* ku, const float* sparse, const float* anorm,
              const char* pack, MKL_Complex8* a, const long long int* lda,
              long long int* iwork, long long int* info );
void clatmr( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, MKL_Complex8* d,
             const long long int* mode, const float* cond,
             const MKL_Complex8* dmax, const char* rsign, const char* grade,
             MKL_Complex8* dl, const long long int* model, const float* condl,
             MKL_Complex8* dr, const long long int* moder, const float* condr,
             const char* pivtng, const long long int* ipivot, const long long int* kl,
             const long long int* ku, const float* sparse, const float* anorm,
             const char* pack, MKL_Complex8* a, const long long int* lda,
             long long int* iwork, long long int* info );
void clatmr_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, MKL_Complex8* d,
              const long long int* mode, const float* cond,
              const MKL_Complex8* dmax, const char* rsign, const char* grade,
              MKL_Complex8* dl, const long long int* model, const float* condl,
              MKL_Complex8* dr, const long long int* moder, const float* condr,
              const char* pivtng, const long long int* ipivot, const long long int* kl,
              const long long int* ku, const float* sparse, const float* anorm,
              const char* pack, MKL_Complex8* a, const long long int* lda,
              long long int* iwork, long long int* info );

void ZLATMR( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, MKL_Complex16* d,
             const long long int* mode, const double* cond,
             const MKL_Complex16* dmax, const char* rsign, const char* grade,
             MKL_Complex16* dl, const long long int* model, const double* condl,
             MKL_Complex16* dr, const long long int* moder, const double* condr,
             const char* pivtng, const long long int* ipivot, const long long int* kl,
             const long long int* ku, const double* sparse, const double* anorm,
             const char* pack, MKL_Complex16* a, const long long int* lda,
             long long int* iwork, long long int* info );
void ZLATMR_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, MKL_Complex16* d,
              const long long int* mode, const double* cond,
              const MKL_Complex16* dmax, const char* rsign, const char* grade,
              MKL_Complex16* dl, const long long int* model, const double* condl,
              MKL_Complex16* dr, const long long int* moder, const double* condr,
              const char* pivtng, const long long int* ipivot, const long long int* kl,
              const long long int* ku, const double* sparse, const double* anorm,
              const char* pack, MKL_Complex16* a, const long long int* lda,
              long long int* iwork, long long int* info );
void zlatmr( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, MKL_Complex16* d,
             const long long int* mode, const double* cond,
             const MKL_Complex16* dmax, const char* rsign, const char* grade,
             MKL_Complex16* dl, const long long int* model, const double* condl,
             MKL_Complex16* dr, const long long int* moder, const double* condr,
             const char* pivtng, const long long int* ipivot, const long long int* kl,
             const long long int* ku, const double* sparse, const double* anorm,
             const char* pack, MKL_Complex16* a, const long long int* lda,
             long long int* iwork, long long int* info );
void zlatmr_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, MKL_Complex16* d,
              const long long int* mode, const double* cond,
              const MKL_Complex16* dmax, const char* rsign, const char* grade,
              MKL_Complex16* dl, const long long int* model, const double* condl,
              MKL_Complex16* dr, const long long int* moder, const double* condr,
              const char* pivtng, const long long int* ipivot, const long long int* kl,
              const long long int* ku, const double* sparse, const double* anorm,
              const char* pack, MKL_Complex16* a, const long long int* lda,
              long long int* iwork, long long int* info );

void DLATMS( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, double* d, const long long int* mode,
             const double* cond, const double* dmax, const long long int* kl,
             const long long int* ku, const char* pack, double* a,
             const long long int* lda, double* work, long long int* info );
void DLATMS_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, double* d,
              const long long int* mode, const double* cond, const double* dmax,
              const long long int* kl, const long long int* ku, const char* pack,
              double* a, const long long int* lda, double* work, long long int* info );
void dlatms( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, double* d, const long long int* mode,
             const double* cond, const double* dmax, const long long int* kl,
             const long long int* ku, const char* pack, double* a,
             const long long int* lda, double* work, long long int* info );
void dlatms_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, double* d,
              const long long int* mode, const double* cond, const double* dmax,
              const long long int* kl, const long long int* ku, const char* pack,
              double* a, const long long int* lda, double* work, long long int* info );

void SLATMS( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, float* d, const long long int* mode,
             const float* cond, const float* dmax, const long long int* kl,
             const long long int* ku, const char* pack, float* a,
             const long long int* lda, float* work, long long int* info );
void SLATMS_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, float* d, const long long int* mode,
              const float* cond, const float* dmax, const long long int* kl,
              const long long int* ku, const char* pack, float* a,
              const long long int* lda, float* work, long long int* info );
void slatms( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, float* d, const long long int* mode,
             const float* cond, const float* dmax, const long long int* kl,
             const long long int* ku, const char* pack, float* a,
             const long long int* lda, float* work, long long int* info );
void slatms_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, float* d, const long long int* mode,
              const float* cond, const float* dmax, const long long int* kl,
              const long long int* ku, const char* pack, float* a,
              const long long int* lda, float* work, long long int* info );

void CLATMS( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, float* d, const long long int* mode,
             const float* cond, const float* dmax, const long long int* kl,
             const long long int* ku, const char* pack, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* work, long long int* info );
void CLATMS_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, float* d, const long long int* mode,
              const float* cond, const float* dmax, const long long int* kl,
              const long long int* ku, const char* pack, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* work, long long int* info );
void clatms( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, float* d, const long long int* mode,
             const float* cond, const float* dmax, const long long int* kl,
             const long long int* ku, const char* pack, MKL_Complex8* a,
             const long long int* lda, MKL_Complex8* work, long long int* info );
void clatms_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, float* d, const long long int* mode,
              const float* cond, const float* dmax, const long long int* kl,
              const long long int* ku, const char* pack, MKL_Complex8* a,
              const long long int* lda, MKL_Complex8* work, long long int* info );

void ZLATMS( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, double* d, const long long int* mode,
             const double* cond, const double* dmax, const long long int* kl,
             const long long int* ku, const char* pack, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* work, long long int* info );
void ZLATMS_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, double* d,
              const long long int* mode, const double* cond, const double* dmax,
              const long long int* kl, const long long int* ku, const char* pack,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* work,
              long long int* info );
void zlatms( const long long int* m, const long long int* n, const char* dist,
             long long int* iseed, const char* sym, double* d, const long long int* mode,
             const double* cond, const double* dmax, const long long int* kl,
             const long long int* ku, const char* pack, MKL_Complex16* a,
             const long long int* lda, MKL_Complex16* work, long long int* info );
void zlatms_( const long long int* m, const long long int* n, const char* dist,
              long long int* iseed, const char* sym, double* d,
              const long long int* mode, const double* cond, const double* dmax,
              const long long int* kl, const long long int* ku, const char* pack,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* work,
              long long int* info );

void DLAKF2( const long long int* m, const long long int* n, const double* a,
             const long long int* lda, const double* b, const double* d,
             const double* e, double* z, const long long int* ldz );
void DLAKF2_( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, const double* b, const double* d,
              const double* e, double* z, const long long int* ldz );
void dlakf2( const long long int* m, const long long int* n, const double* a,
             const long long int* lda, const double* b, const double* d,
             const double* e, double* z, const long long int* ldz );
void dlakf2_( const long long int* m, const long long int* n, const double* a,
              const long long int* lda, const double* b, const double* d,
              const double* e, double* z, const long long int* ldz );

void SLAKF2( const long long int* m, const long long int* n, const float* a,
             const long long int* lda, const float* b, const float* d,
             const float* e, float* z, const long long int* ldz );
void SLAKF2_( const long long int* m, const long long int* n, const float* a,
              const long long int* lda, const float* b, const float* d,
              const float* e, float* z, const long long int* ldz );
void slakf2( const long long int* m, const long long int* n, const float* a,
             const long long int* lda, const float* b, const float* d,
             const float* e, float* z, const long long int* ldz );
void slakf2_( const long long int* m, const long long int* n, const float* a,
              const long long int* lda, const float* b, const float* d,
              const float* e, float* z, const long long int* ldz );

void CLAKF2( const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* b,
             const MKL_Complex8* d, const MKL_Complex8* e, MKL_Complex8* z,
             const long long int* ldz );
void CLAKF2_( const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* b,
              const MKL_Complex8* d, const MKL_Complex8* e, MKL_Complex8* z,
              const long long int* ldz );
void clakf2( const long long int* m, const long long int* n, const MKL_Complex8* a,
             const long long int* lda, const MKL_Complex8* b,
             const MKL_Complex8* d, const MKL_Complex8* e, MKL_Complex8* z,
             const long long int* ldz );
void clakf2_( const long long int* m, const long long int* n, const MKL_Complex8* a,
              const long long int* lda, const MKL_Complex8* b,
              const MKL_Complex8* d, const MKL_Complex8* e, MKL_Complex8* z,
              const long long int* ldz );

void ZLAKF2( const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* b,
             const MKL_Complex16* d, const MKL_Complex16* e,
             MKL_Complex16* z, const long long int* ldz );
void ZLAKF2_( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* b,
              const MKL_Complex16* d, const MKL_Complex16* e,
              MKL_Complex16* z, const long long int* ldz );
void zlakf2( const long long int* m, const long long int* n, const MKL_Complex16* a,
             const long long int* lda, const MKL_Complex16* b,
             const MKL_Complex16* d, const MKL_Complex16* e,
             MKL_Complex16* z, const long long int* ldz );
void zlakf2_( const long long int* m, const long long int* n, const MKL_Complex16* a,
              const long long int* lda, const MKL_Complex16* b,
              const MKL_Complex16* d, const MKL_Complex16* e,
              MKL_Complex16* z, const long long int* ldz );

void DLARGE( const long long int* n, double* a, const long long int* lda,
             long long int* iseed, double* work, long long int* info );
void DLARGE_( const long long int* n, double* a, const long long int* lda,
              long long int* iseed, double* work, long long int* info );
void dlarge( const long long int* n, double* a, const long long int* lda,
             long long int* iseed, double* work, long long int* info );
void dlarge_( const long long int* n, double* a, const long long int* lda,
              long long int* iseed, double* work, long long int* info );

void SLARGE( const long long int* n, float* a, const long long int* lda, long long int* iseed,
             float* work, long long int* info );
void SLARGE_( const long long int* n, float* a, const long long int* lda,
              long long int* iseed, float* work, long long int* info );
void slarge( const long long int* n, float* a, const long long int* lda, long long int* iseed,
             float* work, long long int* info );
void slarge_( const long long int* n, float* a, const long long int* lda,
              long long int* iseed, float* work, long long int* info );

void CLARGE( const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* iseed, MKL_Complex8* work, long long int* info );
void CLARGE_( const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* iseed, MKL_Complex8* work, long long int* info );
void clarge( const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* iseed, MKL_Complex8* work, long long int* info );
void clarge_( const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* iseed, MKL_Complex8* work, long long int* info );

void ZLARGE( const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* iseed, MKL_Complex16* work, long long int* info );
void ZLARGE_( const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* iseed, MKL_Complex16* work, long long int* info );
void zlarge( const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* iseed, MKL_Complex16* work, long long int* info );
void zlarge_( const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* iseed, MKL_Complex16* work, long long int* info );

double DLARND( const long long int* idist, long long int* iseed );
double DLARND_( const long long int* idist, long long int* iseed );
double dlarnd( const long long int* idist, long long int* iseed );
double dlarnd_( const long long int* idist, long long int* iseed );

float SLARND( const long long int* idist, long long int* iseed );
float SLARND_( const long long int* idist, long long int* iseed );
float slarnd( const long long int* idist, long long int* iseed );
float slarnd_( const long long int* idist, long long int* iseed );

void CLARND( MKL_Complex8* retval, const long long int* idist, long long int* iseed );
void CLARND_( MKL_Complex8* retval, const long long int* idist, long long int* iseed );
void clarnd( MKL_Complex8* retval, const long long int* idist, long long int* iseed );
void clarnd_( MKL_Complex8* retval, const long long int* idist, long long int* iseed );

void ZLARND( MKL_Complex16* retval, const long long int* idist, long long int* iseed );
void ZLARND_( MKL_Complex16* retval, const long long int* idist, long long int* iseed );
void zlarnd( MKL_Complex16* retval, const long long int* idist, long long int* iseed );
void zlarnd_( MKL_Complex16* retval, const long long int* idist, long long int* iseed );

void DLAROR( const char* side, const char* init, const long long int* m,
             const long long int* n, double* a, const long long int* lda,
             long long int* iseed, double* x, long long int* info );
void DLAROR_( const char* side, const char* init, const long long int* m,
              const long long int* n, double* a, const long long int* lda,
              long long int* iseed, double* x, long long int* info );
void dlaror( const char* side, const char* init, const long long int* m,
             const long long int* n, double* a, const long long int* lda,
             long long int* iseed, double* x, long long int* info );
void dlaror_( const char* side, const char* init, const long long int* m,
              const long long int* n, double* a, const long long int* lda,
              long long int* iseed, double* x, long long int* info );

void SLAROR( const char* side, const char* init, const long long int* m,
             const long long int* n, float* a, const long long int* lda, long long int* iseed,
             float* x, long long int* info );
void SLAROR_( const char* side, const char* init, const long long int* m,
              const long long int* n, float* a, const long long int* lda,
              long long int* iseed, float* x, long long int* info );
void slaror( const char* side, const char* init, const long long int* m,
             const long long int* n, float* a, const long long int* lda, long long int* iseed,
             float* x, long long int* info );
void slaror_( const char* side, const char* init, const long long int* m,
              const long long int* n, float* a, const long long int* lda,
              long long int* iseed, float* x, long long int* info );

void CLAROR( const char* side, const char* init, const long long int* m,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* iseed, MKL_Complex8* x, long long int* info );
void CLAROR_( const char* side, const char* init, const long long int* m,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* iseed, MKL_Complex8* x, long long int* info );
void claror( const char* side, const char* init, const long long int* m,
             const long long int* n, MKL_Complex8* a, const long long int* lda,
             long long int* iseed, MKL_Complex8* x, long long int* info );
void claror_( const char* side, const char* init, const long long int* m,
              const long long int* n, MKL_Complex8* a, const long long int* lda,
              long long int* iseed, MKL_Complex8* x, long long int* info );

void ZLAROR( const char* side, const char* init, const long long int* m,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* iseed, MKL_Complex16* x, long long int* info );
void ZLAROR_( const char* side, const char* init, const long long int* m,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* iseed, MKL_Complex16* x, long long int* info );
void zlaror( const char* side, const char* init, const long long int* m,
             const long long int* n, MKL_Complex16* a, const long long int* lda,
             long long int* iseed, MKL_Complex16* x, long long int* info );
void zlaror_( const char* side, const char* init, const long long int* m,
              const long long int* n, MKL_Complex16* a, const long long int* lda,
              long long int* iseed, MKL_Complex16* x, long long int* info );

void DLAROT( const long long int* lrows, const long long int* lleft,
             const long long int* lright, const long long int* nl, const double* c,
             const double* s, double* a, const long long int* lda, double* xleft,
             double* xright );
void DLAROT_( const long long int* lrows, const long long int* lleft,
              const long long int* lright, const long long int* nl, const double* c,
              const double* s, double* a, const long long int* lda, double* xleft,
              double* xright );
void dlarot( const long long int* lrows, const long long int* lleft,
             const long long int* lright, const long long int* nl, const double* c,
             const double* s, double* a, const long long int* lda, double* xleft,
             double* xright );
void dlarot_( const long long int* lrows, const long long int* lleft,
              const long long int* lright, const long long int* nl, const double* c,
              const double* s, double* a, const long long int* lda, double* xleft,
              double* xright );

void SLAROT( const long long int* lrows, const long long int* lleft,
             const long long int* lright, const long long int* nl, const float* c,
             const float* s, float* a, const long long int* lda, float* xleft,
             float* xright );
void SLAROT_( const long long int* lrows, const long long int* lleft,
              const long long int* lright, const long long int* nl, const float* c,
              const float* s, float* a, const long long int* lda, float* xleft,
              float* xright );
void slarot( const long long int* lrows, const long long int* lleft,
             const long long int* lright, const long long int* nl, const float* c,
             const float* s, float* a, const long long int* lda, float* xleft,
             float* xright );
void slarot_( const long long int* lrows, const long long int* lleft,
              const long long int* lright, const long long int* nl, const float* c,
              const float* s, float* a, const long long int* lda, float* xleft,
              float* xright );

void CLAROT( const long long int* lrows, const long long int* lleft, long long int* lright,
             const long long int* nl, const MKL_Complex8* c,
             const MKL_Complex8* s, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* xleft, MKL_Complex8* xright );
void CLAROT_( const long long int* lrows, const long long int* lleft, long long int* lright,
              const long long int* nl, const MKL_Complex8* c,
              const MKL_Complex8* s, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* xleft, MKL_Complex8* xright );
void clarot( const long long int* lrows, const long long int* lleft, long long int* lright,
             const long long int* nl, const MKL_Complex8* c,
             const MKL_Complex8* s, MKL_Complex8* a, const long long int* lda,
             MKL_Complex8* xleft, MKL_Complex8* xright );
void clarot_( const long long int* lrows, const long long int* lleft, long long int* lright,
              const long long int* nl, const MKL_Complex8* c,
              const MKL_Complex8* s, MKL_Complex8* a, const long long int* lda,
              MKL_Complex8* xleft, MKL_Complex8* xright );

void ZLAROT( const long long int* lrows, const long long int* lleft,
             const long long int* lright, const long long int* nl,
             const MKL_Complex16* c, const MKL_Complex16* s,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* xleft,
             MKL_Complex16* xright );
void ZLAROT_( const long long int* lrows, const long long int* lleft,
              const long long int* lright, const long long int* nl,
              const MKL_Complex16* c, const MKL_Complex16* s,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* xleft,
              MKL_Complex16* xright );
void zlarot( const long long int* lrows, const long long int* lleft,
             const long long int* lright, const long long int* nl,
             const MKL_Complex16* c, const MKL_Complex16* s,
             MKL_Complex16* a, const long long int* lda, MKL_Complex16* xleft,
             MKL_Complex16* xright );
void zlarot_( const long long int* lrows, const long long int* lleft,
              const long long int* lright, const long long int* nl,
              const MKL_Complex16* c, const MKL_Complex16* s,
              MKL_Complex16* a, const long long int* lda, MKL_Complex16* xleft,
              MKL_Complex16* xright );

double DLARAN( long long int* iseed );
double DLARAN_( long long int* iseed );
double dlaran( long long int* iseed );
double dlaran_( long long int* iseed );

float SLARAN( long long int* iseed );
float SLARAN_( long long int* iseed );
float slaran( long long int* iseed );
float slaran_( long long int* iseed );

void DLAGGE( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const double* d, double* a,
             const long long int* lda, long long int* iseed, double* work,
             long long int* info );
void DLAGGE_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const double* d, double* a,
              const long long int* lda, long long int* iseed, double* work,
              long long int* info );
void dlagge( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const double* d, double* a,
             const long long int* lda, long long int* iseed, double* work,
             long long int* info );
void dlagge_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const double* d, double* a,
              const long long int* lda, long long int* iseed, double* work,
              long long int* info );

void SLAGGE( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const float* d, float* a, const long long int* lda,
             long long int* iseed, float* work, long long int* info );
void SLAGGE_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const float* d, float* a,
              const long long int* lda, long long int* iseed, float* work,
              long long int* info );
void slagge( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const float* d, float* a, const long long int* lda,
             long long int* iseed, float* work, long long int* info );
void slagge_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const float* d, float* a,
              const long long int* lda, long long int* iseed, float* work,
              long long int* info );

void CLAGGE( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const float* d, MKL_Complex8* a,
             const long long int* lda, long long int* iseed, MKL_Complex8* work,
             long long int* info );
void CLAGGE_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const float* d, MKL_Complex8* a,
              const long long int* lda, long long int* iseed, MKL_Complex8* work,
              long long int* info );
void clagge( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const float* d, MKL_Complex8* a,
             const long long int* lda, long long int* iseed, MKL_Complex8* work,
             long long int* info );
void clagge_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const float* d, MKL_Complex8* a,
              const long long int* lda, long long int* iseed, MKL_Complex8* work,
              long long int* info );

void ZLAGGE( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const double* d, MKL_Complex16* a,
             const long long int* lda, long long int* iseed, MKL_Complex16* work,
             long long int* info );
void ZLAGGE_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const double* d, MKL_Complex16* a,
              const long long int* lda, long long int* iseed, MKL_Complex16* work,
              long long int* info );
void zlagge( const long long int* m, const long long int* n, const long long int* kl,
             const long long int* ku, const double* d, MKL_Complex16* a,
             const long long int* lda, long long int* iseed, MKL_Complex16* work,
             long long int* info );
void zlagge_( const long long int* m, const long long int* n, const long long int* kl,
              const long long int* ku, const double* d, MKL_Complex16* a,
              const long long int* lda, long long int* iseed, MKL_Complex16* work,
              long long int* info );



void MKL_CSPFFRT2( MKL_Complex8 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex8 *work, MKL_Complex8 *work2 );
void mkl_cspffrt2( MKL_Complex8 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex8 *work, MKL_Complex8 *work2 );
void mkl_cspffrt2_( MKL_Complex8 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex8 *work, MKL_Complex8 *work2 );
void MKL_CSPFFRTX( MKL_Complex8 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex8 *work, MKL_Complex8 *work2 );
void mkl_cspffrtx( MKL_Complex8 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex8 *work, MKL_Complex8 *work2 );
void mkl_cspffrtx_( MKL_Complex8 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex8 *work, MKL_Complex8 *work2 );
void MKL_DSPFFRT2( double *ap, const long long int *n, const long long int *ncolm,
                    double *work, double *work2 );
void mkl_dspffrt2( double *ap, const long long int *n, const long long int *ncolm,
                    double *work, double *work2 );
void mkl_dspffrt2_( double *ap, const long long int *n, const long long int *ncolm,
                    double *work, double *work2 );
void MKL_DSPFFRTX( double *ap, const long long int *n, const long long int *ncolm,
                    double *work, double *work2 );
void mkl_dspffrtx( double *ap, const long long int *n, const long long int *ncolm,
                    double *work, double *work2 );
void mkl_dspffrtx_( double *ap, const long long int *n, const long long int *ncolm,
                    double *work, double *work2 );
void MKL_SSPFFRT2( float *ap, const long long int *n, const long long int *ncolm,
                    float *work, float *work2 );
void mkl_sspffrt2( float *ap, const long long int *n, const long long int *ncolm,
                    float *work, float *work2 );
void mkl_sspffrt2_( float *ap, const long long int *n, const long long int *ncolm,
                    float *work, float *work2 );
void MKL_SSPFFRTX( float *ap, const long long int *n, const long long int *ncolm,
                    float *work, float *work2 );
void mkl_sspffrtx( float *ap, const long long int *n, const long long int *ncolm,
                    float *work, float *work2 );
void mkl_sspffrtx_( float *ap, const long long int *n, const long long int *ncolm,
                    float *work, float *work2 );
void MKL_ZSPFFRT2( MKL_Complex16 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex16 *work, MKL_Complex16 *work2 );
void mkl_zspffrt2( MKL_Complex16 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex16 *work, MKL_Complex16 *work2 );
void mkl_zspffrt2_( MKL_Complex16 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex16 *work, MKL_Complex16 *work2 );
void MKL_ZSPFFRTX( MKL_Complex16 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex16 *work, MKL_Complex16 *work2 );
void mkl_zspffrtx( MKL_Complex16 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex16 *work, MKL_Complex16 *work2 );
void mkl_zspffrtx_( MKL_Complex16 *ap, const long long int *n, const long long int *ncolm,
                    MKL_Complex16 *work, MKL_Complex16 *work2 );





int MKL_PROGRESS( int* thread, int* step, char* stage, int lstage );
int MKL_PROGRESS_( int* thread, int* step, char* stage, int lstage );
int mkl_progress( int* thread, int* step, char* stage, int lstage );
int mkl_progress_( int* thread, int* step, char* stage, int lstage );
# 41 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_lapacke.h" 1
# 78 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_lapacke.h"
typedef long long int (*LAPACK_S_SELECT2) ( const float*, const float* );
typedef long long int (*LAPACK_S_SELECT3)
    ( const float*, const float*, const float* );
typedef long long int (*LAPACK_D_SELECT2) ( const double*, const double* );
typedef long long int (*LAPACK_D_SELECT3)
    ( const double*, const double*, const double* );

typedef long long int (*LAPACK_C_SELECT1) ( const MKL_Complex8* );
typedef long long int (*LAPACK_C_SELECT2)
    ( const MKL_Complex8*, const MKL_Complex8* );
typedef long long int (*LAPACK_Z_SELECT1) ( const MKL_Complex16* );
typedef long long int (*LAPACK_Z_SELECT2)
    ( const MKL_Complex16*, const MKL_Complex16* );

long long int LAPACKE_sbbcsd( int matrix_layout, char jobu1, char jobu2,
                           char jobv1t, char jobv2t, char trans, long long int m,
                           long long int p, long long int q, float* theta, float* phi,
                           float* u1, long long int ldu1, float* u2,
                           long long int ldu2, float* v1t, long long int ldv1t,
                           float* v2t, long long int ldv2t, float* b11d,
                           float* b11e, float* b12d, float* b12e, float* b21d,
                           float* b21e, float* b22d, float* b22e );
long long int LAPACKE_dbbcsd( int matrix_layout, char jobu1, char jobu2,
                           char jobv1t, char jobv2t, char trans, long long int m,
                           long long int p, long long int q, double* theta,
                           double* phi, double* u1, long long int ldu1, double* u2,
                           long long int ldu2, double* v1t, long long int ldv1t,
                           double* v2t, long long int ldv2t, double* b11d,
                           double* b11e, double* b12d, double* b12e,
                           double* b21d, double* b21e, double* b22d,
                           double* b22e );
long long int LAPACKE_cbbcsd( int matrix_layout, char jobu1, char jobu2,
                           char jobv1t, char jobv2t, char trans, long long int m,
                           long long int p, long long int q, float* theta, float* phi,
                           MKL_Complex8* u1, long long int ldu1,
                           MKL_Complex8* u2, long long int ldu2,
                           MKL_Complex8* v1t, long long int ldv1t,
                           MKL_Complex8* v2t, long long int ldv2t,
                           float* b11d, float* b11e, float* b12d, float* b12e,
                           float* b21d, float* b21e, float* b22d, float* b22e );
long long int LAPACKE_zbbcsd( int matrix_layout, char jobu1, char jobu2,
                           char jobv1t, char jobv2t, char trans, long long int m,
                           long long int p, long long int q, double* theta,
                           double* phi, MKL_Complex16* u1,
                           long long int ldu1, MKL_Complex16* u2,
                           long long int ldu2, MKL_Complex16* v1t,
                           long long int ldv1t, MKL_Complex16* v2t,
                           long long int ldv2t, double* b11d, double* b11e,
                           double* b12d, double* b12e, double* b21d,
                           double* b21e, double* b22d, double* b22e );

long long int LAPACKE_sbdsdc( int matrix_layout, char uplo, char compq,
                           long long int n, float* d, float* e, float* u,
                           long long int ldu, float* vt, long long int ldvt, float* q,
                           long long int* iq );
long long int LAPACKE_dbdsdc( int matrix_layout, char uplo, char compq,
                           long long int n, double* d, double* e, double* u,
                           long long int ldu, double* vt, long long int ldvt,
                           double* q, long long int* iq );

long long int LAPACKE_sbdsqr( int matrix_layout, char uplo, long long int n,
                           long long int ncvt, long long int nru, long long int ncc,
                           float* d, float* e, float* vt, long long int ldvt,
                           float* u, long long int ldu, float* c, long long int ldc );
long long int LAPACKE_dbdsqr( int matrix_layout, char uplo, long long int n,
                           long long int ncvt, long long int nru, long long int ncc,
                           double* d, double* e, double* vt, long long int ldvt,
                           double* u, long long int ldu, double* c,
                           long long int ldc );
long long int LAPACKE_cbdsqr( int matrix_layout, char uplo, long long int n,
                           long long int ncvt, long long int nru, long long int ncc,
                           float* d, float* e, MKL_Complex8* vt,
                           long long int ldvt, MKL_Complex8* u,
                           long long int ldu, MKL_Complex8* c,
                           long long int ldc );
long long int LAPACKE_zbdsqr( int matrix_layout, char uplo, long long int n,
                           long long int ncvt, long long int nru, long long int ncc,
                           double* d, double* e, MKL_Complex16* vt,
                           long long int ldvt, MKL_Complex16* u,
                           long long int ldu, MKL_Complex16* c,
                           long long int ldc );

long long int LAPACKE_sdisna( char job, long long int m, long long int n, const float* d,
                           float* sep );
long long int LAPACKE_ddisna( char job, long long int m, long long int n,
                           const double* d, double* sep );

long long int LAPACKE_sgbbrd( int matrix_layout, char vect, long long int m,
                           long long int n, long long int ncc, long long int kl,
                           long long int ku, float* ab, long long int ldab, float* d,
                           float* e, float* q, long long int ldq, float* pt,
                           long long int ldpt, float* c, long long int ldc );
long long int LAPACKE_dgbbrd( int matrix_layout, char vect, long long int m,
                           long long int n, long long int ncc, long long int kl,
                           long long int ku, double* ab, long long int ldab,
                           double* d, double* e, double* q, long long int ldq,
                           double* pt, long long int ldpt, double* c,
                           long long int ldc );
long long int LAPACKE_cgbbrd( int matrix_layout, char vect, long long int m,
                           long long int n, long long int ncc, long long int kl,
                           long long int ku, MKL_Complex8* ab,
                           long long int ldab, float* d, float* e,
                           MKL_Complex8* q, long long int ldq,
                           MKL_Complex8* pt, long long int ldpt,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zgbbrd( int matrix_layout, char vect, long long int m,
                           long long int n, long long int ncc, long long int kl,
                           long long int ku, MKL_Complex16* ab,
                           long long int ldab, double* d, double* e,
                           MKL_Complex16* q, long long int ldq,
                           MKL_Complex16* pt, long long int ldpt,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_sgbcon( int matrix_layout, char norm, long long int n,
                           long long int kl, long long int ku, const float* ab,
                           long long int ldab, const long long int* ipiv, float anorm,
                           float* rcond );
long long int LAPACKE_dgbcon( int matrix_layout, char norm, long long int n,
                           long long int kl, long long int ku, const double* ab,
                           long long int ldab, const long long int* ipiv,
                           double anorm, double* rcond );
long long int LAPACKE_cgbcon( int matrix_layout, char norm, long long int n,
                           long long int kl, long long int ku,
                           const MKL_Complex8* ab, long long int ldab,
                           const long long int* ipiv, float anorm, float* rcond );
long long int LAPACKE_zgbcon( int matrix_layout, char norm, long long int n,
                           long long int kl, long long int ku,
                           const MKL_Complex16* ab, long long int ldab,
                           const long long int* ipiv, double anorm,
                           double* rcond );

long long int LAPACKE_sgbequ( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku, const float* ab,
                           long long int ldab, float* r, float* c, float* rowcnd,
                           float* colcnd, float* amax );
long long int LAPACKE_dgbequ( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku, const double* ab,
                           long long int ldab, double* r, double* c,
                           double* rowcnd, double* colcnd, double* amax );
long long int LAPACKE_cgbequ( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku,
                           const MKL_Complex8* ab, long long int ldab,
                           float* r, float* c, float* rowcnd, float* colcnd,
                           float* amax );
long long int LAPACKE_zgbequ( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku,
                           const MKL_Complex16* ab, long long int ldab,
                           double* r, double* c, double* rowcnd, double* colcnd,
                           double* amax );

long long int LAPACKE_sgbequb( int matrix_layout, long long int m, long long int n,
                            long long int kl, long long int ku, const float* ab,
                            long long int ldab, float* r, float* c, float* rowcnd,
                            float* colcnd, float* amax );
long long int LAPACKE_dgbequb( int matrix_layout, long long int m, long long int n,
                            long long int kl, long long int ku, const double* ab,
                            long long int ldab, double* r, double* c,
                            double* rowcnd, double* colcnd, double* amax );
long long int LAPACKE_cgbequb( int matrix_layout, long long int m, long long int n,
                            long long int kl, long long int ku,
                            const MKL_Complex8* ab, long long int ldab,
                            float* r, float* c, float* rowcnd, float* colcnd,
                            float* amax );
long long int LAPACKE_zgbequb( int matrix_layout, long long int m, long long int n,
                            long long int kl, long long int ku,
                            const MKL_Complex16* ab, long long int ldab,
                            double* r, double* c, double* rowcnd,
                            double* colcnd, double* amax );

long long int LAPACKE_sgbrfs( int matrix_layout, char trans, long long int n,
                           long long int kl, long long int ku, long long int nrhs,
                           const float* ab, long long int ldab, const float* afb,
                           long long int ldafb, const long long int* ipiv,
                           const float* b, long long int ldb, float* x,
                           long long int ldx, float* ferr, float* berr );
long long int LAPACKE_dgbrfs( int matrix_layout, char trans, long long int n,
                           long long int kl, long long int ku, long long int nrhs,
                           const double* ab, long long int ldab, const double* afb,
                           long long int ldafb, const long long int* ipiv,
                           const double* b, long long int ldb, double* x,
                           long long int ldx, double* ferr, double* berr );
long long int LAPACKE_cgbrfs( int matrix_layout, char trans, long long int n,
                           long long int kl, long long int ku, long long int nrhs,
                           const MKL_Complex8* ab, long long int ldab,
                           const MKL_Complex8* afb, long long int ldafb,
                           const long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zgbrfs( int matrix_layout, char trans, long long int n,
                           long long int kl, long long int ku, long long int nrhs,
                           const MKL_Complex16* ab, long long int ldab,
                           const MKL_Complex16* afb, long long int ldafb,
                           const long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_sgbrfsx( int matrix_layout, char trans, char equed,
                            long long int n, long long int kl, long long int ku,
                            long long int nrhs, const float* ab, long long int ldab,
                            const float* afb, long long int ldafb,
                            const long long int* ipiv, const float* r,
                            const float* c, const float* b, long long int ldb,
                            float* x, long long int ldx, float* rcond, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_dgbrfsx( int matrix_layout, char trans, char equed,
                            long long int n, long long int kl, long long int ku,
                            long long int nrhs, const double* ab, long long int ldab,
                            const double* afb, long long int ldafb,
                            const long long int* ipiv, const double* r,
                            const double* c, const double* b, long long int ldb,
                            double* x, long long int ldx, double* rcond,
                            double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );
long long int LAPACKE_cgbrfsx( int matrix_layout, char trans, char equed,
                            long long int n, long long int kl, long long int ku,
                            long long int nrhs, const MKL_Complex8* ab,
                            long long int ldab, const MKL_Complex8* afb,
                            long long int ldafb, const long long int* ipiv,
                            const float* r, const float* c,
                            const MKL_Complex8* b, long long int ldb,
                            MKL_Complex8* x, long long int ldx,
                            float* rcond, float* berr, long long int n_err_bnds,
                            float* err_bnds_norm, float* err_bnds_comp,
                            long long int nparams, float* params );
long long int LAPACKE_zgbrfsx( int matrix_layout, char trans, char equed,
                            long long int n, long long int kl, long long int ku,
                            long long int nrhs, const MKL_Complex16* ab,
                            long long int ldab, const MKL_Complex16* afb,
                            long long int ldafb, const long long int* ipiv,
                            const double* r, const double* c,
                            const MKL_Complex16* b, long long int ldb,
                            MKL_Complex16* x, long long int ldx,
                            double* rcond, double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );

long long int LAPACKE_sgbsv( int matrix_layout, long long int n, long long int kl,
                          long long int ku, long long int nrhs, float* ab,
                          long long int ldab, long long int* ipiv, float* b,
                          long long int ldb );
long long int LAPACKE_dgbsv( int matrix_layout, long long int n, long long int kl,
                          long long int ku, long long int nrhs, double* ab,
                          long long int ldab, long long int* ipiv, double* b,
                          long long int ldb );
long long int LAPACKE_cgbsv( int matrix_layout, long long int n, long long int kl,
                          long long int ku, long long int nrhs,
                          MKL_Complex8* ab, long long int ldab,
                          long long int* ipiv, MKL_Complex8* b,
                          long long int ldb );
long long int LAPACKE_zgbsv( int matrix_layout, long long int n, long long int kl,
                          long long int ku, long long int nrhs,
                          MKL_Complex16* ab, long long int ldab,
                          long long int* ipiv, MKL_Complex16* b,
                          long long int ldb );

long long int LAPACKE_sgbsvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int kl, long long int ku,
                           long long int nrhs, float* ab, long long int ldab,
                           float* afb, long long int ldafb, long long int* ipiv,
                           char* equed, float* r, float* c, float* b,
                           long long int ldb, float* x, long long int ldx,
                           float* rcond, float* ferr, float* berr,
                           float* rpivot );
long long int LAPACKE_dgbsvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int kl, long long int ku,
                           long long int nrhs, double* ab, long long int ldab,
                           double* afb, long long int ldafb, long long int* ipiv,
                           char* equed, double* r, double* c, double* b,
                           long long int ldb, double* x, long long int ldx,
                           double* rcond, double* ferr, double* berr,
                           double* rpivot );
long long int LAPACKE_cgbsvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int kl, long long int ku,
                           long long int nrhs, MKL_Complex8* ab,
                           long long int ldab, MKL_Complex8* afb,
                           long long int ldafb, long long int* ipiv, char* equed,
                           float* r, float* c, MKL_Complex8* b,
                           long long int ldb, MKL_Complex8* x,
                           long long int ldx, float* rcond, float* ferr,
                           float* berr, float* rpivot );
long long int LAPACKE_zgbsvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int kl, long long int ku,
                           long long int nrhs, MKL_Complex16* ab,
                           long long int ldab, MKL_Complex16* afb,
                           long long int ldafb, long long int* ipiv, char* equed,
                           double* r, double* c, MKL_Complex16* b,
                           long long int ldb, MKL_Complex16* x,
                           long long int ldx, double* rcond, double* ferr,
                           double* berr, double* rpivot );

long long int LAPACKE_sgbsvxx( int matrix_layout, char fact, char trans,
                            long long int n, long long int kl, long long int ku,
                            long long int nrhs, float* ab, long long int ldab,
                            float* afb, long long int ldafb, long long int* ipiv,
                            char* equed, float* r, float* c, float* b,
                            long long int ldb, float* x, long long int ldx,
                            float* rcond, float* rpvgrw, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_dgbsvxx( int matrix_layout, char fact, char trans,
                            long long int n, long long int kl, long long int ku,
                            long long int nrhs, double* ab, long long int ldab,
                            double* afb, long long int ldafb, long long int* ipiv,
                            char* equed, double* r, double* c, double* b,
                            long long int ldb, double* x, long long int ldx,
                            double* rcond, double* rpvgrw, double* berr,
                            long long int n_err_bnds, double* err_bnds_norm,
                            double* err_bnds_comp, long long int nparams,
                            double* params );
long long int LAPACKE_cgbsvxx( int matrix_layout, char fact, char trans,
                            long long int n, long long int kl, long long int ku,
                            long long int nrhs, MKL_Complex8* ab,
                            long long int ldab, MKL_Complex8* afb,
                            long long int ldafb, long long int* ipiv, char* equed,
                            float* r, float* c, MKL_Complex8* b,
                            long long int ldb, MKL_Complex8* x,
                            long long int ldx, float* rcond, float* rpvgrw,
                            float* berr, long long int n_err_bnds,
                            float* err_bnds_norm, float* err_bnds_comp,
                            long long int nparams, float* params );
long long int LAPACKE_zgbsvxx( int matrix_layout, char fact, char trans,
                            long long int n, long long int kl, long long int ku,
                            long long int nrhs, MKL_Complex16* ab,
                            long long int ldab, MKL_Complex16* afb,
                            long long int ldafb, long long int* ipiv, char* equed,
                            double* r, double* c, MKL_Complex16* b,
                            long long int ldb, MKL_Complex16* x,
                            long long int ldx, double* rcond, double* rpvgrw,
                            double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );

long long int LAPACKE_sgbtrf( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku, float* ab,
                           long long int ldab, long long int* ipiv );
long long int LAPACKE_dgbtrf( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku, double* ab,
                           long long int ldab, long long int* ipiv );
long long int LAPACKE_cgbtrf( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku,
                           MKL_Complex8* ab, long long int ldab,
                           long long int* ipiv );
long long int LAPACKE_zgbtrf( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku,
                           MKL_Complex16* ab, long long int ldab,
                           long long int* ipiv );

long long int LAPACKE_sgbtrs( int matrix_layout, char trans, long long int n,
                           long long int kl, long long int ku, long long int nrhs,
                           const float* ab, long long int ldab,
                           const long long int* ipiv, float* b, long long int ldb );
long long int LAPACKE_dgbtrs( int matrix_layout, char trans, long long int n,
                           long long int kl, long long int ku, long long int nrhs,
                           const double* ab, long long int ldab,
                           const long long int* ipiv, double* b, long long int ldb );
long long int LAPACKE_cgbtrs( int matrix_layout, char trans, long long int n,
                           long long int kl, long long int ku, long long int nrhs,
                           const MKL_Complex8* ab, long long int ldab,
                           const long long int* ipiv, MKL_Complex8* b,
                           long long int ldb );
long long int LAPACKE_zgbtrs( int matrix_layout, char trans, long long int n,
                           long long int kl, long long int ku, long long int nrhs,
                           const MKL_Complex16* ab, long long int ldab,
                           const long long int* ipiv, MKL_Complex16* b,
                           long long int ldb );

long long int LAPACKE_sgebak( int matrix_layout, char job, char side, long long int n,
                           long long int ilo, long long int ihi, const float* scale,
                           long long int m, float* v, long long int ldv );
long long int LAPACKE_dgebak( int matrix_layout, char job, char side, long long int n,
                           long long int ilo, long long int ihi, const double* scale,
                           long long int m, double* v, long long int ldv );
long long int LAPACKE_cgebak( int matrix_layout, char job, char side, long long int n,
                           long long int ilo, long long int ihi, const float* scale,
                           long long int m, MKL_Complex8* v,
                           long long int ldv );
long long int LAPACKE_zgebak( int matrix_layout, char job, char side, long long int n,
                           long long int ilo, long long int ihi, const double* scale,
                           long long int m, MKL_Complex16* v,
                           long long int ldv );

long long int LAPACKE_sgebal( int matrix_layout, char job, long long int n, float* a,
                           long long int lda, long long int* ilo, long long int* ihi,
                           float* scale );
long long int LAPACKE_dgebal( int matrix_layout, char job, long long int n, double* a,
                           long long int lda, long long int* ilo, long long int* ihi,
                           double* scale );
long long int LAPACKE_cgebal( int matrix_layout, char job, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int* ilo, long long int* ihi, float* scale );
long long int LAPACKE_zgebal( int matrix_layout, char job, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int* ilo, long long int* ihi, double* scale );

long long int LAPACKE_sgebrd( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, float* d, float* e,
                           float* tauq, float* taup );
long long int LAPACKE_dgebrd( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, double* d, double* e,
                           double* tauq, double* taup );
long long int LAPACKE_cgebrd( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda, float* d,
                           float* e, MKL_Complex8* tauq,
                           MKL_Complex8* taup );
long long int LAPACKE_zgebrd( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda, double* d,
                           double* e, MKL_Complex16* tauq,
                           MKL_Complex16* taup );

long long int LAPACKE_sgecon( int matrix_layout, char norm, long long int n,
                           const float* a, long long int lda, float anorm,
                           float* rcond );
long long int LAPACKE_dgecon( int matrix_layout, char norm, long long int n,
                           const double* a, long long int lda, double anorm,
                           double* rcond );
long long int LAPACKE_cgecon( int matrix_layout, char norm, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           float anorm, float* rcond );
long long int LAPACKE_zgecon( int matrix_layout, char norm, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           double anorm, double* rcond );

long long int LAPACKE_sgeequ( int matrix_layout, long long int m, long long int n,
                           const float* a, long long int lda, float* r, float* c,
                           float* rowcnd, float* colcnd, float* amax );
long long int LAPACKE_dgeequ( int matrix_layout, long long int m, long long int n,
                           const double* a, long long int lda, double* r,
                           double* c, double* rowcnd, double* colcnd,
                           double* amax );
long long int LAPACKE_cgeequ( int matrix_layout, long long int m, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           float* r, float* c, float* rowcnd, float* colcnd,
                           float* amax );
long long int LAPACKE_zgeequ( int matrix_layout, long long int m, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           double* r, double* c, double* rowcnd, double* colcnd,
                           double* amax );

long long int LAPACKE_sgeequb( int matrix_layout, long long int m, long long int n,
                            const float* a, long long int lda, float* r, float* c,
                            float* rowcnd, float* colcnd, float* amax );
long long int LAPACKE_dgeequb( int matrix_layout, long long int m, long long int n,
                            const double* a, long long int lda, double* r,
                            double* c, double* rowcnd, double* colcnd,
                            double* amax );
long long int LAPACKE_cgeequb( int matrix_layout, long long int m, long long int n,
                            const MKL_Complex8* a, long long int lda,
                            float* r, float* c, float* rowcnd, float* colcnd,
                            float* amax );
long long int LAPACKE_zgeequb( int matrix_layout, long long int m, long long int n,
                            const MKL_Complex16* a, long long int lda,
                            double* r, double* c, double* rowcnd,
                            double* colcnd, double* amax );

long long int LAPACKE_sgees( int matrix_layout, char jobvs, char sort,
                          LAPACK_S_SELECT2 select, long long int n, float* a,
                          long long int lda, long long int* sdim, float* wr,
                          float* wi, float* vs, long long int ldvs );
long long int LAPACKE_dgees( int matrix_layout, char jobvs, char sort,
                          LAPACK_D_SELECT2 select, long long int n, double* a,
                          long long int lda, long long int* sdim, double* wr,
                          double* wi, double* vs, long long int ldvs );
long long int LAPACKE_cgees( int matrix_layout, char jobvs, char sort,
                          LAPACK_C_SELECT1 select, long long int n,
                          MKL_Complex8* a, long long int lda,
                          long long int* sdim, MKL_Complex8* w,
                          MKL_Complex8* vs, long long int ldvs );
long long int LAPACKE_zgees( int matrix_layout, char jobvs, char sort,
                          LAPACK_Z_SELECT1 select, long long int n,
                          MKL_Complex16* a, long long int lda,
                          long long int* sdim, MKL_Complex16* w,
                          MKL_Complex16* vs, long long int ldvs );

long long int LAPACKE_sgeesx( int matrix_layout, char jobvs, char sort,
                           LAPACK_S_SELECT2 select, char sense, long long int n,
                           float* a, long long int lda, long long int* sdim,
                           float* wr, float* wi, float* vs, long long int ldvs,
                           float* rconde, float* rcondv );
long long int LAPACKE_dgeesx( int matrix_layout, char jobvs, char sort,
                           LAPACK_D_SELECT2 select, char sense, long long int n,
                           double* a, long long int lda, long long int* sdim,
                           double* wr, double* wi, double* vs, long long int ldvs,
                           double* rconde, double* rcondv );
long long int LAPACKE_cgeesx( int matrix_layout, char jobvs, char sort,
                           LAPACK_C_SELECT1 select, char sense, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int* sdim, MKL_Complex8* w,
                           MKL_Complex8* vs, long long int ldvs,
                           float* rconde, float* rcondv );
long long int LAPACKE_zgeesx( int matrix_layout, char jobvs, char sort,
                           LAPACK_Z_SELECT1 select, char sense, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int* sdim, MKL_Complex16* w,
                           MKL_Complex16* vs, long long int ldvs,
                           double* rconde, double* rcondv );

long long int LAPACKE_sgeev( int matrix_layout, char jobvl, char jobvr,
                          long long int n, float* a, long long int lda, float* wr,
                          float* wi, float* vl, long long int ldvl, float* vr,
                          long long int ldvr );
long long int LAPACKE_dgeev( int matrix_layout, char jobvl, char jobvr,
                          long long int n, double* a, long long int lda, double* wr,
                          double* wi, double* vl, long long int ldvl, double* vr,
                          long long int ldvr );
long long int LAPACKE_cgeev( int matrix_layout, char jobvl, char jobvr,
                          long long int n, MKL_Complex8* a, long long int lda,
                          MKL_Complex8* w, MKL_Complex8* vl,
                          long long int ldvl, MKL_Complex8* vr,
                          long long int ldvr );
long long int LAPACKE_zgeev( int matrix_layout, char jobvl, char jobvr,
                          long long int n, MKL_Complex16* a,
                          long long int lda, MKL_Complex16* w,
                          MKL_Complex16* vl, long long int ldvl,
                          MKL_Complex16* vr, long long int ldvr );

long long int LAPACKE_sgeevx( int matrix_layout, char balanc, char jobvl,
                           char jobvr, char sense, long long int n, float* a,
                           long long int lda, float* wr, float* wi, float* vl,
                           long long int ldvl, float* vr, long long int ldvr,
                           long long int* ilo, long long int* ihi, float* scale,
                           float* abnrm, float* rconde, float* rcondv );
long long int LAPACKE_dgeevx( int matrix_layout, char balanc, char jobvl,
                           char jobvr, char sense, long long int n, double* a,
                           long long int lda, double* wr, double* wi, double* vl,
                           long long int ldvl, double* vr, long long int ldvr,
                           long long int* ilo, long long int* ihi, double* scale,
                           double* abnrm, double* rconde, double* rcondv );
long long int LAPACKE_cgeevx( int matrix_layout, char balanc, char jobvl,
                           char jobvr, char sense, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* w, MKL_Complex8* vl,
                           long long int ldvl, MKL_Complex8* vr,
                           long long int ldvr, long long int* ilo, long long int* ihi,
                           float* scale, float* abnrm, float* rconde,
                           float* rcondv );
long long int LAPACKE_zgeevx( int matrix_layout, char balanc, char jobvl,
                           char jobvr, char sense, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* w, MKL_Complex16* vl,
                           long long int ldvl, MKL_Complex16* vr,
                           long long int ldvr, long long int* ilo, long long int* ihi,
                           double* scale, double* abnrm, double* rconde,
                           double* rcondv );

long long int LAPACKE_sgehrd( int matrix_layout, long long int n, long long int ilo,
                           long long int ihi, float* a, long long int lda,
                           float* tau );
long long int LAPACKE_dgehrd( int matrix_layout, long long int n, long long int ilo,
                           long long int ihi, double* a, long long int lda,
                           double* tau );
long long int LAPACKE_cgehrd( int matrix_layout, long long int n, long long int ilo,
                           long long int ihi, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* tau );
long long int LAPACKE_zgehrd( int matrix_layout, long long int n, long long int ilo,
                           long long int ihi, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* tau );

long long int LAPACKE_sgejsv( int matrix_layout, char joba, char jobu, char jobv,
                           char jobr, char jobt, char jobp, long long int m,
                           long long int n, float* a, long long int lda, float* sva,
                           float* u, long long int ldu, float* v, long long int ldv,
                           float* stat, long long int* istat );
long long int LAPACKE_dgejsv( int matrix_layout, char joba, char jobu, char jobv,
                           char jobr, char jobt, char jobp, long long int m,
                           long long int n, double* a, long long int lda, double* sva,
                           double* u, long long int ldu, double* v, long long int ldv,
                           double* stat, long long int* istat );


long long int LAPACKE_sgelq2( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, float* tau );

long long int LAPACKE_dgelq2( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, double* tau );

long long int LAPACKE_cgelq2( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* tau );

long long int LAPACKE_zgelq2( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* tau );


long long int LAPACKE_sgelqf( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, float* tau );
long long int LAPACKE_dgelqf( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, double* tau );
long long int LAPACKE_cgelqf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* tau );
long long int LAPACKE_zgelqf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* tau );

long long int LAPACKE_sgels( int matrix_layout, char trans, long long int m,
                          long long int n, long long int nrhs, float* a,
                          long long int lda, float* b, long long int ldb );
long long int LAPACKE_dgels( int matrix_layout, char trans, long long int m,
                          long long int n, long long int nrhs, double* a,
                          long long int lda, double* b, long long int ldb );
long long int LAPACKE_cgels( int matrix_layout, char trans, long long int m,
                          long long int n, long long int nrhs,
                          MKL_Complex8* a, long long int lda,
                          MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zgels( int matrix_layout, char trans, long long int m,
                          long long int n, long long int nrhs,
                          MKL_Complex16* a, long long int lda,
                          MKL_Complex16* b, long long int ldb );

long long int LAPACKE_sgelsd( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, float* a, long long int lda, float* b,
                           long long int ldb, float* s, float rcond,
                           long long int* rank );
long long int LAPACKE_dgelsd( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, double* a, long long int lda,
                           double* b, long long int ldb, double* s, double rcond,
                           long long int* rank );
long long int LAPACKE_cgelsd( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb, float* s, float rcond,
                           long long int* rank );
long long int LAPACKE_zgelsd( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, double* s, double rcond,
                           long long int* rank );

long long int LAPACKE_sgelss( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, float* a, long long int lda, float* b,
                           long long int ldb, float* s, float rcond,
                           long long int* rank );
long long int LAPACKE_dgelss( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, double* a, long long int lda,
                           double* b, long long int ldb, double* s, double rcond,
                           long long int* rank );
long long int LAPACKE_cgelss( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb, float* s, float rcond,
                           long long int* rank );
long long int LAPACKE_zgelss( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, double* s, double rcond,
                           long long int* rank );

long long int LAPACKE_sgelsy( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, float* a, long long int lda, float* b,
                           long long int ldb, long long int* jpvt, float rcond,
                           long long int* rank );
long long int LAPACKE_dgelsy( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, double* a, long long int lda,
                           double* b, long long int ldb, long long int* jpvt,
                           double rcond, long long int* rank );
long long int LAPACKE_cgelsy( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb, long long int* jpvt, float rcond,
                           long long int* rank );
long long int LAPACKE_zgelsy( int matrix_layout, long long int m, long long int n,
                           long long int nrhs, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, long long int* jpvt, double rcond,
                           long long int* rank );

long long int LAPACKE_sgemqrt( int matrix_layout, char side, char trans,
                            long long int m, long long int n, long long int k,
                            long long int nb, const float* v, long long int ldv,
                            const float* t, long long int ldt, float* c,
                            long long int ldc );
long long int LAPACKE_dgemqrt( int matrix_layout, char side, char trans,
                            long long int m, long long int n, long long int k,
                            long long int nb, const double* v, long long int ldv,
                            const double* t, long long int ldt, double* c,
                            long long int ldc );
long long int LAPACKE_cgemqrt( int matrix_layout, char side, char trans,
                            long long int m, long long int n, long long int k,
                            long long int nb, const MKL_Complex8* v,
                            long long int ldv, const MKL_Complex8* t,
                            long long int ldt, MKL_Complex8* c,
                            long long int ldc );
long long int LAPACKE_zgemqrt( int matrix_layout, char side, char trans,
                            long long int m, long long int n, long long int k,
                            long long int nb, const MKL_Complex16* v,
                            long long int ldv, const MKL_Complex16* t,
                            long long int ldt, MKL_Complex16* c,
                            long long int ldc );

long long int LAPACKE_sgeqlf( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, float* tau );
long long int LAPACKE_dgeqlf( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, double* tau );
long long int LAPACKE_cgeqlf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* tau );
long long int LAPACKE_zgeqlf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* tau );

long long int LAPACKE_sgeqp3( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, long long int* jpvt,
                           float* tau );
long long int LAPACKE_dgeqp3( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, long long int* jpvt,
                           double* tau );
long long int LAPACKE_cgeqp3( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int* jpvt, MKL_Complex8* tau );
long long int LAPACKE_zgeqp3( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int* jpvt, MKL_Complex16* tau );

long long int LAPACKE_sgeqpf( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, long long int* jpvt,
                           float* tau );
long long int LAPACKE_dgeqpf( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, long long int* jpvt,
                           double* tau );
long long int LAPACKE_cgeqpf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int* jpvt, MKL_Complex8* tau );
long long int LAPACKE_zgeqpf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int* jpvt, MKL_Complex16* tau );


long long int LAPACKE_sgeqr2( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, float* tau );

long long int LAPACKE_dgeqr2( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, double* tau );

long long int LAPACKE_cgeqr2( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* tau );

long long int LAPACKE_zgeqr2( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* tau );


long long int LAPACKE_sgeqrf( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, float* tau );
long long int LAPACKE_dgeqrf( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, double* tau );
long long int LAPACKE_cgeqrf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* tau );
long long int LAPACKE_zgeqrf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* tau );

long long int LAPACKE_sgeqrfp( int matrix_layout, long long int m, long long int n,
                            float* a, long long int lda, float* tau );
long long int LAPACKE_dgeqrfp( int matrix_layout, long long int m, long long int n,
                            double* a, long long int lda, double* tau );
long long int LAPACKE_cgeqrfp( int matrix_layout, long long int m, long long int n,
                            MKL_Complex8* a, long long int lda,
                            MKL_Complex8* tau );
long long int LAPACKE_zgeqrfp( int matrix_layout, long long int m, long long int n,
                            MKL_Complex16* a, long long int lda,
                            MKL_Complex16* tau );

long long int LAPACKE_sgeqrt( int matrix_layout, long long int m, long long int n,
                           long long int nb, float* a, long long int lda, float* t,
                           long long int ldt );
long long int LAPACKE_dgeqrt( int matrix_layout, long long int m, long long int n,
                           long long int nb, double* a, long long int lda, double* t,
                           long long int ldt );
long long int LAPACKE_cgeqrt( int matrix_layout, long long int m, long long int n,
                           long long int nb, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* t,
                           long long int ldt );
long long int LAPACKE_zgeqrt( int matrix_layout, long long int m, long long int n,
                           long long int nb, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* t,
                           long long int ldt );

long long int LAPACKE_sgeqrt2( int matrix_layout, long long int m, long long int n,
                            float* a, long long int lda, float* t,
                            long long int ldt );
long long int LAPACKE_dgeqrt2( int matrix_layout, long long int m, long long int n,
                            double* a, long long int lda, double* t,
                            long long int ldt );
long long int LAPACKE_cgeqrt2( int matrix_layout, long long int m, long long int n,
                            MKL_Complex8* a, long long int lda,
                            MKL_Complex8* t, long long int ldt );
long long int LAPACKE_zgeqrt2( int matrix_layout, long long int m, long long int n,
                            MKL_Complex16* a, long long int lda,
                            MKL_Complex16* t, long long int ldt );

long long int LAPACKE_sgeqrt3( int matrix_layout, long long int m, long long int n,
                            float* a, long long int lda, float* t,
                            long long int ldt );
long long int LAPACKE_dgeqrt3( int matrix_layout, long long int m, long long int n,
                            double* a, long long int lda, double* t,
                            long long int ldt );
long long int LAPACKE_cgeqrt3( int matrix_layout, long long int m, long long int n,
                            MKL_Complex8* a, long long int lda,
                            MKL_Complex8* t, long long int ldt );
long long int LAPACKE_zgeqrt3( int matrix_layout, long long int m, long long int n,
                            MKL_Complex16* a, long long int lda,
                            MKL_Complex16* t, long long int ldt );

long long int LAPACKE_sgerfs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const float* a, long long int lda,
                           const float* af, long long int ldaf,
                           const long long int* ipiv, const float* b,
                           long long int ldb, float* x, long long int ldx,
                           float* ferr, float* berr );
long long int LAPACKE_dgerfs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const double* a, long long int lda,
                           const double* af, long long int ldaf,
                           const long long int* ipiv, const double* b,
                           long long int ldb, double* x, long long int ldx,
                           double* ferr, double* berr );
long long int LAPACKE_cgerfs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* af,
                           long long int ldaf, const long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zgerfs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* af,
                           long long int ldaf, const long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_sgerfsx( int matrix_layout, char trans, char equed,
                            long long int n, long long int nrhs, const float* a,
                            long long int lda, const float* af, long long int ldaf,
                            const long long int* ipiv, const float* r,
                            const float* c, const float* b, long long int ldb,
                            float* x, long long int ldx, float* rcond, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_dgerfsx( int matrix_layout, char trans, char equed,
                            long long int n, long long int nrhs, const double* a,
                            long long int lda, const double* af, long long int ldaf,
                            const long long int* ipiv, const double* r,
                            const double* c, const double* b, long long int ldb,
                            double* x, long long int ldx, double* rcond,
                            double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );
long long int LAPACKE_cgerfsx( int matrix_layout, char trans, char equed,
                            long long int n, long long int nrhs,
                            const MKL_Complex8* a, long long int lda,
                            const MKL_Complex8* af, long long int ldaf,
                            const long long int* ipiv, const float* r,
                            const float* c, const MKL_Complex8* b,
                            long long int ldb, MKL_Complex8* x,
                            long long int ldx, float* rcond, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_zgerfsx( int matrix_layout, char trans, char equed,
                            long long int n, long long int nrhs,
                            const MKL_Complex16* a, long long int lda,
                            const MKL_Complex16* af, long long int ldaf,
                            const long long int* ipiv, const double* r,
                            const double* c, const MKL_Complex16* b,
                            long long int ldb, MKL_Complex16* x,
                            long long int ldx, double* rcond, double* berr,
                            long long int n_err_bnds, double* err_bnds_norm,
                            double* err_bnds_comp, long long int nparams,
                            double* params );

long long int LAPACKE_sgerqf( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, float* tau );
long long int LAPACKE_dgerqf( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, double* tau );
long long int LAPACKE_cgerqf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* tau );
long long int LAPACKE_zgerqf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* tau );

long long int LAPACKE_sgesdd( int matrix_layout, char jobz, long long int m,
                           long long int n, float* a, long long int lda, float* s,
                           float* u, long long int ldu, float* vt,
                           long long int ldvt );
long long int LAPACKE_dgesdd( int matrix_layout, char jobz, long long int m,
                           long long int n, double* a, long long int lda, double* s,
                           double* u, long long int ldu, double* vt,
                           long long int ldvt );
long long int LAPACKE_cgesdd( int matrix_layout, char jobz, long long int m,
                           long long int n, MKL_Complex8* a,
                           long long int lda, float* s, MKL_Complex8* u,
                           long long int ldu, MKL_Complex8* vt,
                           long long int ldvt );
long long int LAPACKE_zgesdd( int matrix_layout, char jobz, long long int m,
                           long long int n, MKL_Complex16* a,
                           long long int lda, double* s, MKL_Complex16* u,
                           long long int ldu, MKL_Complex16* vt,
                           long long int ldvt );

long long int LAPACKE_sgesv( int matrix_layout, long long int n, long long int nrhs,
                          float* a, long long int lda, long long int* ipiv, float* b,
                          long long int ldb );
long long int LAPACKE_dgesv( int matrix_layout, long long int n, long long int nrhs,
                          double* a, long long int lda, long long int* ipiv,
                          double* b, long long int ldb );
long long int LAPACKE_cgesv( int matrix_layout, long long int n, long long int nrhs,
                          MKL_Complex8* a, long long int lda,
                          long long int* ipiv, MKL_Complex8* b,
                          long long int ldb );
long long int LAPACKE_zgesv( int matrix_layout, long long int n, long long int nrhs,
                          MKL_Complex16* a, long long int lda,
                          long long int* ipiv, MKL_Complex16* b,
                          long long int ldb );
long long int LAPACKE_dsgesv( int matrix_layout, long long int n, long long int nrhs,
                           double* a, long long int lda, long long int* ipiv,
                           double* b, long long int ldb, double* x, long long int ldx,
                           long long int* iter );
long long int LAPACKE_zcgesv( int matrix_layout, long long int n, long long int nrhs,
                           MKL_Complex16* a, long long int lda,
                           long long int* ipiv, MKL_Complex16* b,
                           long long int ldb, MKL_Complex16* x,
                           long long int ldx, long long int* iter );

long long int LAPACKE_sgesvd( int matrix_layout, char jobu, char jobvt,
                           long long int m, long long int n, float* a, long long int lda,
                           float* s, float* u, long long int ldu, float* vt,
                           long long int ldvt, float* superb );
long long int LAPACKE_dgesvd( int matrix_layout, char jobu, char jobvt,
                           long long int m, long long int n, double* a,
                           long long int lda, double* s, double* u, long long int ldu,
                           double* vt, long long int ldvt, double* superb );
long long int LAPACKE_cgesvd( int matrix_layout, char jobu, char jobvt,
                           long long int m, long long int n, MKL_Complex8* a,
                           long long int lda, float* s, MKL_Complex8* u,
                           long long int ldu, MKL_Complex8* vt,
                           long long int ldvt, float* superb );
long long int LAPACKE_zgesvd( int matrix_layout, char jobu, char jobvt,
                           long long int m, long long int n, MKL_Complex16* a,
                           long long int lda, double* s, MKL_Complex16* u,
                           long long int ldu, MKL_Complex16* vt,
                           long long int ldvt, double* superb );

long long int LAPACKE_sgesvj( int matrix_layout, char joba, char jobu, char jobv,
                           long long int m, long long int n, float* a, long long int lda,
                           float* sva, long long int mv, float* v, long long int ldv,
                           float* stat );
long long int LAPACKE_dgesvj( int matrix_layout, char joba, char jobu, char jobv,
                           long long int m, long long int n, double* a,
                           long long int lda, double* sva, long long int mv,
                           double* v, long long int ldv, double* stat );

long long int LAPACKE_sgesvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int nrhs, float* a,
                           long long int lda, float* af, long long int ldaf,
                           long long int* ipiv, char* equed, float* r, float* c,
                           float* b, long long int ldb, float* x, long long int ldx,
                           float* rcond, float* ferr, float* berr,
                           float* rpivot );
long long int LAPACKE_dgesvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int nrhs, double* a,
                           long long int lda, double* af, long long int ldaf,
                           long long int* ipiv, char* equed, double* r, double* c,
                           double* b, long long int ldb, double* x, long long int ldx,
                           double* rcond, double* ferr, double* berr,
                           double* rpivot );
long long int LAPACKE_cgesvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int nrhs,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* af, long long int ldaf,
                           long long int* ipiv, char* equed, float* r, float* c,
                           MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx,
                           float* rcond, float* ferr, float* berr,
                           float* rpivot );
long long int LAPACKE_zgesvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int nrhs,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* af, long long int ldaf,
                           long long int* ipiv, char* equed, double* r, double* c,
                           MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* rcond, double* ferr, double* berr,
                           double* rpivot );

long long int LAPACKE_sgesvxx( int matrix_layout, char fact, char trans,
                            long long int n, long long int nrhs, float* a,
                            long long int lda, float* af, long long int ldaf,
                            long long int* ipiv, char* equed, float* r, float* c,
                            float* b, long long int ldb, float* x, long long int ldx,
                            float* rcond, float* rpvgrw, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_dgesvxx( int matrix_layout, char fact, char trans,
                            long long int n, long long int nrhs, double* a,
                            long long int lda, double* af, long long int ldaf,
                            long long int* ipiv, char* equed, double* r, double* c,
                            double* b, long long int ldb, double* x,
                            long long int ldx, double* rcond, double* rpvgrw,
                            double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );
long long int LAPACKE_cgesvxx( int matrix_layout, char fact, char trans,
                            long long int n, long long int nrhs,
                            MKL_Complex8* a, long long int lda,
                            MKL_Complex8* af, long long int ldaf,
                            long long int* ipiv, char* equed, float* r, float* c,
                            MKL_Complex8* b, long long int ldb,
                            MKL_Complex8* x, long long int ldx,
                            float* rcond, float* rpvgrw, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_zgesvxx( int matrix_layout, char fact, char trans,
                            long long int n, long long int nrhs,
                            MKL_Complex16* a, long long int lda,
                            MKL_Complex16* af, long long int ldaf,
                            long long int* ipiv, char* equed, double* r, double* c,
                            MKL_Complex16* b, long long int ldb,
                            MKL_Complex16* x, long long int ldx,
                            double* rcond, double* rpvgrw, double* berr,
                            long long int n_err_bnds, double* err_bnds_norm,
                            double* err_bnds_comp, long long int nparams,
                            double* params );


long long int LAPACKE_sgetf2( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, long long int* ipiv );

long long int LAPACKE_dgetf2( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, long long int* ipiv );

long long int LAPACKE_cgetf2( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int* ipiv );

long long int LAPACKE_zgetf2( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int* ipiv );


long long int LAPACKE_sgetrf( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, long long int* ipiv );
long long int LAPACKE_dgetrf( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, long long int* ipiv );
long long int LAPACKE_cgetrf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int* ipiv );
long long int LAPACKE_zgetrf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int* ipiv );

long long int LAPACKE_mkl_sgetrfnpi( int matrix_layout, long long int m, long long int n,
                              long long int nfact, float* a, long long int lda );
long long int LAPACKE_mkl_dgetrfnpi( int matrix_layout, long long int m, long long int n,
                              long long int nfact, double* a, long long int lda );
long long int LAPACKE_mkl_cgetrfnpi( int matrix_layout, long long int m, long long int n,
                              long long int nfact, MKL_Complex8* a,
                              long long int lda );
long long int LAPACKE_mkl_zgetrfnpi( int matrix_layout, long long int m, long long int n,
                              long long int nfact, MKL_Complex16* a,
                              long long int lda );

long long int LAPACKE_sgetri( int matrix_layout, long long int n, float* a,
                           long long int lda, const long long int* ipiv );
long long int LAPACKE_dgetri( int matrix_layout, long long int n, double* a,
                           long long int lda, const long long int* ipiv );
long long int LAPACKE_cgetri( int matrix_layout, long long int n,
                           MKL_Complex8* a, long long int lda,
                           const long long int* ipiv );
long long int LAPACKE_zgetri( int matrix_layout, long long int n,
                           MKL_Complex16* a, long long int lda,
                           const long long int* ipiv );

long long int LAPACKE_sgetrs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const float* a, long long int lda,
                           const long long int* ipiv, float* b, long long int ldb );
long long int LAPACKE_dgetrs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const double* a, long long int lda,
                           const long long int* ipiv, double* b, long long int ldb );
long long int LAPACKE_cgetrs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, const long long int* ipiv,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zgetrs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, const long long int* ipiv,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_sggbak( int matrix_layout, char job, char side, long long int n,
                           long long int ilo, long long int ihi, const float* lscale,
                           const float* rscale, long long int m, float* v,
                           long long int ldv );
long long int LAPACKE_dggbak( int matrix_layout, char job, char side, long long int n,
                           long long int ilo, long long int ihi, const double* lscale,
                           const double* rscale, long long int m, double* v,
                           long long int ldv );
long long int LAPACKE_cggbak( int matrix_layout, char job, char side, long long int n,
                           long long int ilo, long long int ihi, const float* lscale,
                           const float* rscale, long long int m,
                           MKL_Complex8* v, long long int ldv );
long long int LAPACKE_zggbak( int matrix_layout, char job, char side, long long int n,
                           long long int ilo, long long int ihi, const double* lscale,
                           const double* rscale, long long int m,
                           MKL_Complex16* v, long long int ldv );

long long int LAPACKE_sggbal( int matrix_layout, char job, long long int n, float* a,
                           long long int lda, float* b, long long int ldb,
                           long long int* ilo, long long int* ihi, float* lscale,
                           float* rscale );
long long int LAPACKE_dggbal( int matrix_layout, char job, long long int n, double* a,
                           long long int lda, double* b, long long int ldb,
                           long long int* ilo, long long int* ihi, double* lscale,
                           double* rscale );
long long int LAPACKE_cggbal( int matrix_layout, char job, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb,
                           long long int* ilo, long long int* ihi, float* lscale,
                           float* rscale );
long long int LAPACKE_zggbal( int matrix_layout, char job, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb,
                           long long int* ilo, long long int* ihi, double* lscale,
                           double* rscale );

long long int LAPACKE_sgges( int matrix_layout, char jobvsl, char jobvsr, char sort,
                          LAPACK_S_SELECT3 selctg, long long int n, float* a,
                          long long int lda, float* b, long long int ldb,
                          long long int* sdim, float* alphar, float* alphai,
                          float* beta, float* vsl, long long int ldvsl, float* vsr,
                          long long int ldvsr );
long long int LAPACKE_dgges( int matrix_layout, char jobvsl, char jobvsr, char sort,
                          LAPACK_D_SELECT3 selctg, long long int n, double* a,
                          long long int lda, double* b, long long int ldb,
                          long long int* sdim, double* alphar, double* alphai,
                          double* beta, double* vsl, long long int ldvsl,
                          double* vsr, long long int ldvsr );
long long int LAPACKE_cgges( int matrix_layout, char jobvsl, char jobvsr, char sort,
                          LAPACK_C_SELECT2 selctg, long long int n,
                          MKL_Complex8* a, long long int lda,
                          MKL_Complex8* b, long long int ldb,
                          long long int* sdim, MKL_Complex8* alpha,
                          MKL_Complex8* beta, MKL_Complex8* vsl,
                          long long int ldvsl, MKL_Complex8* vsr,
                          long long int ldvsr );
long long int LAPACKE_zgges( int matrix_layout, char jobvsl, char jobvsr, char sort,
                          LAPACK_Z_SELECT2 selctg, long long int n,
                          MKL_Complex16* a, long long int lda,
                          MKL_Complex16* b, long long int ldb,
                          long long int* sdim, MKL_Complex16* alpha,
                          MKL_Complex16* beta,
                          MKL_Complex16* vsl, long long int ldvsl,
                          MKL_Complex16* vsr, long long int ldvsr );

long long int LAPACKE_sggesx( int matrix_layout, char jobvsl, char jobvsr,
                           char sort, LAPACK_S_SELECT3 selctg, char sense,
                           long long int n, float* a, long long int lda, float* b,
                           long long int ldb, long long int* sdim, float* alphar,
                           float* alphai, float* beta, float* vsl,
                           long long int ldvsl, float* vsr, long long int ldvsr,
                           float* rconde, float* rcondv );
long long int LAPACKE_dggesx( int matrix_layout, char jobvsl, char jobvsr,
                           char sort, LAPACK_D_SELECT3 selctg, char sense,
                           long long int n, double* a, long long int lda, double* b,
                           long long int ldb, long long int* sdim, double* alphar,
                           double* alphai, double* beta, double* vsl,
                           long long int ldvsl, double* vsr, long long int ldvsr,
                           double* rconde, double* rcondv );
long long int LAPACKE_cggesx( int matrix_layout, char jobvsl, char jobvsr,
                           char sort, LAPACK_C_SELECT2 selctg, char sense,
                           long long int n, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb, long long int* sdim,
                           MKL_Complex8* alpha,
                           MKL_Complex8* beta,
                           MKL_Complex8* vsl, long long int ldvsl,
                           MKL_Complex8* vsr, long long int ldvsr,
                           float* rconde, float* rcondv );
long long int LAPACKE_zggesx( int matrix_layout, char jobvsl, char jobvsr,
                           char sort, LAPACK_Z_SELECT2 selctg, char sense,
                           long long int n, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, long long int* sdim,
                           MKL_Complex16* alpha,
                           MKL_Complex16* beta,
                           MKL_Complex16* vsl, long long int ldvsl,
                           MKL_Complex16* vsr, long long int ldvsr,
                           double* rconde, double* rcondv );

long long int LAPACKE_sggev( int matrix_layout, char jobvl, char jobvr,
                          long long int n, float* a, long long int lda, float* b,
                          long long int ldb, float* alphar, float* alphai,
                          float* beta, float* vl, long long int ldvl, float* vr,
                          long long int ldvr );
long long int LAPACKE_dggev( int matrix_layout, char jobvl, char jobvr,
                          long long int n, double* a, long long int lda, double* b,
                          long long int ldb, double* alphar, double* alphai,
                          double* beta, double* vl, long long int ldvl, double* vr,
                          long long int ldvr );
long long int LAPACKE_cggev( int matrix_layout, char jobvl, char jobvr,
                          long long int n, MKL_Complex8* a, long long int lda,
                          MKL_Complex8* b, long long int ldb,
                          MKL_Complex8* alpha,
                          MKL_Complex8* beta, MKL_Complex8* vl,
                          long long int ldvl, MKL_Complex8* vr,
                          long long int ldvr );
long long int LAPACKE_zggev( int matrix_layout, char jobvl, char jobvr,
                          long long int n, MKL_Complex16* a,
                          long long int lda, MKL_Complex16* b,
                          long long int ldb, MKL_Complex16* alpha,
                          MKL_Complex16* beta,
                          MKL_Complex16* vl, long long int ldvl,
                          MKL_Complex16* vr, long long int ldvr );

long long int LAPACKE_sggevx( int matrix_layout, char balanc, char jobvl,
                           char jobvr, char sense, long long int n, float* a,
                           long long int lda, float* b, long long int ldb,
                           float* alphar, float* alphai, float* beta, float* vl,
                           long long int ldvl, float* vr, long long int ldvr,
                           long long int* ilo, long long int* ihi, float* lscale,
                           float* rscale, float* abnrm, float* bbnrm,
                           float* rconde, float* rcondv );
long long int LAPACKE_dggevx( int matrix_layout, char balanc, char jobvl,
                           char jobvr, char sense, long long int n, double* a,
                           long long int lda, double* b, long long int ldb,
                           double* alphar, double* alphai, double* beta,
                           double* vl, long long int ldvl, double* vr,
                           long long int ldvr, long long int* ilo, long long int* ihi,
                           double* lscale, double* rscale, double* abnrm,
                           double* bbnrm, double* rconde, double* rcondv );
long long int LAPACKE_cggevx( int matrix_layout, char balanc, char jobvl,
                           char jobvr, char sense, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* alpha,
                           MKL_Complex8* beta, MKL_Complex8* vl,
                           long long int ldvl, MKL_Complex8* vr,
                           long long int ldvr, long long int* ilo, long long int* ihi,
                           float* lscale, float* rscale, float* abnrm,
                           float* bbnrm, float* rconde, float* rcondv );
long long int LAPACKE_zggevx( int matrix_layout, char balanc, char jobvl,
                           char jobvr, char sense, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* alpha,
                           MKL_Complex16* beta,
                           MKL_Complex16* vl, long long int ldvl,
                           MKL_Complex16* vr, long long int ldvr,
                           long long int* ilo, long long int* ihi, double* lscale,
                           double* rscale, double* abnrm, double* bbnrm,
                           double* rconde, double* rcondv );

long long int LAPACKE_sggglm( int matrix_layout, long long int n, long long int m,
                           long long int p, float* a, long long int lda, float* b,
                           long long int ldb, float* d, float* x, float* y );
long long int LAPACKE_dggglm( int matrix_layout, long long int n, long long int m,
                           long long int p, double* a, long long int lda, double* b,
                           long long int ldb, double* d, double* x, double* y );
long long int LAPACKE_cggglm( int matrix_layout, long long int n, long long int m,
                           long long int p, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb, MKL_Complex8* d,
                           MKL_Complex8* x, MKL_Complex8* y );
long long int LAPACKE_zggglm( int matrix_layout, long long int n, long long int m,
                           long long int p, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, MKL_Complex16* d,
                           MKL_Complex16* x, MKL_Complex16* y );

long long int LAPACKE_sgghrd( int matrix_layout, char compq, char compz,
                           long long int n, long long int ilo, long long int ihi,
                           float* a, long long int lda, float* b, long long int ldb,
                           float* q, long long int ldq, float* z, long long int ldz );
long long int LAPACKE_dgghrd( int matrix_layout, char compq, char compz,
                           long long int n, long long int ilo, long long int ihi,
                           double* a, long long int lda, double* b, long long int ldb,
                           double* q, long long int ldq, double* z,
                           long long int ldz );
long long int LAPACKE_cgghrd( int matrix_layout, char compq, char compz,
                           long long int n, long long int ilo, long long int ihi,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* q, long long int ldq,
                           MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zgghrd( int matrix_layout, char compq, char compz,
                           long long int n, long long int ilo, long long int ihi,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* q, long long int ldq,
                           MKL_Complex16* z, long long int ldz );

long long int LAPACKE_sgglse( int matrix_layout, long long int m, long long int n,
                           long long int p, float* a, long long int lda, float* b,
                           long long int ldb, float* c, float* d, float* x );
long long int LAPACKE_dgglse( int matrix_layout, long long int m, long long int n,
                           long long int p, double* a, long long int lda, double* b,
                           long long int ldb, double* c, double* d, double* x );
long long int LAPACKE_cgglse( int matrix_layout, long long int m, long long int n,
                           long long int p, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb, MKL_Complex8* c,
                           MKL_Complex8* d, MKL_Complex8* x );
long long int LAPACKE_zgglse( int matrix_layout, long long int m, long long int n,
                           long long int p, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, MKL_Complex16* c,
                           MKL_Complex16* d, MKL_Complex16* x );

long long int LAPACKE_sggqrf( int matrix_layout, long long int n, long long int m,
                           long long int p, float* a, long long int lda, float* taua,
                           float* b, long long int ldb, float* taub );
long long int LAPACKE_dggqrf( int matrix_layout, long long int n, long long int m,
                           long long int p, double* a, long long int lda,
                           double* taua, double* b, long long int ldb,
                           double* taub );
long long int LAPACKE_cggqrf( int matrix_layout, long long int n, long long int m,
                           long long int p, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* taua,
                           MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* taub );
long long int LAPACKE_zggqrf( int matrix_layout, long long int n, long long int m,
                           long long int p, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* taua,
                           MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* taub );

long long int LAPACKE_sggrqf( int matrix_layout, long long int m, long long int p,
                           long long int n, float* a, long long int lda, float* taua,
                           float* b, long long int ldb, float* taub );
long long int LAPACKE_dggrqf( int matrix_layout, long long int m, long long int p,
                           long long int n, double* a, long long int lda,
                           double* taua, double* b, long long int ldb,
                           double* taub );
long long int LAPACKE_cggrqf( int matrix_layout, long long int m, long long int p,
                           long long int n, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* taua,
                           MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* taub );
long long int LAPACKE_zggrqf( int matrix_layout, long long int m, long long int p,
                           long long int n, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* taua,
                           MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* taub );

long long int LAPACKE_sggsvd( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int n, long long int p,
                           long long int* k, long long int* l, float* a,
                           long long int lda, float* b, long long int ldb,
                           float* alpha, float* beta, float* u, long long int ldu,
                           float* v, long long int ldv, float* q, long long int ldq,
                           long long int* iwork );
long long int LAPACKE_dggsvd( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int n, long long int p,
                           long long int* k, long long int* l, double* a,
                           long long int lda, double* b, long long int ldb,
                           double* alpha, double* beta, double* u,
                           long long int ldu, double* v, long long int ldv, double* q,
                           long long int ldq, long long int* iwork );
long long int LAPACKE_cggsvd( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int n, long long int p,
                           long long int* k, long long int* l,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb,
                           float* alpha, float* beta, MKL_Complex8* u,
                           long long int ldu, MKL_Complex8* v,
                           long long int ldv, MKL_Complex8* q,
                           long long int ldq, long long int* iwork );
long long int LAPACKE_zggsvd( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int n, long long int p,
                           long long int* k, long long int* l,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb,
                           double* alpha, double* beta,
                           MKL_Complex16* u, long long int ldu,
                           MKL_Complex16* v, long long int ldv,
                           MKL_Complex16* q, long long int ldq,
                           long long int* iwork );

long long int LAPACKE_sggsvp( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int p, long long int n, float* a,
                           long long int lda, float* b, long long int ldb, float tola,
                           float tolb, long long int* k, long long int* l, float* u,
                           long long int ldu, float* v, long long int ldv, float* q,
                           long long int ldq );
long long int LAPACKE_dggsvp( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int p, long long int n, double* a,
                           long long int lda, double* b, long long int ldb,
                           double tola, double tolb, long long int* k,
                           long long int* l, double* u, long long int ldu, double* v,
                           long long int ldv, double* q, long long int ldq );
long long int LAPACKE_cggsvp( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int p, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb, float tola,
                           float tolb, long long int* k, long long int* l,
                           MKL_Complex8* u, long long int ldu,
                           MKL_Complex8* v, long long int ldv,
                           MKL_Complex8* q, long long int ldq );
long long int LAPACKE_zggsvp( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int p, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb,
                           double tola, double tolb, long long int* k,
                           long long int* l, MKL_Complex16* u,
                           long long int ldu, MKL_Complex16* v,
                           long long int ldv, MKL_Complex16* q,
                           long long int ldq );

long long int LAPACKE_sgtcon( char norm, long long int n, const float* dl,
                           const float* d, const float* du, const float* du2,
                           const long long int* ipiv, float anorm, float* rcond );
long long int LAPACKE_dgtcon( char norm, long long int n, const double* dl,
                           const double* d, const double* du, const double* du2,
                           const long long int* ipiv, double anorm,
                           double* rcond );
long long int LAPACKE_cgtcon( char norm, long long int n,
                           const MKL_Complex8* dl,
                           const MKL_Complex8* d,
                           const MKL_Complex8* du,
                           const MKL_Complex8* du2,
                           const long long int* ipiv, float anorm, float* rcond );
long long int LAPACKE_zgtcon( char norm, long long int n,
                           const MKL_Complex16* dl,
                           const MKL_Complex16* d,
                           const MKL_Complex16* du,
                           const MKL_Complex16* du2,
                           const long long int* ipiv, double anorm,
                           double* rcond );

long long int LAPACKE_sgtrfs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const float* dl, const float* d,
                           const float* du, const float* dlf, const float* df,
                           const float* duf, const float* du2,
                           const long long int* ipiv, const float* b,
                           long long int ldb, float* x, long long int ldx,
                           float* ferr, float* berr );
long long int LAPACKE_dgtrfs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const double* dl, const double* d,
                           const double* du, const double* dlf,
                           const double* df, const double* duf,
                           const double* du2, const long long int* ipiv,
                           const double* b, long long int ldb, double* x,
                           long long int ldx, double* ferr, double* berr );
long long int LAPACKE_cgtrfs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const MKL_Complex8* dl,
                           const MKL_Complex8* d,
                           const MKL_Complex8* du,
                           const MKL_Complex8* dlf,
                           const MKL_Complex8* df,
                           const MKL_Complex8* duf,
                           const MKL_Complex8* du2,
                           const long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zgtrfs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const MKL_Complex16* dl,
                           const MKL_Complex16* d,
                           const MKL_Complex16* du,
                           const MKL_Complex16* dlf,
                           const MKL_Complex16* df,
                           const MKL_Complex16* duf,
                           const MKL_Complex16* du2,
                           const long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_sgtsv( int matrix_layout, long long int n, long long int nrhs,
                          float* dl, float* d, float* du, float* b,
                          long long int ldb );
long long int LAPACKE_dgtsv( int matrix_layout, long long int n, long long int nrhs,
                          double* dl, double* d, double* du, double* b,
                          long long int ldb );
long long int LAPACKE_cgtsv( int matrix_layout, long long int n, long long int nrhs,
                          MKL_Complex8* dl, MKL_Complex8* d,
                          MKL_Complex8* du, MKL_Complex8* b,
                          long long int ldb );
long long int LAPACKE_zgtsv( int matrix_layout, long long int n, long long int nrhs,
                          MKL_Complex16* dl, MKL_Complex16* d,
                          MKL_Complex16* du, MKL_Complex16* b,
                          long long int ldb );

long long int LAPACKE_sgtsvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int nrhs, const float* dl,
                           const float* d, const float* du, float* dlf,
                           float* df, float* duf, float* du2, long long int* ipiv,
                           const float* b, long long int ldb, float* x,
                           long long int ldx, float* rcond, float* ferr,
                           float* berr );
long long int LAPACKE_dgtsvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int nrhs, const double* dl,
                           const double* d, const double* du, double* dlf,
                           double* df, double* duf, double* du2,
                           long long int* ipiv, const double* b, long long int ldb,
                           double* x, long long int ldx, double* rcond,
                           double* ferr, double* berr );
long long int LAPACKE_cgtsvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int nrhs,
                           const MKL_Complex8* dl,
                           const MKL_Complex8* d,
                           const MKL_Complex8* du,
                           MKL_Complex8* dlf, MKL_Complex8* df,
                           MKL_Complex8* duf, MKL_Complex8* du2,
                           long long int* ipiv, const MKL_Complex8* b,
                           long long int ldb, MKL_Complex8* x,
                           long long int ldx, float* rcond, float* ferr,
                           float* berr );
long long int LAPACKE_zgtsvx( int matrix_layout, char fact, char trans,
                           long long int n, long long int nrhs,
                           const MKL_Complex16* dl,
                           const MKL_Complex16* d,
                           const MKL_Complex16* du,
                           MKL_Complex16* dlf,
                           MKL_Complex16* df,
                           MKL_Complex16* duf,
                           MKL_Complex16* du2, long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );

long long int LAPACKE_sgttrf( long long int n, float* dl, float* d, float* du,
                           float* du2, long long int* ipiv );
long long int LAPACKE_dgttrf( long long int n, double* dl, double* d, double* du,
                           double* du2, long long int* ipiv );
long long int LAPACKE_cgttrf( long long int n, MKL_Complex8* dl,
                           MKL_Complex8* d, MKL_Complex8* du,
                           MKL_Complex8* du2, long long int* ipiv );
long long int LAPACKE_zgttrf( long long int n, MKL_Complex16* dl,
                           MKL_Complex16* d, MKL_Complex16* du,
                           MKL_Complex16* du2, long long int* ipiv );

long long int LAPACKE_sgttrs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const float* dl, const float* d,
                           const float* du, const float* du2,
                           const long long int* ipiv, float* b, long long int ldb );
long long int LAPACKE_dgttrs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const double* dl, const double* d,
                           const double* du, const double* du2,
                           const long long int* ipiv, double* b, long long int ldb );
long long int LAPACKE_cgttrs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const MKL_Complex8* dl,
                           const MKL_Complex8* d,
                           const MKL_Complex8* du,
                           const MKL_Complex8* du2,
                           const long long int* ipiv, MKL_Complex8* b,
                           long long int ldb );
long long int LAPACKE_zgttrs( int matrix_layout, char trans, long long int n,
                           long long int nrhs, const MKL_Complex16* dl,
                           const MKL_Complex16* d,
                           const MKL_Complex16* du,
                           const MKL_Complex16* du2,
                           const long long int* ipiv, MKL_Complex16* b,
                           long long int ldb );

long long int LAPACKE_chbev( int matrix_layout, char jobz, char uplo, long long int n,
                          long long int kd, MKL_Complex8* ab,
                          long long int ldab, float* w, MKL_Complex8* z,
                          long long int ldz );
long long int LAPACKE_zhbev( int matrix_layout, char jobz, char uplo, long long int n,
                          long long int kd, MKL_Complex16* ab,
                          long long int ldab, double* w, MKL_Complex16* z,
                          long long int ldz );

long long int LAPACKE_chbevd( int matrix_layout, char jobz, char uplo, long long int n,
                           long long int kd, MKL_Complex8* ab,
                           long long int ldab, float* w, MKL_Complex8* z,
                           long long int ldz );
long long int LAPACKE_zhbevd( int matrix_layout, char jobz, char uplo, long long int n,
                           long long int kd, MKL_Complex16* ab,
                           long long int ldab, double* w, MKL_Complex16* z,
                           long long int ldz );

long long int LAPACKE_chbevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, long long int kd,
                           MKL_Complex8* ab, long long int ldab,
                           MKL_Complex8* q, long long int ldq, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           long long int* m, float* w, MKL_Complex8* z,
                           long long int ldz, long long int* ifail );
long long int LAPACKE_zhbevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, long long int kd,
                           MKL_Complex16* ab, long long int ldab,
                           MKL_Complex16* q, long long int ldq, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w,
                           MKL_Complex16* z, long long int ldz,
                           long long int* ifail );

long long int LAPACKE_chbgst( int matrix_layout, char vect, char uplo, long long int n,
                           long long int ka, long long int kb,
                           MKL_Complex8* ab, long long int ldab,
                           const MKL_Complex8* bb, long long int ldbb,
                           MKL_Complex8* x, long long int ldx );
long long int LAPACKE_zhbgst( int matrix_layout, char vect, char uplo, long long int n,
                           long long int ka, long long int kb,
                           MKL_Complex16* ab, long long int ldab,
                           const MKL_Complex16* bb, long long int ldbb,
                           MKL_Complex16* x, long long int ldx );

long long int LAPACKE_chbgv( int matrix_layout, char jobz, char uplo, long long int n,
                          long long int ka, long long int kb,
                          MKL_Complex8* ab, long long int ldab,
                          MKL_Complex8* bb, long long int ldbb, float* w,
                          MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zhbgv( int matrix_layout, char jobz, char uplo, long long int n,
                          long long int ka, long long int kb,
                          MKL_Complex16* ab, long long int ldab,
                          MKL_Complex16* bb, long long int ldbb, double* w,
                          MKL_Complex16* z, long long int ldz );

long long int LAPACKE_chbgvd( int matrix_layout, char jobz, char uplo, long long int n,
                           long long int ka, long long int kb,
                           MKL_Complex8* ab, long long int ldab,
                           MKL_Complex8* bb, long long int ldbb, float* w,
                           MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zhbgvd( int matrix_layout, char jobz, char uplo, long long int n,
                           long long int ka, long long int kb,
                           MKL_Complex16* ab, long long int ldab,
                           MKL_Complex16* bb, long long int ldbb,
                           double* w, MKL_Complex16* z,
                           long long int ldz );

long long int LAPACKE_chbgvx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, long long int ka, long long int kb,
                           MKL_Complex8* ab, long long int ldab,
                           MKL_Complex8* bb, long long int ldbb,
                           MKL_Complex8* q, long long int ldq, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           long long int* m, float* w, MKL_Complex8* z,
                           long long int ldz, long long int* ifail );
long long int LAPACKE_zhbgvx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, long long int ka, long long int kb,
                           MKL_Complex16* ab, long long int ldab,
                           MKL_Complex16* bb, long long int ldbb,
                           MKL_Complex16* q, long long int ldq, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w,
                           MKL_Complex16* z, long long int ldz,
                           long long int* ifail );

long long int LAPACKE_chbtrd( int matrix_layout, char vect, char uplo, long long int n,
                           long long int kd, MKL_Complex8* ab,
                           long long int ldab, float* d, float* e,
                           MKL_Complex8* q, long long int ldq );
long long int LAPACKE_zhbtrd( int matrix_layout, char vect, char uplo, long long int n,
                           long long int kd, MKL_Complex16* ab,
                           long long int ldab, double* d, double* e,
                           MKL_Complex16* q, long long int ldq );

long long int LAPACKE_checon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           const long long int* ipiv, float anorm, float* rcond );
long long int LAPACKE_zhecon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           const long long int* ipiv, double anorm,
                           double* rcond );

long long int LAPACKE_cheequb( int matrix_layout, char uplo, long long int n,
                            const MKL_Complex8* a, long long int lda,
                            float* s, float* scond, float* amax );
long long int LAPACKE_zheequb( int matrix_layout, char uplo, long long int n,
                            const MKL_Complex16* a, long long int lda,
                            double* s, double* scond, double* amax );

long long int LAPACKE_cheev( int matrix_layout, char jobz, char uplo, long long int n,
                          MKL_Complex8* a, long long int lda, float* w );
long long int LAPACKE_zheev( int matrix_layout, char jobz, char uplo, long long int n,
                          MKL_Complex16* a, long long int lda, double* w );

long long int LAPACKE_cheevd( int matrix_layout, char jobz, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda, float* w );
long long int LAPACKE_zheevd( int matrix_layout, char jobz, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda,
                           double* w );

long long int LAPACKE_cheevr( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, MKL_Complex8* a,
                           long long int lda, float vl, float vu, long long int il,
                           long long int iu, float abstol, long long int* m, float* w,
                           MKL_Complex8* z, long long int ldz,
                           long long int* isuppz );
long long int LAPACKE_zheevr( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, MKL_Complex16* a,
                           long long int lda, double vl, double vu, long long int il,
                           long long int iu, double abstol, long long int* m,
                           double* w, MKL_Complex16* z, long long int ldz,
                           long long int* isuppz );

long long int LAPACKE_cheevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, MKL_Complex8* a,
                           long long int lda, float vl, float vu, long long int il,
                           long long int iu, float abstol, long long int* m, float* w,
                           MKL_Complex8* z, long long int ldz,
                           long long int* ifail );
long long int LAPACKE_zheevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, MKL_Complex16* a,
                           long long int lda, double vl, double vu, long long int il,
                           long long int iu, double abstol, long long int* m,
                           double* w, MKL_Complex16* z, long long int ldz,
                           long long int* ifail );

long long int LAPACKE_chegst( int matrix_layout, long long int itype, char uplo,
                           long long int n, MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* b,
                           long long int ldb );
long long int LAPACKE_zhegst( int matrix_layout, long long int itype, char uplo,
                           long long int n, MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* b,
                           long long int ldb );

long long int LAPACKE_chegv( int matrix_layout, long long int itype, char jobz,
                          char uplo, long long int n, MKL_Complex8* a,
                          long long int lda, MKL_Complex8* b,
                          long long int ldb, float* w );
long long int LAPACKE_zhegv( int matrix_layout, long long int itype, char jobz,
                          char uplo, long long int n, MKL_Complex16* a,
                          long long int lda, MKL_Complex16* b,
                          long long int ldb, double* w );

long long int LAPACKE_chegvd( int matrix_layout, long long int itype, char jobz,
                           char uplo, long long int n, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb, float* w );
long long int LAPACKE_zhegvd( int matrix_layout, long long int itype, char jobz,
                           char uplo, long long int n, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, double* w );

long long int LAPACKE_chegvx( int matrix_layout, long long int itype, char jobz,
                           char range, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           long long int* m, float* w, MKL_Complex8* z,
                           long long int ldz, long long int* ifail );
long long int LAPACKE_zhegvx( int matrix_layout, long long int itype, char jobz,
                           char range, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w,
                           MKL_Complex16* z, long long int ldz,
                           long long int* ifail );

long long int LAPACKE_cherfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* af,
                           long long int ldaf, const long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zherfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* af,
                           long long int ldaf, const long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_cherfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs,
                            const MKL_Complex8* a, long long int lda,
                            const MKL_Complex8* af, long long int ldaf,
                            const long long int* ipiv, const float* s,
                            const MKL_Complex8* b, long long int ldb,
                            MKL_Complex8* x, long long int ldx,
                            float* rcond, float* berr, long long int n_err_bnds,
                            float* err_bnds_norm, float* err_bnds_comp,
                            long long int nparams, float* params );
long long int LAPACKE_zherfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs,
                            const MKL_Complex16* a, long long int lda,
                            const MKL_Complex16* af, long long int ldaf,
                            const long long int* ipiv, const double* s,
                            const MKL_Complex16* b, long long int ldb,
                            MKL_Complex16* x, long long int ldx,
                            double* rcond, double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );

long long int LAPACKE_chesv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex8* a,
                          long long int lda, long long int* ipiv,
                          MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zhesv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex16* a,
                          long long int lda, long long int* ipiv,
                          MKL_Complex16* b, long long int ldb );

long long int LAPACKE_chesvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, MKL_Complex8* af,
                           long long int ldaf, long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx,
                           float* rcond, float* ferr, float* berr );
long long int LAPACKE_zhesvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, MKL_Complex16* af,
                           long long int ldaf, long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );

long long int LAPACKE_chesvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs,
                            MKL_Complex8* a, long long int lda,
                            MKL_Complex8* af, long long int ldaf,
                            long long int* ipiv, char* equed, float* s,
                            MKL_Complex8* b, long long int ldb,
                            MKL_Complex8* x, long long int ldx,
                            float* rcond, float* rpvgrw, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_zhesvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs,
                            MKL_Complex16* a, long long int lda,
                            MKL_Complex16* af, long long int ldaf,
                            long long int* ipiv, char* equed, double* s,
                            MKL_Complex16* b, long long int ldb,
                            MKL_Complex16* x, long long int ldx,
                            double* rcond, double* rpvgrw, double* berr,
                            long long int n_err_bnds, double* err_bnds_norm,
                            double* err_bnds_comp, long long int nparams,
                            double* params );

long long int LAPACKE_cheswapr( int matrix_layout, char uplo, long long int n,
                             MKL_Complex8* a, long long int i1,
                             long long int i2 );
long long int LAPACKE_zheswapr( int matrix_layout, char uplo, long long int n,
                             MKL_Complex16* a, long long int i1,
                             long long int i2 );

long long int LAPACKE_chetrd( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda, float* d,
                           float* e, MKL_Complex8* tau );
long long int LAPACKE_zhetrd( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda, double* d,
                           double* e, MKL_Complex16* tau );

long long int LAPACKE_chetrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int* ipiv );
long long int LAPACKE_zhetrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int* ipiv );

long long int LAPACKE_chetri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda,
                           const long long int* ipiv );
long long int LAPACKE_zhetri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda,
                           const long long int* ipiv );

long long int LAPACKE_chetri2( int matrix_layout, char uplo, long long int n,
                            MKL_Complex8* a, long long int lda,
                            const long long int* ipiv );
long long int LAPACKE_zhetri2( int matrix_layout, char uplo, long long int n,
                            MKL_Complex16* a, long long int lda,
                            const long long int* ipiv );

long long int LAPACKE_chetri2x( int matrix_layout, char uplo, long long int n,
                             MKL_Complex8* a, long long int lda,
                             const long long int* ipiv, long long int nb );
long long int LAPACKE_zhetri2x( int matrix_layout, char uplo, long long int n,
                             MKL_Complex16* a, long long int lda,
                             const long long int* ipiv, long long int nb );

long long int LAPACKE_chetrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, const long long int* ipiv,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zhetrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, const long long int* ipiv,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_chetrs2( int matrix_layout, char uplo, long long int n,
                            long long int nrhs, const MKL_Complex8* a,
                            long long int lda, const long long int* ipiv,
                            MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zhetrs2( int matrix_layout, char uplo, long long int n,
                            long long int nrhs, const MKL_Complex16* a,
                            long long int lda, const long long int* ipiv,
                            MKL_Complex16* b, long long int ldb );

long long int LAPACKE_chfrk( int matrix_layout, char transr, char uplo, char trans,
                          long long int n, long long int k, float alpha,
                          const MKL_Complex8* a, long long int lda,
                          float beta, MKL_Complex8* c );
long long int LAPACKE_zhfrk( int matrix_layout, char transr, char uplo, char trans,
                          long long int n, long long int k, double alpha,
                          const MKL_Complex16* a, long long int lda,
                          double beta, MKL_Complex16* c );

long long int LAPACKE_shgeqz( int matrix_layout, char job, char compq, char compz,
                           long long int n, long long int ilo, long long int ihi,
                           float* h, long long int ldh, float* t, long long int ldt,
                           float* alphar, float* alphai, float* beta, float* q,
                           long long int ldq, float* z, long long int ldz );
long long int LAPACKE_dhgeqz( int matrix_layout, char job, char compq, char compz,
                           long long int n, long long int ilo, long long int ihi,
                           double* h, long long int ldh, double* t, long long int ldt,
                           double* alphar, double* alphai, double* beta,
                           double* q, long long int ldq, double* z,
                           long long int ldz );
long long int LAPACKE_chgeqz( int matrix_layout, char job, char compq, char compz,
                           long long int n, long long int ilo, long long int ihi,
                           MKL_Complex8* h, long long int ldh,
                           MKL_Complex8* t, long long int ldt,
                           MKL_Complex8* alpha,
                           MKL_Complex8* beta, MKL_Complex8* q,
                           long long int ldq, MKL_Complex8* z,
                           long long int ldz );
long long int LAPACKE_zhgeqz( int matrix_layout, char job, char compq, char compz,
                           long long int n, long long int ilo, long long int ihi,
                           MKL_Complex16* h, long long int ldh,
                           MKL_Complex16* t, long long int ldt,
                           MKL_Complex16* alpha,
                           MKL_Complex16* beta,
                           MKL_Complex16* q, long long int ldq,
                           MKL_Complex16* z, long long int ldz );

long long int LAPACKE_chpcon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* ap,
                           const long long int* ipiv, float anorm, float* rcond );
long long int LAPACKE_zhpcon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* ap,
                           const long long int* ipiv, double anorm,
                           double* rcond );

long long int LAPACKE_chpev( int matrix_layout, char jobz, char uplo, long long int n,
                          MKL_Complex8* ap, float* w,
                          MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zhpev( int matrix_layout, char jobz, char uplo, long long int n,
                          MKL_Complex16* ap, double* w,
                          MKL_Complex16* z, long long int ldz );

long long int LAPACKE_chpevd( int matrix_layout, char jobz, char uplo, long long int n,
                           MKL_Complex8* ap, float* w,
                           MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zhpevd( int matrix_layout, char jobz, char uplo, long long int n,
                           MKL_Complex16* ap, double* w,
                           MKL_Complex16* z, long long int ldz );

long long int LAPACKE_chpevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, MKL_Complex8* ap, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           long long int* m, float* w, MKL_Complex8* z,
                           long long int ldz, long long int* ifail );
long long int LAPACKE_zhpevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, MKL_Complex16* ap, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w,
                           MKL_Complex16* z, long long int ldz,
                           long long int* ifail );

long long int LAPACKE_chpgst( int matrix_layout, long long int itype, char uplo,
                           long long int n, MKL_Complex8* ap,
                           const MKL_Complex8* bp );
long long int LAPACKE_zhpgst( int matrix_layout, long long int itype, char uplo,
                           long long int n, MKL_Complex16* ap,
                           const MKL_Complex16* bp );

long long int LAPACKE_chpgv( int matrix_layout, long long int itype, char jobz,
                          char uplo, long long int n, MKL_Complex8* ap,
                          MKL_Complex8* bp, float* w,
                          MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zhpgv( int matrix_layout, long long int itype, char jobz,
                          char uplo, long long int n, MKL_Complex16* ap,
                          MKL_Complex16* bp, double* w,
                          MKL_Complex16* z, long long int ldz );

long long int LAPACKE_chpgvd( int matrix_layout, long long int itype, char jobz,
                           char uplo, long long int n, MKL_Complex8* ap,
                           MKL_Complex8* bp, float* w,
                           MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zhpgvd( int matrix_layout, long long int itype, char jobz,
                           char uplo, long long int n, MKL_Complex16* ap,
                           MKL_Complex16* bp, double* w,
                           MKL_Complex16* z, long long int ldz );

long long int LAPACKE_chpgvx( int matrix_layout, long long int itype, char jobz,
                           char range, char uplo, long long int n,
                           MKL_Complex8* ap, MKL_Complex8* bp,
                           float vl, float vu, long long int il, long long int iu,
                           float abstol, long long int* m, float* w,
                           MKL_Complex8* z, long long int ldz,
                           long long int* ifail );
long long int LAPACKE_zhpgvx( int matrix_layout, long long int itype, char jobz,
                           char range, char uplo, long long int n,
                           MKL_Complex16* ap, MKL_Complex16* bp,
                           double vl, double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w,
                           MKL_Complex16* z, long long int ldz,
                           long long int* ifail );

long long int LAPACKE_chprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* ap,
                           const MKL_Complex8* afp,
                           const long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zhprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* ap,
                           const MKL_Complex16* afp,
                           const long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_chpsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex8* ap,
                          long long int* ipiv, MKL_Complex8* b,
                          long long int ldb );
long long int LAPACKE_zhpsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex16* ap,
                          long long int* ipiv, MKL_Complex16* b,
                          long long int ldb );

long long int LAPACKE_chpsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* ap,
                           MKL_Complex8* afp, long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx,
                           float* rcond, float* ferr, float* berr );
long long int LAPACKE_zhpsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* ap,
                           MKL_Complex16* afp, long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );

long long int LAPACKE_chptrd( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* ap, float* d, float* e,
                           MKL_Complex8* tau );
long long int LAPACKE_zhptrd( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* ap, double* d, double* e,
                           MKL_Complex16* tau );

long long int LAPACKE_chptrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* ap, long long int* ipiv );
long long int LAPACKE_zhptrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* ap, long long int* ipiv );

long long int LAPACKE_chptri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* ap, const long long int* ipiv );
long long int LAPACKE_zhptri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* ap, const long long int* ipiv );

long long int LAPACKE_chptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* ap,
                           const long long int* ipiv, MKL_Complex8* b,
                           long long int ldb );
long long int LAPACKE_zhptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* ap,
                           const long long int* ipiv, MKL_Complex16* b,
                           long long int ldb );

long long int LAPACKE_shsein( int matrix_layout, char job, char eigsrc, char initv,
                           long long int* select, long long int n, const float* h,
                           long long int ldh, float* wr, const float* wi,
                           float* vl, long long int ldvl, float* vr,
                           long long int ldvr, long long int mm, long long int* m,
                           long long int* ifaill, long long int* ifailr );
long long int LAPACKE_dhsein( int matrix_layout, char job, char eigsrc, char initv,
                           long long int* select, long long int n,
                           const double* h, long long int ldh, double* wr,
                           const double* wi, double* vl, long long int ldvl,
                           double* vr, long long int ldvr, long long int mm,
                           long long int* m, long long int* ifaill,
                           long long int* ifailr );
long long int LAPACKE_chsein( int matrix_layout, char job, char eigsrc, char initv,
                           const long long int* select, long long int n,
                           const MKL_Complex8* h, long long int ldh,
                           MKL_Complex8* w, MKL_Complex8* vl,
                           long long int ldvl, MKL_Complex8* vr,
                           long long int ldvr, long long int mm, long long int* m,
                           long long int* ifaill, long long int* ifailr );
long long int LAPACKE_zhsein( int matrix_layout, char job, char eigsrc, char initv,
                           const long long int* select, long long int n,
                           const MKL_Complex16* h, long long int ldh,
                           MKL_Complex16* w, MKL_Complex16* vl,
                           long long int ldvl, MKL_Complex16* vr,
                           long long int ldvr, long long int mm, long long int* m,
                           long long int* ifaill, long long int* ifailr );

long long int LAPACKE_shseqr( int matrix_layout, char job, char compz, long long int n,
                           long long int ilo, long long int ihi, float* h,
                           long long int ldh, float* wr, float* wi, float* z,
                           long long int ldz );
long long int LAPACKE_dhseqr( int matrix_layout, char job, char compz, long long int n,
                           long long int ilo, long long int ihi, double* h,
                           long long int ldh, double* wr, double* wi, double* z,
                           long long int ldz );
long long int LAPACKE_chseqr( int matrix_layout, char job, char compz, long long int n,
                           long long int ilo, long long int ihi,
                           MKL_Complex8* h, long long int ldh,
                           MKL_Complex8* w, MKL_Complex8* z,
                           long long int ldz );
long long int LAPACKE_zhseqr( int matrix_layout, char job, char compz, long long int n,
                           long long int ilo, long long int ihi,
                           MKL_Complex16* h, long long int ldh,
                           MKL_Complex16* w, MKL_Complex16* z,
                           long long int ldz );


long long int LAPACKE_clacgv( long long int n, MKL_Complex8* x,
                           long long int incx );

long long int LAPACKE_zlacgv( long long int n, MKL_Complex16* x,
                           long long int incx );


long long int LAPACKE_slacpy( int matrix_layout, char uplo, long long int m,
                           long long int n, const float* a, long long int lda, float* b,
                           long long int ldb );

long long int LAPACKE_dlacpy( int matrix_layout, char uplo, long long int m,
                           long long int n, const double* a, long long int lda, double* b,
                           long long int ldb );

long long int LAPACKE_clacpy( int matrix_layout, char uplo, long long int m,
                           long long int n, const MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb );

long long int LAPACKE_zlacpy( int matrix_layout, char uplo, long long int m,
                           long long int n, const MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb );


long long int LAPACKE_zlag2c( int matrix_layout, long long int m, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           MKL_Complex8* sa, long long int ldsa );


long long int LAPACKE_slag2d( int matrix_layout, long long int m, long long int n,
                           const float* sa, long long int ldsa, double* a,
                           long long int lda );


long long int LAPACKE_dlag2s( int matrix_layout, long long int m, long long int n,
                           const double* a, long long int lda, float* sa,
                           long long int ldsa );


long long int LAPACKE_clag2z( int matrix_layout, long long int m, long long int n,
                           const MKL_Complex8* sa, long long int ldsa,
                           MKL_Complex16* a, long long int lda );


long long int LAPACKE_slagge( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku, const float* d,
                           float* a, long long int lda, long long int* iseed );

long long int LAPACKE_dlagge( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku, const double* d,
                           double* a, long long int lda, long long int* iseed );

long long int LAPACKE_clagge( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku, const float* d,
                           MKL_Complex8* a, long long int lda,
                           long long int* iseed );

long long int LAPACKE_zlagge( int matrix_layout, long long int m, long long int n,
                           long long int kl, long long int ku, const double* d,
                           MKL_Complex16* a, long long int lda,
                           long long int* iseed );


float LAPACKE_slamch( char cmach );

double LAPACKE_dlamch( char cmach );


float LAPACKE_slange( int matrix_layout, char norm, long long int m,
                           long long int n, const float* a, long long int lda );

double LAPACKE_dlange( int matrix_layout, char norm, long long int m,
                           long long int n, const double* a, long long int lda );

float LAPACKE_clange( int matrix_layout, char norm, long long int m,
                           long long int n, const MKL_Complex8* a,
                           long long int lda );

double LAPACKE_zlange( int matrix_layout, char norm, long long int m,
                           long long int n, const MKL_Complex16* a,
                           long long int lda );


float LAPACKE_clanhe( int matrix_layout, char norm, char uplo, long long int n,
                           const MKL_Complex8* a, long long int lda );

double LAPACKE_zlanhe( int matrix_layout, char norm, char uplo, long long int n,
                           const MKL_Complex16* a, long long int lda );


float LAPACKE_slansy( int matrix_layout, char norm, char uplo, long long int n,
                           const float* a, long long int lda );

double LAPACKE_dlansy( int matrix_layout, char norm, char uplo, long long int n,
                           const double* a, long long int lda );

float LAPACKE_clansy( int matrix_layout, char norm, char uplo, long long int n,
                           const MKL_Complex8* a, long long int lda );

double LAPACKE_zlansy( int matrix_layout, char norm, char uplo, long long int n,
                           const MKL_Complex16* a, long long int lda );


float LAPACKE_slantr( int matrix_layout, char norm, char uplo, char diag,
                           long long int m, long long int n, const float* a,
                           long long int lda );

double LAPACKE_dlantr( int matrix_layout, char norm, char uplo, char diag,
                           long long int m, long long int n, const double* a,
                           long long int lda );

float LAPACKE_clantr( int matrix_layout, char norm, char uplo, char diag,
                           long long int m, long long int n, const MKL_Complex8* a,
                           long long int lda );

double LAPACKE_zlantr( int matrix_layout, char norm, char uplo, char diag,
                           long long int m, long long int n, const MKL_Complex16* a,
                           long long int lda );


long long int LAPACKE_slarfb( int matrix_layout, char side, char trans, char direct,
                           char storev, long long int m, long long int n,
                           long long int k, const float* v, long long int ldv,
                           const float* t, long long int ldt, float* c,
                           long long int ldc );

long long int LAPACKE_dlarfb( int matrix_layout, char side, char trans, char direct,
                           char storev, long long int m, long long int n,
                           long long int k, const double* v, long long int ldv,
                           const double* t, long long int ldt, double* c,
                           long long int ldc );

long long int LAPACKE_clarfb( int matrix_layout, char side, char trans, char direct,
                           char storev, long long int m, long long int n,
                           long long int k, const MKL_Complex8* v,
                           long long int ldv, const MKL_Complex8* t,
                           long long int ldt, MKL_Complex8* c,
                           long long int ldc );

long long int LAPACKE_zlarfb( int matrix_layout, char side, char trans, char direct,
                           char storev, long long int m, long long int n,
                           long long int k, const MKL_Complex16* v,
                           long long int ldv, const MKL_Complex16* t,
                           long long int ldt, MKL_Complex16* c,
                           long long int ldc );


long long int LAPACKE_slarfg( long long int n, float* alpha, float* x,
                           long long int incx, float* tau );

long long int LAPACKE_dlarfg( long long int n, double* alpha, double* x,
                           long long int incx, double* tau );

long long int LAPACKE_clarfg( long long int n, MKL_Complex8* alpha,
                           MKL_Complex8* x, long long int incx,
                           MKL_Complex8* tau );

long long int LAPACKE_zlarfg( long long int n, MKL_Complex16* alpha,
                           MKL_Complex16* x, long long int incx,
                           MKL_Complex16* tau );


long long int LAPACKE_slarft( int matrix_layout, char direct, char storev,
                           long long int n, long long int k, const float* v,
                           long long int ldv, const float* tau, float* t,
                           long long int ldt );

long long int LAPACKE_dlarft( int matrix_layout, char direct, char storev,
                           long long int n, long long int k, const double* v,
                           long long int ldv, const double* tau, double* t,
                           long long int ldt );

long long int LAPACKE_clarft( int matrix_layout, char direct, char storev,
                           long long int n, long long int k,
                           const MKL_Complex8* v, long long int ldv,
                           const MKL_Complex8* tau,
                           MKL_Complex8* t, long long int ldt );

long long int LAPACKE_zlarft( int matrix_layout, char direct, char storev,
                           long long int n, long long int k,
                           const MKL_Complex16* v, long long int ldv,
                           const MKL_Complex16* tau,
                           MKL_Complex16* t, long long int ldt );


long long int LAPACKE_slarfx( int matrix_layout, char side, long long int m,
                           long long int n, const float* v, float tau, float* c,
                           long long int ldc, float* work );

long long int LAPACKE_dlarfx( int matrix_layout, char side, long long int m,
                           long long int n, const double* v, double tau, double* c,
                           long long int ldc, double* work );

long long int LAPACKE_clarfx( int matrix_layout, char side, long long int m,
                           long long int n, const MKL_Complex8* v,
                           MKL_Complex8 tau, MKL_Complex8* c,
                           long long int ldc, MKL_Complex8* work );

long long int LAPACKE_zlarfx( int matrix_layout, char side, long long int m,
                           long long int n, const MKL_Complex16* v,
                           MKL_Complex16 tau, MKL_Complex16* c,
                           long long int ldc, MKL_Complex16* work );


long long int LAPACKE_slarnv( long long int idist, long long int* iseed, long long int n,
                           float* x );

long long int LAPACKE_dlarnv( long long int idist, long long int* iseed, long long int n,
                           double* x );

long long int LAPACKE_clarnv( long long int idist, long long int* iseed, long long int n,
                           MKL_Complex8* x );

long long int LAPACKE_zlarnv( long long int idist, long long int* iseed, long long int n,
                           MKL_Complex16* x );


long long int LAPACKE_slaset( int matrix_layout, char uplo, long long int m,
                           long long int n, float alpha, float beta, float* a,
                           long long int lda );

long long int LAPACKE_dlaset( int matrix_layout, char uplo, long long int m,
                           long long int n, double alpha, double beta, double* a,
                           long long int lda );

long long int LAPACKE_claset( int matrix_layout, char uplo, long long int m,
                           long long int n, MKL_Complex8 alpha,
                           MKL_Complex8 beta, MKL_Complex8* a,
                           long long int lda );

long long int LAPACKE_zlaset( int matrix_layout, char uplo, long long int m,
                           long long int n, MKL_Complex16 alpha,
                           MKL_Complex16 beta, MKL_Complex16* a,
                           long long int lda );


long long int LAPACKE_slasrt( char id, long long int n, float* d );

long long int LAPACKE_dlasrt( char id, long long int n, double* d );


long long int LAPACKE_slaswp( int matrix_layout, long long int n, float* a,
                           long long int lda, long long int k1, long long int k2,
                           const long long int* ipiv, long long int incx );

long long int LAPACKE_dlaswp( int matrix_layout, long long int n, double* a,
                           long long int lda, long long int k1, long long int k2,
                           const long long int* ipiv, long long int incx );

long long int LAPACKE_claswp( int matrix_layout, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int k1, long long int k2, const long long int* ipiv,
                           long long int incx );

long long int LAPACKE_zlaswp( int matrix_layout, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int k1, long long int k2, const long long int* ipiv,
                           long long int incx );


long long int LAPACKE_slatms( int matrix_layout, long long int m, long long int n,
                           char dist, long long int* iseed, char sym, float* d,
                           long long int mode, float cond, float dmax,
                           long long int kl, long long int ku, char pack, float* a,
                           long long int lda );

long long int LAPACKE_dlatms( int matrix_layout, long long int m, long long int n,
                           char dist, long long int* iseed, char sym, double* d,
                           long long int mode, double cond, double dmax,
                           long long int kl, long long int ku, char pack, double* a,
                           long long int lda );

long long int LAPACKE_clatms( int matrix_layout, long long int m, long long int n,
                           char dist, long long int* iseed, char sym, float* d,
                           long long int mode, float cond, float dmax,
                           long long int kl, long long int ku, char pack,
                           MKL_Complex8* a, long long int lda );

long long int LAPACKE_zlatms( int matrix_layout, long long int m, long long int n,
                           char dist, long long int* iseed, char sym, double* d,
                           long long int mode, double cond, double dmax,
                           long long int kl, long long int ku, char pack,
                           MKL_Complex16* a, long long int lda );


long long int LAPACKE_slauum( int matrix_layout, char uplo, long long int n, float* a,
                           long long int lda );

long long int LAPACKE_dlauum( int matrix_layout, char uplo, long long int n, double* a,
                           long long int lda );

long long int LAPACKE_clauum( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda );

long long int LAPACKE_zlauum( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda );


long long int LAPACKE_slapmr( int matrix_layout, long long int forwrd,
                           long long int m, long long int n, float* x, long long int ldx,
                           long long int* k );
long long int LAPACKE_dlapmr( int matrix_layout, long long int forwrd,
                           long long int m, long long int n, double* x,
                           long long int ldx, long long int* k );
long long int LAPACKE_clapmr( int matrix_layout, long long int forwrd,
                           long long int m, long long int n, MKL_Complex8* x,
                           long long int ldx, long long int* k );
long long int LAPACKE_zlapmr( int matrix_layout, long long int forwrd,
                           long long int m, long long int n, MKL_Complex16* x,
                           long long int ldx, long long int* k );

long long int LAPACKE_slartgp( float f, float g, float* cs, float* sn, float* r );
long long int LAPACKE_dlartgp( double f, double g, double* cs, double* sn,
                            double* r );

long long int LAPACKE_slartgs( float x, float y, float sigma, float* cs,
                            float* sn );
long long int LAPACKE_dlartgs( double x, double y, double sigma, double* cs,
                            double* sn );

long long int LAPACKE_sopgtr( int matrix_layout, char uplo, long long int n,
                           const float* ap, const float* tau, float* q,
                           long long int ldq );
long long int LAPACKE_dopgtr( int matrix_layout, char uplo, long long int n,
                           const double* ap, const double* tau, double* q,
                           long long int ldq );

long long int LAPACKE_sopmtr( int matrix_layout, char side, char uplo, char trans,
                           long long int m, long long int n, const float* ap,
                           const float* tau, float* c, long long int ldc );
long long int LAPACKE_dopmtr( int matrix_layout, char side, char uplo, char trans,
                           long long int m, long long int n, const double* ap,
                           const double* tau, double* c, long long int ldc );

long long int LAPACKE_sorbdb( int matrix_layout, char trans, char signs,
                           long long int m, long long int p, long long int q, float* x11,
                           long long int ldx11, float* x12, long long int ldx12,
                           float* x21, long long int ldx21, float* x22,
                           long long int ldx22, float* theta, float* phi,
                           float* taup1, float* taup2, float* tauq1,
                           float* tauq2 );
long long int LAPACKE_dorbdb( int matrix_layout, char trans, char signs,
                           long long int m, long long int p, long long int q,
                           double* x11, long long int ldx11, double* x12,
                           long long int ldx12, double* x21, long long int ldx21,
                           double* x22, long long int ldx22, double* theta,
                           double* phi, double* taup1, double* taup2,
                           double* tauq1, double* tauq2 );

long long int LAPACKE_sorcsd( int matrix_layout, char jobu1, char jobu2,
                           char jobv1t, char jobv2t, char trans, char signs,
                           long long int m, long long int p, long long int q, float* x11,
                           long long int ldx11, float* x12, long long int ldx12,
                           float* x21, long long int ldx21, float* x22,
                           long long int ldx22, float* theta, float* u1,
                           long long int ldu1, float* u2, long long int ldu2,
                           float* v1t, long long int ldv1t, float* v2t,
                           long long int ldv2t );
long long int LAPACKE_dorcsd( int matrix_layout, char jobu1, char jobu2,
                           char jobv1t, char jobv2t, char trans, char signs,
                           long long int m, long long int p, long long int q,
                           double* x11, long long int ldx11, double* x12,
                           long long int ldx12, double* x21, long long int ldx21,
                           double* x22, long long int ldx22, double* theta,
                           double* u1, long long int ldu1, double* u2,
                           long long int ldu2, double* v1t, long long int ldv1t,
                           double* v2t, long long int ldv2t );

long long int LAPACKE_sorgbr( int matrix_layout, char vect, long long int m,
                           long long int n, long long int k, float* a, long long int lda,
                           const float* tau );
long long int LAPACKE_dorgbr( int matrix_layout, char vect, long long int m,
                           long long int n, long long int k, double* a,
                           long long int lda, const double* tau );

long long int LAPACKE_sorghr( int matrix_layout, long long int n, long long int ilo,
                           long long int ihi, float* a, long long int lda,
                           const float* tau );
long long int LAPACKE_dorghr( int matrix_layout, long long int n, long long int ilo,
                           long long int ihi, double* a, long long int lda,
                           const double* tau );

long long int LAPACKE_sorglq( int matrix_layout, long long int m, long long int n,
                           long long int k, float* a, long long int lda,
                           const float* tau );
long long int LAPACKE_dorglq( int matrix_layout, long long int m, long long int n,
                           long long int k, double* a, long long int lda,
                           const double* tau );

long long int LAPACKE_sorgql( int matrix_layout, long long int m, long long int n,
                           long long int k, float* a, long long int lda,
                           const float* tau );
long long int LAPACKE_dorgql( int matrix_layout, long long int m, long long int n,
                           long long int k, double* a, long long int lda,
                           const double* tau );

long long int LAPACKE_sorgqr( int matrix_layout, long long int m, long long int n,
                           long long int k, float* a, long long int lda,
                           const float* tau );
long long int LAPACKE_dorgqr( int matrix_layout, long long int m, long long int n,
                           long long int k, double* a, long long int lda,
                           const double* tau );

long long int LAPACKE_sorgrq( int matrix_layout, long long int m, long long int n,
                           long long int k, float* a, long long int lda,
                           const float* tau );
long long int LAPACKE_dorgrq( int matrix_layout, long long int m, long long int n,
                           long long int k, double* a, long long int lda,
                           const double* tau );

long long int LAPACKE_sorgtr( int matrix_layout, char uplo, long long int n, float* a,
                           long long int lda, const float* tau );
long long int LAPACKE_dorgtr( int matrix_layout, char uplo, long long int n, double* a,
                           long long int lda, const double* tau );

long long int LAPACKE_sormbr( int matrix_layout, char vect, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const float* a, long long int lda, const float* tau,
                           float* c, long long int ldc );
long long int LAPACKE_dormbr( int matrix_layout, char vect, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const double* a, long long int lda, const double* tau,
                           double* c, long long int ldc );

long long int LAPACKE_sormhr( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int ilo,
                           long long int ihi, const float* a, long long int lda,
                           const float* tau, float* c, long long int ldc );
long long int LAPACKE_dormhr( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int ilo,
                           long long int ihi, const double* a, long long int lda,
                           const double* tau, double* c, long long int ldc );

long long int LAPACKE_sormlq( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const float* a, long long int lda, const float* tau,
                           float* c, long long int ldc );
long long int LAPACKE_dormlq( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const double* a, long long int lda, const double* tau,
                           double* c, long long int ldc );

long long int LAPACKE_sormql( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const float* a, long long int lda, const float* tau,
                           float* c, long long int ldc );
long long int LAPACKE_dormql( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const double* a, long long int lda, const double* tau,
                           double* c, long long int ldc );

long long int LAPACKE_sormqr( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const float* a, long long int lda, const float* tau,
                           float* c, long long int ldc );
long long int LAPACKE_dormqr( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const double* a, long long int lda, const double* tau,
                           double* c, long long int ldc );

long long int LAPACKE_sormrq( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const float* a, long long int lda, const float* tau,
                           float* c, long long int ldc );
long long int LAPACKE_dormrq( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const double* a, long long int lda, const double* tau,
                           double* c, long long int ldc );

long long int LAPACKE_sormrz( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           long long int l, const float* a, long long int lda,
                           const float* tau, float* c, long long int ldc );
long long int LAPACKE_dormrz( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           long long int l, const double* a, long long int lda,
                           const double* tau, double* c, long long int ldc );

long long int LAPACKE_sormtr( int matrix_layout, char side, char uplo, char trans,
                           long long int m, long long int n, const float* a,
                           long long int lda, const float* tau, float* c,
                           long long int ldc );
long long int LAPACKE_dormtr( int matrix_layout, char side, char uplo, char trans,
                           long long int m, long long int n, const double* a,
                           long long int lda, const double* tau, double* c,
                           long long int ldc );

long long int LAPACKE_spbcon( int matrix_layout, char uplo, long long int n,
                           long long int kd, const float* ab, long long int ldab,
                           float anorm, float* rcond );
long long int LAPACKE_dpbcon( int matrix_layout, char uplo, long long int n,
                           long long int kd, const double* ab, long long int ldab,
                           double anorm, double* rcond );
long long int LAPACKE_cpbcon( int matrix_layout, char uplo, long long int n,
                           long long int kd, const MKL_Complex8* ab,
                           long long int ldab, float anorm, float* rcond );
long long int LAPACKE_zpbcon( int matrix_layout, char uplo, long long int n,
                           long long int kd, const MKL_Complex16* ab,
                           long long int ldab, double anorm, double* rcond );

long long int LAPACKE_spbequ( int matrix_layout, char uplo, long long int n,
                           long long int kd, const float* ab, long long int ldab,
                           float* s, float* scond, float* amax );
long long int LAPACKE_dpbequ( int matrix_layout, char uplo, long long int n,
                           long long int kd, const double* ab, long long int ldab,
                           double* s, double* scond, double* amax );
long long int LAPACKE_cpbequ( int matrix_layout, char uplo, long long int n,
                           long long int kd, const MKL_Complex8* ab,
                           long long int ldab, float* s, float* scond,
                           float* amax );
long long int LAPACKE_zpbequ( int matrix_layout, char uplo, long long int n,
                           long long int kd, const MKL_Complex16* ab,
                           long long int ldab, double* s, double* scond,
                           double* amax );

long long int LAPACKE_spbrfs( int matrix_layout, char uplo, long long int n,
                           long long int kd, long long int nrhs, const float* ab,
                           long long int ldab, const float* afb, long long int ldafb,
                           const float* b, long long int ldb, float* x,
                           long long int ldx, float* ferr, float* berr );
long long int LAPACKE_dpbrfs( int matrix_layout, char uplo, long long int n,
                           long long int kd, long long int nrhs, const double* ab,
                           long long int ldab, const double* afb, long long int ldafb,
                           const double* b, long long int ldb, double* x,
                           long long int ldx, double* ferr, double* berr );
long long int LAPACKE_cpbrfs( int matrix_layout, char uplo, long long int n,
                           long long int kd, long long int nrhs,
                           const MKL_Complex8* ab, long long int ldab,
                           const MKL_Complex8* afb, long long int ldafb,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zpbrfs( int matrix_layout, char uplo, long long int n,
                           long long int kd, long long int nrhs,
                           const MKL_Complex16* ab, long long int ldab,
                           const MKL_Complex16* afb, long long int ldafb,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_spbstf( int matrix_layout, char uplo, long long int n,
                           long long int kb, float* bb, long long int ldbb );
long long int LAPACKE_dpbstf( int matrix_layout, char uplo, long long int n,
                           long long int kb, double* bb, long long int ldbb );
long long int LAPACKE_cpbstf( int matrix_layout, char uplo, long long int n,
                           long long int kb, MKL_Complex8* bb,
                           long long int ldbb );
long long int LAPACKE_zpbstf( int matrix_layout, char uplo, long long int n,
                           long long int kb, MKL_Complex16* bb,
                           long long int ldbb );

long long int LAPACKE_spbsv( int matrix_layout, char uplo, long long int n,
                          long long int kd, long long int nrhs, float* ab,
                          long long int ldab, float* b, long long int ldb );
long long int LAPACKE_dpbsv( int matrix_layout, char uplo, long long int n,
                          long long int kd, long long int nrhs, double* ab,
                          long long int ldab, double* b, long long int ldb );
long long int LAPACKE_cpbsv( int matrix_layout, char uplo, long long int n,
                          long long int kd, long long int nrhs,
                          MKL_Complex8* ab, long long int ldab,
                          MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zpbsv( int matrix_layout, char uplo, long long int n,
                          long long int kd, long long int nrhs,
                          MKL_Complex16* ab, long long int ldab,
                          MKL_Complex16* b, long long int ldb );

long long int LAPACKE_spbsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int kd, long long int nrhs, float* ab,
                           long long int ldab, float* afb, long long int ldafb,
                           char* equed, float* s, float* b, long long int ldb,
                           float* x, long long int ldx, float* rcond, float* ferr,
                           float* berr );
long long int LAPACKE_dpbsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int kd, long long int nrhs, double* ab,
                           long long int ldab, double* afb, long long int ldafb,
                           char* equed, double* s, double* b, long long int ldb,
                           double* x, long long int ldx, double* rcond,
                           double* ferr, double* berr );
long long int LAPACKE_cpbsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int kd, long long int nrhs,
                           MKL_Complex8* ab, long long int ldab,
                           MKL_Complex8* afb, long long int ldafb,
                           char* equed, float* s, MKL_Complex8* b,
                           long long int ldb, MKL_Complex8* x,
                           long long int ldx, float* rcond, float* ferr,
                           float* berr );
long long int LAPACKE_zpbsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int kd, long long int nrhs,
                           MKL_Complex16* ab, long long int ldab,
                           MKL_Complex16* afb, long long int ldafb,
                           char* equed, double* s, MKL_Complex16* b,
                           long long int ldb, MKL_Complex16* x,
                           long long int ldx, double* rcond, double* ferr,
                           double* berr );

long long int LAPACKE_spbtrf( int matrix_layout, char uplo, long long int n,
                           long long int kd, float* ab, long long int ldab );
long long int LAPACKE_dpbtrf( int matrix_layout, char uplo, long long int n,
                           long long int kd, double* ab, long long int ldab );
long long int LAPACKE_cpbtrf( int matrix_layout, char uplo, long long int n,
                           long long int kd, MKL_Complex8* ab,
                           long long int ldab );
long long int LAPACKE_zpbtrf( int matrix_layout, char uplo, long long int n,
                           long long int kd, MKL_Complex16* ab,
                           long long int ldab );

long long int LAPACKE_spbtrs( int matrix_layout, char uplo, long long int n,
                           long long int kd, long long int nrhs, const float* ab,
                           long long int ldab, float* b, long long int ldb );
long long int LAPACKE_dpbtrs( int matrix_layout, char uplo, long long int n,
                           long long int kd, long long int nrhs, const double* ab,
                           long long int ldab, double* b, long long int ldb );
long long int LAPACKE_cpbtrs( int matrix_layout, char uplo, long long int n,
                           long long int kd, long long int nrhs,
                           const MKL_Complex8* ab, long long int ldab,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zpbtrs( int matrix_layout, char uplo, long long int n,
                           long long int kd, long long int nrhs,
                           const MKL_Complex16* ab, long long int ldab,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_spftrf( int matrix_layout, char transr, char uplo,
                           long long int n, float* a );
long long int LAPACKE_dpftrf( int matrix_layout, char transr, char uplo,
                           long long int n, double* a );
long long int LAPACKE_cpftrf( int matrix_layout, char transr, char uplo,
                           long long int n, MKL_Complex8* a );
long long int LAPACKE_zpftrf( int matrix_layout, char transr, char uplo,
                           long long int n, MKL_Complex16* a );

long long int LAPACKE_spftri( int matrix_layout, char transr, char uplo,
                           long long int n, float* a );
long long int LAPACKE_dpftri( int matrix_layout, char transr, char uplo,
                           long long int n, double* a );
long long int LAPACKE_cpftri( int matrix_layout, char transr, char uplo,
                           long long int n, MKL_Complex8* a );
long long int LAPACKE_zpftri( int matrix_layout, char transr, char uplo,
                           long long int n, MKL_Complex16* a );

long long int LAPACKE_spftrs( int matrix_layout, char transr, char uplo,
                           long long int n, long long int nrhs, const float* a,
                           float* b, long long int ldb );
long long int LAPACKE_dpftrs( int matrix_layout, char transr, char uplo,
                           long long int n, long long int nrhs, const double* a,
                           double* b, long long int ldb );
long long int LAPACKE_cpftrs( int matrix_layout, char transr, char uplo,
                           long long int n, long long int nrhs,
                           const MKL_Complex8* a,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zpftrs( int matrix_layout, char transr, char uplo,
                           long long int n, long long int nrhs,
                           const MKL_Complex16* a,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_spocon( int matrix_layout, char uplo, long long int n,
                           const float* a, long long int lda, float anorm,
                           float* rcond );
long long int LAPACKE_dpocon( int matrix_layout, char uplo, long long int n,
                           const double* a, long long int lda, double anorm,
                           double* rcond );
long long int LAPACKE_cpocon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           float anorm, float* rcond );
long long int LAPACKE_zpocon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           double anorm, double* rcond );

long long int LAPACKE_spoequ( int matrix_layout, long long int n, const float* a,
                           long long int lda, float* s, float* scond,
                           float* amax );
long long int LAPACKE_dpoequ( int matrix_layout, long long int n, const double* a,
                           long long int lda, double* s, double* scond,
                           double* amax );
long long int LAPACKE_cpoequ( int matrix_layout, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           float* s, float* scond, float* amax );
long long int LAPACKE_zpoequ( int matrix_layout, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           double* s, double* scond, double* amax );

long long int LAPACKE_spoequb( int matrix_layout, long long int n, const float* a,
                            long long int lda, float* s, float* scond,
                            float* amax );
long long int LAPACKE_dpoequb( int matrix_layout, long long int n, const double* a,
                            long long int lda, double* s, double* scond,
                            double* amax );
long long int LAPACKE_cpoequb( int matrix_layout, long long int n,
                            const MKL_Complex8* a, long long int lda,
                            float* s, float* scond, float* amax );
long long int LAPACKE_zpoequb( int matrix_layout, long long int n,
                            const MKL_Complex16* a, long long int lda,
                            double* s, double* scond, double* amax );

long long int LAPACKE_sporfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* a, long long int lda,
                           const float* af, long long int ldaf, const float* b,
                           long long int ldb, float* x, long long int ldx,
                           float* ferr, float* berr );
long long int LAPACKE_dporfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* a, long long int lda,
                           const double* af, long long int ldaf, const double* b,
                           long long int ldb, double* x, long long int ldx,
                           double* ferr, double* berr );
long long int LAPACKE_cporfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* af,
                           long long int ldaf, const MKL_Complex8* b,
                           long long int ldb, MKL_Complex8* x,
                           long long int ldx, float* ferr, float* berr );
long long int LAPACKE_zporfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* af,
                           long long int ldaf, const MKL_Complex16* b,
                           long long int ldb, MKL_Complex16* x,
                           long long int ldx, double* ferr, double* berr );

long long int LAPACKE_sporfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs, const float* a,
                            long long int lda, const float* af, long long int ldaf,
                            const float* s, const float* b, long long int ldb,
                            float* x, long long int ldx, float* rcond, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_dporfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs, const double* a,
                            long long int lda, const double* af, long long int ldaf,
                            const double* s, const double* b, long long int ldb,
                            double* x, long long int ldx, double* rcond,
                            double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );
long long int LAPACKE_cporfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs,
                            const MKL_Complex8* a, long long int lda,
                            const MKL_Complex8* af, long long int ldaf,
                            const float* s, const MKL_Complex8* b,
                            long long int ldb, MKL_Complex8* x,
                            long long int ldx, float* rcond, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_zporfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs,
                            const MKL_Complex16* a, long long int lda,
                            const MKL_Complex16* af, long long int ldaf,
                            const double* s, const MKL_Complex16* b,
                            long long int ldb, MKL_Complex16* x,
                            long long int ldx, double* rcond, double* berr,
                            long long int n_err_bnds, double* err_bnds_norm,
                            double* err_bnds_comp, long long int nparams,
                            double* params );

long long int LAPACKE_sposv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, float* a, long long int lda, float* b,
                          long long int ldb );
long long int LAPACKE_dposv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, double* a, long long int lda, double* b,
                          long long int ldb );
long long int LAPACKE_cposv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex8* a,
                          long long int lda, MKL_Complex8* b,
                          long long int ldb );
long long int LAPACKE_zposv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex16* a,
                          long long int lda, MKL_Complex16* b,
                          long long int ldb );
long long int LAPACKE_dsposv( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, double* a, long long int lda,
                           double* b, long long int ldb, double* x, long long int ldx,
                           long long int* iter );
long long int LAPACKE_zcposv( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, MKL_Complex16* x,
                           long long int ldx, long long int* iter );

long long int LAPACKE_sposvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, float* a, long long int lda, float* af,
                           long long int ldaf, char* equed, float* s, float* b,
                           long long int ldb, float* x, long long int ldx,
                           float* rcond, float* ferr, float* berr );
long long int LAPACKE_dposvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, double* a, long long int lda,
                           double* af, long long int ldaf, char* equed, double* s,
                           double* b, long long int ldb, double* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );
long long int LAPACKE_cposvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* af,
                           long long int ldaf, char* equed, float* s,
                           MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx,
                           float* rcond, float* ferr, float* berr );
long long int LAPACKE_zposvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* af,
                           long long int ldaf, char* equed, double* s,
                           MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );

long long int LAPACKE_sposvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs, float* a,
                            long long int lda, float* af, long long int ldaf,
                            char* equed, float* s, float* b, long long int ldb,
                            float* x, long long int ldx, float* rcond,
                            float* rpvgrw, float* berr, long long int n_err_bnds,
                            float* err_bnds_norm, float* err_bnds_comp,
                            long long int nparams, float* params );
long long int LAPACKE_dposvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs, double* a,
                            long long int lda, double* af, long long int ldaf,
                            char* equed, double* s, double* b, long long int ldb,
                            double* x, long long int ldx, double* rcond,
                            double* rpvgrw, double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );
long long int LAPACKE_cposvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs,
                            MKL_Complex8* a, long long int lda,
                            MKL_Complex8* af, long long int ldaf,
                            char* equed, float* s, MKL_Complex8* b,
                            long long int ldb, MKL_Complex8* x,
                            long long int ldx, float* rcond, float* rpvgrw,
                            float* berr, long long int n_err_bnds,
                            float* err_bnds_norm, float* err_bnds_comp,
                            long long int nparams, float* params );
long long int LAPACKE_zposvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs,
                            MKL_Complex16* a, long long int lda,
                            MKL_Complex16* af, long long int ldaf,
                            char* equed, double* s, MKL_Complex16* b,
                            long long int ldb, MKL_Complex16* x,
                            long long int ldx, double* rcond, double* rpvgrw,
                            double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );

long long int LAPACKE_spotrf( int matrix_layout, char uplo, long long int n, float* a,
                           long long int lda );
long long int LAPACKE_dpotrf( int matrix_layout, char uplo, long long int n, double* a,
                           long long int lda );
long long int LAPACKE_cpotrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda );
long long int LAPACKE_zpotrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda );

long long int LAPACKE_spotri( int matrix_layout, char uplo, long long int n, float* a,
                           long long int lda );
long long int LAPACKE_dpotri( int matrix_layout, char uplo, long long int n, double* a,
                           long long int lda );
long long int LAPACKE_cpotri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda );
long long int LAPACKE_zpotri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda );

long long int LAPACKE_spotrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* a, long long int lda,
                           float* b, long long int ldb );
long long int LAPACKE_dpotrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* a, long long int lda,
                           double* b, long long int ldb );
long long int LAPACKE_cpotrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb );
long long int LAPACKE_zpotrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb );

long long int LAPACKE_sppcon( int matrix_layout, char uplo, long long int n,
                           const float* ap, float anorm, float* rcond );
long long int LAPACKE_dppcon( int matrix_layout, char uplo, long long int n,
                           const double* ap, double anorm, double* rcond );
long long int LAPACKE_cppcon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* ap, float anorm,
                           float* rcond );
long long int LAPACKE_zppcon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* ap, double anorm,
                           double* rcond );

long long int LAPACKE_sppequ( int matrix_layout, char uplo, long long int n,
                           const float* ap, float* s, float* scond,
                           float* amax );
long long int LAPACKE_dppequ( int matrix_layout, char uplo, long long int n,
                           const double* ap, double* s, double* scond,
                           double* amax );
long long int LAPACKE_cppequ( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* ap, float* s,
                           float* scond, float* amax );
long long int LAPACKE_zppequ( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* ap, double* s,
                           double* scond, double* amax );

long long int LAPACKE_spprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* ap, const float* afp,
                           const float* b, long long int ldb, float* x,
                           long long int ldx, float* ferr, float* berr );
long long int LAPACKE_dpprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* ap, const double* afp,
                           const double* b, long long int ldb, double* x,
                           long long int ldx, double* ferr, double* berr );
long long int LAPACKE_cpprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* ap,
                           const MKL_Complex8* afp,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zpprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* ap,
                           const MKL_Complex16* afp,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_sppsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, float* ap, float* b,
                          long long int ldb );
long long int LAPACKE_dppsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, double* ap, double* b,
                          long long int ldb );
long long int LAPACKE_cppsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex8* ap,
                          MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zppsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex16* ap,
                          MKL_Complex16* b, long long int ldb );

long long int LAPACKE_sppsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, float* ap, float* afp, char* equed,
                           float* s, float* b, long long int ldb, float* x,
                           long long int ldx, float* rcond, float* ferr,
                           float* berr );
long long int LAPACKE_dppsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, double* ap, double* afp,
                           char* equed, double* s, double* b, long long int ldb,
                           double* x, long long int ldx, double* rcond,
                           double* ferr, double* berr );
long long int LAPACKE_cppsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, MKL_Complex8* ap,
                           MKL_Complex8* afp, char* equed, float* s,
                           MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx,
                           float* rcond, float* ferr, float* berr );
long long int LAPACKE_zppsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, MKL_Complex16* ap,
                           MKL_Complex16* afp, char* equed, double* s,
                           MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );

long long int LAPACKE_spptrf( int matrix_layout, char uplo, long long int n,
                           float* ap );
long long int LAPACKE_dpptrf( int matrix_layout, char uplo, long long int n,
                           double* ap );
long long int LAPACKE_cpptrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* ap );
long long int LAPACKE_zpptrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* ap );

long long int LAPACKE_spptri( int matrix_layout, char uplo, long long int n,
                           float* ap );
long long int LAPACKE_dpptri( int matrix_layout, char uplo, long long int n,
                           double* ap );
long long int LAPACKE_cpptri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* ap );
long long int LAPACKE_zpptri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* ap );

long long int LAPACKE_spptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* ap, float* b,
                           long long int ldb );
long long int LAPACKE_dpptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* ap, double* b,
                           long long int ldb );
long long int LAPACKE_cpptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* ap,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zpptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* ap,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_spstrf( int matrix_layout, char uplo, long long int n, float* a,
                           long long int lda, long long int* piv, long long int* rank,
                           float tol );
long long int LAPACKE_dpstrf( int matrix_layout, char uplo, long long int n, double* a,
                           long long int lda, long long int* piv, long long int* rank,
                           double tol );
long long int LAPACKE_cpstrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int* piv, long long int* rank, float tol );
long long int LAPACKE_zpstrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int* piv, long long int* rank, double tol );

long long int LAPACKE_sptcon( long long int n, const float* d, const float* e,
                           float anorm, float* rcond );
long long int LAPACKE_dptcon( long long int n, const double* d, const double* e,
                           double anorm, double* rcond );
long long int LAPACKE_cptcon( long long int n, const float* d,
                           const MKL_Complex8* e, float anorm,
                           float* rcond );
long long int LAPACKE_zptcon( long long int n, const double* d,
                           const MKL_Complex16* e, double anorm,
                           double* rcond );

long long int LAPACKE_spteqr( int matrix_layout, char compz, long long int n, float* d,
                           float* e, float* z, long long int ldz );
long long int LAPACKE_dpteqr( int matrix_layout, char compz, long long int n,
                           double* d, double* e, double* z, long long int ldz );
long long int LAPACKE_cpteqr( int matrix_layout, char compz, long long int n, float* d,
                           float* e, MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zpteqr( int matrix_layout, char compz, long long int n,
                           double* d, double* e, MKL_Complex16* z,
                           long long int ldz );

long long int LAPACKE_sptrfs( int matrix_layout, long long int n, long long int nrhs,
                           const float* d, const float* e, const float* df,
                           const float* ef, const float* b, long long int ldb,
                           float* x, long long int ldx, float* ferr, float* berr );
long long int LAPACKE_dptrfs( int matrix_layout, long long int n, long long int nrhs,
                           const double* d, const double* e, const double* df,
                           const double* ef, const double* b, long long int ldb,
                           double* x, long long int ldx, double* ferr,
                           double* berr );
long long int LAPACKE_cptrfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* d,
                           const MKL_Complex8* e, const float* df,
                           const MKL_Complex8* ef,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zptrfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* d,
                           const MKL_Complex16* e, const double* df,
                           const MKL_Complex16* ef,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_sptsv( int matrix_layout, long long int n, long long int nrhs,
                          float* d, float* e, float* b, long long int ldb );
long long int LAPACKE_dptsv( int matrix_layout, long long int n, long long int nrhs,
                          double* d, double* e, double* b, long long int ldb );
long long int LAPACKE_cptsv( int matrix_layout, long long int n, long long int nrhs,
                          float* d, MKL_Complex8* e,
                          MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zptsv( int matrix_layout, long long int n, long long int nrhs,
                          double* d, MKL_Complex16* e,
                          MKL_Complex16* b, long long int ldb );

long long int LAPACKE_sptsvx( int matrix_layout, char fact, long long int n,
                           long long int nrhs, const float* d, const float* e,
                           float* df, float* ef, const float* b, long long int ldb,
                           float* x, long long int ldx, float* rcond, float* ferr,
                           float* berr );
long long int LAPACKE_dptsvx( int matrix_layout, char fact, long long int n,
                           long long int nrhs, const double* d, const double* e,
                           double* df, double* ef, const double* b,
                           long long int ldb, double* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );
long long int LAPACKE_cptsvx( int matrix_layout, char fact, long long int n,
                           long long int nrhs, const float* d,
                           const MKL_Complex8* e, float* df,
                           MKL_Complex8* ef,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx,
                           float* rcond, float* ferr, float* berr );
long long int LAPACKE_zptsvx( int matrix_layout, char fact, long long int n,
                           long long int nrhs, const double* d,
                           const MKL_Complex16* e, double* df,
                           MKL_Complex16* ef,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );

long long int LAPACKE_spttrf( long long int n, float* d, float* e );
long long int LAPACKE_dpttrf( long long int n, double* d, double* e );
long long int LAPACKE_cpttrf( long long int n, float* d, MKL_Complex8* e );
long long int LAPACKE_zpttrf( long long int n, double* d, MKL_Complex16* e );

long long int LAPACKE_spttrs( int matrix_layout, long long int n, long long int nrhs,
                           const float* d, const float* e, float* b,
                           long long int ldb );
long long int LAPACKE_dpttrs( int matrix_layout, long long int n, long long int nrhs,
                           const double* d, const double* e, double* b,
                           long long int ldb );
long long int LAPACKE_cpttrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* d,
                           const MKL_Complex8* e,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zpttrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* d,
                           const MKL_Complex16* e,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_ssbev( int matrix_layout, char jobz, char uplo, long long int n,
                          long long int kd, float* ab, long long int ldab, float* w,
                          float* z, long long int ldz );
long long int LAPACKE_dsbev( int matrix_layout, char jobz, char uplo, long long int n,
                          long long int kd, double* ab, long long int ldab, double* w,
                          double* z, long long int ldz );

long long int LAPACKE_ssbevd( int matrix_layout, char jobz, char uplo, long long int n,
                           long long int kd, float* ab, long long int ldab, float* w,
                           float* z, long long int ldz );
long long int LAPACKE_dsbevd( int matrix_layout, char jobz, char uplo, long long int n,
                           long long int kd, double* ab, long long int ldab,
                           double* w, double* z, long long int ldz );

long long int LAPACKE_ssbevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, long long int kd, float* ab,
                           long long int ldab, float* q, long long int ldq, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           long long int* m, float* w, float* z, long long int ldz,
                           long long int* ifail );
long long int LAPACKE_dsbevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, long long int kd, double* ab,
                           long long int ldab, double* q, long long int ldq,
                           double vl, double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w, double* z,
                           long long int ldz, long long int* ifail );

long long int LAPACKE_ssbgst( int matrix_layout, char vect, char uplo, long long int n,
                           long long int ka, long long int kb, float* ab,
                           long long int ldab, const float* bb, long long int ldbb,
                           float* x, long long int ldx );
long long int LAPACKE_dsbgst( int matrix_layout, char vect, char uplo, long long int n,
                           long long int ka, long long int kb, double* ab,
                           long long int ldab, const double* bb, long long int ldbb,
                           double* x, long long int ldx );

long long int LAPACKE_ssbgv( int matrix_layout, char jobz, char uplo, long long int n,
                          long long int ka, long long int kb, float* ab,
                          long long int ldab, float* bb, long long int ldbb, float* w,
                          float* z, long long int ldz );
long long int LAPACKE_dsbgv( int matrix_layout, char jobz, char uplo, long long int n,
                          long long int ka, long long int kb, double* ab,
                          long long int ldab, double* bb, long long int ldbb,
                          double* w, double* z, long long int ldz );

long long int LAPACKE_ssbgvd( int matrix_layout, char jobz, char uplo, long long int n,
                           long long int ka, long long int kb, float* ab,
                           long long int ldab, float* bb, long long int ldbb,
                           float* w, float* z, long long int ldz );
long long int LAPACKE_dsbgvd( int matrix_layout, char jobz, char uplo, long long int n,
                           long long int ka, long long int kb, double* ab,
                           long long int ldab, double* bb, long long int ldbb,
                           double* w, double* z, long long int ldz );

long long int LAPACKE_ssbgvx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, long long int ka, long long int kb,
                           float* ab, long long int ldab, float* bb,
                           long long int ldbb, float* q, long long int ldq, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           long long int* m, float* w, float* z, long long int ldz,
                           long long int* ifail );
long long int LAPACKE_dsbgvx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, long long int ka, long long int kb,
                           double* ab, long long int ldab, double* bb,
                           long long int ldbb, double* q, long long int ldq,
                           double vl, double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w, double* z,
                           long long int ldz, long long int* ifail );

long long int LAPACKE_ssbtrd( int matrix_layout, char vect, char uplo, long long int n,
                           long long int kd, float* ab, long long int ldab, float* d,
                           float* e, float* q, long long int ldq );
long long int LAPACKE_dsbtrd( int matrix_layout, char vect, char uplo, long long int n,
                           long long int kd, double* ab, long long int ldab,
                           double* d, double* e, double* q, long long int ldq );

long long int LAPACKE_ssfrk( int matrix_layout, char transr, char uplo, char trans,
                          long long int n, long long int k, float alpha,
                          const float* a, long long int lda, float beta,
                          float* c );
long long int LAPACKE_dsfrk( int matrix_layout, char transr, char uplo, char trans,
                          long long int n, long long int k, double alpha,
                          const double* a, long long int lda, double beta,
                          double* c );

long long int LAPACKE_sspcon( int matrix_layout, char uplo, long long int n,
                           const float* ap, const long long int* ipiv, float anorm,
                           float* rcond );
long long int LAPACKE_dspcon( int matrix_layout, char uplo, long long int n,
                           const double* ap, const long long int* ipiv,
                           double anorm, double* rcond );
long long int LAPACKE_cspcon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* ap,
                           const long long int* ipiv, float anorm, float* rcond );
long long int LAPACKE_zspcon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* ap,
                           const long long int* ipiv, double anorm,
                           double* rcond );

long long int LAPACKE_sspev( int matrix_layout, char jobz, char uplo, long long int n,
                          float* ap, float* w, float* z, long long int ldz );
long long int LAPACKE_dspev( int matrix_layout, char jobz, char uplo, long long int n,
                          double* ap, double* w, double* z, long long int ldz );

long long int LAPACKE_sspevd( int matrix_layout, char jobz, char uplo, long long int n,
                           float* ap, float* w, float* z, long long int ldz );
long long int LAPACKE_dspevd( int matrix_layout, char jobz, char uplo, long long int n,
                           double* ap, double* w, double* z, long long int ldz );

long long int LAPACKE_sspevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, float* ap, float vl, float vu,
                           long long int il, long long int iu, float abstol,
                           long long int* m, float* w, float* z, long long int ldz,
                           long long int* ifail );
long long int LAPACKE_dspevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, double* ap, double vl, double vu,
                           long long int il, long long int iu, double abstol,
                           long long int* m, double* w, double* z, long long int ldz,
                           long long int* ifail );

long long int LAPACKE_sspgst( int matrix_layout, long long int itype, char uplo,
                           long long int n, float* ap, const float* bp );
long long int LAPACKE_dspgst( int matrix_layout, long long int itype, char uplo,
                           long long int n, double* ap, const double* bp );

long long int LAPACKE_sspgv( int matrix_layout, long long int itype, char jobz,
                          char uplo, long long int n, float* ap, float* bp,
                          float* w, float* z, long long int ldz );
long long int LAPACKE_dspgv( int matrix_layout, long long int itype, char jobz,
                          char uplo, long long int n, double* ap, double* bp,
                          double* w, double* z, long long int ldz );

long long int LAPACKE_sspgvd( int matrix_layout, long long int itype, char jobz,
                           char uplo, long long int n, float* ap, float* bp,
                           float* w, float* z, long long int ldz );
long long int LAPACKE_dspgvd( int matrix_layout, long long int itype, char jobz,
                           char uplo, long long int n, double* ap, double* bp,
                           double* w, double* z, long long int ldz );

long long int LAPACKE_sspgvx( int matrix_layout, long long int itype, char jobz,
                           char range, char uplo, long long int n, float* ap,
                           float* bp, float vl, float vu, long long int il,
                           long long int iu, float abstol, long long int* m, float* w,
                           float* z, long long int ldz, long long int* ifail );
long long int LAPACKE_dspgvx( int matrix_layout, long long int itype, char jobz,
                           char range, char uplo, long long int n, double* ap,
                           double* bp, double vl, double vu, long long int il,
                           long long int iu, double abstol, long long int* m,
                           double* w, double* z, long long int ldz,
                           long long int* ifail );

long long int LAPACKE_ssprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* ap, const float* afp,
                           const long long int* ipiv, const float* b,
                           long long int ldb, float* x, long long int ldx,
                           float* ferr, float* berr );
long long int LAPACKE_dsprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* ap, const double* afp,
                           const long long int* ipiv, const double* b,
                           long long int ldb, double* x, long long int ldx,
                           double* ferr, double* berr );
long long int LAPACKE_csprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* ap,
                           const MKL_Complex8* afp,
                           const long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zsprfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* ap,
                           const MKL_Complex16* afp,
                           const long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_sspsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, float* ap, long long int* ipiv,
                          float* b, long long int ldb );
long long int LAPACKE_dspsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, double* ap, long long int* ipiv,
                          double* b, long long int ldb );
long long int LAPACKE_cspsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex8* ap,
                          long long int* ipiv, MKL_Complex8* b,
                          long long int ldb );
long long int LAPACKE_zspsv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex16* ap,
                          long long int* ipiv, MKL_Complex16* b,
                          long long int ldb );

long long int LAPACKE_sspsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const float* ap, float* afp,
                           long long int* ipiv, const float* b, long long int ldb,
                           float* x, long long int ldx, float* rcond, float* ferr,
                           float* berr );
long long int LAPACKE_dspsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const double* ap, double* afp,
                           long long int* ipiv, const double* b, long long int ldb,
                           double* x, long long int ldx, double* rcond,
                           double* ferr, double* berr );
long long int LAPACKE_cspsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* ap,
                           MKL_Complex8* afp, long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx,
                           float* rcond, float* ferr, float* berr );
long long int LAPACKE_zspsvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* ap,
                           MKL_Complex16* afp, long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );

long long int LAPACKE_ssptrd( int matrix_layout, char uplo, long long int n, float* ap,
                           float* d, float* e, float* tau );
long long int LAPACKE_dsptrd( int matrix_layout, char uplo, long long int n,
                           double* ap, double* d, double* e, double* tau );

long long int LAPACKE_ssptrf( int matrix_layout, char uplo, long long int n, float* ap,
                           long long int* ipiv );
long long int LAPACKE_dsptrf( int matrix_layout, char uplo, long long int n,
                           double* ap, long long int* ipiv );
long long int LAPACKE_csptrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* ap, long long int* ipiv );
long long int LAPACKE_zsptrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* ap, long long int* ipiv );

long long int LAPACKE_ssptri( int matrix_layout, char uplo, long long int n, float* ap,
                           const long long int* ipiv );
long long int LAPACKE_dsptri( int matrix_layout, char uplo, long long int n,
                           double* ap, const long long int* ipiv );
long long int LAPACKE_csptri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* ap, const long long int* ipiv );
long long int LAPACKE_zsptri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* ap, const long long int* ipiv );

long long int LAPACKE_ssptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* ap,
                           const long long int* ipiv, float* b, long long int ldb );
long long int LAPACKE_dsptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* ap,
                           const long long int* ipiv, double* b, long long int ldb );
long long int LAPACKE_csptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* ap,
                           const long long int* ipiv, MKL_Complex8* b,
                           long long int ldb );
long long int LAPACKE_zsptrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* ap,
                           const long long int* ipiv, MKL_Complex16* b,
                           long long int ldb );

long long int LAPACKE_sstebz( char range, char order, long long int n, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           const float* d, const float* e, long long int* m,
                           long long int* nsplit, float* w, long long int* iblock,
                           long long int* isplit );
long long int LAPACKE_dstebz( char range, char order, long long int n, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, const double* d, const double* e,
                           long long int* m, long long int* nsplit, double* w,
                           long long int* iblock, long long int* isplit );

long long int LAPACKE_sstedc( int matrix_layout, char compz, long long int n, float* d,
                           float* e, float* z, long long int ldz );
long long int LAPACKE_dstedc( int matrix_layout, char compz, long long int n,
                           double* d, double* e, double* z, long long int ldz );
long long int LAPACKE_cstedc( int matrix_layout, char compz, long long int n, float* d,
                           float* e, MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zstedc( int matrix_layout, char compz, long long int n,
                           double* d, double* e, MKL_Complex16* z,
                           long long int ldz );

long long int LAPACKE_sstegr( int matrix_layout, char jobz, char range,
                           long long int n, float* d, float* e, float vl, float vu,
                           long long int il, long long int iu, float abstol,
                           long long int* m, float* w, float* z, long long int ldz,
                           long long int* isuppz );
long long int LAPACKE_dstegr( int matrix_layout, char jobz, char range,
                           long long int n, double* d, double* e, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w, double* z,
                           long long int ldz, long long int* isuppz );
long long int LAPACKE_cstegr( int matrix_layout, char jobz, char range,
                           long long int n, float* d, float* e, float vl, float vu,
                           long long int il, long long int iu, float abstol,
                           long long int* m, float* w, MKL_Complex8* z,
                           long long int ldz, long long int* isuppz );
long long int LAPACKE_zstegr( int matrix_layout, char jobz, char range,
                           long long int n, double* d, double* e, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w,
                           MKL_Complex16* z, long long int ldz,
                           long long int* isuppz );

long long int LAPACKE_sstein( int matrix_layout, long long int n, const float* d,
                           const float* e, long long int m, const float* w,
                           const long long int* iblock, const long long int* isplit,
                           float* z, long long int ldz, long long int* ifailv );
long long int LAPACKE_dstein( int matrix_layout, long long int n, const double* d,
                           const double* e, long long int m, const double* w,
                           const long long int* iblock, const long long int* isplit,
                           double* z, long long int ldz, long long int* ifailv );
long long int LAPACKE_cstein( int matrix_layout, long long int n, const float* d,
                           const float* e, long long int m, const float* w,
                           const long long int* iblock, const long long int* isplit,
                           MKL_Complex8* z, long long int ldz,
                           long long int* ifailv );
long long int LAPACKE_zstein( int matrix_layout, long long int n, const double* d,
                           const double* e, long long int m, const double* w,
                           const long long int* iblock, const long long int* isplit,
                           MKL_Complex16* z, long long int ldz,
                           long long int* ifailv );

long long int LAPACKE_sstemr( int matrix_layout, char jobz, char range,
                           long long int n, float* d, float* e, float vl, float vu,
                           long long int il, long long int iu, long long int* m,
                           float* w, float* z, long long int ldz, long long int nzc,
                           long long int* isuppz, long long int* tryrac );
long long int LAPACKE_dstemr( int matrix_layout, char jobz, char range,
                           long long int n, double* d, double* e, double vl,
                           double vu, long long int il, long long int iu,
                           long long int* m, double* w, double* z, long long int ldz,
                           long long int nzc, long long int* isuppz,
                           long long int* tryrac );
long long int LAPACKE_cstemr( int matrix_layout, char jobz, char range,
                           long long int n, float* d, float* e, float vl, float vu,
                           long long int il, long long int iu, long long int* m,
                           float* w, MKL_Complex8* z, long long int ldz,
                           long long int nzc, long long int* isuppz,
                           long long int* tryrac );
long long int LAPACKE_zstemr( int matrix_layout, char jobz, char range,
                           long long int n, double* d, double* e, double vl,
                           double vu, long long int il, long long int iu,
                           long long int* m, double* w, MKL_Complex16* z,
                           long long int ldz, long long int nzc, long long int* isuppz,
                           long long int* tryrac );

long long int LAPACKE_ssteqr( int matrix_layout, char compz, long long int n, float* d,
                           float* e, float* z, long long int ldz );
long long int LAPACKE_dsteqr( int matrix_layout, char compz, long long int n,
                           double* d, double* e, double* z, long long int ldz );
long long int LAPACKE_csteqr( int matrix_layout, char compz, long long int n, float* d,
                           float* e, MKL_Complex8* z, long long int ldz );
long long int LAPACKE_zsteqr( int matrix_layout, char compz, long long int n,
                           double* d, double* e, MKL_Complex16* z,
                           long long int ldz );

long long int LAPACKE_ssterf( long long int n, float* d, float* e );
long long int LAPACKE_dsterf( long long int n, double* d, double* e );

long long int LAPACKE_sstev( int matrix_layout, char jobz, long long int n, float* d,
                          float* e, float* z, long long int ldz );
long long int LAPACKE_dstev( int matrix_layout, char jobz, long long int n, double* d,
                          double* e, double* z, long long int ldz );

long long int LAPACKE_sstevd( int matrix_layout, char jobz, long long int n, float* d,
                           float* e, float* z, long long int ldz );
long long int LAPACKE_dstevd( int matrix_layout, char jobz, long long int n, double* d,
                           double* e, double* z, long long int ldz );

long long int LAPACKE_sstevr( int matrix_layout, char jobz, char range,
                           long long int n, float* d, float* e, float vl, float vu,
                           long long int il, long long int iu, float abstol,
                           long long int* m, float* w, float* z, long long int ldz,
                           long long int* isuppz );
long long int LAPACKE_dstevr( int matrix_layout, char jobz, char range,
                           long long int n, double* d, double* e, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w, double* z,
                           long long int ldz, long long int* isuppz );

long long int LAPACKE_sstevx( int matrix_layout, char jobz, char range,
                           long long int n, float* d, float* e, float vl, float vu,
                           long long int il, long long int iu, float abstol,
                           long long int* m, float* w, float* z, long long int ldz,
                           long long int* ifail );
long long int LAPACKE_dstevx( int matrix_layout, char jobz, char range,
                           long long int n, double* d, double* e, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w, double* z,
                           long long int ldz, long long int* ifail );

long long int LAPACKE_ssycon( int matrix_layout, char uplo, long long int n,
                           const float* a, long long int lda,
                           const long long int* ipiv, float anorm, float* rcond );
long long int LAPACKE_dsycon( int matrix_layout, char uplo, long long int n,
                           const double* a, long long int lda,
                           const long long int* ipiv, double anorm,
                           double* rcond );
long long int LAPACKE_csycon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           const long long int* ipiv, float anorm, float* rcond );
long long int LAPACKE_zsycon( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           const long long int* ipiv, double anorm,
                           double* rcond );

long long int LAPACKE_ssyconv( int matrix_layout, char uplo, char way, long long int n,
                            float* a, long long int lda, const long long int* ipiv );
long long int LAPACKE_dsyconv( int matrix_layout, char uplo, char way, long long int n,
                            double* a, long long int lda, const long long int* ipiv );
long long int LAPACKE_csyconv( int matrix_layout, char uplo, char way, long long int n,
                            MKL_Complex8* a, long long int lda,
                            const long long int* ipiv );
long long int LAPACKE_zsyconv( int matrix_layout, char uplo, char way, long long int n,
                            MKL_Complex16* a, long long int lda,
                            const long long int* ipiv );

long long int LAPACKE_ssyequb( int matrix_layout, char uplo, long long int n,
                            const float* a, long long int lda, float* s,
                            float* scond, float* amax );
long long int LAPACKE_dsyequb( int matrix_layout, char uplo, long long int n,
                            const double* a, long long int lda, double* s,
                            double* scond, double* amax );
long long int LAPACKE_csyequb( int matrix_layout, char uplo, long long int n,
                            const MKL_Complex8* a, long long int lda,
                            float* s, float* scond, float* amax );
long long int LAPACKE_zsyequb( int matrix_layout, char uplo, long long int n,
                            const MKL_Complex16* a, long long int lda,
                            double* s, double* scond, double* amax );

long long int LAPACKE_ssyev( int matrix_layout, char jobz, char uplo, long long int n,
                          float* a, long long int lda, float* w );
long long int LAPACKE_dsyev( int matrix_layout, char jobz, char uplo, long long int n,
                          double* a, long long int lda, double* w );

long long int LAPACKE_ssyevd( int matrix_layout, char jobz, char uplo, long long int n,
                           float* a, long long int lda, float* w );
long long int LAPACKE_dsyevd( int matrix_layout, char jobz, char uplo, long long int n,
                           double* a, long long int lda, double* w );

long long int LAPACKE_ssyevr( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, float* a, long long int lda, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           long long int* m, float* w, float* z, long long int ldz,
                           long long int* isuppz );
long long int LAPACKE_dsyevr( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, double* a, long long int lda, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w, double* z,
                           long long int ldz, long long int* isuppz );

long long int LAPACKE_ssyevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, float* a, long long int lda, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           long long int* m, float* w, float* z, long long int ldz,
                           long long int* ifail );
long long int LAPACKE_dsyevx( int matrix_layout, char jobz, char range, char uplo,
                           long long int n, double* a, long long int lda, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w, double* z,
                           long long int ldz, long long int* ifail );

long long int LAPACKE_ssygst( int matrix_layout, long long int itype, char uplo,
                           long long int n, float* a, long long int lda,
                           const float* b, long long int ldb );
long long int LAPACKE_dsygst( int matrix_layout, long long int itype, char uplo,
                           long long int n, double* a, long long int lda,
                           const double* b, long long int ldb );

long long int LAPACKE_ssygv( int matrix_layout, long long int itype, char jobz,
                          char uplo, long long int n, float* a, long long int lda,
                          float* b, long long int ldb, float* w );
long long int LAPACKE_dsygv( int matrix_layout, long long int itype, char jobz,
                          char uplo, long long int n, double* a, long long int lda,
                          double* b, long long int ldb, double* w );

long long int LAPACKE_ssygvd( int matrix_layout, long long int itype, char jobz,
                           char uplo, long long int n, float* a, long long int lda,
                           float* b, long long int ldb, float* w );
long long int LAPACKE_dsygvd( int matrix_layout, long long int itype, char jobz,
                           char uplo, long long int n, double* a, long long int lda,
                           double* b, long long int ldb, double* w );

long long int LAPACKE_ssygvx( int matrix_layout, long long int itype, char jobz,
                           char range, char uplo, long long int n, float* a,
                           long long int lda, float* b, long long int ldb, float vl,
                           float vu, long long int il, long long int iu, float abstol,
                           long long int* m, float* w, float* z, long long int ldz,
                           long long int* ifail );
long long int LAPACKE_dsygvx( int matrix_layout, long long int itype, char jobz,
                           char range, char uplo, long long int n, double* a,
                           long long int lda, double* b, long long int ldb, double vl,
                           double vu, long long int il, long long int iu,
                           double abstol, long long int* m, double* w, double* z,
                           long long int ldz, long long int* ifail );

long long int LAPACKE_ssyrfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* a, long long int lda,
                           const float* af, long long int ldaf,
                           const long long int* ipiv, const float* b,
                           long long int ldb, float* x, long long int ldx,
                           float* ferr, float* berr );
long long int LAPACKE_dsyrfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* a, long long int lda,
                           const double* af, long long int ldaf,
                           const long long int* ipiv, const double* b,
                           long long int ldb, double* x, long long int ldx,
                           double* ferr, double* berr );
long long int LAPACKE_csyrfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* af,
                           long long int ldaf, const long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_zsyrfs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* af,
                           long long int ldaf, const long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_ssyrfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs, const float* a,
                            long long int lda, const float* af, long long int ldaf,
                            const long long int* ipiv, const float* s,
                            const float* b, long long int ldb, float* x,
                            long long int ldx, float* rcond, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_dsyrfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs, const double* a,
                            long long int lda, const double* af, long long int ldaf,
                            const long long int* ipiv, const double* s,
                            const double* b, long long int ldb, double* x,
                            long long int ldx, double* rcond, double* berr,
                            long long int n_err_bnds, double* err_bnds_norm,
                            double* err_bnds_comp, long long int nparams,
                            double* params );
long long int LAPACKE_csyrfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs,
                            const MKL_Complex8* a, long long int lda,
                            const MKL_Complex8* af, long long int ldaf,
                            const long long int* ipiv, const float* s,
                            const MKL_Complex8* b, long long int ldb,
                            MKL_Complex8* x, long long int ldx,
                            float* rcond, float* berr, long long int n_err_bnds,
                            float* err_bnds_norm, float* err_bnds_comp,
                            long long int nparams, float* params );
long long int LAPACKE_zsyrfsx( int matrix_layout, char uplo, char equed,
                            long long int n, long long int nrhs,
                            const MKL_Complex16* a, long long int lda,
                            const MKL_Complex16* af, long long int ldaf,
                            const long long int* ipiv, const double* s,
                            const MKL_Complex16* b, long long int ldb,
                            MKL_Complex16* x, long long int ldx,
                            double* rcond, double* berr, long long int n_err_bnds,
                            double* err_bnds_norm, double* err_bnds_comp,
                            long long int nparams, double* params );

long long int LAPACKE_ssysv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, float* a, long long int lda,
                          long long int* ipiv, float* b, long long int ldb );
long long int LAPACKE_dsysv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, double* a, long long int lda,
                          long long int* ipiv, double* b, long long int ldb );
long long int LAPACKE_csysv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex8* a,
                          long long int lda, long long int* ipiv,
                          MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zsysv( int matrix_layout, char uplo, long long int n,
                          long long int nrhs, MKL_Complex16* a,
                          long long int lda, long long int* ipiv,
                          MKL_Complex16* b, long long int ldb );

long long int LAPACKE_ssysvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const float* a, long long int lda,
                           float* af, long long int ldaf, long long int* ipiv,
                           const float* b, long long int ldb, float* x,
                           long long int ldx, float* rcond, float* ferr,
                           float* berr );
long long int LAPACKE_dsysvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const double* a, long long int lda,
                           double* af, long long int ldaf, long long int* ipiv,
                           const double* b, long long int ldb, double* x,
                           long long int ldx, double* rcond, double* ferr,
                           double* berr );
long long int LAPACKE_csysvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, MKL_Complex8* af,
                           long long int ldaf, long long int* ipiv,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* x, long long int ldx,
                           float* rcond, float* ferr, float* berr );
long long int LAPACKE_zsysvx( int matrix_layout, char fact, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, MKL_Complex16* af,
                           long long int ldaf, long long int* ipiv,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* x, long long int ldx,
                           double* rcond, double* ferr, double* berr );

long long int LAPACKE_ssysvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs, float* a,
                            long long int lda, float* af, long long int ldaf,
                            long long int* ipiv, char* equed, float* s, float* b,
                            long long int ldb, float* x, long long int ldx,
                            float* rcond, float* rpvgrw, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_dsysvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs, double* a,
                            long long int lda, double* af, long long int ldaf,
                            long long int* ipiv, char* equed, double* s, double* b,
                            long long int ldb, double* x, long long int ldx,
                            double* rcond, double* rpvgrw, double* berr,
                            long long int n_err_bnds, double* err_bnds_norm,
                            double* err_bnds_comp, long long int nparams,
                            double* params );
long long int LAPACKE_csysvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs,
                            MKL_Complex8* a, long long int lda,
                            MKL_Complex8* af, long long int ldaf,
                            long long int* ipiv, char* equed, float* s,
                            MKL_Complex8* b, long long int ldb,
                            MKL_Complex8* x, long long int ldx,
                            float* rcond, float* rpvgrw, float* berr,
                            long long int n_err_bnds, float* err_bnds_norm,
                            float* err_bnds_comp, long long int nparams,
                            float* params );
long long int LAPACKE_zsysvxx( int matrix_layout, char fact, char uplo,
                            long long int n, long long int nrhs,
                            MKL_Complex16* a, long long int lda,
                            MKL_Complex16* af, long long int ldaf,
                            long long int* ipiv, char* equed, double* s,
                            MKL_Complex16* b, long long int ldb,
                            MKL_Complex16* x, long long int ldx,
                            double* rcond, double* rpvgrw, double* berr,
                            long long int n_err_bnds, double* err_bnds_norm,
                            double* err_bnds_comp, long long int nparams,
                            double* params );

long long int LAPACKE_ssyswapr( int matrix_layout, char uplo, long long int n,
                             float* a, long long int i1, long long int i2 );
long long int LAPACKE_dsyswapr( int matrix_layout, char uplo, long long int n,
                             double* a, long long int i1, long long int i2 );
long long int LAPACKE_csyswapr( int matrix_layout, char uplo, long long int n,
                             MKL_Complex8* a, long long int i1,
                             long long int i2 );
long long int LAPACKE_zsyswapr( int matrix_layout, char uplo, long long int n,
                             MKL_Complex16* a, long long int i1,
                             long long int i2 );

long long int LAPACKE_ssytrd( int matrix_layout, char uplo, long long int n, float* a,
                           long long int lda, float* d, float* e, float* tau );
long long int LAPACKE_dsytrd( int matrix_layout, char uplo, long long int n, double* a,
                           long long int lda, double* d, double* e, double* tau );

long long int LAPACKE_ssytrf( int matrix_layout, char uplo, long long int n, float* a,
                           long long int lda, long long int* ipiv );
long long int LAPACKE_dsytrf( int matrix_layout, char uplo, long long int n, double* a,
                           long long int lda, long long int* ipiv );
long long int LAPACKE_csytrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda,
                           long long int* ipiv );
long long int LAPACKE_zsytrf( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda,
                           long long int* ipiv );

long long int LAPACKE_ssytri( int matrix_layout, char uplo, long long int n, float* a,
                           long long int lda, const long long int* ipiv );
long long int LAPACKE_dsytri( int matrix_layout, char uplo, long long int n, double* a,
                           long long int lda, const long long int* ipiv );
long long int LAPACKE_csytri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda,
                           const long long int* ipiv );
long long int LAPACKE_zsytri( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda,
                           const long long int* ipiv );

long long int LAPACKE_ssytri2( int matrix_layout, char uplo, long long int n, float* a,
                            long long int lda, const long long int* ipiv );
long long int LAPACKE_dsytri2( int matrix_layout, char uplo, long long int n,
                            double* a, long long int lda, const long long int* ipiv );
long long int LAPACKE_csytri2( int matrix_layout, char uplo, long long int n,
                            MKL_Complex8* a, long long int lda,
                            const long long int* ipiv );
long long int LAPACKE_zsytri2( int matrix_layout, char uplo, long long int n,
                            MKL_Complex16* a, long long int lda,
                            const long long int* ipiv );

long long int LAPACKE_ssytri2x( int matrix_layout, char uplo, long long int n,
                             float* a, long long int lda, const long long int* ipiv,
                             long long int nb );
long long int LAPACKE_dsytri2x( int matrix_layout, char uplo, long long int n,
                             double* a, long long int lda, const long long int* ipiv,
                             long long int nb );
long long int LAPACKE_csytri2x( int matrix_layout, char uplo, long long int n,
                             MKL_Complex8* a, long long int lda,
                             const long long int* ipiv, long long int nb );
long long int LAPACKE_zsytri2x( int matrix_layout, char uplo, long long int n,
                             MKL_Complex16* a, long long int lda,
                             const long long int* ipiv, long long int nb );

long long int LAPACKE_ssytrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const float* a, long long int lda,
                           const long long int* ipiv, float* b, long long int ldb );
long long int LAPACKE_dsytrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const double* a, long long int lda,
                           const long long int* ipiv, double* b, long long int ldb );
long long int LAPACKE_csytrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex8* a,
                           long long int lda, const long long int* ipiv,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zsytrs( int matrix_layout, char uplo, long long int n,
                           long long int nrhs, const MKL_Complex16* a,
                           long long int lda, const long long int* ipiv,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_ssytrs2( int matrix_layout, char uplo, long long int n,
                            long long int nrhs, const float* a, long long int lda,
                            const long long int* ipiv, float* b, long long int ldb );
long long int LAPACKE_dsytrs2( int matrix_layout, char uplo, long long int n,
                            long long int nrhs, const double* a, long long int lda,
                            const long long int* ipiv, double* b, long long int ldb );
long long int LAPACKE_csytrs2( int matrix_layout, char uplo, long long int n,
                            long long int nrhs, const MKL_Complex8* a,
                            long long int lda, const long long int* ipiv,
                            MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zsytrs2( int matrix_layout, char uplo, long long int n,
                            long long int nrhs, const MKL_Complex16* a,
                            long long int lda, const long long int* ipiv,
                            MKL_Complex16* b, long long int ldb );

long long int LAPACKE_stbcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, long long int kd, const float* ab,
                           long long int ldab, float* rcond );
long long int LAPACKE_dtbcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, long long int kd, const double* ab,
                           long long int ldab, double* rcond );
long long int LAPACKE_ctbcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, long long int kd,
                           const MKL_Complex8* ab, long long int ldab,
                           float* rcond );
long long int LAPACKE_ztbcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, long long int kd,
                           const MKL_Complex16* ab, long long int ldab,
                           double* rcond );

long long int LAPACKE_stbrfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int kd, long long int nrhs,
                           const float* ab, long long int ldab, const float* b,
                           long long int ldb, const float* x, long long int ldx,
                           float* ferr, float* berr );
long long int LAPACKE_dtbrfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int kd, long long int nrhs,
                           const double* ab, long long int ldab, const double* b,
                           long long int ldb, const double* x, long long int ldx,
                           double* ferr, double* berr );
long long int LAPACKE_ctbrfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int kd, long long int nrhs,
                           const MKL_Complex8* ab, long long int ldab,
                           const MKL_Complex8* b, long long int ldb,
                           const MKL_Complex8* x, long long int ldx,
                           float* ferr, float* berr );
long long int LAPACKE_ztbrfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int kd, long long int nrhs,
                           const MKL_Complex16* ab, long long int ldab,
                           const MKL_Complex16* b, long long int ldb,
                           const MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_stbtrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int kd, long long int nrhs,
                           const float* ab, long long int ldab, float* b,
                           long long int ldb );
long long int LAPACKE_dtbtrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int kd, long long int nrhs,
                           const double* ab, long long int ldab, double* b,
                           long long int ldb );
long long int LAPACKE_ctbtrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int kd, long long int nrhs,
                           const MKL_Complex8* ab, long long int ldab,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_ztbtrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int kd, long long int nrhs,
                           const MKL_Complex16* ab, long long int ldab,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_stfsm( int matrix_layout, char transr, char side, char uplo,
                          char trans, char diag, long long int m, long long int n,
                          float alpha, const float* a, float* b,
                          long long int ldb );
long long int LAPACKE_dtfsm( int matrix_layout, char transr, char side, char uplo,
                          char trans, char diag, long long int m, long long int n,
                          double alpha, const double* a, double* b,
                          long long int ldb );
long long int LAPACKE_ctfsm( int matrix_layout, char transr, char side, char uplo,
                          char trans, char diag, long long int m, long long int n,
                          MKL_Complex8 alpha,
                          const MKL_Complex8* a,
                          MKL_Complex8* b, long long int ldb );
long long int LAPACKE_ztfsm( int matrix_layout, char transr, char side, char uplo,
                          char trans, char diag, long long int m, long long int n,
                          MKL_Complex16 alpha,
                          const MKL_Complex16* a,
                          MKL_Complex16* b, long long int ldb );

long long int LAPACKE_stftri( int matrix_layout, char transr, char uplo, char diag,
                           long long int n, float* a );
long long int LAPACKE_dtftri( int matrix_layout, char transr, char uplo, char diag,
                           long long int n, double* a );
long long int LAPACKE_ctftri( int matrix_layout, char transr, char uplo, char diag,
                           long long int n, MKL_Complex8* a );
long long int LAPACKE_ztftri( int matrix_layout, char transr, char uplo, char diag,
                           long long int n, MKL_Complex16* a );

long long int LAPACKE_stfttp( int matrix_layout, char transr, char uplo,
                           long long int n, const float* arf, float* ap );
long long int LAPACKE_dtfttp( int matrix_layout, char transr, char uplo,
                           long long int n, const double* arf, double* ap );
long long int LAPACKE_ctfttp( int matrix_layout, char transr, char uplo,
                           long long int n, const MKL_Complex8* arf,
                           MKL_Complex8* ap );
long long int LAPACKE_ztfttp( int matrix_layout, char transr, char uplo,
                           long long int n, const MKL_Complex16* arf,
                           MKL_Complex16* ap );

long long int LAPACKE_stfttr( int matrix_layout, char transr, char uplo,
                           long long int n, const float* arf, float* a,
                           long long int lda );
long long int LAPACKE_dtfttr( int matrix_layout, char transr, char uplo,
                           long long int n, const double* arf, double* a,
                           long long int lda );
long long int LAPACKE_ctfttr( int matrix_layout, char transr, char uplo,
                           long long int n, const MKL_Complex8* arf,
                           MKL_Complex8* a, long long int lda );
long long int LAPACKE_ztfttr( int matrix_layout, char transr, char uplo,
                           long long int n, const MKL_Complex16* arf,
                           MKL_Complex16* a, long long int lda );

long long int LAPACKE_stgevc( int matrix_layout, char side, char howmny,
                           const long long int* select, long long int n,
                           const float* s, long long int lds, const float* p,
                           long long int ldp, float* vl, long long int ldvl,
                           float* vr, long long int ldvr, long long int mm,
                           long long int* m );
long long int LAPACKE_dtgevc( int matrix_layout, char side, char howmny,
                           const long long int* select, long long int n,
                           const double* s, long long int lds, const double* p,
                           long long int ldp, double* vl, long long int ldvl,
                           double* vr, long long int ldvr, long long int mm,
                           long long int* m );
long long int LAPACKE_ctgevc( int matrix_layout, char side, char howmny,
                           const long long int* select, long long int n,
                           const MKL_Complex8* s, long long int lds,
                           const MKL_Complex8* p, long long int ldp,
                           MKL_Complex8* vl, long long int ldvl,
                           MKL_Complex8* vr, long long int ldvr,
                           long long int mm, long long int* m );
long long int LAPACKE_ztgevc( int matrix_layout, char side, char howmny,
                           const long long int* select, long long int n,
                           const MKL_Complex16* s, long long int lds,
                           const MKL_Complex16* p, long long int ldp,
                           MKL_Complex16* vl, long long int ldvl,
                           MKL_Complex16* vr, long long int ldvr,
                           long long int mm, long long int* m );

long long int LAPACKE_stgexc( int matrix_layout, long long int wantq,
                           long long int wantz, long long int n, float* a,
                           long long int lda, float* b, long long int ldb, float* q,
                           long long int ldq, float* z, long long int ldz,
                           long long int* ifst, long long int* ilst );
long long int LAPACKE_dtgexc( int matrix_layout, long long int wantq,
                           long long int wantz, long long int n, double* a,
                           long long int lda, double* b, long long int ldb, double* q,
                           long long int ldq, double* z, long long int ldz,
                           long long int* ifst, long long int* ilst );
long long int LAPACKE_ctgexc( int matrix_layout, long long int wantq,
                           long long int wantz, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* q, long long int ldq,
                           MKL_Complex8* z, long long int ldz,
                           long long int ifst, long long int ilst );
long long int LAPACKE_ztgexc( int matrix_layout, long long int wantq,
                           long long int wantz, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* q, long long int ldq,
                           MKL_Complex16* z, long long int ldz,
                           long long int ifst, long long int ilst );

long long int LAPACKE_stgsen( int matrix_layout, long long int ijob,
                           long long int wantq, long long int wantz,
                           const long long int* select, long long int n, float* a,
                           long long int lda, float* b, long long int ldb,
                           float* alphar, float* alphai, float* beta, float* q,
                           long long int ldq, float* z, long long int ldz,
                           long long int* m, float* pl, float* pr, float* dif );
long long int LAPACKE_dtgsen( int matrix_layout, long long int ijob,
                           long long int wantq, long long int wantz,
                           const long long int* select, long long int n,
                           double* a, long long int lda, double* b, long long int ldb,
                           double* alphar, double* alphai, double* beta,
                           double* q, long long int ldq, double* z, long long int ldz,
                           long long int* m, double* pl, double* pr, double* dif );
long long int LAPACKE_ctgsen( int matrix_layout, long long int ijob,
                           long long int wantq, long long int wantz,
                           const long long int* select, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* alpha,
                           MKL_Complex8* beta, MKL_Complex8* q,
                           long long int ldq, MKL_Complex8* z,
                           long long int ldz, long long int* m, float* pl, float* pr,
                           float* dif );
long long int LAPACKE_ztgsen( int matrix_layout, long long int ijob,
                           long long int wantq, long long int wantz,
                           const long long int* select, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* alpha,
                           MKL_Complex16* beta,
                           MKL_Complex16* q, long long int ldq,
                           MKL_Complex16* z, long long int ldz,
                           long long int* m, double* pl, double* pr, double* dif );

long long int LAPACKE_stgsja( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int p, long long int n,
                           long long int k, long long int l, float* a, long long int lda,
                           float* b, long long int ldb, float tola, float tolb,
                           float* alpha, float* beta, float* u, long long int ldu,
                           float* v, long long int ldv, float* q, long long int ldq,
                           long long int* ncycle );
long long int LAPACKE_dtgsja( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int p, long long int n,
                           long long int k, long long int l, double* a,
                           long long int lda, double* b, long long int ldb,
                           double tola, double tolb, double* alpha,
                           double* beta, double* u, long long int ldu, double* v,
                           long long int ldv, double* q, long long int ldq,
                           long long int* ncycle );
long long int LAPACKE_ctgsja( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int p, long long int n,
                           long long int k, long long int l, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb, float tola, float tolb, float* alpha,
                           float* beta, MKL_Complex8* u, long long int ldu,
                           MKL_Complex8* v, long long int ldv,
                           MKL_Complex8* q, long long int ldq,
                           long long int* ncycle );
long long int LAPACKE_ztgsja( int matrix_layout, char jobu, char jobv, char jobq,
                           long long int m, long long int p, long long int n,
                           long long int k, long long int l, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, double tola, double tolb,
                           double* alpha, double* beta,
                           MKL_Complex16* u, long long int ldu,
                           MKL_Complex16* v, long long int ldv,
                           MKL_Complex16* q, long long int ldq,
                           long long int* ncycle );

long long int LAPACKE_stgsna( int matrix_layout, char job, char howmny,
                           const long long int* select, long long int n,
                           const float* a, long long int lda, const float* b,
                           long long int ldb, const float* vl, long long int ldvl,
                           const float* vr, long long int ldvr, float* s,
                           float* dif, long long int mm, long long int* m );
long long int LAPACKE_dtgsna( int matrix_layout, char job, char howmny,
                           const long long int* select, long long int n,
                           const double* a, long long int lda, const double* b,
                           long long int ldb, const double* vl, long long int ldvl,
                           const double* vr, long long int ldvr, double* s,
                           double* dif, long long int mm, long long int* m );
long long int LAPACKE_ctgsna( int matrix_layout, char job, char howmny,
                           const long long int* select, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* b, long long int ldb,
                           const MKL_Complex8* vl, long long int ldvl,
                           const MKL_Complex8* vr, long long int ldvr,
                           float* s, float* dif, long long int mm, long long int* m );
long long int LAPACKE_ztgsna( int matrix_layout, char job, char howmny,
                           const long long int* select, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* b, long long int ldb,
                           const MKL_Complex16* vl, long long int ldvl,
                           const MKL_Complex16* vr, long long int ldvr,
                           double* s, double* dif, long long int mm,
                           long long int* m );

long long int LAPACKE_stgsyl( int matrix_layout, char trans, long long int ijob,
                           long long int m, long long int n, const float* a,
                           long long int lda, const float* b, long long int ldb,
                           float* c, long long int ldc, const float* d,
                           long long int ldd, const float* e, long long int lde,
                           float* f, long long int ldf, float* scale, float* dif );
long long int LAPACKE_dtgsyl( int matrix_layout, char trans, long long int ijob,
                           long long int m, long long int n, const double* a,
                           long long int lda, const double* b, long long int ldb,
                           double* c, long long int ldc, const double* d,
                           long long int ldd, const double* e, long long int lde,
                           double* f, long long int ldf, double* scale,
                           double* dif );
long long int LAPACKE_ctgsyl( int matrix_layout, char trans, long long int ijob,
                           long long int m, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* c, long long int ldc,
                           const MKL_Complex8* d, long long int ldd,
                           const MKL_Complex8* e, long long int lde,
                           MKL_Complex8* f, long long int ldf,
                           float* scale, float* dif );
long long int LAPACKE_ztgsyl( int matrix_layout, char trans, long long int ijob,
                           long long int m, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* c, long long int ldc,
                           const MKL_Complex16* d, long long int ldd,
                           const MKL_Complex16* e, long long int lde,
                           MKL_Complex16* f, long long int ldf,
                           double* scale, double* dif );

long long int LAPACKE_stpcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, const float* ap, float* rcond );
long long int LAPACKE_dtpcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, const double* ap, double* rcond );
long long int LAPACKE_ctpcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, const MKL_Complex8* ap,
                           float* rcond );
long long int LAPACKE_ztpcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, const MKL_Complex16* ap,
                           double* rcond );

long long int LAPACKE_stpmqrt( int matrix_layout, char side, char trans,
                            long long int m, long long int n, long long int k, long long int l,
                            long long int nb, const float* v, long long int ldv,
                            const float* t, long long int ldt, float* a, long long int lda,
                            float* b, long long int ldb );
long long int LAPACKE_dtpmqrt( int matrix_layout, char side, char trans,
                            long long int m, long long int n, long long int k, long long int l,
                            long long int nb, const double* v, long long int ldv,
                            const double* t, long long int ldt, double* a, long long int lda,
                            double* b, long long int ldb );
long long int LAPACKE_ctpmqrt( int matrix_layout, char side, char trans,
                            long long int m, long long int n, long long int k, long long int l,
                            long long int nb, const MKL_Complex8* v,
                            long long int ldv, const MKL_Complex8* t,
                            long long int ldt, MKL_Complex8* a, long long int lda,
                            MKL_Complex8* b, long long int ldb );
long long int LAPACKE_ztpmqrt( int matrix_layout, char side, char trans,
                            long long int m, long long int n, long long int k, long long int l,
                            long long int nb, const MKL_Complex16* v,
                            long long int ldv, const MKL_Complex16* t,
                            long long int ldt, MKL_Complex16* a, long long int lda,
                            MKL_Complex16* b, long long int ldb );

long long int LAPACKE_stpqrt( int matrix_layout, long long int m, long long int n, long long int l,
                           long long int nb, float* a, long long int lda, float* b, long long int ldb,
                           float* t, long long int ldt );
long long int LAPACKE_dtpqrt( int matrix_layout, long long int m, long long int n, long long int l,
                           long long int nb, double* a, long long int lda, double* b, long long int ldb,
                           double* t, long long int ldt );
long long int LAPACKE_ctpqrt( int matrix_layout, long long int m, long long int n, long long int l,
                           long long int nb, MKL_Complex8* a,
                           long long int lda, MKL_Complex8* b,
                           long long int ldb, MKL_Complex8* t,
                           long long int ldt );
long long int LAPACKE_ztpqrt( int matrix_layout, long long int m, long long int n, long long int l,
                           long long int nb, MKL_Complex16* a,
                           long long int lda, MKL_Complex16* b,
                           long long int ldb, MKL_Complex16* t,
                           long long int ldt );

long long int LAPACKE_stpqrt2( int matrix_layout, long long int m, long long int n, long long int l,
                            float* a, long long int lda, float* b, long long int ldb,
                            float* t, long long int ldt );
long long int LAPACKE_dtpqrt2( int matrix_layout, long long int m, long long int n, long long int l,
                            double* a, long long int lda, double* b, long long int ldb,
                            double* t, long long int ldt );
long long int LAPACKE_ctpqrt2( int matrix_layout, long long int m, long long int n, long long int l,
                            MKL_Complex8* a, long long int lda,
                            MKL_Complex8* b, long long int ldb,
                            MKL_Complex8* t, long long int ldt );
long long int LAPACKE_ztpqrt2( int matrix_layout, long long int m, long long int n, long long int l,
                            MKL_Complex16* a, long long int lda,
                            MKL_Complex16* b, long long int ldb,
                            MKL_Complex16* t, long long int ldt );

long long int LAPACKE_mkl_ctppack( int matrix_layout, char uplo, char trans, long long int n,
                                MKL_Complex8* ap, long long int i, long long int j, long long int rows,
                                long long int cols, const MKL_Complex8* a, long long int lda );
long long int LAPACKE_mkl_dtppack( int matrix_layout, char uplo, char trans, long long int n,
                                double* ap, long long int i, long long int j, long long int rows,
                                long long int cols, const double* a, long long int lda );
long long int LAPACKE_mkl_stppack( int matrix_layout, char uplo, char trans, long long int n,
                                float* ap, long long int i, long long int j, long long int rows,
                                long long int cols, const float* a, long long int lda );
long long int LAPACKE_mkl_ztppack( int matrix_layout, char uplo, char trans, long long int n,
                                MKL_Complex16* ap, long long int i, long long int j, long long int rows,
                                long long int cols, const MKL_Complex16* a, long long int lda );

long long int LAPACKE_stprfb( int matrix_layout, char side, char trans, char direct,
                           char storev, long long int m, long long int n,
                           long long int k, long long int l, const float* v,
                           long long int ldv, const float* t, long long int ldt,
                           float* a, long long int lda, float* b, long long int ldb );

long long int LAPACKE_dtprfb( int matrix_layout, char side, char trans, char direct,
                           char storev, long long int m, long long int n,
                           long long int k, long long int l, const double* v,
                           long long int ldv, const double* t, long long int ldt,
                           double* a, long long int lda, double* b, long long int ldb );

long long int LAPACKE_ctprfb( int matrix_layout, char side, char trans, char direct,
                           char storev, long long int m, long long int n,
                           long long int k, long long int l, const MKL_Complex8* v,
                           long long int ldv, const MKL_Complex8* t, long long int ldt,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb );

long long int LAPACKE_ztprfb( int matrix_layout, char side, char trans, char direct,
                           char storev, long long int m, long long int n,
                           long long int k, long long int l, const MKL_Complex16* v,
                           long long int ldv, const MKL_Complex16* t, long long int ldt,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb );


long long int LAPACKE_stprfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs, const float* ap,
                           const float* b, long long int ldb, const float* x,
                           long long int ldx, float* ferr, float* berr );
long long int LAPACKE_dtprfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs, const double* ap,
                           const double* b, long long int ldb, const double* x,
                           long long int ldx, double* ferr, double* berr );
long long int LAPACKE_ctprfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs,
                           const MKL_Complex8* ap,
                           const MKL_Complex8* b, long long int ldb,
                           const MKL_Complex8* x, long long int ldx,
                           float* ferr, float* berr );
long long int LAPACKE_ztprfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs,
                           const MKL_Complex16* ap,
                           const MKL_Complex16* b, long long int ldb,
                           const MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_stptri( int matrix_layout, char uplo, char diag, long long int n,
                           float* ap );
long long int LAPACKE_dtptri( int matrix_layout, char uplo, char diag, long long int n,
                           double* ap );
long long int LAPACKE_ctptri( int matrix_layout, char uplo, char diag, long long int n,
                           MKL_Complex8* ap );
long long int LAPACKE_ztptri( int matrix_layout, char uplo, char diag, long long int n,
                           MKL_Complex16* ap );

long long int LAPACKE_stptrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs, const float* ap,
                           float* b, long long int ldb );
long long int LAPACKE_dtptrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs, const double* ap,
                           double* b, long long int ldb );
long long int LAPACKE_ctptrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs,
                           const MKL_Complex8* ap,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_ztptrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs,
                           const MKL_Complex16* ap,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_stpttf( int matrix_layout, char transr, char uplo,
                           long long int n, const float* ap, float* arf );
long long int LAPACKE_dtpttf( int matrix_layout, char transr, char uplo,
                           long long int n, const double* ap, double* arf );
long long int LAPACKE_ctpttf( int matrix_layout, char transr, char uplo,
                           long long int n, const MKL_Complex8* ap,
                           MKL_Complex8* arf );
long long int LAPACKE_ztpttf( int matrix_layout, char transr, char uplo,
                           long long int n, const MKL_Complex16* ap,
                           MKL_Complex16* arf );

long long int LAPACKE_stpttr( int matrix_layout, char uplo, long long int n,
                           const float* ap, float* a, long long int lda );
long long int LAPACKE_dtpttr( int matrix_layout, char uplo, long long int n,
                           const double* ap, double* a, long long int lda );
long long int LAPACKE_ctpttr( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* ap,
                           MKL_Complex8* a, long long int lda );
long long int LAPACKE_ztpttr( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* ap,
                           MKL_Complex16* a, long long int lda );

long long int LAPACKE_ctpunpack( int matrix_layout, char uplo, char trans, long long int n,
                              const MKL_Complex8* ap, long long int i, long long int j, long long int rows,
                              long long int cols, MKL_Complex8* a, long long int lda );
long long int LAPACKE_dtpunpack( int matrix_layout, char uplo, char trans, long long int n,
                              const double* ap, long long int i, long long int j, long long int rows,
                              long long int cols, double* a, long long int lda );
long long int LAPACKE_stpunpack( int matrix_layout, char uplo, char trans, long long int n,
                              const float* ap, long long int i, long long int j, long long int rows,
                              long long int cols, float* a, long long int lda );
long long int LAPACKE_ztpunpack( int matrix_layout, char uplo, char trans, long long int n,
                              const MKL_Complex16* ap, long long int i, long long int j, long long int rows,
                              long long int cols, MKL_Complex16* a, long long int lda );

long long int LAPACKE_strcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, const float* a, long long int lda,
                           float* rcond );
long long int LAPACKE_dtrcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, const double* a, long long int lda,
                           double* rcond );
long long int LAPACKE_ctrcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, const MKL_Complex8* a,
                           long long int lda, float* rcond );
long long int LAPACKE_ztrcon( int matrix_layout, char norm, char uplo, char diag,
                           long long int n, const MKL_Complex16* a,
                           long long int lda, double* rcond );

long long int LAPACKE_strevc( int matrix_layout, char side, char howmny,
                           long long int* select, long long int n, const float* t,
                           long long int ldt, float* vl, long long int ldvl,
                           float* vr, long long int ldvr, long long int mm,
                           long long int* m );
long long int LAPACKE_dtrevc( int matrix_layout, char side, char howmny,
                           long long int* select, long long int n,
                           const double* t, long long int ldt, double* vl,
                           long long int ldvl, double* vr, long long int ldvr,
                           long long int mm, long long int* m );
long long int LAPACKE_ctrevc( int matrix_layout, char side, char howmny,
                           const long long int* select, long long int n,
                           MKL_Complex8* t, long long int ldt,
                           MKL_Complex8* vl, long long int ldvl,
                           MKL_Complex8* vr, long long int ldvr,
                           long long int mm, long long int* m );
long long int LAPACKE_ztrevc( int matrix_layout, char side, char howmny,
                           const long long int* select, long long int n,
                           MKL_Complex16* t, long long int ldt,
                           MKL_Complex16* vl, long long int ldvl,
                           MKL_Complex16* vr, long long int ldvr,
                           long long int mm, long long int* m );

long long int LAPACKE_strexc( int matrix_layout, char compq, long long int n, float* t,
                           long long int ldt, float* q, long long int ldq,
                           long long int* ifst, long long int* ilst );
long long int LAPACKE_dtrexc( int matrix_layout, char compq, long long int n,
                           double* t, long long int ldt, double* q, long long int ldq,
                           long long int* ifst, long long int* ilst );
long long int LAPACKE_ctrexc( int matrix_layout, char compq, long long int n,
                           MKL_Complex8* t, long long int ldt,
                           MKL_Complex8* q, long long int ldq,
                           long long int ifst, long long int ilst );
long long int LAPACKE_ztrexc( int matrix_layout, char compq, long long int n,
                           MKL_Complex16* t, long long int ldt,
                           MKL_Complex16* q, long long int ldq,
                           long long int ifst, long long int ilst );

long long int LAPACKE_strrfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs, const float* a,
                           long long int lda, const float* b, long long int ldb,
                           const float* x, long long int ldx, float* ferr,
                           float* berr );
long long int LAPACKE_dtrrfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs, const double* a,
                           long long int lda, const double* b, long long int ldb,
                           const double* x, long long int ldx, double* ferr,
                           double* berr );
long long int LAPACKE_ctrrfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* b, long long int ldb,
                           const MKL_Complex8* x, long long int ldx,
                           float* ferr, float* berr );
long long int LAPACKE_ztrrfs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* b, long long int ldb,
                           const MKL_Complex16* x, long long int ldx,
                           double* ferr, double* berr );

long long int LAPACKE_strsen( int matrix_layout, char job, char compq,
                           const long long int* select, long long int n, float* t,
                           long long int ldt, float* q, long long int ldq, float* wr,
                           float* wi, long long int* m, float* s, float* sep );
long long int LAPACKE_dtrsen( int matrix_layout, char job, char compq,
                           const long long int* select, long long int n,
                           double* t, long long int ldt, double* q, long long int ldq,
                           double* wr, double* wi, long long int* m, double* s,
                           double* sep );
long long int LAPACKE_ctrsen( int matrix_layout, char job, char compq,
                           const long long int* select, long long int n,
                           MKL_Complex8* t, long long int ldt,
                           MKL_Complex8* q, long long int ldq,
                           MKL_Complex8* w, long long int* m, float* s,
                           float* sep );
long long int LAPACKE_ztrsen( int matrix_layout, char job, char compq,
                           const long long int* select, long long int n,
                           MKL_Complex16* t, long long int ldt,
                           MKL_Complex16* q, long long int ldq,
                           MKL_Complex16* w, long long int* m, double* s,
                           double* sep );

long long int LAPACKE_strsna( int matrix_layout, char job, char howmny,
                           const long long int* select, long long int n,
                           const float* t, long long int ldt, const float* vl,
                           long long int ldvl, const float* vr, long long int ldvr,
                           float* s, float* sep, long long int mm, long long int* m );
long long int LAPACKE_dtrsna( int matrix_layout, char job, char howmny,
                           const long long int* select, long long int n,
                           const double* t, long long int ldt, const double* vl,
                           long long int ldvl, const double* vr, long long int ldvr,
                           double* s, double* sep, long long int mm,
                           long long int* m );
long long int LAPACKE_ctrsna( int matrix_layout, char job, char howmny,
                           const long long int* select, long long int n,
                           const MKL_Complex8* t, long long int ldt,
                           const MKL_Complex8* vl, long long int ldvl,
                           const MKL_Complex8* vr, long long int ldvr,
                           float* s, float* sep, long long int mm, long long int* m );
long long int LAPACKE_ztrsna( int matrix_layout, char job, char howmny,
                           const long long int* select, long long int n,
                           const MKL_Complex16* t, long long int ldt,
                           const MKL_Complex16* vl, long long int ldvl,
                           const MKL_Complex16* vr, long long int ldvr,
                           double* s, double* sep, long long int mm,
                           long long int* m );

long long int LAPACKE_strsyl( int matrix_layout, char trana, char tranb,
                           long long int isgn, long long int m, long long int n,
                           const float* a, long long int lda, const float* b,
                           long long int ldb, float* c, long long int ldc,
                           float* scale );
long long int LAPACKE_dtrsyl( int matrix_layout, char trana, char tranb,
                           long long int isgn, long long int m, long long int n,
                           const double* a, long long int lda, const double* b,
                           long long int ldb, double* c, long long int ldc,
                           double* scale );
long long int LAPACKE_ctrsyl( int matrix_layout, char trana, char tranb,
                           long long int isgn, long long int m, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* b, long long int ldb,
                           MKL_Complex8* c, long long int ldc,
                           float* scale );
long long int LAPACKE_ztrsyl( int matrix_layout, char trana, char tranb,
                           long long int isgn, long long int m, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* b, long long int ldb,
                           MKL_Complex16* c, long long int ldc,
                           double* scale );

long long int LAPACKE_strtri( int matrix_layout, char uplo, char diag, long long int n,
                           float* a, long long int lda );
long long int LAPACKE_dtrtri( int matrix_layout, char uplo, char diag, long long int n,
                           double* a, long long int lda );
long long int LAPACKE_ctrtri( int matrix_layout, char uplo, char diag, long long int n,
                           MKL_Complex8* a, long long int lda );
long long int LAPACKE_ztrtri( int matrix_layout, char uplo, char diag, long long int n,
                           MKL_Complex16* a, long long int lda );

long long int LAPACKE_strtrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs, const float* a,
                           long long int lda, float* b, long long int ldb );
long long int LAPACKE_dtrtrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs, const double* a,
                           long long int lda, double* b, long long int ldb );
long long int LAPACKE_ctrtrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs,
                           const MKL_Complex8* a, long long int lda,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_ztrtrs( int matrix_layout, char uplo, char trans, char diag,
                           long long int n, long long int nrhs,
                           const MKL_Complex16* a, long long int lda,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_strttf( int matrix_layout, char transr, char uplo,
                           long long int n, const float* a, long long int lda,
                           float* arf );
long long int LAPACKE_dtrttf( int matrix_layout, char transr, char uplo,
                           long long int n, const double* a, long long int lda,
                           double* arf );
long long int LAPACKE_ctrttf( int matrix_layout, char transr, char uplo,
                           long long int n, const MKL_Complex8* a,
                           long long int lda, MKL_Complex8* arf );
long long int LAPACKE_ztrttf( int matrix_layout, char transr, char uplo,
                           long long int n, const MKL_Complex16* a,
                           long long int lda, MKL_Complex16* arf );

long long int LAPACKE_strttp( int matrix_layout, char uplo, long long int n,
                           const float* a, long long int lda, float* ap );
long long int LAPACKE_dtrttp( int matrix_layout, char uplo, long long int n,
                           const double* a, long long int lda, double* ap );
long long int LAPACKE_ctrttp( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           MKL_Complex8* ap );
long long int LAPACKE_ztrttp( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           MKL_Complex16* ap );

long long int LAPACKE_stzrzf( int matrix_layout, long long int m, long long int n,
                           float* a, long long int lda, float* tau );
long long int LAPACKE_dtzrzf( int matrix_layout, long long int m, long long int n,
                           double* a, long long int lda, double* tau );
long long int LAPACKE_ctzrzf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex8* a, long long int lda,
                           MKL_Complex8* tau );
long long int LAPACKE_ztzrzf( int matrix_layout, long long int m, long long int n,
                           MKL_Complex16* a, long long int lda,
                           MKL_Complex16* tau );

long long int LAPACKE_cunbdb( int matrix_layout, char trans, char signs,
                           long long int m, long long int p, long long int q,
                           MKL_Complex8* x11, long long int ldx11,
                           MKL_Complex8* x12, long long int ldx12,
                           MKL_Complex8* x21, long long int ldx21,
                           MKL_Complex8* x22, long long int ldx22,
                           float* theta, float* phi,
                           MKL_Complex8* taup1,
                           MKL_Complex8* taup2,
                           MKL_Complex8* tauq1,
                           MKL_Complex8* tauq2 );
long long int LAPACKE_zunbdb( int matrix_layout, char trans, char signs,
                           long long int m, long long int p, long long int q,
                           MKL_Complex16* x11, long long int ldx11,
                           MKL_Complex16* x12, long long int ldx12,
                           MKL_Complex16* x21, long long int ldx21,
                           MKL_Complex16* x22, long long int ldx22,
                           double* theta, double* phi,
                           MKL_Complex16* taup1,
                           MKL_Complex16* taup2,
                           MKL_Complex16* tauq1,
                           MKL_Complex16* tauq2 );

long long int LAPACKE_cuncsd( int matrix_layout, char jobu1, char jobu2,
                           char jobv1t, char jobv2t, char trans, char signs,
                           long long int m, long long int p, long long int q,
                           MKL_Complex8* x11, long long int ldx11,
                           MKL_Complex8* x12, long long int ldx12,
                           MKL_Complex8* x21, long long int ldx21,
                           MKL_Complex8* x22, long long int ldx22,
                           float* theta, MKL_Complex8* u1,
                           long long int ldu1, MKL_Complex8* u2,
                           long long int ldu2, MKL_Complex8* v1t,
                           long long int ldv1t, MKL_Complex8* v2t,
                           long long int ldv2t );
long long int LAPACKE_zuncsd( int matrix_layout, char jobu1, char jobu2,
                           char jobv1t, char jobv2t, char trans, char signs,
                           long long int m, long long int p, long long int q,
                           MKL_Complex16* x11, long long int ldx11,
                           MKL_Complex16* x12, long long int ldx12,
                           MKL_Complex16* x21, long long int ldx21,
                           MKL_Complex16* x22, long long int ldx22,
                           double* theta, MKL_Complex16* u1,
                           long long int ldu1, MKL_Complex16* u2,
                           long long int ldu2, MKL_Complex16* v1t,
                           long long int ldv1t, MKL_Complex16* v2t,
                           long long int ldv2t );

long long int LAPACKE_cungbr( int matrix_layout, char vect, long long int m,
                           long long int n, long long int k, MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* tau );
long long int LAPACKE_zungbr( int matrix_layout, char vect, long long int m,
                           long long int n, long long int k, MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* tau );

long long int LAPACKE_cunghr( int matrix_layout, long long int n, long long int ilo,
                           long long int ihi, MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* tau );
long long int LAPACKE_zunghr( int matrix_layout, long long int n, long long int ilo,
                           long long int ihi, MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* tau );

long long int LAPACKE_cunglq( int matrix_layout, long long int m, long long int n,
                           long long int k, MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* tau );
long long int LAPACKE_zunglq( int matrix_layout, long long int m, long long int n,
                           long long int k, MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* tau );

long long int LAPACKE_cungql( int matrix_layout, long long int m, long long int n,
                           long long int k, MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* tau );
long long int LAPACKE_zungql( int matrix_layout, long long int m, long long int n,
                           long long int k, MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* tau );

long long int LAPACKE_cungqr( int matrix_layout, long long int m, long long int n,
                           long long int k, MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* tau );
long long int LAPACKE_zungqr( int matrix_layout, long long int m, long long int n,
                           long long int k, MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* tau );

long long int LAPACKE_cungrq( int matrix_layout, long long int m, long long int n,
                           long long int k, MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* tau );
long long int LAPACKE_zungrq( int matrix_layout, long long int m, long long int n,
                           long long int k, MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* tau );

long long int LAPACKE_cungtr( int matrix_layout, char uplo, long long int n,
                           MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* tau );
long long int LAPACKE_zungtr( int matrix_layout, char uplo, long long int n,
                           MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* tau );

long long int LAPACKE_cunmbr( int matrix_layout, char vect, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* tau,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zunmbr( int matrix_layout, char vect, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* tau,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_cunmhr( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int ilo,
                           long long int ihi, const MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* tau,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zunmhr( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int ilo,
                           long long int ihi, const MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* tau,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_cunmlq( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* tau,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zunmlq( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* tau,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_cunmql( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* tau,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zunmql( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* tau,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_cunmqr( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* tau,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zunmqr( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* tau,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_cunmrq( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* tau,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zunmrq( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* tau,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_cunmrz( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           long long int l, const MKL_Complex8* a,
                           long long int lda, const MKL_Complex8* tau,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zunmrz( int matrix_layout, char side, char trans,
                           long long int m, long long int n, long long int k,
                           long long int l, const MKL_Complex16* a,
                           long long int lda, const MKL_Complex16* tau,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_cunmtr( int matrix_layout, char side, char uplo, char trans,
                           long long int m, long long int n,
                           const MKL_Complex8* a, long long int lda,
                           const MKL_Complex8* tau,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zunmtr( int matrix_layout, char side, char uplo, char trans,
                           long long int m, long long int n,
                           const MKL_Complex16* a, long long int lda,
                           const MKL_Complex16* tau,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_cupgtr( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex8* ap,
                           const MKL_Complex8* tau,
                           MKL_Complex8* q, long long int ldq );
long long int LAPACKE_zupgtr( int matrix_layout, char uplo, long long int n,
                           const MKL_Complex16* ap,
                           const MKL_Complex16* tau,
                           MKL_Complex16* q, long long int ldq );

long long int LAPACKE_cupmtr( int matrix_layout, char side, char uplo, char trans,
                           long long int m, long long int n,
                           const MKL_Complex8* ap,
                           const MKL_Complex8* tau,
                           MKL_Complex8* c, long long int ldc );
long long int LAPACKE_zupmtr( int matrix_layout, char side, char uplo, char trans,
                           long long int m, long long int n,
                           const MKL_Complex16* ap,
                           const MKL_Complex16* tau,
                           MKL_Complex16* c, long long int ldc );

long long int LAPACKE_csysv_rook( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex8* a,
                               long long int lda, long long int* ipiv,
                               MKL_Complex8* b, long long int ldb );
long long int LAPACKE_ssysv_rook( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, float* a, long long int lda,
                               long long int* ipiv, float* b, long long int ldb );
long long int LAPACKE_dsysv_rook( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, double* a, long long int lda,
                               long long int* ipiv, double* b, long long int ldb );
long long int LAPACKE_zsysv_rook( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex16* a,
                               long long int lda, long long int* ipiv,
                               MKL_Complex16* b, long long int ldb );

long long int LAPACKE_clacn2( long long int n, MKL_Complex8* v,
                           MKL_Complex8* x,
                           float* est, long long int* kase, long long int* isave );
long long int LAPACKE_dlacn2( long long int n, double* v, double* x, long long int* isgn,
                           double* est, long long int* kase, long long int* isave );
long long int LAPACKE_slacn2( long long int n, float* v, float* x, long long int* isgn,
                           float* est, long long int* kase, long long int* isave );
long long int LAPACKE_zlacn2( long long int n, MKL_Complex16* v,
                           MKL_Complex16* x,
                           double* est, long long int* kase, long long int* isave );

long long int LAPACKE_clacp2( int matrix_layout, char uplo, long long int m,
                           long long int n, const float* a, long long int lda,
                           MKL_Complex8* b, long long int ldb );
long long int LAPACKE_zlacp2( int matrix_layout, char uplo, long long int m,
                           long long int n, const double* a, long long int lda,
                           MKL_Complex16* b, long long int ldb );

long long int LAPACKE_csyr( int matrix_layout, char uplo, long long int n,
                             MKL_Complex8 alpha,
                             const MKL_Complex8* x, long long int incx,
                             MKL_Complex8* a, long long int lda );
long long int LAPACKE_zsyr( int matrix_layout, char uplo, long long int n,
                             MKL_Complex16 alpha,
                             const MKL_Complex16* x, long long int incx,
                             MKL_Complex16* a, long long int lda );

long long int LAPACKE_sbbcsd_work( int matrix_layout, char jobu1, char jobu2,
                                char jobv1t, char jobv2t, char trans,
                                long long int m, long long int p, long long int q,
                                float* theta, float* phi, float* u1,
                                long long int ldu1, float* u2, long long int ldu2,
                                float* v1t, long long int ldv1t, float* v2t,
                                long long int ldv2t, float* b11d, float* b11e,
                                float* b12d, float* b12e, float* b21d,
                                float* b21e, float* b22d, float* b22e,
                                float* work, long long int lwork );

long long int LAPACKE_dbbcsd_work( int matrix_layout, char jobu1, char jobu2,
                                char jobv1t, char jobv2t, char trans,
                                long long int m, long long int p, long long int q,
                                double* theta, double* phi, double* u1,
                                long long int ldu1, double* u2, long long int ldu2,
                                double* v1t, long long int ldv1t, double* v2t,
                                long long int ldv2t, double* b11d, double* b11e,
                                double* b12d, double* b12e, double* b21d,
                                double* b21e, double* b22d, double* b22e,
                                double* work, long long int lwork );

long long int LAPACKE_cbbcsd_work( int matrix_layout, char jobu1, char jobu2,
                                char jobv1t, char jobv2t, char trans,
                                long long int m, long long int p, long long int q,
                                float* theta, float* phi,
                                MKL_Complex8* u1, long long int ldu1,
                                MKL_Complex8* u2, long long int ldu2,
                                MKL_Complex8* v1t, long long int ldv1t,
                                MKL_Complex8* v2t, long long int ldv2t,
                                float* b11d, float* b11e, float* b12d,
                                float* b12e, float* b21d, float* b21e,
                                float* b22d, float* b22e, float* rwork,
                                long long int lrwork );

long long int LAPACKE_zbbcsd_work( int matrix_layout, char jobu1, char jobu2,
                                char jobv1t, char jobv2t, char trans,
                                long long int m, long long int p, long long int q,
                                double* theta, double* phi,
                                MKL_Complex16* u1, long long int ldu1,
                                MKL_Complex16* u2, long long int ldu2,
                                MKL_Complex16* v1t, long long int ldv1t,
                                MKL_Complex16* v2t, long long int ldv2t,
                                double* b11d, double* b11e, double* b12d,
                                double* b12e, double* b21d, double* b21e,
                                double* b22d, double* b22e, double* rwork,
                                long long int lrwork );


long long int LAPACKE_sbdsdc_work( int matrix_layout, char uplo, char compq,
                                long long int n, float* d, float* e, float* u,
                                long long int ldu, float* vt, long long int ldvt,
                                float* q, long long int* iq, float* work,
                                long long int* iwork );

long long int LAPACKE_dbdsdc_work( int matrix_layout, char uplo, char compq,
                                long long int n, double* d, double* e, double* u,
                                long long int ldu, double* vt, long long int ldvt,
                                double* q, long long int* iq, double* work,
                                long long int* iwork );


long long int LAPACKE_sbdsqr_work( int matrix_layout, char uplo, long long int n,
                                long long int ncvt, long long int nru, long long int ncc,
                                float* d, float* e, float* vt, long long int ldvt,
                                float* u, long long int ldu, float* c,
                                long long int ldc, float* work );

long long int LAPACKE_dbdsqr_work( int matrix_layout, char uplo, long long int n,
                                long long int ncvt, long long int nru, long long int ncc,
                                double* d, double* e, double* vt,
                                long long int ldvt, double* u, long long int ldu,
                                double* c, long long int ldc, double* work );

long long int LAPACKE_cbdsqr_work( int matrix_layout, char uplo, long long int n,
                                long long int ncvt, long long int nru, long long int ncc,
                                float* d, float* e, MKL_Complex8* vt,
                                long long int ldvt, MKL_Complex8* u,
                                long long int ldu, MKL_Complex8* c,
                                long long int ldc, float* work );

long long int LAPACKE_zbdsqr_work( int matrix_layout, char uplo, long long int n,
                                long long int ncvt, long long int nru, long long int ncc,
                                double* d, double* e, MKL_Complex16* vt,
                                long long int ldvt, MKL_Complex16* u,
                                long long int ldu, MKL_Complex16* c,
                                long long int ldc, double* work );


long long int LAPACKE_sdisna_work( char job, long long int m, long long int n,
                                const float* d, float* sep );

long long int LAPACKE_ddisna_work( char job, long long int m, long long int n,
                                const double* d, double* sep );


long long int LAPACKE_sgbbrd_work( int matrix_layout, char vect, long long int m,
                                long long int n, long long int ncc, long long int kl,
                                long long int ku, float* ab, long long int ldab,
                                float* d, float* e, float* q, long long int ldq,
                                float* pt, long long int ldpt, float* c,
                                long long int ldc, float* work );

long long int LAPACKE_dgbbrd_work( int matrix_layout, char vect, long long int m,
                                long long int n, long long int ncc, long long int kl,
                                long long int ku, double* ab, long long int ldab,
                                double* d, double* e, double* q, long long int ldq,
                                double* pt, long long int ldpt, double* c,
                                long long int ldc, double* work );

long long int LAPACKE_cgbbrd_work( int matrix_layout, char vect, long long int m,
                                long long int n, long long int ncc, long long int kl,
                                long long int ku, MKL_Complex8* ab,
                                long long int ldab, float* d, float* e,
                                MKL_Complex8* q, long long int ldq,
                                MKL_Complex8* pt, long long int ldpt,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zgbbrd_work( int matrix_layout, char vect, long long int m,
                                long long int n, long long int ncc, long long int kl,
                                long long int ku, MKL_Complex16* ab,
                                long long int ldab, double* d, double* e,
                                MKL_Complex16* q, long long int ldq,
                                MKL_Complex16* pt, long long int ldpt,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sgbcon_work( int matrix_layout, char norm, long long int n,
                                long long int kl, long long int ku, const float* ab,
                                long long int ldab, const long long int* ipiv,
                                float anorm, float* rcond, float* work,
                                long long int* iwork );

long long int LAPACKE_dgbcon_work( int matrix_layout, char norm, long long int n,
                                long long int kl, long long int ku, const double* ab,
                                long long int ldab, const long long int* ipiv,
                                double anorm, double* rcond, double* work,
                                long long int* iwork );

long long int LAPACKE_cgbcon_work( int matrix_layout, char norm, long long int n,
                                long long int kl, long long int ku,
                                const MKL_Complex8* ab, long long int ldab,
                                const long long int* ipiv, float anorm,
                                float* rcond, MKL_Complex8* work,
                                float* rwork );

long long int LAPACKE_zgbcon_work( int matrix_layout, char norm, long long int n,
                                long long int kl, long long int ku,
                                const MKL_Complex16* ab,
                                long long int ldab, const long long int* ipiv,
                                double anorm, double* rcond,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sgbequ_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku, const float* ab,
                                long long int ldab, float* r, float* c,
                                float* rowcnd, float* colcnd, float* amax );

long long int LAPACKE_dgbequ_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku, const double* ab,
                                long long int ldab, double* r, double* c,
                                double* rowcnd, double* colcnd, double* amax );

long long int LAPACKE_cgbequ_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku,
                                const MKL_Complex8* ab, long long int ldab,
                                float* r, float* c, float* rowcnd,
                                float* colcnd, float* amax );

long long int LAPACKE_zgbequ_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku,
                                const MKL_Complex16* ab,
                                long long int ldab, double* r, double* c,
                                double* rowcnd, double* colcnd, double* amax );


long long int LAPACKE_sgbequb_work( int matrix_layout, long long int m, long long int n,
                                 long long int kl, long long int ku, const float* ab,
                                 long long int ldab, float* r, float* c,
                                 float* rowcnd, float* colcnd, float* amax );

long long int LAPACKE_dgbequb_work( int matrix_layout, long long int m, long long int n,
                                 long long int kl, long long int ku, const double* ab,
                                 long long int ldab, double* r, double* c,
                                 double* rowcnd, double* colcnd, double* amax );

long long int LAPACKE_cgbequb_work( int matrix_layout, long long int m, long long int n,
                                 long long int kl, long long int ku,
                                 const MKL_Complex8* ab,
                                 long long int ldab, float* r, float* c,
                                 float* rowcnd, float* colcnd, float* amax );

long long int LAPACKE_zgbequb_work( int matrix_layout, long long int m, long long int n,
                                 long long int kl, long long int ku,
                                 const MKL_Complex16* ab,
                                 long long int ldab, double* r, double* c,
                                 double* rowcnd, double* colcnd, double* amax );


long long int LAPACKE_sgbrfs_work( int matrix_layout, char trans, long long int n,
                                long long int kl, long long int ku, long long int nrhs,
                                const float* ab, long long int ldab,
                                const float* afb, long long int ldafb,
                                const long long int* ipiv, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* ferr, float* berr, float* work,
                                long long int* iwork );

long long int LAPACKE_dgbrfs_work( int matrix_layout, char trans, long long int n,
                                long long int kl, long long int ku, long long int nrhs,
                                const double* ab, long long int ldab,
                                const double* afb, long long int ldafb,
                                const long long int* ipiv, const double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* ferr, double* berr, double* work,
                                long long int* iwork );

long long int LAPACKE_cgbrfs_work( int matrix_layout, char trans, long long int n,
                                long long int kl, long long int ku, long long int nrhs,
                                const MKL_Complex8* ab, long long int ldab,
                                const MKL_Complex8* afb,
                                long long int ldafb, const long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zgbrfs_work( int matrix_layout, char trans, long long int n,
                                long long int kl, long long int ku, long long int nrhs,
                                const MKL_Complex16* ab,
                                long long int ldab,
                                const MKL_Complex16* afb,
                                long long int ldafb, const long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sgbrfsx_work( int matrix_layout, char trans, char equed,
                                 long long int n, long long int kl, long long int ku,
                                 long long int nrhs, const float* ab,
                                 long long int ldab, const float* afb,
                                 long long int ldafb, const long long int* ipiv,
                                 const float* r, const float* c, const float* b,
                                 long long int ldb, float* x, long long int ldx,
                                 float* rcond, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, float* work,
                                 long long int* iwork );

long long int LAPACKE_dgbrfsx_work( int matrix_layout, char trans, char equed,
                                 long long int n, long long int kl, long long int ku,
                                 long long int nrhs, const double* ab,
                                 long long int ldab, const double* afb,
                                 long long int ldafb, const long long int* ipiv,
                                 const double* r, const double* c,
                                 const double* b, long long int ldb, double* x,
                                 long long int ldx, double* rcond, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, double* work,
                                 long long int* iwork );

long long int LAPACKE_cgbrfsx_work( int matrix_layout, char trans, char equed,
                                 long long int n, long long int kl, long long int ku,
                                 long long int nrhs,
                                 const MKL_Complex8* ab,
                                 long long int ldab,
                                 const MKL_Complex8* afb,
                                 long long int ldafb, const long long int* ipiv,
                                 const float* r, const float* c,
                                 const MKL_Complex8* b, long long int ldb,
                                 MKL_Complex8* x, long long int ldx,
                                 float* rcond, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, MKL_Complex8* work,
                                 float* rwork );

long long int LAPACKE_zgbrfsx_work( int matrix_layout, char trans, char equed,
                                 long long int n, long long int kl, long long int ku,
                                 long long int nrhs,
                                 const MKL_Complex16* ab,
                                 long long int ldab,
                                 const MKL_Complex16* afb,
                                 long long int ldafb, const long long int* ipiv,
                                 const double* r, const double* c,
                                 const MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* x, long long int ldx,
                                 double* rcond, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, MKL_Complex16* work,
                                 double* rwork );


long long int LAPACKE_sgbsv_work( int matrix_layout, long long int n, long long int kl,
                               long long int ku, long long int nrhs, float* ab,
                               long long int ldab, long long int* ipiv, float* b,
                               long long int ldb );

long long int LAPACKE_dgbsv_work( int matrix_layout, long long int n, long long int kl,
                               long long int ku, long long int nrhs, double* ab,
                               long long int ldab, long long int* ipiv, double* b,
                               long long int ldb );

long long int LAPACKE_cgbsv_work( int matrix_layout, long long int n, long long int kl,
                               long long int ku, long long int nrhs,
                               MKL_Complex8* ab, long long int ldab,
                               long long int* ipiv, MKL_Complex8* b,
                               long long int ldb );

long long int LAPACKE_zgbsv_work( int matrix_layout, long long int n, long long int kl,
                               long long int ku, long long int nrhs,
                               MKL_Complex16* ab, long long int ldab,
                               long long int* ipiv, MKL_Complex16* b,
                               long long int ldb );


long long int LAPACKE_sgbsvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int kl, long long int ku,
                                long long int nrhs, float* ab, long long int ldab,
                                float* afb, long long int ldafb, long long int* ipiv,
                                char* equed, float* r, float* c, float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                float* work, long long int* iwork );

long long int LAPACKE_dgbsvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int kl, long long int ku,
                                long long int nrhs, double* ab, long long int ldab,
                                double* afb, long long int ldafb, long long int* ipiv,
                                char* equed, double* r, double* c, double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                double* work, long long int* iwork );

long long int LAPACKE_cgbsvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int kl, long long int ku,
                                long long int nrhs, MKL_Complex8* ab,
                                long long int ldab, MKL_Complex8* afb,
                                long long int ldafb, long long int* ipiv, char* equed,
                                float* r, float* c, MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* x,
                                long long int ldx, float* rcond, float* ferr,
                                float* berr, MKL_Complex8* work,
                                float* rwork );

long long int LAPACKE_zgbsvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int kl, long long int ku,
                                long long int nrhs, MKL_Complex16* ab,
                                long long int ldab, MKL_Complex16* afb,
                                long long int ldafb, long long int* ipiv, char* equed,
                                double* r, double* c, MKL_Complex16* b,
                                long long int ldb, MKL_Complex16* x,
                                long long int ldx, double* rcond, double* ferr,
                                double* berr, MKL_Complex16* work,
                                double* rwork );


long long int LAPACKE_sgbsvxx_work( int matrix_layout, char fact, char trans,
                                 long long int n, long long int kl, long long int ku,
                                 long long int nrhs, float* ab, long long int ldab,
                                 float* afb, long long int ldafb, long long int* ipiv,
                                 char* equed, float* r, float* c, float* b,
                                 long long int ldb, float* x, long long int ldx,
                                 float* rcond, float* rpvgrw, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, float* work,
                                 long long int* iwork );

long long int LAPACKE_dgbsvxx_work( int matrix_layout, char fact, char trans,
                                 long long int n, long long int kl, long long int ku,
                                 long long int nrhs, double* ab, long long int ldab,
                                 double* afb, long long int ldafb,
                                 long long int* ipiv, char* equed, double* r,
                                 double* c, double* b, long long int ldb,
                                 double* x, long long int ldx, double* rcond,
                                 double* rpvgrw, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, double* work,
                                 long long int* iwork );

long long int LAPACKE_cgbsvxx_work( int matrix_layout, char fact, char trans,
                                 long long int n, long long int kl, long long int ku,
                                 long long int nrhs, MKL_Complex8* ab,
                                 long long int ldab, MKL_Complex8* afb,
                                 long long int ldafb, long long int* ipiv,
                                 char* equed, float* r, float* c,
                                 MKL_Complex8* b, long long int ldb,
                                 MKL_Complex8* x, long long int ldx,
                                 float* rcond, float* rpvgrw, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, MKL_Complex8* work,
                                 float* rwork );

long long int LAPACKE_zgbsvxx_work( int matrix_layout, char fact, char trans,
                                 long long int n, long long int kl, long long int ku,
                                 long long int nrhs, MKL_Complex16* ab,
                                 long long int ldab, MKL_Complex16* afb,
                                 long long int ldafb, long long int* ipiv,
                                 char* equed, double* r, double* c,
                                 MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* x, long long int ldx,
                                 double* rcond, double* rpvgrw, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, MKL_Complex16* work,
                                 double* rwork );


long long int LAPACKE_sgbtrf_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku, float* ab,
                                long long int ldab, long long int* ipiv );

long long int LAPACKE_dgbtrf_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku, double* ab,
                                long long int ldab, long long int* ipiv );

long long int LAPACKE_cgbtrf_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku,
                                MKL_Complex8* ab, long long int ldab,
                                long long int* ipiv );

long long int LAPACKE_zgbtrf_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku,
                                MKL_Complex16* ab, long long int ldab,
                                long long int* ipiv );


long long int LAPACKE_sgbtrs_work( int matrix_layout, char trans, long long int n,
                                long long int kl, long long int ku, long long int nrhs,
                                const float* ab, long long int ldab,
                                const long long int* ipiv, float* b,
                                long long int ldb );

long long int LAPACKE_dgbtrs_work( int matrix_layout, char trans, long long int n,
                                long long int kl, long long int ku, long long int nrhs,
                                const double* ab, long long int ldab,
                                const long long int* ipiv, double* b,
                                long long int ldb );

long long int LAPACKE_cgbtrs_work( int matrix_layout, char trans, long long int n,
                                long long int kl, long long int ku, long long int nrhs,
                                const MKL_Complex8* ab, long long int ldab,
                                const long long int* ipiv, MKL_Complex8* b,
                                long long int ldb );

long long int LAPACKE_zgbtrs_work( int matrix_layout, char trans, long long int n,
                                long long int kl, long long int ku, long long int nrhs,
                                const MKL_Complex16* ab,
                                long long int ldab, const long long int* ipiv,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_sgebak_work( int matrix_layout, char job, char side,
                                long long int n, long long int ilo, long long int ihi,
                                const float* scale, long long int m, float* v,
                                long long int ldv );

long long int LAPACKE_dgebak_work( int matrix_layout, char job, char side,
                                long long int n, long long int ilo, long long int ihi,
                                const double* scale, long long int m, double* v,
                                long long int ldv );

long long int LAPACKE_cgebak_work( int matrix_layout, char job, char side,
                                long long int n, long long int ilo, long long int ihi,
                                const float* scale, long long int m,
                                MKL_Complex8* v, long long int ldv );

long long int LAPACKE_zgebak_work( int matrix_layout, char job, char side,
                                long long int n, long long int ilo, long long int ihi,
                                const double* scale, long long int m,
                                MKL_Complex16* v, long long int ldv );


long long int LAPACKE_sgebal_work( int matrix_layout, char job, long long int n,
                                float* a, long long int lda, long long int* ilo,
                                long long int* ihi, float* scale );

long long int LAPACKE_dgebal_work( int matrix_layout, char job, long long int n,
                                double* a, long long int lda, long long int* ilo,
                                long long int* ihi, double* scale );

long long int LAPACKE_cgebal_work( int matrix_layout, char job, long long int n,
                                MKL_Complex8* a, long long int lda,
                                long long int* ilo, long long int* ihi,
                                float* scale );

long long int LAPACKE_zgebal_work( int matrix_layout, char job, long long int n,
                                MKL_Complex16* a, long long int lda,
                                long long int* ilo, long long int* ihi,
                                double* scale );


long long int LAPACKE_sgebrd_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, float* d, float* e,
                                float* tauq, float* taup, float* work,
                                long long int lwork );

long long int LAPACKE_dgebrd_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, double* d, double* e,
                                double* tauq, double* taup, double* work,
                                long long int lwork );

long long int LAPACKE_cgebrd_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                float* d, float* e, MKL_Complex8* tauq,
                                MKL_Complex8* taup,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgebrd_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                double* d, double* e,
                                MKL_Complex16* tauq,
                                MKL_Complex16* taup,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sgecon_work( int matrix_layout, char norm, long long int n,
                                const float* a, long long int lda, float anorm,
                                float* rcond, float* work, long long int* iwork );

long long int LAPACKE_dgecon_work( int matrix_layout, char norm, long long int n,
                                const double* a, long long int lda, double anorm,
                                double* rcond, double* work,
                                long long int* iwork );

long long int LAPACKE_cgecon_work( int matrix_layout, char norm, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                float anorm, float* rcond,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zgecon_work( int matrix_layout, char norm, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                double anorm, double* rcond,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sgeequ_work( int matrix_layout, long long int m, long long int n,
                                const float* a, long long int lda, float* r,
                                float* c, float* rowcnd, float* colcnd,
                                float* amax );

long long int LAPACKE_dgeequ_work( int matrix_layout, long long int m, long long int n,
                                const double* a, long long int lda, double* r,
                                double* c, double* rowcnd, double* colcnd,
                                double* amax );

long long int LAPACKE_cgeequ_work( int matrix_layout, long long int m, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                float* r, float* c, float* rowcnd,
                                float* colcnd, float* amax );

long long int LAPACKE_zgeequ_work( int matrix_layout, long long int m, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                double* r, double* c, double* rowcnd,
                                double* colcnd, double* amax );


long long int LAPACKE_sgeequb_work( int matrix_layout, long long int m, long long int n,
                                 const float* a, long long int lda, float* r,
                                 float* c, float* rowcnd, float* colcnd,
                                 float* amax );

long long int LAPACKE_dgeequb_work( int matrix_layout, long long int m, long long int n,
                                 const double* a, long long int lda, double* r,
                                 double* c, double* rowcnd, double* colcnd,
                                 double* amax );

long long int LAPACKE_cgeequb_work( int matrix_layout, long long int m, long long int n,
                                 const MKL_Complex8* a, long long int lda,
                                 float* r, float* c, float* rowcnd,
                                 float* colcnd, float* amax );

long long int LAPACKE_zgeequb_work( int matrix_layout, long long int m, long long int n,
                                 const MKL_Complex16* a, long long int lda,
                                 double* r, double* c, double* rowcnd,
                                 double* colcnd, double* amax );


long long int LAPACKE_sgees_work( int matrix_layout, char jobvs, char sort,
                               LAPACK_S_SELECT2 select, long long int n, float* a,
                               long long int lda, long long int* sdim, float* wr,
                               float* wi, float* vs, long long int ldvs,
                               float* work, long long int lwork,
                               long long int* bwork );

long long int LAPACKE_dgees_work( int matrix_layout, char jobvs, char sort,
                               LAPACK_D_SELECT2 select, long long int n, double* a,
                               long long int lda, long long int* sdim, double* wr,
                               double* wi, double* vs, long long int ldvs,
                               double* work, long long int lwork,
                               long long int* bwork );

long long int LAPACKE_cgees_work( int matrix_layout, char jobvs, char sort,
                               LAPACK_C_SELECT1 select, long long int n,
                               MKL_Complex8* a, long long int lda,
                               long long int* sdim, MKL_Complex8* w,
                               MKL_Complex8* vs, long long int ldvs,
                               MKL_Complex8* work, long long int lwork,
                               float* rwork, long long int* bwork );

long long int LAPACKE_zgees_work( int matrix_layout, char jobvs, char sort,
                               LAPACK_Z_SELECT1 select, long long int n,
                               MKL_Complex16* a, long long int lda,
                               long long int* sdim, MKL_Complex16* w,
                               MKL_Complex16* vs, long long int ldvs,
                               MKL_Complex16* work, long long int lwork,
                               double* rwork, long long int* bwork );


long long int LAPACKE_sgeesx_work( int matrix_layout, char jobvs, char sort,
                                LAPACK_S_SELECT2 select, char sense,
                                long long int n, float* a, long long int lda,
                                long long int* sdim, float* wr, float* wi,
                                float* vs, long long int ldvs, float* rconde,
                                float* rcondv, float* work, long long int lwork,
                                long long int* iwork, long long int liwork,
                                long long int* bwork );

long long int LAPACKE_dgeesx_work( int matrix_layout, char jobvs, char sort,
                                LAPACK_D_SELECT2 select, char sense,
                                long long int n, double* a, long long int lda,
                                long long int* sdim, double* wr, double* wi,
                                double* vs, long long int ldvs, double* rconde,
                                double* rcondv, double* work, long long int lwork,
                                long long int* iwork, long long int liwork,
                                long long int* bwork );

long long int LAPACKE_cgeesx_work( int matrix_layout, char jobvs, char sort,
                                LAPACK_C_SELECT1 select, char sense,
                                long long int n, MKL_Complex8* a,
                                long long int lda, long long int* sdim,
                                MKL_Complex8* w,
                                MKL_Complex8* vs, long long int ldvs,
                                float* rconde, float* rcondv,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork, long long int* bwork );

long long int LAPACKE_zgeesx_work( int matrix_layout, char jobvs, char sort,
                                LAPACK_Z_SELECT1 select, char sense,
                                long long int n, MKL_Complex16* a,
                                long long int lda, long long int* sdim,
                                MKL_Complex16* w,
                                MKL_Complex16* vs, long long int ldvs,
                                double* rconde, double* rcondv,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork, long long int* bwork );


long long int LAPACKE_sgeev_work( int matrix_layout, char jobvl, char jobvr,
                               long long int n, float* a, long long int lda,
                               float* wr, float* wi, float* vl, long long int ldvl,
                               float* vr, long long int ldvr, float* work,
                               long long int lwork );

long long int LAPACKE_dgeev_work( int matrix_layout, char jobvl, char jobvr,
                               long long int n, double* a, long long int lda,
                               double* wr, double* wi, double* vl,
                               long long int ldvl, double* vr, long long int ldvr,
                               double* work, long long int lwork );

long long int LAPACKE_cgeev_work( int matrix_layout, char jobvl, char jobvr,
                               long long int n, MKL_Complex8* a,
                               long long int lda, MKL_Complex8* w,
                               MKL_Complex8* vl, long long int ldvl,
                               MKL_Complex8* vr, long long int ldvr,
                               MKL_Complex8* work, long long int lwork,
                               float* rwork );

long long int LAPACKE_zgeev_work( int matrix_layout, char jobvl, char jobvr,
                               long long int n, MKL_Complex16* a,
                               long long int lda, MKL_Complex16* w,
                               MKL_Complex16* vl, long long int ldvl,
                               MKL_Complex16* vr, long long int ldvr,
                               MKL_Complex16* work, long long int lwork,
                               double* rwork );


long long int LAPACKE_sgeevx_work( int matrix_layout, char balanc, char jobvl,
                                char jobvr, char sense, long long int n, float* a,
                                long long int lda, float* wr, float* wi, float* vl,
                                long long int ldvl, float* vr, long long int ldvr,
                                long long int* ilo, long long int* ihi, float* scale,
                                float* abnrm, float* rconde, float* rcondv,
                                float* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_dgeevx_work( int matrix_layout, char balanc, char jobvl,
                                char jobvr, char sense, long long int n, double* a,
                                long long int lda, double* wr, double* wi,
                                double* vl, long long int ldvl, double* vr,
                                long long int ldvr, long long int* ilo,
                                long long int* ihi, double* scale, double* abnrm,
                                double* rconde, double* rcondv, double* work,
                                long long int lwork, long long int* iwork );

long long int LAPACKE_cgeevx_work( int matrix_layout, char balanc, char jobvl,
                                char jobvr, char sense, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* w,
                                MKL_Complex8* vl, long long int ldvl,
                                MKL_Complex8* vr, long long int ldvr,
                                long long int* ilo, long long int* ihi, float* scale,
                                float* abnrm, float* rconde, float* rcondv,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork );

long long int LAPACKE_zgeevx_work( int matrix_layout, char balanc, char jobvl,
                                char jobvr, char sense, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* w,
                                MKL_Complex16* vl, long long int ldvl,
                                MKL_Complex16* vr, long long int ldvr,
                                long long int* ilo, long long int* ihi, double* scale,
                                double* abnrm, double* rconde, double* rcondv,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork );


long long int LAPACKE_sgehrd_work( int matrix_layout, long long int n, long long int ilo,
                                long long int ihi, float* a, long long int lda,
                                float* tau, float* work, long long int lwork );

long long int LAPACKE_dgehrd_work( int matrix_layout, long long int n, long long int ilo,
                                long long int ihi, double* a, long long int lda,
                                double* tau, double* work, long long int lwork );

long long int LAPACKE_cgehrd_work( int matrix_layout, long long int n, long long int ilo,
                                long long int ihi, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgehrd_work( int matrix_layout, long long int n, long long int ilo,
                                long long int ihi, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sgejsv_work( int matrix_layout, char joba, char jobu,
                                char jobv, char jobr, char jobt, char jobp,
                                long long int m, long long int n, float* a,
                                long long int lda, float* sva, float* u,
                                long long int ldu, float* v, long long int ldv,
                                float* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_dgejsv_work( int matrix_layout, char joba, char jobu,
                                char jobv, char jobr, char jobt, char jobp,
                                long long int m, long long int n, double* a,
                                long long int lda, double* sva, double* u,
                                long long int ldu, double* v, long long int ldv,
                                double* work, long long int lwork,
                                long long int* iwork );


long long int LAPACKE_sgelq2_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, float* tau,
                                float* work );

long long int LAPACKE_dgelq2_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, double* tau,
                                double* work );

long long int LAPACKE_cgelq2_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* tau,
                                MKL_Complex8* work );

long long int LAPACKE_zgelq2_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* tau,
                                MKL_Complex16* work );


long long int LAPACKE_sgelqf_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, float* tau,
                                float* work, long long int lwork );

long long int LAPACKE_dgelqf_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, double* tau,
                                double* work, long long int lwork );

long long int LAPACKE_cgelqf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgelqf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sgels_work( int matrix_layout, char trans, long long int m,
                               long long int n, long long int nrhs, float* a,
                               long long int lda, float* b, long long int ldb,
                               float* work, long long int lwork );

long long int LAPACKE_dgels_work( int matrix_layout, char trans, long long int m,
                               long long int n, long long int nrhs, double* a,
                               long long int lda, double* b, long long int ldb,
                               double* work, long long int lwork );

long long int LAPACKE_cgels_work( int matrix_layout, char trans, long long int m,
                               long long int n, long long int nrhs,
                               MKL_Complex8* a, long long int lda,
                               MKL_Complex8* b, long long int ldb,
                               MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgels_work( int matrix_layout, char trans, long long int m,
                               long long int n, long long int nrhs,
                               MKL_Complex16* a, long long int lda,
                               MKL_Complex16* b, long long int ldb,
                               MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sgelsd_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, float* a, long long int lda,
                                float* b, long long int ldb, float* s, float rcond,
                                long long int* rank, float* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_dgelsd_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, double* a, long long int lda,
                                double* b, long long int ldb, double* s,
                                double rcond, long long int* rank, double* work,
                                long long int lwork, long long int* iwork );

long long int LAPACKE_cgelsd_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb, float* s, float rcond,
                                long long int* rank, MKL_Complex8* work,
                                long long int lwork, float* rwork,
                                long long int* iwork );

long long int LAPACKE_zgelsd_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb, double* s, double rcond,
                                long long int* rank, MKL_Complex16* work,
                                long long int lwork, double* rwork,
                                long long int* iwork );


long long int LAPACKE_sgelss_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, float* a, long long int lda,
                                float* b, long long int ldb, float* s, float rcond,
                                long long int* rank, float* work,
                                long long int lwork );

long long int LAPACKE_dgelss_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, double* a, long long int lda,
                                double* b, long long int ldb, double* s,
                                double rcond, long long int* rank, double* work,
                                long long int lwork );

long long int LAPACKE_cgelss_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb, float* s, float rcond,
                                long long int* rank, MKL_Complex8* work,
                                long long int lwork, float* rwork );

long long int LAPACKE_zgelss_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb, double* s, double rcond,
                                long long int* rank, MKL_Complex16* work,
                                long long int lwork, double* rwork );


long long int LAPACKE_sgelsy_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, float* a, long long int lda,
                                float* b, long long int ldb, long long int* jpvt,
                                float rcond, long long int* rank, float* work,
                                long long int lwork );

long long int LAPACKE_dgelsy_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, double* a, long long int lda,
                                double* b, long long int ldb, long long int* jpvt,
                                double rcond, long long int* rank, double* work,
                                long long int lwork );

long long int LAPACKE_cgelsy_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb, long long int* jpvt, float rcond,
                                long long int* rank, MKL_Complex8* work,
                                long long int lwork, float* rwork );

long long int LAPACKE_zgelsy_work( int matrix_layout, long long int m, long long int n,
                                long long int nrhs, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb, long long int* jpvt, double rcond,
                                long long int* rank, MKL_Complex16* work,
                                long long int lwork, double* rwork );


long long int LAPACKE_sgemqrt_work( int matrix_layout, char side, char trans,
                                 long long int m, long long int n, long long int k,
                                 long long int nb, const float* v, long long int ldv,
                                 const float* t, long long int ldt, float* c,
                                 long long int ldc, float* work );

long long int LAPACKE_dgemqrt_work( int matrix_layout, char side, char trans,
                                 long long int m, long long int n, long long int k,
                                 long long int nb, const double* v, long long int ldv,
                                 const double* t, long long int ldt, double* c,
                                 long long int ldc, double* work );

long long int LAPACKE_cgemqrt_work( int matrix_layout, char side, char trans,
                                 long long int m, long long int n, long long int k,
                                 long long int nb, const MKL_Complex8* v,
                                 long long int ldv, const MKL_Complex8* t,
                                 long long int ldt, MKL_Complex8* c,
                                 long long int ldc, MKL_Complex8* work );

long long int LAPACKE_zgemqrt_work( int matrix_layout, char side, char trans,
                                 long long int m, long long int n, long long int k,
                                 long long int nb, const MKL_Complex16* v,
                                 long long int ldv, const MKL_Complex16* t,
                                 long long int ldt, MKL_Complex16* c,
                                 long long int ldc, MKL_Complex16* work );


long long int LAPACKE_sgeqlf_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, float* tau,
                                float* work, long long int lwork );

long long int LAPACKE_dgeqlf_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, double* tau,
                                double* work, long long int lwork );

long long int LAPACKE_cgeqlf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgeqlf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sgeqp3_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, long long int* jpvt,
                                float* tau, float* work, long long int lwork );

long long int LAPACKE_dgeqp3_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, long long int* jpvt,
                                double* tau, double* work, long long int lwork );

long long int LAPACKE_cgeqp3_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                long long int* jpvt, MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork );

long long int LAPACKE_zgeqp3_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                long long int* jpvt, MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork );


long long int LAPACKE_sgeqpf_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, long long int* jpvt,
                                float* tau, float* work );

long long int LAPACKE_dgeqpf_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, long long int* jpvt,
                                double* tau, double* work );

long long int LAPACKE_cgeqpf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                long long int* jpvt, MKL_Complex8* tau,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zgeqpf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                long long int* jpvt, MKL_Complex16* tau,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sgeqr2_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, float* tau,
                                float* work );

long long int LAPACKE_dgeqr2_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, double* tau,
                                double* work );

long long int LAPACKE_cgeqr2_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* tau,
                                MKL_Complex8* work );

long long int LAPACKE_zgeqr2_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* tau,
                                MKL_Complex16* work );


long long int LAPACKE_sgeqrf_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, float* tau,
                                float* work, long long int lwork );

long long int LAPACKE_dgeqrf_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, double* tau,
                                double* work, long long int lwork );

long long int LAPACKE_cgeqrf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgeqrf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sgeqrfp_work( int matrix_layout, long long int m, long long int n,
                                 float* a, long long int lda, float* tau,
                                 float* work, long long int lwork );

long long int LAPACKE_dgeqrfp_work( int matrix_layout, long long int m, long long int n,
                                 double* a, long long int lda, double* tau,
                                 double* work, long long int lwork );

long long int LAPACKE_cgeqrfp_work( int matrix_layout, long long int m, long long int n,
                                 MKL_Complex8* a, long long int lda,
                                 MKL_Complex8* tau,
                                 MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgeqrfp_work( int matrix_layout, long long int m, long long int n,
                                 MKL_Complex16* a, long long int lda,
                                 MKL_Complex16* tau,
                                 MKL_Complex16* work,
                                 long long int lwork );


long long int LAPACKE_sgeqrt_work( int matrix_layout, long long int m, long long int n,
                                long long int nb, float* a, long long int lda,
                                float* t, long long int ldt, float* work );

long long int LAPACKE_dgeqrt_work( int matrix_layout, long long int m, long long int n,
                                long long int nb, double* a, long long int lda,
                                double* t, long long int ldt, double* work );

long long int LAPACKE_cgeqrt_work( int matrix_layout, long long int m, long long int n,
                                long long int nb, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* t,
                                long long int ldt, MKL_Complex8* work );

long long int LAPACKE_zgeqrt_work( int matrix_layout, long long int m, long long int n,
                                long long int nb, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* t,
                                long long int ldt, MKL_Complex16* work );


long long int LAPACKE_sgeqrt2_work( int matrix_layout, long long int m, long long int n,
                                 float* a, long long int lda, float* t,
                                 long long int ldt );

long long int LAPACKE_dgeqrt2_work( int matrix_layout, long long int m, long long int n,
                                 double* a, long long int lda, double* t,
                                 long long int ldt );

long long int LAPACKE_cgeqrt2_work( int matrix_layout, long long int m, long long int n,
                                 MKL_Complex8* a, long long int lda,
                                 MKL_Complex8* t, long long int ldt );

long long int LAPACKE_zgeqrt2_work( int matrix_layout, long long int m, long long int n,
                                 MKL_Complex16* a, long long int lda,
                                 MKL_Complex16* t, long long int ldt );


long long int LAPACKE_sgeqrt3_work( int matrix_layout, long long int m, long long int n,
                                 float* a, long long int lda, float* t,
                                 long long int ldt );

long long int LAPACKE_dgeqrt3_work( int matrix_layout, long long int m, long long int n,
                                 double* a, long long int lda, double* t,
                                 long long int ldt );

long long int LAPACKE_cgeqrt3_work( int matrix_layout, long long int m, long long int n,
                                 MKL_Complex8* a, long long int lda,
                                 MKL_Complex8* t, long long int ldt );

long long int LAPACKE_zgeqrt3_work( int matrix_layout, long long int m, long long int n,
                                 MKL_Complex16* a, long long int lda,
                                 MKL_Complex16* t, long long int ldt );


long long int LAPACKE_sgerfs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const float* a, long long int lda,
                                const float* af, long long int ldaf,
                                const long long int* ipiv, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* ferr, float* berr, float* work,
                                long long int* iwork );

long long int LAPACKE_dgerfs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const double* a,
                                long long int lda, const double* af,
                                long long int ldaf, const long long int* ipiv,
                                const double* b, long long int ldb, double* x,
                                long long int ldx, double* ferr, double* berr,
                                double* work, long long int* iwork );

long long int LAPACKE_cgerfs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* af,
                                long long int ldaf, const long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zgerfs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const MKL_Complex16* a,
                                long long int lda, const MKL_Complex16* af,
                                long long int ldaf, const long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sgerfsx_work( int matrix_layout, char trans, char equed,
                                 long long int n, long long int nrhs, const float* a,
                                 long long int lda, const float* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const float* r, const float* c, const float* b,
                                 long long int ldb, float* x, long long int ldx,
                                 float* rcond, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, float* work,
                                 long long int* iwork );

long long int LAPACKE_dgerfsx_work( int matrix_layout, char trans, char equed,
                                 long long int n, long long int nrhs, const double* a,
                                 long long int lda, const double* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const double* r, const double* c,
                                 const double* b, long long int ldb, double* x,
                                 long long int ldx, double* rcond, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, double* work,
                                 long long int* iwork );

long long int LAPACKE_cgerfsx_work( int matrix_layout, char trans, char equed,
                                 long long int n, long long int nrhs,
                                 const MKL_Complex8* a, long long int lda,
                                 const MKL_Complex8* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const float* r, const float* c,
                                 const MKL_Complex8* b, long long int ldb,
                                 MKL_Complex8* x, long long int ldx,
                                 float* rcond, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, MKL_Complex8* work,
                                 float* rwork );

long long int LAPACKE_zgerfsx_work( int matrix_layout, char trans, char equed,
                                 long long int n, long long int nrhs,
                                 const MKL_Complex16* a, long long int lda,
                                 const MKL_Complex16* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const double* r, const double* c,
                                 const MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* x, long long int ldx,
                                 double* rcond, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, MKL_Complex16* work,
                                 double* rwork );


long long int LAPACKE_sgerqf_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, float* tau,
                                float* work, long long int lwork );

long long int LAPACKE_dgerqf_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, double* tau,
                                double* work, long long int lwork );

long long int LAPACKE_cgerqf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgerqf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sgesdd_work( int matrix_layout, char jobz, long long int m,
                                long long int n, float* a, long long int lda,
                                float* s, float* u, long long int ldu, float* vt,
                                long long int ldvt, float* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_dgesdd_work( int matrix_layout, char jobz, long long int m,
                                long long int n, double* a, long long int lda,
                                double* s, double* u, long long int ldu,
                                double* vt, long long int ldvt, double* work,
                                long long int lwork, long long int* iwork );

long long int LAPACKE_cgesdd_work( int matrix_layout, char jobz, long long int m,
                                long long int n, MKL_Complex8* a,
                                long long int lda, float* s,
                                MKL_Complex8* u, long long int ldu,
                                MKL_Complex8* vt, long long int ldvt,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork, long long int* iwork );

long long int LAPACKE_zgesdd_work( int matrix_layout, char jobz, long long int m,
                                long long int n, MKL_Complex16* a,
                                long long int lda, double* s,
                                MKL_Complex16* u, long long int ldu,
                                MKL_Complex16* vt, long long int ldvt,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork, long long int* iwork );


long long int LAPACKE_sgesv_work( int matrix_layout, long long int n, long long int nrhs,
                               float* a, long long int lda, long long int* ipiv,
                               float* b, long long int ldb );

long long int LAPACKE_dgesv_work( int matrix_layout, long long int n, long long int nrhs,
                               double* a, long long int lda, long long int* ipiv,
                               double* b, long long int ldb );

long long int LAPACKE_cgesv_work( int matrix_layout, long long int n, long long int nrhs,
                               MKL_Complex8* a, long long int lda,
                               long long int* ipiv, MKL_Complex8* b,
                               long long int ldb );

long long int LAPACKE_zgesv_work( int matrix_layout, long long int n, long long int nrhs,
                               MKL_Complex16* a, long long int lda,
                               long long int* ipiv, MKL_Complex16* b,
                               long long int ldb );

long long int LAPACKE_dsgesv_work( int matrix_layout, long long int n, long long int nrhs,
                                double* a, long long int lda, long long int* ipiv,
                                double* b, long long int ldb, double* x,
                                long long int ldx, double* work, float* swork,
                                long long int* iter );

long long int LAPACKE_zcgesv_work( int matrix_layout, long long int n, long long int nrhs,
                                MKL_Complex16* a, long long int lda,
                                long long int* ipiv, MKL_Complex16* b,
                                long long int ldb, MKL_Complex16* x,
                                long long int ldx, MKL_Complex16* work,
                                MKL_Complex8* swork, double* rwork,
                                long long int* iter );


long long int LAPACKE_sgesvd_work( int matrix_layout, char jobu, char jobvt,
                                long long int m, long long int n, float* a,
                                long long int lda, float* s, float* u,
                                long long int ldu, float* vt, long long int ldvt,
                                float* work, long long int lwork );

long long int LAPACKE_dgesvd_work( int matrix_layout, char jobu, char jobvt,
                                long long int m, long long int n, double* a,
                                long long int lda, double* s, double* u,
                                long long int ldu, double* vt, long long int ldvt,
                                double* work, long long int lwork );

long long int LAPACKE_cgesvd_work( int matrix_layout, char jobu, char jobvt,
                                long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                float* s, MKL_Complex8* u,
                                long long int ldu, MKL_Complex8* vt,
                                long long int ldvt, MKL_Complex8* work,
                                long long int lwork, float* rwork );

long long int LAPACKE_zgesvd_work( int matrix_layout, char jobu, char jobvt,
                                long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                double* s, MKL_Complex16* u,
                                long long int ldu, MKL_Complex16* vt,
                                long long int ldvt, MKL_Complex16* work,
                                long long int lwork, double* rwork );


long long int LAPACKE_sgesvj_work( int matrix_layout, char joba, char jobu,
                                char jobv, long long int m, long long int n, float* a,
                                long long int lda, float* sva, long long int mv,
                                float* v, long long int ldv, float* work,
                                long long int lwork );

long long int LAPACKE_dgesvj_work( int matrix_layout, char joba, char jobu,
                                char jobv, long long int m, long long int n,
                                double* a, long long int lda, double* sva,
                                long long int mv, double* v, long long int ldv,
                                double* work, long long int lwork );


long long int LAPACKE_sgesvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int nrhs, float* a,
                                long long int lda, float* af, long long int ldaf,
                                long long int* ipiv, char* equed, float* r,
                                float* c, float* b, long long int ldb, float* x,
                                long long int ldx, float* rcond, float* ferr,
                                float* berr, float* work, long long int* iwork );

long long int LAPACKE_dgesvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int nrhs, double* a,
                                long long int lda, double* af, long long int ldaf,
                                long long int* ipiv, char* equed, double* r,
                                double* c, double* b, long long int ldb, double* x,
                                long long int ldx, double* rcond, double* ferr,
                                double* berr, double* work, long long int* iwork );

long long int LAPACKE_cgesvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int nrhs,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* af, long long int ldaf,
                                long long int* ipiv, char* equed, float* r,
                                float* c, MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* x,
                                long long int ldx, float* rcond, float* ferr,
                                float* berr, MKL_Complex8* work,
                                float* rwork );

long long int LAPACKE_zgesvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int nrhs,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* af, long long int ldaf,
                                long long int* ipiv, char* equed, double* r,
                                double* c, MKL_Complex16* b,
                                long long int ldb, MKL_Complex16* x,
                                long long int ldx, double* rcond, double* ferr,
                                double* berr, MKL_Complex16* work,
                                double* rwork );


long long int LAPACKE_sgesvxx_work( int matrix_layout, char fact, char trans,
                                 long long int n, long long int nrhs, float* a,
                                 long long int lda, float* af, long long int ldaf,
                                 long long int* ipiv, char* equed, float* r,
                                 float* c, float* b, long long int ldb, float* x,
                                 long long int ldx, float* rcond, float* rpvgrw,
                                 float* berr, long long int n_err_bnds,
                                 float* err_bnds_norm, float* err_bnds_comp,
                                 long long int nparams, float* params, float* work,
                                 long long int* iwork );

long long int LAPACKE_dgesvxx_work( int matrix_layout, char fact, char trans,
                                 long long int n, long long int nrhs, double* a,
                                 long long int lda, double* af, long long int ldaf,
                                 long long int* ipiv, char* equed, double* r,
                                 double* c, double* b, long long int ldb,
                                 double* x, long long int ldx, double* rcond,
                                 double* rpvgrw, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, double* work,
                                 long long int* iwork );

long long int LAPACKE_cgesvxx_work( int matrix_layout, char fact, char trans,
                                 long long int n, long long int nrhs,
                                 MKL_Complex8* a, long long int lda,
                                 MKL_Complex8* af, long long int ldaf,
                                 long long int* ipiv, char* equed, float* r,
                                 float* c, MKL_Complex8* b,
                                 long long int ldb, MKL_Complex8* x,
                                 long long int ldx, float* rcond, float* rpvgrw,
                                 float* berr, long long int n_err_bnds,
                                 float* err_bnds_norm, float* err_bnds_comp,
                                 long long int nparams, float* params,
                                 MKL_Complex8* work, float* rwork );

long long int LAPACKE_zgesvxx_work( int matrix_layout, char fact, char trans,
                                 long long int n, long long int nrhs,
                                 MKL_Complex16* a, long long int lda,
                                 MKL_Complex16* af, long long int ldaf,
                                 long long int* ipiv, char* equed, double* r,
                                 double* c, MKL_Complex16* b,
                                 long long int ldb, MKL_Complex16* x,
                                 long long int ldx, double* rcond, double* rpvgrw,
                                 double* berr, long long int n_err_bnds,
                                 double* err_bnds_norm, double* err_bnds_comp,
                                 long long int nparams, double* params,
                                 MKL_Complex16* work, double* rwork );


long long int LAPACKE_sgetf2_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, long long int* ipiv );

long long int LAPACKE_dgetf2_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, long long int* ipiv );

long long int LAPACKE_cgetf2_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                long long int* ipiv );

long long int LAPACKE_zgetf2_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                long long int* ipiv );


long long int LAPACKE_sgetrf_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, long long int* ipiv );

long long int LAPACKE_dgetrf_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, long long int* ipiv );

long long int LAPACKE_cgetrf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                long long int* ipiv );

long long int LAPACKE_zgetrf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                long long int* ipiv );

long long int LAPACKE_mkl_sgetrfnpi_work( int matrix_layout, long long int m, long long int n,
                                   long long int nfact, float* a, long long int lda );

long long int LAPACKE_mkl_dgetrfnpi_work( int matrix_layout, long long int m, long long int n,
                                   long long int nfact, double* a, long long int lda );

long long int LAPACKE_mkl_cgetrfnpi_work( int matrix_layout, long long int m, long long int n,
                                   long long int nfact, MKL_Complex8* a,
                                   long long int lda );

long long int LAPACKE_mkl_zgetrfnpi_work( int matrix_layout, long long int m, long long int n,
                                   long long int nfact, MKL_Complex16* a,
                                   long long int lda );

long long int LAPACKE_sgetri_work( int matrix_layout, long long int n, float* a,
                                long long int lda, const long long int* ipiv,
                                float* work, long long int lwork );

long long int LAPACKE_dgetri_work( int matrix_layout, long long int n, double* a,
                                long long int lda, const long long int* ipiv,
                                double* work, long long int lwork );

long long int LAPACKE_cgetri_work( int matrix_layout, long long int n,
                                MKL_Complex8* a, long long int lda,
                                const long long int* ipiv,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgetri_work( int matrix_layout, long long int n,
                                MKL_Complex16* a, long long int lda,
                                const long long int* ipiv,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sgetrs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const float* a, long long int lda,
                                const long long int* ipiv, float* b,
                                long long int ldb );

long long int LAPACKE_dgetrs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const double* a,
                                long long int lda, const long long int* ipiv,
                                double* b, long long int ldb );

long long int LAPACKE_cgetrs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const MKL_Complex8* a,
                                long long int lda, const long long int* ipiv,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zgetrs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const MKL_Complex16* a,
                                long long int lda, const long long int* ipiv,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_sggbak_work( int matrix_layout, char job, char side,
                                long long int n, long long int ilo, long long int ihi,
                                const float* lscale, const float* rscale,
                                long long int m, float* v, long long int ldv );

long long int LAPACKE_dggbak_work( int matrix_layout, char job, char side,
                                long long int n, long long int ilo, long long int ihi,
                                const double* lscale, const double* rscale,
                                long long int m, double* v, long long int ldv );

long long int LAPACKE_cggbak_work( int matrix_layout, char job, char side,
                                long long int n, long long int ilo, long long int ihi,
                                const float* lscale, const float* rscale,
                                long long int m, MKL_Complex8* v,
                                long long int ldv );

long long int LAPACKE_zggbak_work( int matrix_layout, char job, char side,
                                long long int n, long long int ilo, long long int ihi,
                                const double* lscale, const double* rscale,
                                long long int m, MKL_Complex16* v,
                                long long int ldv );


long long int LAPACKE_sggbal_work( int matrix_layout, char job, long long int n,
                                float* a, long long int lda, float* b,
                                long long int ldb, long long int* ilo,
                                long long int* ihi, float* lscale, float* rscale,
                                float* work );

long long int LAPACKE_dggbal_work( int matrix_layout, char job, long long int n,
                                double* a, long long int lda, double* b,
                                long long int ldb, long long int* ilo,
                                long long int* ihi, double* lscale, double* rscale,
                                double* work );

long long int LAPACKE_cggbal_work( int matrix_layout, char job, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                long long int* ilo, long long int* ihi, float* lscale,
                                float* rscale, float* work );

long long int LAPACKE_zggbal_work( int matrix_layout, char job, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                long long int* ilo, long long int* ihi,
                                double* lscale, double* rscale, double* work );


long long int LAPACKE_sgges_work( int matrix_layout, char jobvsl, char jobvsr,
                               char sort, LAPACK_S_SELECT3 selctg, long long int n,
                               float* a, long long int lda, float* b,
                               long long int ldb, long long int* sdim, float* alphar,
                               float* alphai, float* beta, float* vsl,
                               long long int ldvsl, float* vsr, long long int ldvsr,
                               float* work, long long int lwork,
                               long long int* bwork );

long long int LAPACKE_dgges_work( int matrix_layout, char jobvsl, char jobvsr,
                               char sort, LAPACK_D_SELECT3 selctg, long long int n,
                               double* a, long long int lda, double* b,
                               long long int ldb, long long int* sdim, double* alphar,
                               double* alphai, double* beta, double* vsl,
                               long long int ldvsl, double* vsr, long long int ldvsr,
                               double* work, long long int lwork,
                               long long int* bwork );

long long int LAPACKE_cgges_work( int matrix_layout, char jobvsl, char jobvsr,
                               char sort, LAPACK_C_SELECT2 selctg, long long int n,
                               MKL_Complex8* a, long long int lda,
                               MKL_Complex8* b, long long int ldb,
                               long long int* sdim, MKL_Complex8* alpha,
                               MKL_Complex8* beta,
                               MKL_Complex8* vsl, long long int ldvsl,
                               MKL_Complex8* vsr, long long int ldvsr,
                               MKL_Complex8* work, long long int lwork,
                               float* rwork, long long int* bwork );

long long int LAPACKE_zgges_work( int matrix_layout, char jobvsl, char jobvsr,
                               char sort, LAPACK_Z_SELECT2 selctg, long long int n,
                               MKL_Complex16* a, long long int lda,
                               MKL_Complex16* b, long long int ldb,
                               long long int* sdim, MKL_Complex16* alpha,
                               MKL_Complex16* beta,
                               MKL_Complex16* vsl, long long int ldvsl,
                               MKL_Complex16* vsr, long long int ldvsr,
                               MKL_Complex16* work, long long int lwork,
                               double* rwork, long long int* bwork );


long long int LAPACKE_sggesx_work( int matrix_layout, char jobvsl, char jobvsr,
                                char sort, LAPACK_S_SELECT3 selctg, char sense,
                                long long int n, float* a, long long int lda,
                                float* b, long long int ldb, long long int* sdim,
                                float* alphar, float* alphai, float* beta,
                                float* vsl, long long int ldvsl, float* vsr,
                                long long int ldvsr, float* rconde, float* rcondv,
                                float* work, long long int lwork,
                                long long int* iwork, long long int liwork,
                                long long int* bwork );

long long int LAPACKE_dggesx_work( int matrix_layout, char jobvsl, char jobvsr,
                                char sort, LAPACK_D_SELECT3 selctg, char sense,
                                long long int n, double* a, long long int lda,
                                double* b, long long int ldb, long long int* sdim,
                                double* alphar, double* alphai, double* beta,
                                double* vsl, long long int ldvsl, double* vsr,
                                long long int ldvsr, double* rconde,
                                double* rcondv, double* work, long long int lwork,
                                long long int* iwork, long long int liwork,
                                long long int* bwork );

long long int LAPACKE_cggesx_work( int matrix_layout, char jobvsl, char jobvsr,
                                char sort, LAPACK_C_SELECT2 selctg, char sense,
                                long long int n, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb, long long int* sdim,
                                MKL_Complex8* alpha,
                                MKL_Complex8* beta,
                                MKL_Complex8* vsl, long long int ldvsl,
                                MKL_Complex8* vsr, long long int ldvsr,
                                float* rconde, float* rcondv,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork, long long int* iwork,
                                long long int liwork, long long int* bwork );

long long int LAPACKE_zggesx_work( int matrix_layout, char jobvsl, char jobvsr,
                                char sort, LAPACK_Z_SELECT2 selctg, char sense,
                                long long int n, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb, long long int* sdim,
                                MKL_Complex16* alpha,
                                MKL_Complex16* beta,
                                MKL_Complex16* vsl, long long int ldvsl,
                                MKL_Complex16* vsr, long long int ldvsr,
                                double* rconde, double* rcondv,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork, long long int* iwork,
                                long long int liwork, long long int* bwork );


long long int LAPACKE_sggev_work( int matrix_layout, char jobvl, char jobvr,
                               long long int n, float* a, long long int lda, float* b,
                               long long int ldb, float* alphar, float* alphai,
                               float* beta, float* vl, long long int ldvl,
                               float* vr, long long int ldvr, float* work,
                               long long int lwork );

long long int LAPACKE_dggev_work( int matrix_layout, char jobvl, char jobvr,
                               long long int n, double* a, long long int lda,
                               double* b, long long int ldb, double* alphar,
                               double* alphai, double* beta, double* vl,
                               long long int ldvl, double* vr, long long int ldvr,
                               double* work, long long int lwork );

long long int LAPACKE_cggev_work( int matrix_layout, char jobvl, char jobvr,
                               long long int n, MKL_Complex8* a,
                               long long int lda, MKL_Complex8* b,
                               long long int ldb, MKL_Complex8* alpha,
                               MKL_Complex8* beta,
                               MKL_Complex8* vl, long long int ldvl,
                               MKL_Complex8* vr, long long int ldvr,
                               MKL_Complex8* work, long long int lwork,
                               float* rwork );

long long int LAPACKE_zggev_work( int matrix_layout, char jobvl, char jobvr,
                               long long int n, MKL_Complex16* a,
                               long long int lda, MKL_Complex16* b,
                               long long int ldb, MKL_Complex16* alpha,
                               MKL_Complex16* beta,
                               MKL_Complex16* vl, long long int ldvl,
                               MKL_Complex16* vr, long long int ldvr,
                               MKL_Complex16* work, long long int lwork,
                               double* rwork );


long long int LAPACKE_sggevx_work( int matrix_layout, char balanc, char jobvl,
                                char jobvr, char sense, long long int n, float* a,
                                long long int lda, float* b, long long int ldb,
                                float* alphar, float* alphai, float* beta,
                                float* vl, long long int ldvl, float* vr,
                                long long int ldvr, long long int* ilo,
                                long long int* ihi, float* lscale, float* rscale,
                                float* abnrm, float* bbnrm, float* rconde,
                                float* rcondv, float* work, long long int lwork,
                                long long int* iwork, long long int* bwork );

long long int LAPACKE_dggevx_work( int matrix_layout, char balanc, char jobvl,
                                char jobvr, char sense, long long int n, double* a,
                                long long int lda, double* b, long long int ldb,
                                double* alphar, double* alphai, double* beta,
                                double* vl, long long int ldvl, double* vr,
                                long long int ldvr, long long int* ilo,
                                long long int* ihi, double* lscale, double* rscale,
                                double* abnrm, double* bbnrm, double* rconde,
                                double* rcondv, double* work, long long int lwork,
                                long long int* iwork, long long int* bwork );

long long int LAPACKE_cggevx_work( int matrix_layout, char balanc, char jobvl,
                                char jobvr, char sense, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* alpha,
                                MKL_Complex8* beta,
                                MKL_Complex8* vl, long long int ldvl,
                                MKL_Complex8* vr, long long int ldvr,
                                long long int* ilo, long long int* ihi, float* lscale,
                                float* rscale, float* abnrm, float* bbnrm,
                                float* rconde, float* rcondv,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork, long long int* iwork,
                                long long int* bwork );

long long int LAPACKE_zggevx_work( int matrix_layout, char balanc, char jobvl,
                                char jobvr, char sense, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* alpha,
                                MKL_Complex16* beta,
                                MKL_Complex16* vl, long long int ldvl,
                                MKL_Complex16* vr, long long int ldvr,
                                long long int* ilo, long long int* ihi,
                                double* lscale, double* rscale, double* abnrm,
                                double* bbnrm, double* rconde, double* rcondv,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork, long long int* iwork,
                                long long int* bwork );


long long int LAPACKE_sggglm_work( int matrix_layout, long long int n, long long int m,
                                long long int p, float* a, long long int lda,
                                float* b, long long int ldb, float* d, float* x,
                                float* y, float* work, long long int lwork );

long long int LAPACKE_dggglm_work( int matrix_layout, long long int n, long long int m,
                                long long int p, double* a, long long int lda,
                                double* b, long long int ldb, double* d, double* x,
                                double* y, double* work, long long int lwork );

long long int LAPACKE_cggglm_work( int matrix_layout, long long int n, long long int m,
                                long long int p, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* d,
                                MKL_Complex8* x,
                                MKL_Complex8* y,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zggglm_work( int matrix_layout, long long int n, long long int m,
                                long long int p, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb, MKL_Complex16* d,
                                MKL_Complex16* x,
                                MKL_Complex16* y,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sgghrd_work( int matrix_layout, char compq, char compz,
                                long long int n, long long int ilo, long long int ihi,
                                float* a, long long int lda, float* b,
                                long long int ldb, float* q, long long int ldq,
                                float* z, long long int ldz );

long long int LAPACKE_dgghrd_work( int matrix_layout, char compq, char compz,
                                long long int n, long long int ilo, long long int ihi,
                                double* a, long long int lda, double* b,
                                long long int ldb, double* q, long long int ldq,
                                double* z, long long int ldz );

long long int LAPACKE_cgghrd_work( int matrix_layout, char compq, char compz,
                                long long int n, long long int ilo, long long int ihi,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* q, long long int ldq,
                                MKL_Complex8* z, long long int ldz );

long long int LAPACKE_zgghrd_work( int matrix_layout, char compq, char compz,
                                long long int n, long long int ilo, long long int ihi,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* q, long long int ldq,
                                MKL_Complex16* z, long long int ldz );


long long int LAPACKE_sgglse_work( int matrix_layout, long long int m, long long int n,
                                long long int p, float* a, long long int lda,
                                float* b, long long int ldb, float* c, float* d,
                                float* x, float* work, long long int lwork );

long long int LAPACKE_dgglse_work( int matrix_layout, long long int m, long long int n,
                                long long int p, double* a, long long int lda,
                                double* b, long long int ldb, double* c, double* d,
                                double* x, double* work, long long int lwork );

long long int LAPACKE_cgglse_work( int matrix_layout, long long int m, long long int n,
                                long long int p, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* c,
                                MKL_Complex8* d,
                                MKL_Complex8* x,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zgglse_work( int matrix_layout, long long int m, long long int n,
                                long long int p, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb, MKL_Complex16* c,
                                MKL_Complex16* d,
                                MKL_Complex16* x,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sggqrf_work( int matrix_layout, long long int n, long long int m,
                                long long int p, float* a, long long int lda,
                                float* taua, float* b, long long int ldb,
                                float* taub, float* work, long long int lwork );

long long int LAPACKE_dggqrf_work( int matrix_layout, long long int n, long long int m,
                                long long int p, double* a, long long int lda,
                                double* taua, double* b, long long int ldb,
                                double* taub, double* work, long long int lwork );

long long int LAPACKE_cggqrf_work( int matrix_layout, long long int n, long long int m,
                                long long int p, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* taua,
                                MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* taub,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zggqrf_work( int matrix_layout, long long int n, long long int m,
                                long long int p, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* taua,
                                MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* taub,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sggrqf_work( int matrix_layout, long long int m, long long int p,
                                long long int n, float* a, long long int lda,
                                float* taua, float* b, long long int ldb,
                                float* taub, float* work, long long int lwork );

long long int LAPACKE_dggrqf_work( int matrix_layout, long long int m, long long int p,
                                long long int n, double* a, long long int lda,
                                double* taua, double* b, long long int ldb,
                                double* taub, double* work, long long int lwork );

long long int LAPACKE_cggrqf_work( int matrix_layout, long long int m, long long int p,
                                long long int n, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* taua,
                                MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* taub,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zggrqf_work( int matrix_layout, long long int m, long long int p,
                                long long int n, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* taua,
                                MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* taub,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_sggsvd_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int n,
                                long long int p, long long int* k, long long int* l,
                                float* a, long long int lda, float* b,
                                long long int ldb, float* alpha, float* beta,
                                float* u, long long int ldu, float* v,
                                long long int ldv, float* q, long long int ldq,
                                float* work, long long int* iwork );

long long int LAPACKE_dggsvd_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int n,
                                long long int p, long long int* k, long long int* l,
                                double* a, long long int lda, double* b,
                                long long int ldb, double* alpha, double* beta,
                                double* u, long long int ldu, double* v,
                                long long int ldv, double* q, long long int ldq,
                                double* work, long long int* iwork );

long long int LAPACKE_cggsvd_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int n,
                                long long int p, long long int* k, long long int* l,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                float* alpha, float* beta,
                                MKL_Complex8* u, long long int ldu,
                                MKL_Complex8* v, long long int ldv,
                                MKL_Complex8* q, long long int ldq,
                                MKL_Complex8* work, float* rwork,
                                long long int* iwork );

long long int LAPACKE_zggsvd_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int n,
                                long long int p, long long int* k, long long int* l,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                double* alpha, double* beta,
                                MKL_Complex16* u, long long int ldu,
                                MKL_Complex16* v, long long int ldv,
                                MKL_Complex16* q, long long int ldq,
                                MKL_Complex16* work, double* rwork,
                                long long int* iwork );


long long int LAPACKE_sggsvp_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int p,
                                long long int n, float* a, long long int lda,
                                float* b, long long int ldb, float tola,
                                float tolb, long long int* k, long long int* l,
                                float* u, long long int ldu, float* v,
                                long long int ldv, float* q, long long int ldq,
                                long long int* iwork, float* tau, float* work );

long long int LAPACKE_dggsvp_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int p,
                                long long int n, double* a, long long int lda,
                                double* b, long long int ldb, double tola,
                                double tolb, long long int* k, long long int* l,
                                double* u, long long int ldu, double* v,
                                long long int ldv, double* q, long long int ldq,
                                long long int* iwork, double* tau, double* work );

long long int LAPACKE_cggsvp_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int p,
                                long long int n, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb, float tola, float tolb,
                                long long int* k, long long int* l,
                                MKL_Complex8* u, long long int ldu,
                                MKL_Complex8* v, long long int ldv,
                                MKL_Complex8* q, long long int ldq,
                                long long int* iwork, float* rwork,
                                MKL_Complex8* tau,
                                MKL_Complex8* work );

long long int LAPACKE_zggsvp_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int p,
                                long long int n, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb, double tola, double tolb,
                                long long int* k, long long int* l,
                                MKL_Complex16* u, long long int ldu,
                                MKL_Complex16* v, long long int ldv,
                                MKL_Complex16* q, long long int ldq,
                                long long int* iwork, double* rwork,
                                MKL_Complex16* tau,
                                MKL_Complex16* work );


long long int LAPACKE_sgtcon_work( char norm, long long int n, const float* dl,
                                const float* d, const float* du,
                                const float* du2, const long long int* ipiv,
                                float anorm, float* rcond, float* work,
                                long long int* iwork );

long long int LAPACKE_dgtcon_work( char norm, long long int n, const double* dl,
                                const double* d, const double* du,
                                const double* du2, const long long int* ipiv,
                                double anorm, double* rcond, double* work,
                                long long int* iwork );

long long int LAPACKE_cgtcon_work( char norm, long long int n,
                                const MKL_Complex8* dl,
                                const MKL_Complex8* d,
                                const MKL_Complex8* du,
                                const MKL_Complex8* du2,
                                const long long int* ipiv, float anorm,
                                float* rcond, MKL_Complex8* work );

long long int LAPACKE_zgtcon_work( char norm, long long int n,
                                const MKL_Complex16* dl,
                                const MKL_Complex16* d,
                                const MKL_Complex16* du,
                                const MKL_Complex16* du2,
                                const long long int* ipiv, double anorm,
                                double* rcond, MKL_Complex16* work );


long long int LAPACKE_sgtrfs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const float* dl,
                                const float* d, const float* du,
                                const float* dlf, const float* df,
                                const float* duf, const float* du2,
                                const long long int* ipiv, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* ferr, float* berr, float* work,
                                long long int* iwork );

long long int LAPACKE_dgtrfs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const double* dl,
                                const double* d, const double* du,
                                const double* dlf, const double* df,
                                const double* duf, const double* du2,
                                const long long int* ipiv, const double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* ferr, double* berr, double* work,
                                long long int* iwork );

long long int LAPACKE_cgtrfs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const MKL_Complex8* dl,
                                const MKL_Complex8* d,
                                const MKL_Complex8* du,
                                const MKL_Complex8* dlf,
                                const MKL_Complex8* df,
                                const MKL_Complex8* duf,
                                const MKL_Complex8* du2,
                                const long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zgtrfs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs,
                                const MKL_Complex16* dl,
                                const MKL_Complex16* d,
                                const MKL_Complex16* du,
                                const MKL_Complex16* dlf,
                                const MKL_Complex16* df,
                                const MKL_Complex16* duf,
                                const MKL_Complex16* du2,
                                const long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sgtsv_work( int matrix_layout, long long int n, long long int nrhs,
                               float* dl, float* d, float* du, float* b,
                               long long int ldb );

long long int LAPACKE_dgtsv_work( int matrix_layout, long long int n, long long int nrhs,
                               double* dl, double* d, double* du, double* b,
                               long long int ldb );

long long int LAPACKE_cgtsv_work( int matrix_layout, long long int n, long long int nrhs,
                               MKL_Complex8* dl,
                               MKL_Complex8* d,
                               MKL_Complex8* du,
                               MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zgtsv_work( int matrix_layout, long long int n, long long int nrhs,
                               MKL_Complex16* dl,
                               MKL_Complex16* d,
                               MKL_Complex16* du,
                               MKL_Complex16* b, long long int ldb );


long long int LAPACKE_sgtsvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int nrhs, const float* dl,
                                const float* d, const float* du, float* dlf,
                                float* df, float* duf, float* du2,
                                long long int* ipiv, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                float* work, long long int* iwork );

long long int LAPACKE_dgtsvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int nrhs, const double* dl,
                                const double* d, const double* du, double* dlf,
                                double* df, double* duf, double* du2,
                                long long int* ipiv, const double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                double* work, long long int* iwork );

long long int LAPACKE_cgtsvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int nrhs,
                                const MKL_Complex8* dl,
                                const MKL_Complex8* d,
                                const MKL_Complex8* du,
                                MKL_Complex8* dlf,
                                MKL_Complex8* df,
                                MKL_Complex8* duf,
                                MKL_Complex8* du2, long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zgtsvx_work( int matrix_layout, char fact, char trans,
                                long long int n, long long int nrhs,
                                const MKL_Complex16* dl,
                                const MKL_Complex16* d,
                                const MKL_Complex16* du,
                                MKL_Complex16* dlf,
                                MKL_Complex16* df,
                                MKL_Complex16* duf,
                                MKL_Complex16* du2, long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sgttrf_work( long long int n, float* dl, float* d, float* du,
                                float* du2, long long int* ipiv );

long long int LAPACKE_dgttrf_work( long long int n, double* dl, double* d, double* du,
                                double* du2, long long int* ipiv );

long long int LAPACKE_cgttrf_work( long long int n, MKL_Complex8* dl,
                                MKL_Complex8* d,
                                MKL_Complex8* du,
                                MKL_Complex8* du2, long long int* ipiv );

long long int LAPACKE_zgttrf_work( long long int n, MKL_Complex16* dl,
                                MKL_Complex16* d,
                                MKL_Complex16* du,
                                MKL_Complex16* du2, long long int* ipiv );


long long int LAPACKE_sgttrs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const float* dl,
                                const float* d, const float* du,
                                const float* du2, const long long int* ipiv,
                                float* b, long long int ldb );

long long int LAPACKE_dgttrs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const double* dl,
                                const double* d, const double* du,
                                const double* du2, const long long int* ipiv,
                                double* b, long long int ldb );

long long int LAPACKE_cgttrs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs, const MKL_Complex8* dl,
                                const MKL_Complex8* d,
                                const MKL_Complex8* du,
                                const MKL_Complex8* du2,
                                const long long int* ipiv, MKL_Complex8* b,
                                long long int ldb );

long long int LAPACKE_zgttrs_work( int matrix_layout, char trans, long long int n,
                                long long int nrhs,
                                const MKL_Complex16* dl,
                                const MKL_Complex16* d,
                                const MKL_Complex16* du,
                                const MKL_Complex16* du2,
                                const long long int* ipiv,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_chbev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, long long int kd,
                               MKL_Complex8* ab, long long int ldab,
                               float* w, MKL_Complex8* z,
                               long long int ldz, MKL_Complex8* work,
                               float* rwork );

long long int LAPACKE_zhbev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, long long int kd,
                               MKL_Complex16* ab, long long int ldab,
                               double* w, MKL_Complex16* z,
                               long long int ldz, MKL_Complex16* work,
                               double* rwork );


long long int LAPACKE_chbevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, long long int kd,
                                MKL_Complex8* ab, long long int ldab,
                                float* w, MKL_Complex8* z,
                                long long int ldz, MKL_Complex8* work,
                                long long int lwork, float* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_zhbevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, long long int kd,
                                MKL_Complex16* ab, long long int ldab,
                                double* w, MKL_Complex16* z,
                                long long int ldz, MKL_Complex16* work,
                                long long int lwork, double* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );


long long int LAPACKE_chbevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, long long int kd,
                                MKL_Complex8* ab, long long int ldab,
                                MKL_Complex8* q, long long int ldq,
                                float vl, float vu, long long int il,
                                long long int iu, float abstol, long long int* m,
                                float* w, MKL_Complex8* z,
                                long long int ldz, MKL_Complex8* work,
                                float* rwork, long long int* iwork,
                                long long int* ifail );

long long int LAPACKE_zhbevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, long long int kd,
                                MKL_Complex16* ab, long long int ldab,
                                MKL_Complex16* q, long long int ldq,
                                double vl, double vu, long long int il,
                                long long int iu, double abstol, long long int* m,
                                double* w, MKL_Complex16* z,
                                long long int ldz, MKL_Complex16* work,
                                double* rwork, long long int* iwork,
                                long long int* ifail );


long long int LAPACKE_chbgst_work( int matrix_layout, char vect, char uplo,
                                long long int n, long long int ka, long long int kb,
                                MKL_Complex8* ab, long long int ldab,
                                const MKL_Complex8* bb, long long int ldbb,
                                MKL_Complex8* x, long long int ldx,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zhbgst_work( int matrix_layout, char vect, char uplo,
                                long long int n, long long int ka, long long int kb,
                                MKL_Complex16* ab, long long int ldab,
                                const MKL_Complex16* bb,
                                long long int ldbb, MKL_Complex16* x,
                                long long int ldx, MKL_Complex16* work,
                                double* rwork );


long long int LAPACKE_chbgv_work( int matrix_layout, char jobz, char uplo,
                               long long int n, long long int ka, long long int kb,
                               MKL_Complex8* ab, long long int ldab,
                               MKL_Complex8* bb, long long int ldbb,
                               float* w, MKL_Complex8* z,
                               long long int ldz, MKL_Complex8* work,
                               float* rwork );

long long int LAPACKE_zhbgv_work( int matrix_layout, char jobz, char uplo,
                               long long int n, long long int ka, long long int kb,
                               MKL_Complex16* ab, long long int ldab,
                               MKL_Complex16* bb, long long int ldbb,
                               double* w, MKL_Complex16* z,
                               long long int ldz, MKL_Complex16* work,
                               double* rwork );


long long int LAPACKE_chbgvd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, long long int ka, long long int kb,
                                MKL_Complex8* ab, long long int ldab,
                                MKL_Complex8* bb, long long int ldbb,
                                float* w, MKL_Complex8* z,
                                long long int ldz, MKL_Complex8* work,
                                long long int lwork, float* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_zhbgvd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, long long int ka, long long int kb,
                                MKL_Complex16* ab, long long int ldab,
                                MKL_Complex16* bb, long long int ldbb,
                                double* w, MKL_Complex16* z,
                                long long int ldz, MKL_Complex16* work,
                                long long int lwork, double* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );


long long int LAPACKE_chbgvx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, long long int ka,
                                long long int kb, MKL_Complex8* ab,
                                long long int ldab, MKL_Complex8* bb,
                                long long int ldbb, MKL_Complex8* q,
                                long long int ldq, float vl, float vu,
                                long long int il, long long int iu, float abstol,
                                long long int* m, float* w,
                                MKL_Complex8* z, long long int ldz,
                                MKL_Complex8* work, float* rwork,
                                long long int* iwork, long long int* ifail );

long long int LAPACKE_zhbgvx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, long long int ka,
                                long long int kb, MKL_Complex16* ab,
                                long long int ldab, MKL_Complex16* bb,
                                long long int ldbb, MKL_Complex16* q,
                                long long int ldq, double vl, double vu,
                                long long int il, long long int iu, double abstol,
                                long long int* m, double* w,
                                MKL_Complex16* z, long long int ldz,
                                MKL_Complex16* work, double* rwork,
                                long long int* iwork, long long int* ifail );


long long int LAPACKE_chbtrd_work( int matrix_layout, char vect, char uplo,
                                long long int n, long long int kd,
                                MKL_Complex8* ab, long long int ldab,
                                float* d, float* e, MKL_Complex8* q,
                                long long int ldq, MKL_Complex8* work );

long long int LAPACKE_zhbtrd_work( int matrix_layout, char vect, char uplo,
                                long long int n, long long int kd,
                                MKL_Complex16* ab, long long int ldab,
                                double* d, double* e, MKL_Complex16* q,
                                long long int ldq, MKL_Complex16* work );


long long int LAPACKE_checon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                const long long int* ipiv, float anorm,
                                float* rcond, MKL_Complex8* work );

long long int LAPACKE_zhecon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                const long long int* ipiv, double anorm,
                                double* rcond, MKL_Complex16* work );


long long int LAPACKE_cheequb_work( int matrix_layout, char uplo, long long int n,
                                 const MKL_Complex8* a, long long int lda,
                                 float* s, float* scond, float* amax,
                                 MKL_Complex8* work );

long long int LAPACKE_zheequb_work( int matrix_layout, char uplo, long long int n,
                                 const MKL_Complex16* a, long long int lda,
                                 double* s, double* scond, double* amax,
                                 MKL_Complex16* work );


long long int LAPACKE_cheev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, MKL_Complex8* a,
                               long long int lda, float* w,
                               MKL_Complex8* work, long long int lwork,
                               float* rwork );

long long int LAPACKE_zheev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, MKL_Complex16* a,
                               long long int lda, double* w,
                               MKL_Complex16* work, long long int lwork,
                               double* rwork );


long long int LAPACKE_cheevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, MKL_Complex8* a,
                                long long int lda, float* w,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork, long long int lrwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_zheevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, MKL_Complex16* a,
                                long long int lda, double* w,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork, long long int lrwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_cheevr_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                float vl, float vu, long long int il,
                                long long int iu, float abstol, long long int* m,
                                float* w, MKL_Complex8* z,
                                long long int ldz, long long int* isuppz,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork, long long int lrwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_zheevr_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                double vl, double vu, long long int il,
                                long long int iu, double abstol, long long int* m,
                                double* w, MKL_Complex16* z,
                                long long int ldz, long long int* isuppz,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork, long long int lrwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_cheevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                float vl, float vu, long long int il,
                                long long int iu, float abstol, long long int* m,
                                float* w, MKL_Complex8* z,
                                long long int ldz, MKL_Complex8* work,
                                long long int lwork, float* rwork,
                                long long int* iwork, long long int* ifail );

long long int LAPACKE_zheevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                double vl, double vu, long long int il,
                                long long int iu, double abstol, long long int* m,
                                double* w, MKL_Complex16* z,
                                long long int ldz, MKL_Complex16* work,
                                long long int lwork, double* rwork,
                                long long int* iwork, long long int* ifail );


long long int LAPACKE_chegst_work( int matrix_layout, long long int itype, char uplo,
                                long long int n, MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* b,
                                long long int ldb );

long long int LAPACKE_zhegst_work( int matrix_layout, long long int itype, char uplo,
                                long long int n, MKL_Complex16* a,
                                long long int lda, const MKL_Complex16* b,
                                long long int ldb );


long long int LAPACKE_chegv_work( int matrix_layout, long long int itype, char jobz,
                               char uplo, long long int n, MKL_Complex8* a,
                               long long int lda, MKL_Complex8* b,
                               long long int ldb, float* w,
                               MKL_Complex8* work, long long int lwork,
                               float* rwork );

long long int LAPACKE_zhegv_work( int matrix_layout, long long int itype, char jobz,
                               char uplo, long long int n,
                               MKL_Complex16* a, long long int lda,
                               MKL_Complex16* b, long long int ldb,
                               double* w, MKL_Complex16* work,
                               long long int lwork, double* rwork );


long long int LAPACKE_chegvd_work( int matrix_layout, long long int itype, char jobz,
                                char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                float* w, MKL_Complex8* work,
                                long long int lwork, float* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_zhegvd_work( int matrix_layout, long long int itype, char jobz,
                                char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                double* w, MKL_Complex16* work,
                                long long int lwork, double* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );


long long int LAPACKE_chegvx_work( int matrix_layout, long long int itype, char jobz,
                                char range, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                float vl, float vu, long long int il,
                                long long int iu, float abstol, long long int* m,
                                float* w, MKL_Complex8* z,
                                long long int ldz, MKL_Complex8* work,
                                long long int lwork, float* rwork,
                                long long int* iwork, long long int* ifail );

long long int LAPACKE_zhegvx_work( int matrix_layout, long long int itype, char jobz,
                                char range, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                double vl, double vu, long long int il,
                                long long int iu, double abstol, long long int* m,
                                double* w, MKL_Complex16* z,
                                long long int ldz, MKL_Complex16* work,
                                long long int lwork, double* rwork,
                                long long int* iwork, long long int* ifail );


long long int LAPACKE_cherfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* af,
                                long long int ldaf, const long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zherfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex16* a,
                                long long int lda, const MKL_Complex16* af,
                                long long int ldaf, const long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_cherfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs,
                                 const MKL_Complex8* a, long long int lda,
                                 const MKL_Complex8* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const float* s, const MKL_Complex8* b,
                                 long long int ldb, MKL_Complex8* x,
                                 long long int ldx, float* rcond, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, MKL_Complex8* work,
                                 float* rwork );

long long int LAPACKE_zherfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs,
                                 const MKL_Complex16* a, long long int lda,
                                 const MKL_Complex16* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const double* s,
                                 const MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* x, long long int ldx,
                                 double* rcond, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, MKL_Complex16* work,
                                 double* rwork );


long long int LAPACKE_chesv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex8* a,
                               long long int lda, long long int* ipiv,
                               MKL_Complex8* b, long long int ldb,
                               MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zhesv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex16* a,
                               long long int lda, long long int* ipiv,
                               MKL_Complex16* b, long long int ldb,
                               MKL_Complex16* work, long long int lwork );


long long int LAPACKE_chesvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex8* a, long long int lda,
                                MKL_Complex8* af, long long int ldaf,
                                long long int* ipiv, const MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* x,
                                long long int ldx, float* rcond, float* ferr,
                                float* berr, MKL_Complex8* work,
                                long long int lwork, float* rwork );

long long int LAPACKE_zhesvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex16* a, long long int lda,
                                MKL_Complex16* af, long long int ldaf,
                                long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork );


long long int LAPACKE_chesvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs,
                                 MKL_Complex8* a, long long int lda,
                                 MKL_Complex8* af, long long int ldaf,
                                 long long int* ipiv, char* equed, float* s,
                                 MKL_Complex8* b, long long int ldb,
                                 MKL_Complex8* x, long long int ldx,
                                 float* rcond, float* rpvgrw, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, MKL_Complex8* work,
                                 float* rwork );

long long int LAPACKE_zhesvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs,
                                 MKL_Complex16* a, long long int lda,
                                 MKL_Complex16* af, long long int ldaf,
                                 long long int* ipiv, char* equed, double* s,
                                 MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* x, long long int ldx,
                                 double* rcond, double* rpvgrw, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, MKL_Complex16* work,
                                 double* rwork );


long long int LAPACKE_cheswapr_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex8* a, long long int lda,
                                  long long int i1, long long int i2 );

long long int LAPACKE_zheswapr_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex16* a, long long int lda,
                                  long long int i1, long long int i2 );


long long int LAPACKE_chetrd_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                float* d, float* e, MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zhetrd_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                double* d, double* e,
                                MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_chetrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                long long int* ipiv, MKL_Complex8* work,
                                long long int lwork );

long long int LAPACKE_zhetrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                long long int* ipiv, MKL_Complex16* work,
                                long long int lwork );


long long int LAPACKE_chetri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                const long long int* ipiv,
                                MKL_Complex8* work );

long long int LAPACKE_zhetri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                const long long int* ipiv,
                                MKL_Complex16* work );


long long int LAPACKE_chetri2_work( int matrix_layout, char uplo, long long int n,
                                 MKL_Complex8* a, long long int lda,
                                 const long long int* ipiv,
                                 MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zhetri2_work( int matrix_layout, char uplo, long long int n,
                                 MKL_Complex16* a, long long int lda,
                                 const long long int* ipiv,
                                 MKL_Complex16* work,
                                 long long int lwork );


long long int LAPACKE_chetri2x_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex8* a, long long int lda,
                                  const long long int* ipiv,
                                  MKL_Complex8* work, long long int nb );

long long int LAPACKE_zhetri2x_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex16* a, long long int lda,
                                  const long long int* ipiv,
                                  MKL_Complex16* work, long long int nb );


long long int LAPACKE_chetrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* a,
                                long long int lda, const long long int* ipiv,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zhetrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex16* a,
                                long long int lda, const long long int* ipiv,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_chetrs2_work( int matrix_layout, char uplo, long long int n,
                                 long long int nrhs, const MKL_Complex8* a,
                                 long long int lda, const long long int* ipiv,
                                 MKL_Complex8* b, long long int ldb,
                                 MKL_Complex8* work );

long long int LAPACKE_zhetrs2_work( int matrix_layout, char uplo, long long int n,
                                 long long int nrhs,
                                 const MKL_Complex16* a, long long int lda,
                                 const long long int* ipiv,
                                 MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* work );


long long int LAPACKE_chfrk_work( int matrix_layout, char transr, char uplo,
                               char trans, long long int n, long long int k,
                               float alpha, const MKL_Complex8* a,
                               long long int lda, float beta,
                               MKL_Complex8* c );

long long int LAPACKE_zhfrk_work( int matrix_layout, char transr, char uplo,
                               char trans, long long int n, long long int k,
                               double alpha, const MKL_Complex16* a,
                               long long int lda, double beta,
                               MKL_Complex16* c );


long long int LAPACKE_shgeqz_work( int matrix_layout, char job, char compq,
                                char compz, long long int n, long long int ilo,
                                long long int ihi, float* h, long long int ldh,
                                float* t, long long int ldt, float* alphar,
                                float* alphai, float* beta, float* q,
                                long long int ldq, float* z, long long int ldz,
                                float* work, long long int lwork );

long long int LAPACKE_dhgeqz_work( int matrix_layout, char job, char compq,
                                char compz, long long int n, long long int ilo,
                                long long int ihi, double* h, long long int ldh,
                                double* t, long long int ldt, double* alphar,
                                double* alphai, double* beta, double* q,
                                long long int ldq, double* z, long long int ldz,
                                double* work, long long int lwork );

long long int LAPACKE_chgeqz_work( int matrix_layout, char job, char compq,
                                char compz, long long int n, long long int ilo,
                                long long int ihi, MKL_Complex8* h,
                                long long int ldh, MKL_Complex8* t,
                                long long int ldt, MKL_Complex8* alpha,
                                MKL_Complex8* beta,
                                MKL_Complex8* q, long long int ldq,
                                MKL_Complex8* z, long long int ldz,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork );

long long int LAPACKE_zhgeqz_work( int matrix_layout, char job, char compq,
                                char compz, long long int n, long long int ilo,
                                long long int ihi, MKL_Complex16* h,
                                long long int ldh, MKL_Complex16* t,
                                long long int ldt, MKL_Complex16* alpha,
                                MKL_Complex16* beta,
                                MKL_Complex16* q, long long int ldq,
                                MKL_Complex16* z, long long int ldz,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork );


long long int LAPACKE_chpcon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* ap,
                                const long long int* ipiv, float anorm,
                                float* rcond, MKL_Complex8* work );

long long int LAPACKE_zhpcon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* ap,
                                const long long int* ipiv, double anorm,
                                double* rcond, MKL_Complex16* work );


long long int LAPACKE_chpev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, MKL_Complex8* ap, float* w,
                               MKL_Complex8* z, long long int ldz,
                               MKL_Complex8* work, float* rwork );

long long int LAPACKE_zhpev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, MKL_Complex16* ap,
                               double* w, MKL_Complex16* z,
                               long long int ldz, MKL_Complex16* work,
                               double* rwork );


long long int LAPACKE_chpevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, MKL_Complex8* ap,
                                float* w, MKL_Complex8* z,
                                long long int ldz, MKL_Complex8* work,
                                long long int lwork, float* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_zhpevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, MKL_Complex16* ap,
                                double* w, MKL_Complex16* z,
                                long long int ldz, MKL_Complex16* work,
                                long long int lwork, double* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );


long long int LAPACKE_chpevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n,
                                MKL_Complex8* ap, float vl, float vu,
                                long long int il, long long int iu, float abstol,
                                long long int* m, float* w,
                                MKL_Complex8* z, long long int ldz,
                                MKL_Complex8* work, float* rwork,
                                long long int* iwork, long long int* ifail );

long long int LAPACKE_zhpevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n,
                                MKL_Complex16* ap, double vl, double vu,
                                long long int il, long long int iu, double abstol,
                                long long int* m, double* w,
                                MKL_Complex16* z, long long int ldz,
                                MKL_Complex16* work, double* rwork,
                                long long int* iwork, long long int* ifail );


long long int LAPACKE_chpgst_work( int matrix_layout, long long int itype, char uplo,
                                long long int n, MKL_Complex8* ap,
                                const MKL_Complex8* bp );

long long int LAPACKE_zhpgst_work( int matrix_layout, long long int itype, char uplo,
                                long long int n, MKL_Complex16* ap,
                                const MKL_Complex16* bp );


long long int LAPACKE_chpgv_work( int matrix_layout, long long int itype, char jobz,
                               char uplo, long long int n,
                               MKL_Complex8* ap,
                               MKL_Complex8* bp, float* w,
                               MKL_Complex8* z, long long int ldz,
                               MKL_Complex8* work, float* rwork );

long long int LAPACKE_zhpgv_work( int matrix_layout, long long int itype, char jobz,
                               char uplo, long long int n,
                               MKL_Complex16* ap,
                               MKL_Complex16* bp, double* w,
                               MKL_Complex16* z, long long int ldz,
                               MKL_Complex16* work, double* rwork );


long long int LAPACKE_chpgvd_work( int matrix_layout, long long int itype, char jobz,
                                char uplo, long long int n,
                                MKL_Complex8* ap,
                                MKL_Complex8* bp, float* w,
                                MKL_Complex8* z, long long int ldz,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork, long long int lrwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_zhpgvd_work( int matrix_layout, long long int itype, char jobz,
                                char uplo, long long int n,
                                MKL_Complex16* ap,
                                MKL_Complex16* bp, double* w,
                                MKL_Complex16* z, long long int ldz,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork, long long int lrwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_chpgvx_work( int matrix_layout, long long int itype, char jobz,
                                char range, char uplo, long long int n,
                                MKL_Complex8* ap,
                                MKL_Complex8* bp, float vl, float vu,
                                long long int il, long long int iu, float abstol,
                                long long int* m, float* w,
                                MKL_Complex8* z, long long int ldz,
                                MKL_Complex8* work, float* rwork,
                                long long int* iwork, long long int* ifail );

long long int LAPACKE_zhpgvx_work( int matrix_layout, long long int itype, char jobz,
                                char range, char uplo, long long int n,
                                MKL_Complex16* ap,
                                MKL_Complex16* bp, double vl, double vu,
                                long long int il, long long int iu, double abstol,
                                long long int* m, double* w,
                                MKL_Complex16* z, long long int ldz,
                                MKL_Complex16* work, double* rwork,
                                long long int* iwork, long long int* ifail );


long long int LAPACKE_chprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* ap,
                                const MKL_Complex8* afp,
                                const long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zhprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs,
                                const MKL_Complex16* ap,
                                const MKL_Complex16* afp,
                                const long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_chpsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex8* ap,
                               long long int* ipiv, MKL_Complex8* b,
                               long long int ldb );

long long int LAPACKE_zhpsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex16* ap,
                               long long int* ipiv, MKL_Complex16* b,
                               long long int ldb );


long long int LAPACKE_chpsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex8* ap,
                                MKL_Complex8* afp, long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zhpsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex16* ap,
                                MKL_Complex16* afp, long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_chptrd_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* ap, float* d, float* e,
                                MKL_Complex8* tau );

long long int LAPACKE_zhptrd_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* ap, double* d, double* e,
                                MKL_Complex16* tau );


long long int LAPACKE_chptrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* ap, long long int* ipiv );

long long int LAPACKE_zhptrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* ap, long long int* ipiv );


long long int LAPACKE_chptri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* ap,
                                const long long int* ipiv,
                                MKL_Complex8* work );

long long int LAPACKE_zhptri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* ap,
                                const long long int* ipiv,
                                MKL_Complex16* work );


long long int LAPACKE_chptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* ap,
                                const long long int* ipiv, MKL_Complex8* b,
                                long long int ldb );

long long int LAPACKE_zhptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs,
                                const MKL_Complex16* ap,
                                const long long int* ipiv,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_shsein_work( int matrix_layout, char job, char eigsrc,
                                char initv, long long int* select,
                                long long int n, const float* h, long long int ldh,
                                float* wr, const float* wi, float* vl,
                                long long int ldvl, float* vr, long long int ldvr,
                                long long int mm, long long int* m, float* work,
                                long long int* ifaill, long long int* ifailr );

long long int LAPACKE_dhsein_work( int matrix_layout, char job, char eigsrc,
                                char initv, long long int* select,
                                long long int n, const double* h, long long int ldh,
                                double* wr, const double* wi, double* vl,
                                long long int ldvl, double* vr, long long int ldvr,
                                long long int mm, long long int* m, double* work,
                                long long int* ifaill, long long int* ifailr );

long long int LAPACKE_chsein_work( int matrix_layout, char job, char eigsrc,
                                char initv, const long long int* select,
                                long long int n, const MKL_Complex8* h,
                                long long int ldh, MKL_Complex8* w,
                                MKL_Complex8* vl, long long int ldvl,
                                MKL_Complex8* vr, long long int ldvr,
                                long long int mm, long long int* m,
                                MKL_Complex8* work, float* rwork,
                                long long int* ifaill, long long int* ifailr );

long long int LAPACKE_zhsein_work( int matrix_layout, char job, char eigsrc,
                                char initv, const long long int* select,
                                long long int n, const MKL_Complex16* h,
                                long long int ldh, MKL_Complex16* w,
                                MKL_Complex16* vl, long long int ldvl,
                                MKL_Complex16* vr, long long int ldvr,
                                long long int mm, long long int* m,
                                MKL_Complex16* work, double* rwork,
                                long long int* ifaill, long long int* ifailr );


long long int LAPACKE_shseqr_work( int matrix_layout, char job, char compz,
                                long long int n, long long int ilo, long long int ihi,
                                float* h, long long int ldh, float* wr, float* wi,
                                float* z, long long int ldz, float* work,
                                long long int lwork );

long long int LAPACKE_dhseqr_work( int matrix_layout, char job, char compz,
                                long long int n, long long int ilo, long long int ihi,
                                double* h, long long int ldh, double* wr,
                                double* wi, double* z, long long int ldz,
                                double* work, long long int lwork );

long long int LAPACKE_chseqr_work( int matrix_layout, char job, char compz,
                                long long int n, long long int ilo, long long int ihi,
                                MKL_Complex8* h, long long int ldh,
                                MKL_Complex8* w,
                                MKL_Complex8* z, long long int ldz,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zhseqr_work( int matrix_layout, char job, char compz,
                                long long int n, long long int ilo, long long int ihi,
                                MKL_Complex16* h, long long int ldh,
                                MKL_Complex16* w,
                                MKL_Complex16* z, long long int ldz,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_clacgv_work( long long int n, MKL_Complex8* x,
                                long long int incx );

long long int LAPACKE_zlacgv_work( long long int n, MKL_Complex16* x,
                                long long int incx );


long long int LAPACKE_slacpy_work( int matrix_layout, char uplo, long long int m,
                                long long int n, const float* a, long long int lda,
                                float* b, long long int ldb );

long long int LAPACKE_dlacpy_work( int matrix_layout, char uplo, long long int m,
                                long long int n, const double* a, long long int lda,
                                double* b, long long int ldb );

long long int LAPACKE_clacpy_work( int matrix_layout, char uplo, long long int m,
                                long long int n, const MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb );

long long int LAPACKE_zlacpy_work( int matrix_layout, char uplo, long long int m,
                                long long int n, const MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb );


long long int LAPACKE_zlag2c_work( int matrix_layout, long long int m, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                MKL_Complex8* sa, long long int ldsa );


long long int LAPACKE_slag2d_work( int matrix_layout, long long int m, long long int n,
                                const float* sa, long long int ldsa, double* a,
                                long long int lda );


long long int LAPACKE_dlag2s_work( int matrix_layout, long long int m, long long int n,
                                const double* a, long long int lda, float* sa,
                                long long int ldsa );


long long int LAPACKE_clag2z_work( int matrix_layout, long long int m, long long int n,
                                const MKL_Complex8* sa, long long int ldsa,
                                MKL_Complex16* a, long long int lda );


long long int LAPACKE_slagge_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku, const float* d,
                                float* a, long long int lda, long long int* iseed,
                                float* work );

long long int LAPACKE_dlagge_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku, const double* d,
                                double* a, long long int lda, long long int* iseed,
                                double* work );

long long int LAPACKE_clagge_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku, const float* d,
                                MKL_Complex8* a, long long int lda,
                                long long int* iseed, MKL_Complex8* work );

long long int LAPACKE_zlagge_work( int matrix_layout, long long int m, long long int n,
                                long long int kl, long long int ku, const double* d,
                                MKL_Complex16* a, long long int lda,
                                long long int* iseed,
                                MKL_Complex16* work );

long long int LAPACKE_claghe_work( int matrix_layout, long long int n, long long int k,
                                const float* d, MKL_Complex8* a,
                                long long int lda, long long int* iseed,
                                MKL_Complex8* work );

long long int LAPACKE_zlaghe_work( int matrix_layout, long long int n, long long int k,
                                const double* d, MKL_Complex16* a,
                                long long int lda, long long int* iseed,
                                MKL_Complex16* work );

long long int LAPACKE_slagsy_work( int matrix_layout, long long int n, long long int k,
                                const float* d, float* a, long long int lda,
                                long long int* iseed, float* work );

long long int LAPACKE_dlagsy_work( int matrix_layout, long long int n, long long int k,
                                const double* d, double* a, long long int lda,
                                long long int* iseed, double* work );

long long int LAPACKE_clagsy_work( int matrix_layout, long long int n, long long int k,
                                const float* d, MKL_Complex8* a,
                                long long int lda, long long int* iseed,
                                MKL_Complex8* work );

long long int LAPACKE_zlagsy_work( int matrix_layout, long long int n, long long int k,
                                const double* d, MKL_Complex16* a,
                                long long int lda, long long int* iseed,
                                MKL_Complex16* work );


long long int LAPACKE_slapmr_work( int matrix_layout, long long int forwrd,
                                long long int m, long long int n, float* x,
                                long long int ldx, long long int* k );

long long int LAPACKE_dlapmr_work( int matrix_layout, long long int forwrd,
                                long long int m, long long int n, double* x,
                                long long int ldx, long long int* k );

long long int LAPACKE_clapmr_work( int matrix_layout, long long int forwrd,
                                long long int m, long long int n,
                                MKL_Complex8* x, long long int ldx,
                                long long int* k );

long long int LAPACKE_zlapmr_work( int matrix_layout, long long int forwrd,
                                long long int m, long long int n,
                                MKL_Complex16* x, long long int ldx,
                                long long int* k );


long long int LAPACKE_slartgp_work( float f, float g, float* cs, float* sn,
                                 float* r );

long long int LAPACKE_dlartgp_work( double f, double g, double* cs, double* sn,
                                 double* r );


long long int LAPACKE_slartgs_work( float x, float y, float sigma, float* cs,
                                 float* sn );

long long int LAPACKE_dlartgs_work( double x, double y, double sigma, double* cs,
                                 double* sn );


float LAPACKE_slapy2_work( float x, float y );

double LAPACKE_dlapy2_work( double x, double y );


float LAPACKE_slapy3_work( float x, float y, float z );

double LAPACKE_dlapy3_work( double x, double y, double z );


float LAPACKE_slamch_work( char cmach );

double LAPACKE_dlamch_work( char cmach );


float LAPACKE_slange_work( int matrix_layout, char norm, long long int m,
                                long long int n, const float* a, long long int lda,
                                float* work );

double LAPACKE_dlange_work( int matrix_layout, char norm, long long int m,
                                long long int n, const double* a, long long int lda,
                                double* work );

float LAPACKE_clange_work( int matrix_layout, char norm, long long int m,
                                long long int n, const MKL_Complex8* a,
                                long long int lda, float* work );

double LAPACKE_zlange_work( int matrix_layout, char norm, long long int m,
                                long long int n, const MKL_Complex16* a,
                                long long int lda, double* work );


float LAPACKE_clanhe_work( int matrix_layout, char norm, char uplo,
                                long long int n, const MKL_Complex8* a,
                                long long int lda, float* work );

double LAPACKE_zlanhe_work( int matrix_layout, char norm, char uplo,
                                long long int n, const MKL_Complex16* a,
                                long long int lda, double* work );


float LAPACKE_slansy_work( int matrix_layout, char norm, char uplo,
                                long long int n, const float* a, long long int lda,
                                float* work );

double LAPACKE_dlansy_work( int matrix_layout, char norm, char uplo,
                                long long int n, const double* a, long long int lda,
                                double* work );

float LAPACKE_clansy_work( int matrix_layout, char norm, char uplo,
                                long long int n, const MKL_Complex8* a,
                                long long int lda, float* work );

double LAPACKE_zlansy_work( int matrix_layout, char norm, char uplo,
                                long long int n, const MKL_Complex16* a,
                                long long int lda, double* work );


float LAPACKE_slantr_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int m, long long int n, const float* a,
                                long long int lda, float* work );

double LAPACKE_dlantr_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int m, long long int n,
                                const double* a, long long int lda, double* work );

float LAPACKE_clantr_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int m, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                float* work );

double LAPACKE_zlantr_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int m, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                double* work );


long long int LAPACKE_slarfb_work( int matrix_layout, char side, char trans,
                                char direct, char storev, long long int m,
                                long long int n, long long int k, const float* v,
                                long long int ldv, const float* t, long long int ldt,
                                float* c, long long int ldc, float* work,
                                long long int ldwork );

long long int LAPACKE_dlarfb_work( int matrix_layout, char side, char trans,
                                char direct, char storev, long long int m,
                                long long int n, long long int k, const double* v,
                                long long int ldv, const double* t, long long int ldt,
                                double* c, long long int ldc, double* work,
                                long long int ldwork );

long long int LAPACKE_clarfb_work( int matrix_layout, char side, char trans,
                                char direct, char storev, long long int m,
                                long long int n, long long int k,
                                const MKL_Complex8* v, long long int ldv,
                                const MKL_Complex8* t, long long int ldt,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, long long int ldwork );

long long int LAPACKE_zlarfb_work( int matrix_layout, char side, char trans,
                                char direct, char storev, long long int m,
                                long long int n, long long int k,
                                const MKL_Complex16* v, long long int ldv,
                                const MKL_Complex16* t, long long int ldt,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work,
                                long long int ldwork );


long long int LAPACKE_slarfg_work( long long int n, float* alpha, float* x,
                                long long int incx, float* tau );

long long int LAPACKE_dlarfg_work( long long int n, double* alpha, double* x,
                                long long int incx, double* tau );

long long int LAPACKE_clarfg_work( long long int n, MKL_Complex8* alpha,
                                MKL_Complex8* x, long long int incx,
                                MKL_Complex8* tau );

long long int LAPACKE_zlarfg_work( long long int n, MKL_Complex16* alpha,
                                MKL_Complex16* x, long long int incx,
                                MKL_Complex16* tau );


long long int LAPACKE_slarft_work( int matrix_layout, char direct, char storev,
                                long long int n, long long int k, const float* v,
                                long long int ldv, const float* tau, float* t,
                                long long int ldt );

long long int LAPACKE_dlarft_work( int matrix_layout, char direct, char storev,
                                long long int n, long long int k, const double* v,
                                long long int ldv, const double* tau, double* t,
                                long long int ldt );

long long int LAPACKE_clarft_work( int matrix_layout, char direct, char storev,
                                long long int n, long long int k,
                                const MKL_Complex8* v, long long int ldv,
                                const MKL_Complex8* tau,
                                MKL_Complex8* t, long long int ldt );

long long int LAPACKE_zlarft_work( int matrix_layout, char direct, char storev,
                                long long int n, long long int k,
                                const MKL_Complex16* v, long long int ldv,
                                const MKL_Complex16* tau,
                                MKL_Complex16* t, long long int ldt );


long long int LAPACKE_slarfx_work( int matrix_layout, char side, long long int m,
                                long long int n, const float* v, float tau,
                                float* c, long long int ldc, float* work );

long long int LAPACKE_dlarfx_work( int matrix_layout, char side, long long int m,
                                long long int n, const double* v, double tau,
                                double* c, long long int ldc, double* work );

long long int LAPACKE_clarfx_work( int matrix_layout, char side, long long int m,
                                long long int n, const MKL_Complex8* v,
                                MKL_Complex8 tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work );

long long int LAPACKE_zlarfx_work( int matrix_layout, char side, long long int m,
                                long long int n, const MKL_Complex16* v,
                                MKL_Complex16 tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work );


long long int LAPACKE_slarnv_work( long long int idist, long long int* iseed,
                                long long int n, float* x );

long long int LAPACKE_dlarnv_work( long long int idist, long long int* iseed,
                                long long int n, double* x );

long long int LAPACKE_clarnv_work( long long int idist, long long int* iseed,
                                long long int n, MKL_Complex8* x );

long long int LAPACKE_zlarnv_work( long long int idist, long long int* iseed,
                                long long int n, MKL_Complex16* x );


long long int LAPACKE_slaset_work( int matrix_layout, char uplo, long long int m,
                                long long int n, float alpha, float beta, float* a,
                                long long int lda );

long long int LAPACKE_dlaset_work( int matrix_layout, char uplo, long long int m,
                                long long int n, double alpha, double beta,
                                double* a, long long int lda );

long long int LAPACKE_claset_work( int matrix_layout, char uplo, long long int m,
                                long long int n, MKL_Complex8 alpha,
                                MKL_Complex8 beta,
                                MKL_Complex8* a, long long int lda );

long long int LAPACKE_zlaset_work( int matrix_layout, char uplo, long long int m,
                                long long int n, MKL_Complex16 alpha,
                                MKL_Complex16 beta,
                                MKL_Complex16* a, long long int lda );


long long int LAPACKE_slasrt_work( char id, long long int n, float* d );

long long int LAPACKE_dlasrt_work( char id, long long int n, double* d );


long long int LAPACKE_slaswp_work( int matrix_layout, long long int n, float* a,
                                long long int lda, long long int k1, long long int k2,
                                const long long int* ipiv, long long int incx );

long long int LAPACKE_dlaswp_work( int matrix_layout, long long int n, double* a,
                                long long int lda, long long int k1, long long int k2,
                                const long long int* ipiv, long long int incx );

long long int LAPACKE_claswp_work( int matrix_layout, long long int n,
                                MKL_Complex8* a, long long int lda,
                                long long int k1, long long int k2,
                                const long long int* ipiv, long long int incx );

long long int LAPACKE_zlaswp_work( int matrix_layout, long long int n,
                                MKL_Complex16* a, long long int lda,
                                long long int k1, long long int k2,
                                const long long int* ipiv, long long int incx );


long long int LAPACKE_slatms_work( int matrix_layout, long long int m, long long int n,
                                char dist, long long int* iseed, char sym,
                                float* d, long long int mode, float cond,
                                float dmax, long long int kl, long long int ku,
                                char pack, float* a, long long int lda,
                                float* work );

long long int LAPACKE_dlatms_work( int matrix_layout, long long int m, long long int n,
                                char dist, long long int* iseed, char sym,
                                double* d, long long int mode, double cond,
                                double dmax, long long int kl, long long int ku,
                                char pack, double* a, long long int lda,
                                double* work );

long long int LAPACKE_clatms_work( int matrix_layout, long long int m, long long int n,
                                char dist, long long int* iseed, char sym,
                                float* d, long long int mode, float cond,
                                float dmax, long long int kl, long long int ku,
                                char pack, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* work );

long long int LAPACKE_zlatms_work( int matrix_layout, long long int m, long long int n,
                                char dist, long long int* iseed, char sym,
                                double* d, long long int mode, double cond,
                                double dmax, long long int kl, long long int ku,
                                char pack, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* work );


long long int LAPACKE_slauum_work( int matrix_layout, char uplo, long long int n,
                                float* a, long long int lda );

long long int LAPACKE_dlauum_work( int matrix_layout, char uplo, long long int n,
                                double* a, long long int lda );

long long int LAPACKE_clauum_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda );

long long int LAPACKE_zlauum_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda );


long long int LAPACKE_sopgtr_work( int matrix_layout, char uplo, long long int n,
                                const float* ap, const float* tau, float* q,
                                long long int ldq, float* work );

long long int LAPACKE_dopgtr_work( int matrix_layout, char uplo, long long int n,
                                const double* ap, const double* tau, double* q,
                                long long int ldq, double* work );


long long int LAPACKE_sopmtr_work( int matrix_layout, char side, char uplo,
                                char trans, long long int m, long long int n,
                                const float* ap, const float* tau, float* c,
                                long long int ldc, float* work );

long long int LAPACKE_dopmtr_work( int matrix_layout, char side, char uplo,
                                char trans, long long int m, long long int n,
                                const double* ap, const double* tau, double* c,
                                long long int ldc, double* work );


long long int LAPACKE_sorbdb_work( int matrix_layout, char trans, char signs,
                                long long int m, long long int p, long long int q,
                                float* x11, long long int ldx11, float* x12,
                                long long int ldx12, float* x21, long long int ldx21,
                                float* x22, long long int ldx22, float* theta,
                                float* phi, float* taup1, float* taup2,
                                float* tauq1, float* tauq2, float* work,
                                long long int lwork );

long long int LAPACKE_dorbdb_work( int matrix_layout, char trans, char signs,
                                long long int m, long long int p, long long int q,
                                double* x11, long long int ldx11, double* x12,
                                long long int ldx12, double* x21, long long int ldx21,
                                double* x22, long long int ldx22, double* theta,
                                double* phi, double* taup1, double* taup2,
                                double* tauq1, double* tauq2, double* work,
                                long long int lwork );


long long int LAPACKE_sorcsd_work( int matrix_layout, char jobu1, char jobu2,
                                char jobv1t, char jobv2t, char trans,
                                char signs, long long int m, long long int p,
                                long long int q, float* x11, long long int ldx11,
                                float* x12, long long int ldx12, float* x21,
                                long long int ldx21, float* x22, long long int ldx22,
                                float* theta, float* u1, long long int ldu1,
                                float* u2, long long int ldu2, float* v1t,
                                long long int ldv1t, float* v2t, long long int ldv2t,
                                float* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_dorcsd_work( int matrix_layout, char jobu1, char jobu2,
                                char jobv1t, char jobv2t, char trans,
                                char signs, long long int m, long long int p,
                                long long int q, double* x11, long long int ldx11,
                                double* x12, long long int ldx12, double* x21,
                                long long int ldx21, double* x22, long long int ldx22,
                                double* theta, double* u1, long long int ldu1,
                                double* u2, long long int ldu2, double* v1t,
                                long long int ldv1t, double* v2t, long long int ldv2t,
                                double* work, long long int lwork,
                                long long int* iwork );


long long int LAPACKE_sorgbr_work( int matrix_layout, char vect, long long int m,
                                long long int n, long long int k, float* a,
                                long long int lda, const float* tau, float* work,
                                long long int lwork );

long long int LAPACKE_dorgbr_work( int matrix_layout, char vect, long long int m,
                                long long int n, long long int k, double* a,
                                long long int lda, const double* tau, double* work,
                                long long int lwork );


long long int LAPACKE_sorghr_work( int matrix_layout, long long int n, long long int ilo,
                                long long int ihi, float* a, long long int lda,
                                const float* tau, float* work,
                                long long int lwork );

long long int LAPACKE_dorghr_work( int matrix_layout, long long int n, long long int ilo,
                                long long int ihi, double* a, long long int lda,
                                const double* tau, double* work,
                                long long int lwork );


long long int LAPACKE_sorglq_work( int matrix_layout, long long int m, long long int n,
                                long long int k, float* a, long long int lda,
                                const float* tau, float* work,
                                long long int lwork );

long long int LAPACKE_dorglq_work( int matrix_layout, long long int m, long long int n,
                                long long int k, double* a, long long int lda,
                                const double* tau, double* work,
                                long long int lwork );


long long int LAPACKE_sorgql_work( int matrix_layout, long long int m, long long int n,
                                long long int k, float* a, long long int lda,
                                const float* tau, float* work,
                                long long int lwork );

long long int LAPACKE_dorgql_work( int matrix_layout, long long int m, long long int n,
                                long long int k, double* a, long long int lda,
                                const double* tau, double* work,
                                long long int lwork );


long long int LAPACKE_sorgqr_work( int matrix_layout, long long int m, long long int n,
                                long long int k, float* a, long long int lda,
                                const float* tau, float* work,
                                long long int lwork );

long long int LAPACKE_dorgqr_work( int matrix_layout, long long int m, long long int n,
                                long long int k, double* a, long long int lda,
                                const double* tau, double* work,
                                long long int lwork );


long long int LAPACKE_sorgrq_work( int matrix_layout, long long int m, long long int n,
                                long long int k, float* a, long long int lda,
                                const float* tau, float* work,
                                long long int lwork );

long long int LAPACKE_dorgrq_work( int matrix_layout, long long int m, long long int n,
                                long long int k, double* a, long long int lda,
                                const double* tau, double* work,
                                long long int lwork );


long long int LAPACKE_sorgtr_work( int matrix_layout, char uplo, long long int n,
                                float* a, long long int lda, const float* tau,
                                float* work, long long int lwork );

long long int LAPACKE_dorgtr_work( int matrix_layout, char uplo, long long int n,
                                double* a, long long int lda, const double* tau,
                                double* work, long long int lwork );


long long int LAPACKE_sormbr_work( int matrix_layout, char vect, char side,
                                char trans, long long int m, long long int n,
                                long long int k, const float* a, long long int lda,
                                const float* tau, float* c, long long int ldc,
                                float* work, long long int lwork );

long long int LAPACKE_dormbr_work( int matrix_layout, char vect, char side,
                                char trans, long long int m, long long int n,
                                long long int k, const double* a, long long int lda,
                                const double* tau, double* c, long long int ldc,
                                double* work, long long int lwork );


long long int LAPACKE_sormhr_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int ilo,
                                long long int ihi, const float* a, long long int lda,
                                const float* tau, float* c, long long int ldc,
                                float* work, long long int lwork );

long long int LAPACKE_dormhr_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int ilo,
                                long long int ihi, const double* a, long long int lda,
                                const double* tau, double* c, long long int ldc,
                                double* work, long long int lwork );


long long int LAPACKE_sormlq_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const float* a, long long int lda,
                                const float* tau, float* c, long long int ldc,
                                float* work, long long int lwork );

long long int LAPACKE_dormlq_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const double* a, long long int lda,
                                const double* tau, double* c, long long int ldc,
                                double* work, long long int lwork );


long long int LAPACKE_sormql_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const float* a, long long int lda,
                                const float* tau, float* c, long long int ldc,
                                float* work, long long int lwork );

long long int LAPACKE_dormql_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const double* a, long long int lda,
                                const double* tau, double* c, long long int ldc,
                                double* work, long long int lwork );


long long int LAPACKE_sormqr_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const float* a, long long int lda,
                                const float* tau, float* c, long long int ldc,
                                float* work, long long int lwork );

long long int LAPACKE_dormqr_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const double* a, long long int lda,
                                const double* tau, double* c, long long int ldc,
                                double* work, long long int lwork );


long long int LAPACKE_sormrq_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const float* a, long long int lda,
                                const float* tau, float* c, long long int ldc,
                                float* work, long long int lwork );

long long int LAPACKE_dormrq_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const double* a, long long int lda,
                                const double* tau, double* c, long long int ldc,
                                double* work, long long int lwork );


long long int LAPACKE_sormrz_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                long long int l, const float* a, long long int lda,
                                const float* tau, float* c, long long int ldc,
                                float* work, long long int lwork );

long long int LAPACKE_dormrz_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                long long int l, const double* a, long long int lda,
                                const double* tau, double* c, long long int ldc,
                                double* work, long long int lwork );


long long int LAPACKE_sormtr_work( int matrix_layout, char side, char uplo,
                                char trans, long long int m, long long int n,
                                const float* a, long long int lda,
                                const float* tau, float* c, long long int ldc,
                                float* work, long long int lwork );

long long int LAPACKE_dormtr_work( int matrix_layout, char side, char uplo,
                                char trans, long long int m, long long int n,
                                const double* a, long long int lda,
                                const double* tau, double* c, long long int ldc,
                                double* work, long long int lwork );


long long int LAPACKE_spbcon_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, const float* ab, long long int ldab,
                                float anorm, float* rcond, float* work,
                                long long int* iwork );

long long int LAPACKE_dpbcon_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, const double* ab,
                                long long int ldab, double anorm, double* rcond,
                                double* work, long long int* iwork );

long long int LAPACKE_cpbcon_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, const MKL_Complex8* ab,
                                long long int ldab, float anorm, float* rcond,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zpbcon_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, const MKL_Complex16* ab,
                                long long int ldab, double anorm, double* rcond,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_spbequ_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, const float* ab, long long int ldab,
                                float* s, float* scond, float* amax );

long long int LAPACKE_dpbequ_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, const double* ab,
                                long long int ldab, double* s, double* scond,
                                double* amax );

long long int LAPACKE_cpbequ_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, const MKL_Complex8* ab,
                                long long int ldab, float* s, float* scond,
                                float* amax );

long long int LAPACKE_zpbequ_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, const MKL_Complex16* ab,
                                long long int ldab, double* s, double* scond,
                                double* amax );


long long int LAPACKE_spbrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, long long int nrhs, const float* ab,
                                long long int ldab, const float* afb,
                                long long int ldafb, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* ferr, float* berr, float* work,
                                long long int* iwork );

long long int LAPACKE_dpbrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, long long int nrhs,
                                const double* ab, long long int ldab,
                                const double* afb, long long int ldafb,
                                const double* b, long long int ldb, double* x,
                                long long int ldx, double* ferr, double* berr,
                                double* work, long long int* iwork );

long long int LAPACKE_cpbrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, long long int nrhs,
                                const MKL_Complex8* ab, long long int ldab,
                                const MKL_Complex8* afb,
                                long long int ldafb, const MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* x,
                                long long int ldx, float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zpbrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, long long int nrhs,
                                const MKL_Complex16* ab,
                                long long int ldab,
                                const MKL_Complex16* afb,
                                long long int ldafb,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_spbstf_work( int matrix_layout, char uplo, long long int n,
                                long long int kb, float* bb, long long int ldbb );

long long int LAPACKE_dpbstf_work( int matrix_layout, char uplo, long long int n,
                                long long int kb, double* bb, long long int ldbb );

long long int LAPACKE_cpbstf_work( int matrix_layout, char uplo, long long int n,
                                long long int kb, MKL_Complex8* bb,
                                long long int ldbb );

long long int LAPACKE_zpbstf_work( int matrix_layout, char uplo, long long int n,
                                long long int kb, MKL_Complex16* bb,
                                long long int ldbb );


long long int LAPACKE_spbsv_work( int matrix_layout, char uplo, long long int n,
                               long long int kd, long long int nrhs, float* ab,
                               long long int ldab, float* b, long long int ldb );

long long int LAPACKE_dpbsv_work( int matrix_layout, char uplo, long long int n,
                               long long int kd, long long int nrhs, double* ab,
                               long long int ldab, double* b, long long int ldb );

long long int LAPACKE_cpbsv_work( int matrix_layout, char uplo, long long int n,
                               long long int kd, long long int nrhs,
                               MKL_Complex8* ab, long long int ldab,
                               MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zpbsv_work( int matrix_layout, char uplo, long long int n,
                               long long int kd, long long int nrhs,
                               MKL_Complex16* ab, long long int ldab,
                               MKL_Complex16* b, long long int ldb );


long long int LAPACKE_spbsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int kd, long long int nrhs,
                                float* ab, long long int ldab, float* afb,
                                long long int ldafb, char* equed, float* s,
                                float* b, long long int ldb, float* x,
                                long long int ldx, float* rcond, float* ferr,
                                float* berr, float* work, long long int* iwork );

long long int LAPACKE_dpbsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int kd, long long int nrhs,
                                double* ab, long long int ldab, double* afb,
                                long long int ldafb, char* equed, double* s,
                                double* b, long long int ldb, double* x,
                                long long int ldx, double* rcond, double* ferr,
                                double* berr, double* work, long long int* iwork );

long long int LAPACKE_cpbsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int kd, long long int nrhs,
                                MKL_Complex8* ab, long long int ldab,
                                MKL_Complex8* afb, long long int ldafb,
                                char* equed, float* s, MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* x,
                                long long int ldx, float* rcond, float* ferr,
                                float* berr, MKL_Complex8* work,
                                float* rwork );

long long int LAPACKE_zpbsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int kd, long long int nrhs,
                                MKL_Complex16* ab, long long int ldab,
                                MKL_Complex16* afb, long long int ldafb,
                                char* equed, double* s,
                                MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_spbtrf_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, float* ab, long long int ldab );

long long int LAPACKE_dpbtrf_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, double* ab, long long int ldab );

long long int LAPACKE_cpbtrf_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, MKL_Complex8* ab,
                                long long int ldab );

long long int LAPACKE_zpbtrf_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, MKL_Complex16* ab,
                                long long int ldab );


long long int LAPACKE_spbtrs_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, long long int nrhs, const float* ab,
                                long long int ldab, float* b, long long int ldb );

long long int LAPACKE_dpbtrs_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, long long int nrhs,
                                const double* ab, long long int ldab, double* b,
                                long long int ldb );

long long int LAPACKE_cpbtrs_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, long long int nrhs,
                                const MKL_Complex8* ab, long long int ldab,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zpbtrs_work( int matrix_layout, char uplo, long long int n,
                                long long int kd, long long int nrhs,
                                const MKL_Complex16* ab,
                                long long int ldab, MKL_Complex16* b,
                                long long int ldb );


long long int LAPACKE_spftrf_work( int matrix_layout, char transr, char uplo,
                                long long int n, float* a );

long long int LAPACKE_dpftrf_work( int matrix_layout, char transr, char uplo,
                                long long int n, double* a );

long long int LAPACKE_cpftrf_work( int matrix_layout, char transr, char uplo,
                                long long int n, MKL_Complex8* a );

long long int LAPACKE_zpftrf_work( int matrix_layout, char transr, char uplo,
                                long long int n, MKL_Complex16* a );


long long int LAPACKE_spftri_work( int matrix_layout, char transr, char uplo,
                                long long int n, float* a );

long long int LAPACKE_dpftri_work( int matrix_layout, char transr, char uplo,
                                long long int n, double* a );

long long int LAPACKE_cpftri_work( int matrix_layout, char transr, char uplo,
                                long long int n, MKL_Complex8* a );

long long int LAPACKE_zpftri_work( int matrix_layout, char transr, char uplo,
                                long long int n, MKL_Complex16* a );


long long int LAPACKE_spftrs_work( int matrix_layout, char transr, char uplo,
                                long long int n, long long int nrhs, const float* a,
                                float* b, long long int ldb );

long long int LAPACKE_dpftrs_work( int matrix_layout, char transr, char uplo,
                                long long int n, long long int nrhs, const double* a,
                                double* b, long long int ldb );

long long int LAPACKE_cpftrs_work( int matrix_layout, char transr, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex8* a,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zpftrs_work( int matrix_layout, char transr, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex16* a,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_spocon_work( int matrix_layout, char uplo, long long int n,
                                const float* a, long long int lda, float anorm,
                                float* rcond, float* work, long long int* iwork );

long long int LAPACKE_dpocon_work( int matrix_layout, char uplo, long long int n,
                                const double* a, long long int lda, double anorm,
                                double* rcond, double* work,
                                long long int* iwork );

long long int LAPACKE_cpocon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                float anorm, float* rcond,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zpocon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                double anorm, double* rcond,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_spoequ_work( int matrix_layout, long long int n, const float* a,
                                long long int lda, float* s, float* scond,
                                float* amax );

long long int LAPACKE_dpoequ_work( int matrix_layout, long long int n, const double* a,
                                long long int lda, double* s, double* scond,
                                double* amax );

long long int LAPACKE_cpoequ_work( int matrix_layout, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                float* s, float* scond, float* amax );

long long int LAPACKE_zpoequ_work( int matrix_layout, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                double* s, double* scond, double* amax );


long long int LAPACKE_spoequb_work( int matrix_layout, long long int n, const float* a,
                                 long long int lda, float* s, float* scond,
                                 float* amax );

long long int LAPACKE_dpoequb_work( int matrix_layout, long long int n,
                                 const double* a, long long int lda, double* s,
                                 double* scond, double* amax );

long long int LAPACKE_cpoequb_work( int matrix_layout, long long int n,
                                 const MKL_Complex8* a, long long int lda,
                                 float* s, float* scond, float* amax );

long long int LAPACKE_zpoequb_work( int matrix_layout, long long int n,
                                 const MKL_Complex16* a, long long int lda,
                                 double* s, double* scond, double* amax );


long long int LAPACKE_sporfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* a, long long int lda,
                                const float* af, long long int ldaf,
                                const float* b, long long int ldb, float* x,
                                long long int ldx, float* ferr, float* berr,
                                float* work, long long int* iwork );

long long int LAPACKE_dporfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* a,
                                long long int lda, const double* af,
                                long long int ldaf, const double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* ferr, double* berr, double* work,
                                long long int* iwork );

long long int LAPACKE_cporfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* af,
                                long long int ldaf, const MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* x,
                                long long int ldx, float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zporfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex16* a,
                                long long int lda, const MKL_Complex16* af,
                                long long int ldaf, const MKL_Complex16* b,
                                long long int ldb, MKL_Complex16* x,
                                long long int ldx, double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sporfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs, const float* a,
                                 long long int lda, const float* af,
                                 long long int ldaf, const float* s,
                                 const float* b, long long int ldb, float* x,
                                 long long int ldx, float* rcond, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, float* work,
                                 long long int* iwork );

long long int LAPACKE_dporfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs, const double* a,
                                 long long int lda, const double* af,
                                 long long int ldaf, const double* s,
                                 const double* b, long long int ldb, double* x,
                                 long long int ldx, double* rcond, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, double* work,
                                 long long int* iwork );

long long int LAPACKE_cporfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs,
                                 const MKL_Complex8* a, long long int lda,
                                 const MKL_Complex8* af,
                                 long long int ldaf, const float* s,
                                 const MKL_Complex8* b, long long int ldb,
                                 MKL_Complex8* x, long long int ldx,
                                 float* rcond, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, MKL_Complex8* work,
                                 float* rwork );

long long int LAPACKE_zporfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs,
                                 const MKL_Complex16* a, long long int lda,
                                 const MKL_Complex16* af,
                                 long long int ldaf, const double* s,
                                 const MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* x, long long int ldx,
                                 double* rcond, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, MKL_Complex16* work,
                                 double* rwork );


long long int LAPACKE_sposv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, float* a, long long int lda,
                               float* b, long long int ldb );

long long int LAPACKE_dposv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, double* a, long long int lda,
                               double* b, long long int ldb );

long long int LAPACKE_cposv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex8* a,
                               long long int lda, MKL_Complex8* b,
                               long long int ldb );

long long int LAPACKE_zposv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex16* a,
                               long long int lda, MKL_Complex16* b,
                               long long int ldb );

long long int LAPACKE_dsposv_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, double* a, long long int lda,
                                double* b, long long int ldb, double* x,
                                long long int ldx, double* work, float* swork,
                                long long int* iter );

long long int LAPACKE_zcposv_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb, MKL_Complex16* x,
                                long long int ldx, MKL_Complex16* work,
                                MKL_Complex8* swork, double* rwork,
                                long long int* iter );


long long int LAPACKE_sposvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs, float* a,
                                long long int lda, float* af, long long int ldaf,
                                char* equed, float* s, float* b, long long int ldb,
                                float* x, long long int ldx, float* rcond,
                                float* ferr, float* berr, float* work,
                                long long int* iwork );

long long int LAPACKE_dposvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs, double* a,
                                long long int lda, double* af, long long int ldaf,
                                char* equed, double* s, double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                double* work, long long int* iwork );

long long int LAPACKE_cposvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* af, long long int ldaf,
                                char* equed, float* s, MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* x,
                                long long int ldx, float* rcond, float* ferr,
                                float* berr, MKL_Complex8* work,
                                float* rwork );

long long int LAPACKE_zposvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* af, long long int ldaf,
                                char* equed, double* s,
                                MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sposvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs, float* a,
                                 long long int lda, float* af, long long int ldaf,
                                 char* equed, float* s, float* b,
                                 long long int ldb, float* x, long long int ldx,
                                 float* rcond, float* rpvgrw, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, float* work,
                                 long long int* iwork );

long long int LAPACKE_dposvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs, double* a,
                                 long long int lda, double* af, long long int ldaf,
                                 char* equed, double* s, double* b,
                                 long long int ldb, double* x, long long int ldx,
                                 double* rcond, double* rpvgrw, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, double* work,
                                 long long int* iwork );

long long int LAPACKE_cposvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs,
                                 MKL_Complex8* a, long long int lda,
                                 MKL_Complex8* af, long long int ldaf,
                                 char* equed, float* s, MKL_Complex8* b,
                                 long long int ldb, MKL_Complex8* x,
                                 long long int ldx, float* rcond, float* rpvgrw,
                                 float* berr, long long int n_err_bnds,
                                 float* err_bnds_norm, float* err_bnds_comp,
                                 long long int nparams, float* params,
                                 MKL_Complex8* work, float* rwork );

long long int LAPACKE_zposvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs,
                                 MKL_Complex16* a, long long int lda,
                                 MKL_Complex16* af, long long int ldaf,
                                 char* equed, double* s,
                                 MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* x, long long int ldx,
                                 double* rcond, double* rpvgrw, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, MKL_Complex16* work,
                                 double* rwork );


long long int LAPACKE_spotrf_work( int matrix_layout, char uplo, long long int n,
                                float* a, long long int lda );

long long int LAPACKE_dpotrf_work( int matrix_layout, char uplo, long long int n,
                                double* a, long long int lda );

long long int LAPACKE_cpotrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda );

long long int LAPACKE_zpotrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda );


long long int LAPACKE_spotri_work( int matrix_layout, char uplo, long long int n,
                                float* a, long long int lda );

long long int LAPACKE_dpotri_work( int matrix_layout, char uplo, long long int n,
                                double* a, long long int lda );

long long int LAPACKE_cpotri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda );

long long int LAPACKE_zpotri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda );


long long int LAPACKE_spotrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* a, long long int lda,
                                float* b, long long int ldb );

long long int LAPACKE_dpotrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* a,
                                long long int lda, double* b, long long int ldb );

long long int LAPACKE_cpotrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb );

long long int LAPACKE_zpotrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb );


long long int LAPACKE_sppcon_work( int matrix_layout, char uplo, long long int n,
                                const float* ap, float anorm, float* rcond,
                                float* work, long long int* iwork );

long long int LAPACKE_dppcon_work( int matrix_layout, char uplo, long long int n,
                                const double* ap, double anorm, double* rcond,
                                double* work, long long int* iwork );

long long int LAPACKE_cppcon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* ap, float anorm,
                                float* rcond, MKL_Complex8* work,
                                float* rwork );

long long int LAPACKE_zppcon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* ap, double anorm,
                                double* rcond, MKL_Complex16* work,
                                double* rwork );


long long int LAPACKE_sppequ_work( int matrix_layout, char uplo, long long int n,
                                const float* ap, float* s, float* scond,
                                float* amax );

long long int LAPACKE_dppequ_work( int matrix_layout, char uplo, long long int n,
                                const double* ap, double* s, double* scond,
                                double* amax );

long long int LAPACKE_cppequ_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* ap, float* s,
                                float* scond, float* amax );

long long int LAPACKE_zppequ_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* ap, double* s,
                                double* scond, double* amax );


long long int LAPACKE_spprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* ap,
                                const float* afp, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* ferr, float* berr, float* work,
                                long long int* iwork );

long long int LAPACKE_dpprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* ap,
                                const double* afp, const double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* ferr, double* berr, double* work,
                                long long int* iwork );

long long int LAPACKE_cpprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* ap,
                                const MKL_Complex8* afp,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zpprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs,
                                const MKL_Complex16* ap,
                                const MKL_Complex16* afp,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sppsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, float* ap, float* b,
                               long long int ldb );

long long int LAPACKE_dppsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, double* ap, double* b,
                               long long int ldb );

long long int LAPACKE_cppsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex8* ap,
                               MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zppsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex16* ap,
                               MKL_Complex16* b, long long int ldb );


long long int LAPACKE_sppsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs, float* ap,
                                float* afp, char* equed, float* s, float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                float* work, long long int* iwork );

long long int LAPACKE_dppsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs, double* ap,
                                double* afp, char* equed, double* s, double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                double* work, long long int* iwork );

long long int LAPACKE_cppsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                MKL_Complex8* ap,
                                MKL_Complex8* afp, char* equed,
                                float* s, MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* x,
                                long long int ldx, float* rcond, float* ferr,
                                float* berr, MKL_Complex8* work,
                                float* rwork );

long long int LAPACKE_zppsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                MKL_Complex16* ap,
                                MKL_Complex16* afp, char* equed,
                                double* s, MKL_Complex16* b,
                                long long int ldb, MKL_Complex16* x,
                                long long int ldx, double* rcond, double* ferr,
                                double* berr, MKL_Complex16* work,
                                double* rwork );


long long int LAPACKE_spptrf_work( int matrix_layout, char uplo, long long int n,
                                float* ap );

long long int LAPACKE_dpptrf_work( int matrix_layout, char uplo, long long int n,
                                double* ap );

long long int LAPACKE_cpptrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* ap );

long long int LAPACKE_zpptrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* ap );


long long int LAPACKE_spptri_work( int matrix_layout, char uplo, long long int n,
                                float* ap );

long long int LAPACKE_dpptri_work( int matrix_layout, char uplo, long long int n,
                                double* ap );

long long int LAPACKE_cpptri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* ap );

long long int LAPACKE_zpptri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* ap );


long long int LAPACKE_spptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* ap, float* b,
                                long long int ldb );

long long int LAPACKE_dpptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* ap, double* b,
                                long long int ldb );

long long int LAPACKE_cpptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* ap,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zpptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs,
                                const MKL_Complex16* ap,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_spstrf_work( int matrix_layout, char uplo, long long int n,
                                float* a, long long int lda, long long int* piv,
                                long long int* rank, float tol, float* work );

long long int LAPACKE_dpstrf_work( int matrix_layout, char uplo, long long int n,
                                double* a, long long int lda, long long int* piv,
                                long long int* rank, double tol, double* work );

long long int LAPACKE_cpstrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                long long int* piv, long long int* rank, float tol,
                                float* work );

long long int LAPACKE_zpstrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                long long int* piv, long long int* rank, double tol,
                                double* work );


long long int LAPACKE_sptcon_work( long long int n, const float* d, const float* e,
                                float anorm, float* rcond, float* work );

long long int LAPACKE_dptcon_work( long long int n, const double* d, const double* e,
                                double anorm, double* rcond, double* work );

long long int LAPACKE_cptcon_work( long long int n, const float* d,
                                const MKL_Complex8* e, float anorm,
                                float* rcond, float* work );

long long int LAPACKE_zptcon_work( long long int n, const double* d,
                                const MKL_Complex16* e, double anorm,
                                double* rcond, double* work );


long long int LAPACKE_spteqr_work( int matrix_layout, char compz, long long int n,
                                float* d, float* e, float* z, long long int ldz,
                                float* work );

long long int LAPACKE_dpteqr_work( int matrix_layout, char compz, long long int n,
                                double* d, double* e, double* z, long long int ldz,
                                double* work );

long long int LAPACKE_cpteqr_work( int matrix_layout, char compz, long long int n,
                                float* d, float* e, MKL_Complex8* z,
                                long long int ldz, float* work );

long long int LAPACKE_zpteqr_work( int matrix_layout, char compz, long long int n,
                                double* d, double* e, MKL_Complex16* z,
                                long long int ldz, double* work );


long long int LAPACKE_sptrfs_work( int matrix_layout, long long int n, long long int nrhs,
                                const float* d, const float* e, const float* df,
                                const float* ef, const float* b, long long int ldb,
                                float* x, long long int ldx, float* ferr,
                                float* berr, float* work );

long long int LAPACKE_dptrfs_work( int matrix_layout, long long int n, long long int nrhs,
                                const double* d, const double* e,
                                const double* df, const double* ef,
                                const double* b, long long int ldb, double* x,
                                long long int ldx, double* ferr, double* berr,
                                double* work );

long long int LAPACKE_cptrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* d,
                                const MKL_Complex8* e, const float* df,
                                const MKL_Complex8* ef,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zptrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* d,
                                const MKL_Complex16* e,
                                const double* df,
                                const MKL_Complex16* ef,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sptsv_work( int matrix_layout, long long int n, long long int nrhs,
                               float* d, float* e, float* b, long long int ldb );

long long int LAPACKE_dptsv_work( int matrix_layout, long long int n, long long int nrhs,
                               double* d, double* e, double* b,
                               long long int ldb );

long long int LAPACKE_cptsv_work( int matrix_layout, long long int n, long long int nrhs,
                               float* d, MKL_Complex8* e,
                               MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zptsv_work( int matrix_layout, long long int n, long long int nrhs,
                               double* d, MKL_Complex16* e,
                               MKL_Complex16* b, long long int ldb );


long long int LAPACKE_sptsvx_work( int matrix_layout, char fact, long long int n,
                                long long int nrhs, const float* d, const float* e,
                                float* df, float* ef, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                float* work );

long long int LAPACKE_dptsvx_work( int matrix_layout, char fact, long long int n,
                                long long int nrhs, const double* d,
                                const double* e, double* df, double* ef,
                                const double* b, long long int ldb, double* x,
                                long long int ldx, double* rcond, double* ferr,
                                double* berr, double* work );

long long int LAPACKE_cptsvx_work( int matrix_layout, char fact, long long int n,
                                long long int nrhs, const float* d,
                                const MKL_Complex8* e, float* df,
                                MKL_Complex8* ef,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zptsvx_work( int matrix_layout, char fact, long long int n,
                                long long int nrhs, const double* d,
                                const MKL_Complex16* e, double* df,
                                MKL_Complex16* ef,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_spttrf_work( long long int n, float* d, float* e );

long long int LAPACKE_dpttrf_work( long long int n, double* d, double* e );

long long int LAPACKE_cpttrf_work( long long int n, float* d,
                                MKL_Complex8* e );

long long int LAPACKE_zpttrf_work( long long int n, double* d,
                                MKL_Complex16* e );


long long int LAPACKE_spttrs_work( int matrix_layout, long long int n, long long int nrhs,
                                const float* d, const float* e, float* b,
                                long long int ldb );

long long int LAPACKE_dpttrs_work( int matrix_layout, long long int n, long long int nrhs,
                                const double* d, const double* e, double* b,
                                long long int ldb );

long long int LAPACKE_cpttrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* d,
                                const MKL_Complex8* e,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zpttrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* d,
                                const MKL_Complex16* e,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_ssbev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, long long int kd, float* ab,
                               long long int ldab, float* w, float* z,
                               long long int ldz, float* work );

long long int LAPACKE_dsbev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, long long int kd, double* ab,
                               long long int ldab, double* w, double* z,
                               long long int ldz, double* work );


long long int LAPACKE_ssbevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, long long int kd, float* ab,
                                long long int ldab, float* w, float* z,
                                long long int ldz, float* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_dsbevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, long long int kd, double* ab,
                                long long int ldab, double* w, double* z,
                                long long int ldz, double* work, long long int lwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_ssbevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, long long int kd,
                                float* ab, long long int ldab, float* q,
                                long long int ldq, float vl, float vu,
                                long long int il, long long int iu, float abstol,
                                long long int* m, float* w, float* z,
                                long long int ldz, float* work, long long int* iwork,
                                long long int* ifail );

long long int LAPACKE_dsbevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, long long int kd,
                                double* ab, long long int ldab, double* q,
                                long long int ldq, double vl, double vu,
                                long long int il, long long int iu, double abstol,
                                long long int* m, double* w, double* z,
                                long long int ldz, double* work, long long int* iwork,
                                long long int* ifail );


long long int LAPACKE_ssbgst_work( int matrix_layout, char vect, char uplo,
                                long long int n, long long int ka, long long int kb,
                                float* ab, long long int ldab, const float* bb,
                                long long int ldbb, float* x, long long int ldx,
                                float* work );

long long int LAPACKE_dsbgst_work( int matrix_layout, char vect, char uplo,
                                long long int n, long long int ka, long long int kb,
                                double* ab, long long int ldab, const double* bb,
                                long long int ldbb, double* x, long long int ldx,
                                double* work );


long long int LAPACKE_ssbgv_work( int matrix_layout, char jobz, char uplo,
                               long long int n, long long int ka, long long int kb,
                               float* ab, long long int ldab, float* bb,
                               long long int ldbb, float* w, float* z,
                               long long int ldz, float* work );

long long int LAPACKE_dsbgv_work( int matrix_layout, char jobz, char uplo,
                               long long int n, long long int ka, long long int kb,
                               double* ab, long long int ldab, double* bb,
                               long long int ldbb, double* w, double* z,
                               long long int ldz, double* work );


long long int LAPACKE_ssbgvd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, long long int ka, long long int kb,
                                float* ab, long long int ldab, float* bb,
                                long long int ldbb, float* w, float* z,
                                long long int ldz, float* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_dsbgvd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, long long int ka, long long int kb,
                                double* ab, long long int ldab, double* bb,
                                long long int ldbb, double* w, double* z,
                                long long int ldz, double* work, long long int lwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_ssbgvx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, long long int ka,
                                long long int kb, float* ab, long long int ldab,
                                float* bb, long long int ldbb, float* q,
                                long long int ldq, float vl, float vu,
                                long long int il, long long int iu, float abstol,
                                long long int* m, float* w, float* z,
                                long long int ldz, float* work, long long int* iwork,
                                long long int* ifail );

long long int LAPACKE_dsbgvx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, long long int ka,
                                long long int kb, double* ab, long long int ldab,
                                double* bb, long long int ldbb, double* q,
                                long long int ldq, double vl, double vu,
                                long long int il, long long int iu, double abstol,
                                long long int* m, double* w, double* z,
                                long long int ldz, double* work, long long int* iwork,
                                long long int* ifail );


long long int LAPACKE_ssbtrd_work( int matrix_layout, char vect, char uplo,
                                long long int n, long long int kd, float* ab,
                                long long int ldab, float* d, float* e, float* q,
                                long long int ldq, float* work );

long long int LAPACKE_dsbtrd_work( int matrix_layout, char vect, char uplo,
                                long long int n, long long int kd, double* ab,
                                long long int ldab, double* d, double* e,
                                double* q, long long int ldq, double* work );


long long int LAPACKE_ssfrk_work( int matrix_layout, char transr, char uplo,
                               char trans, long long int n, long long int k,
                               float alpha, const float* a, long long int lda,
                               float beta, float* c );

long long int LAPACKE_dsfrk_work( int matrix_layout, char transr, char uplo,
                               char trans, long long int n, long long int k,
                               double alpha, const double* a, long long int lda,
                               double beta, double* c );


long long int LAPACKE_sspcon_work( int matrix_layout, char uplo, long long int n,
                                const float* ap, const long long int* ipiv,
                                float anorm, float* rcond, float* work,
                                long long int* iwork );

long long int LAPACKE_dspcon_work( int matrix_layout, char uplo, long long int n,
                                const double* ap, const long long int* ipiv,
                                double anorm, double* rcond, double* work,
                                long long int* iwork );

long long int LAPACKE_cspcon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* ap,
                                const long long int* ipiv, float anorm,
                                float* rcond, MKL_Complex8* work );

long long int LAPACKE_zspcon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* ap,
                                const long long int* ipiv, double anorm,
                                double* rcond, MKL_Complex16* work );


long long int LAPACKE_sspev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, float* ap, float* w, float* z,
                               long long int ldz, float* work );

long long int LAPACKE_dspev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, double* ap, double* w, double* z,
                               long long int ldz, double* work );


long long int LAPACKE_sspevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, float* ap, float* w, float* z,
                                long long int ldz, float* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_dspevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, double* ap, double* w, double* z,
                                long long int ldz, double* work, long long int lwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_sspevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, float* ap, float vl,
                                float vu, long long int il, long long int iu,
                                float abstol, long long int* m, float* w, float* z,
                                long long int ldz, float* work, long long int* iwork,
                                long long int* ifail );

long long int LAPACKE_dspevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, double* ap, double vl,
                                double vu, long long int il, long long int iu,
                                double abstol, long long int* m, double* w,
                                double* z, long long int ldz, double* work,
                                long long int* iwork, long long int* ifail );


long long int LAPACKE_sspgst_work( int matrix_layout, long long int itype, char uplo,
                                long long int n, float* ap, const float* bp );

long long int LAPACKE_dspgst_work( int matrix_layout, long long int itype, char uplo,
                                long long int n, double* ap, const double* bp );


long long int LAPACKE_sspgv_work( int matrix_layout, long long int itype, char jobz,
                               char uplo, long long int n, float* ap, float* bp,
                               float* w, float* z, long long int ldz,
                               float* work );

long long int LAPACKE_dspgv_work( int matrix_layout, long long int itype, char jobz,
                               char uplo, long long int n, double* ap, double* bp,
                               double* w, double* z, long long int ldz,
                               double* work );


long long int LAPACKE_sspgvd_work( int matrix_layout, long long int itype, char jobz,
                                char uplo, long long int n, float* ap, float* bp,
                                float* w, float* z, long long int ldz, float* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_dspgvd_work( int matrix_layout, long long int itype, char jobz,
                                char uplo, long long int n, double* ap, double* bp,
                                double* w, double* z, long long int ldz,
                                double* work, long long int lwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_sspgvx_work( int matrix_layout, long long int itype, char jobz,
                                char range, char uplo, long long int n, float* ap,
                                float* bp, float vl, float vu, long long int il,
                                long long int iu, float abstol, long long int* m,
                                float* w, float* z, long long int ldz, float* work,
                                long long int* iwork, long long int* ifail );

long long int LAPACKE_dspgvx_work( int matrix_layout, long long int itype, char jobz,
                                char range, char uplo, long long int n, double* ap,
                                double* bp, double vl, double vu, long long int il,
                                long long int iu, double abstol, long long int* m,
                                double* w, double* z, long long int ldz,
                                double* work, long long int* iwork,
                                long long int* ifail );


long long int LAPACKE_ssprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* ap,
                                const float* afp, const long long int* ipiv,
                                const float* b, long long int ldb, float* x,
                                long long int ldx, float* ferr, float* berr,
                                float* work, long long int* iwork );

long long int LAPACKE_dsprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* ap,
                                const double* afp, const long long int* ipiv,
                                const double* b, long long int ldb, double* x,
                                long long int ldx, double* ferr, double* berr,
                                double* work, long long int* iwork );

long long int LAPACKE_csprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* ap,
                                const MKL_Complex8* afp,
                                const long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zsprfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs,
                                const MKL_Complex16* ap,
                                const MKL_Complex16* afp,
                                const long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_sspsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, float* ap, long long int* ipiv,
                               float* b, long long int ldb );

long long int LAPACKE_dspsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, double* ap, long long int* ipiv,
                               double* b, long long int ldb );

long long int LAPACKE_cspsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex8* ap,
                               long long int* ipiv, MKL_Complex8* b,
                               long long int ldb );

long long int LAPACKE_zspsv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex16* ap,
                               long long int* ipiv, MKL_Complex16* b,
                               long long int ldb );


long long int LAPACKE_sspsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs, const float* ap,
                                float* afp, long long int* ipiv, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                float* work, long long int* iwork );

long long int LAPACKE_dspsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs, const double* ap,
                                double* afp, long long int* ipiv, const double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                double* work, long long int* iwork );

long long int LAPACKE_cspsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex8* ap,
                                MKL_Complex8* afp, long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zspsvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex16* ap,
                                MKL_Complex16* afp, long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_ssptrd_work( int matrix_layout, char uplo, long long int n,
                                float* ap, float* d, float* e, float* tau );

long long int LAPACKE_dsptrd_work( int matrix_layout, char uplo, long long int n,
                                double* ap, double* d, double* e, double* tau );


long long int LAPACKE_ssptrf_work( int matrix_layout, char uplo, long long int n,
                                float* ap, long long int* ipiv );

long long int LAPACKE_dsptrf_work( int matrix_layout, char uplo, long long int n,
                                double* ap, long long int* ipiv );

long long int LAPACKE_csptrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* ap, long long int* ipiv );

long long int LAPACKE_zsptrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* ap, long long int* ipiv );


long long int LAPACKE_ssptri_work( int matrix_layout, char uplo, long long int n,
                                float* ap, const long long int* ipiv,
                                float* work );

long long int LAPACKE_dsptri_work( int matrix_layout, char uplo, long long int n,
                                double* ap, const long long int* ipiv,
                                double* work );

long long int LAPACKE_csptri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* ap,
                                const long long int* ipiv,
                                MKL_Complex8* work );

long long int LAPACKE_zsptri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* ap,
                                const long long int* ipiv,
                                MKL_Complex16* work );


long long int LAPACKE_ssptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* ap,
                                const long long int* ipiv, float* b,
                                long long int ldb );

long long int LAPACKE_dsptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* ap,
                                const long long int* ipiv, double* b,
                                long long int ldb );

long long int LAPACKE_csptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* ap,
                                const long long int* ipiv, MKL_Complex8* b,
                                long long int ldb );

long long int LAPACKE_zsptrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs,
                                const MKL_Complex16* ap,
                                const long long int* ipiv,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_sstebz_work( char range, char order, long long int n, float vl,
                                float vu, long long int il, long long int iu,
                                float abstol, const float* d, const float* e,
                                long long int* m, long long int* nsplit, float* w,
                                long long int* iblock, long long int* isplit,
                                float* work, long long int* iwork );

long long int LAPACKE_dstebz_work( char range, char order, long long int n, double vl,
                                double vu, long long int il, long long int iu,
                                double abstol, const double* d, const double* e,
                                long long int* m, long long int* nsplit, double* w,
                                long long int* iblock, long long int* isplit,
                                double* work, long long int* iwork );


long long int LAPACKE_sstedc_work( int matrix_layout, char compz, long long int n,
                                float* d, float* e, float* z, long long int ldz,
                                float* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_dstedc_work( int matrix_layout, char compz, long long int n,
                                double* d, double* e, double* z, long long int ldz,
                                double* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_cstedc_work( int matrix_layout, char compz, long long int n,
                                float* d, float* e, MKL_Complex8* z,
                                long long int ldz, MKL_Complex8* work,
                                long long int lwork, float* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_zstedc_work( int matrix_layout, char compz, long long int n,
                                double* d, double* e, MKL_Complex16* z,
                                long long int ldz, MKL_Complex16* work,
                                long long int lwork, double* rwork,
                                long long int lrwork, long long int* iwork,
                                long long int liwork );


long long int LAPACKE_sstegr_work( int matrix_layout, char jobz, char range,
                                long long int n, float* d, float* e, float vl,
                                float vu, long long int il, long long int iu,
                                float abstol, long long int* m, float* w, float* z,
                                long long int ldz, long long int* isuppz, float* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_dstegr_work( int matrix_layout, char jobz, char range,
                                long long int n, double* d, double* e, double vl,
                                double vu, long long int il, long long int iu,
                                double abstol, long long int* m, double* w,
                                double* z, long long int ldz, long long int* isuppz,
                                double* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_cstegr_work( int matrix_layout, char jobz, char range,
                                long long int n, float* d, float* e, float vl,
                                float vu, long long int il, long long int iu,
                                float abstol, long long int* m, float* w,
                                MKL_Complex8* z, long long int ldz,
                                long long int* isuppz, float* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_zstegr_work( int matrix_layout, char jobz, char range,
                                long long int n, double* d, double* e, double vl,
                                double vu, long long int il, long long int iu,
                                double abstol, long long int* m, double* w,
                                MKL_Complex16* z, long long int ldz,
                                long long int* isuppz, double* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );


long long int LAPACKE_sstein_work( int matrix_layout, long long int n, const float* d,
                                const float* e, long long int m, const float* w,
                                const long long int* iblock,
                                const long long int* isplit, float* z,
                                long long int ldz, float* work, long long int* iwork,
                                long long int* ifailv );

long long int LAPACKE_dstein_work( int matrix_layout, long long int n, const double* d,
                                const double* e, long long int m, const double* w,
                                const long long int* iblock,
                                const long long int* isplit, double* z,
                                long long int ldz, double* work, long long int* iwork,
                                long long int* ifailv );

long long int LAPACKE_cstein_work( int matrix_layout, long long int n, const float* d,
                                const float* e, long long int m, const float* w,
                                const long long int* iblock,
                                const long long int* isplit,
                                MKL_Complex8* z, long long int ldz,
                                float* work, long long int* iwork,
                                long long int* ifailv );

long long int LAPACKE_zstein_work( int matrix_layout, long long int n, const double* d,
                                const double* e, long long int m, const double* w,
                                const long long int* iblock,
                                const long long int* isplit,
                                MKL_Complex16* z, long long int ldz,
                                double* work, long long int* iwork,
                                long long int* ifailv );


long long int LAPACKE_sstemr_work( int matrix_layout, char jobz, char range,
                                long long int n, float* d, float* e, float vl,
                                float vu, long long int il, long long int iu,
                                long long int* m, float* w, float* z,
                                long long int ldz, long long int nzc,
                                long long int* isuppz, long long int* tryrac,
                                float* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_dstemr_work( int matrix_layout, char jobz, char range,
                                long long int n, double* d, double* e, double vl,
                                double vu, long long int il, long long int iu,
                                long long int* m, double* w, double* z,
                                long long int ldz, long long int nzc,
                                long long int* isuppz, long long int* tryrac,
                                double* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_cstemr_work( int matrix_layout, char jobz, char range,
                                long long int n, float* d, float* e, float vl,
                                float vu, long long int il, long long int iu,
                                long long int* m, float* w,
                                MKL_Complex8* z, long long int ldz,
                                long long int nzc, long long int* isuppz,
                                long long int* tryrac, float* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_zstemr_work( int matrix_layout, char jobz, char range,
                                long long int n, double* d, double* e, double vl,
                                double vu, long long int il, long long int iu,
                                long long int* m, double* w,
                                MKL_Complex16* z, long long int ldz,
                                long long int nzc, long long int* isuppz,
                                long long int* tryrac, double* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );


long long int LAPACKE_ssteqr_work( int matrix_layout, char compz, long long int n,
                                float* d, float* e, float* z, long long int ldz,
                                float* work );

long long int LAPACKE_dsteqr_work( int matrix_layout, char compz, long long int n,
                                double* d, double* e, double* z, long long int ldz,
                                double* work );

long long int LAPACKE_csteqr_work( int matrix_layout, char compz, long long int n,
                                float* d, float* e, MKL_Complex8* z,
                                long long int ldz, float* work );

long long int LAPACKE_zsteqr_work( int matrix_layout, char compz, long long int n,
                                double* d, double* e, MKL_Complex16* z,
                                long long int ldz, double* work );


long long int LAPACKE_ssterf_work( long long int n, float* d, float* e );

long long int LAPACKE_dsterf_work( long long int n, double* d, double* e );


long long int LAPACKE_sstev_work( int matrix_layout, char jobz, long long int n,
                               float* d, float* e, float* z, long long int ldz,
                               float* work );

long long int LAPACKE_dstev_work( int matrix_layout, char jobz, long long int n,
                               double* d, double* e, double* z, long long int ldz,
                               double* work );


long long int LAPACKE_sstevd_work( int matrix_layout, char jobz, long long int n,
                                float* d, float* e, float* z, long long int ldz,
                                float* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_dstevd_work( int matrix_layout, char jobz, long long int n,
                                double* d, double* e, double* z, long long int ldz,
                                double* work, long long int lwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_sstevr_work( int matrix_layout, char jobz, char range,
                                long long int n, float* d, float* e, float vl,
                                float vu, long long int il, long long int iu,
                                float abstol, long long int* m, float* w, float* z,
                                long long int ldz, long long int* isuppz, float* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_dstevr_work( int matrix_layout, char jobz, char range,
                                long long int n, double* d, double* e, double vl,
                                double vu, long long int il, long long int iu,
                                double abstol, long long int* m, double* w,
                                double* z, long long int ldz, long long int* isuppz,
                                double* work, long long int lwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_sstevx_work( int matrix_layout, char jobz, char range,
                                long long int n, float* d, float* e, float vl,
                                float vu, long long int il, long long int iu,
                                float abstol, long long int* m, float* w, float* z,
                                long long int ldz, float* work, long long int* iwork,
                                long long int* ifail );

long long int LAPACKE_dstevx_work( int matrix_layout, char jobz, char range,
                                long long int n, double* d, double* e, double vl,
                                double vu, long long int il, long long int iu,
                                double abstol, long long int* m, double* w,
                                double* z, long long int ldz, double* work,
                                long long int* iwork, long long int* ifail );


long long int LAPACKE_ssycon_work( int matrix_layout, char uplo, long long int n,
                                const float* a, long long int lda,
                                const long long int* ipiv, float anorm,
                                float* rcond, float* work, long long int* iwork );

long long int LAPACKE_dsycon_work( int matrix_layout, char uplo, long long int n,
                                const double* a, long long int lda,
                                const long long int* ipiv, double anorm,
                                double* rcond, double* work,
                                long long int* iwork );

long long int LAPACKE_csycon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                const long long int* ipiv, float anorm,
                                float* rcond, MKL_Complex8* work );

long long int LAPACKE_zsycon_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                const long long int* ipiv, double anorm,
                                double* rcond, MKL_Complex16* work );


long long int LAPACKE_ssyconv_work( int matrix_layout, char uplo, char way,
                                 long long int n, float* a, long long int lda,
                                 const long long int* ipiv, float* work );

long long int LAPACKE_dsyconv_work( int matrix_layout, char uplo, char way,
                                 long long int n, double* a, long long int lda,
                                 const long long int* ipiv, double* work );

long long int LAPACKE_csyconv_work( int matrix_layout, char uplo, char way,
                                 long long int n, MKL_Complex8* a,
                                 long long int lda, const long long int* ipiv,
                                 MKL_Complex8* work );

long long int LAPACKE_zsyconv_work( int matrix_layout, char uplo, char way,
                                 long long int n, MKL_Complex16* a,
                                 long long int lda, const long long int* ipiv,
                                 MKL_Complex16* work );


long long int LAPACKE_ssyequb_work( int matrix_layout, char uplo, long long int n,
                                 const float* a, long long int lda, float* s,
                                 float* scond, float* amax, float* work );

long long int LAPACKE_dsyequb_work( int matrix_layout, char uplo, long long int n,
                                 const double* a, long long int lda, double* s,
                                 double* scond, double* amax, double* work );

long long int LAPACKE_csyequb_work( int matrix_layout, char uplo, long long int n,
                                 const MKL_Complex8* a, long long int lda,
                                 float* s, float* scond, float* amax,
                                 MKL_Complex8* work );

long long int LAPACKE_zsyequb_work( int matrix_layout, char uplo, long long int n,
                                 const MKL_Complex16* a, long long int lda,
                                 double* s, double* scond, double* amax,
                                 MKL_Complex16* work );


long long int LAPACKE_ssyev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, float* a, long long int lda, float* w,
                               float* work, long long int lwork );

long long int LAPACKE_dsyev_work( int matrix_layout, char jobz, char uplo,
                               long long int n, double* a, long long int lda,
                               double* w, double* work, long long int lwork );


long long int LAPACKE_ssyevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, float* a, long long int lda,
                                float* w, float* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_dsyevd_work( int matrix_layout, char jobz, char uplo,
                                long long int n, double* a, long long int lda,
                                double* w, double* work, long long int lwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_ssyevr_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, float* a,
                                long long int lda, float vl, float vu,
                                long long int il, long long int iu, float abstol,
                                long long int* m, float* w, float* z,
                                long long int ldz, long long int* isuppz, float* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_dsyevr_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, double* a,
                                long long int lda, double vl, double vu,
                                long long int il, long long int iu, double abstol,
                                long long int* m, double* w, double* z,
                                long long int ldz, long long int* isuppz,
                                double* work, long long int lwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_ssyevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, float* a,
                                long long int lda, float vl, float vu,
                                long long int il, long long int iu, float abstol,
                                long long int* m, float* w, float* z,
                                long long int ldz, float* work, long long int lwork,
                                long long int* iwork, long long int* ifail );

long long int LAPACKE_dsyevx_work( int matrix_layout, char jobz, char range,
                                char uplo, long long int n, double* a,
                                long long int lda, double vl, double vu,
                                long long int il, long long int iu, double abstol,
                                long long int* m, double* w, double* z,
                                long long int ldz, double* work, long long int lwork,
                                long long int* iwork, long long int* ifail );


long long int LAPACKE_ssygst_work( int matrix_layout, long long int itype, char uplo,
                                long long int n, float* a, long long int lda,
                                const float* b, long long int ldb );

long long int LAPACKE_dsygst_work( int matrix_layout, long long int itype, char uplo,
                                long long int n, double* a, long long int lda,
                                const double* b, long long int ldb );


long long int LAPACKE_ssygv_work( int matrix_layout, long long int itype, char jobz,
                               char uplo, long long int n, float* a,
                               long long int lda, float* b, long long int ldb,
                               float* w, float* work, long long int lwork );

long long int LAPACKE_dsygv_work( int matrix_layout, long long int itype, char jobz,
                               char uplo, long long int n, double* a,
                               long long int lda, double* b, long long int ldb,
                               double* w, double* work, long long int lwork );


long long int LAPACKE_ssygvd_work( int matrix_layout, long long int itype, char jobz,
                                char uplo, long long int n, float* a,
                                long long int lda, float* b, long long int ldb,
                                float* w, float* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_dsygvd_work( int matrix_layout, long long int itype, char jobz,
                                char uplo, long long int n, double* a,
                                long long int lda, double* b, long long int ldb,
                                double* w, double* work, long long int lwork,
                                long long int* iwork, long long int liwork );


long long int LAPACKE_ssygvx_work( int matrix_layout, long long int itype, char jobz,
                                char range, char uplo, long long int n, float* a,
                                long long int lda, float* b, long long int ldb,
                                float vl, float vu, long long int il,
                                long long int iu, float abstol, long long int* m,
                                float* w, float* z, long long int ldz, float* work,
                                long long int lwork, long long int* iwork,
                                long long int* ifail );

long long int LAPACKE_dsygvx_work( int matrix_layout, long long int itype, char jobz,
                                char range, char uplo, long long int n, double* a,
                                long long int lda, double* b, long long int ldb,
                                double vl, double vu, long long int il,
                                long long int iu, double abstol, long long int* m,
                                double* w, double* z, long long int ldz,
                                double* work, long long int lwork,
                                long long int* iwork, long long int* ifail );


long long int LAPACKE_ssyrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* a, long long int lda,
                                const float* af, long long int ldaf,
                                const long long int* ipiv, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* ferr, float* berr, float* work,
                                long long int* iwork );

long long int LAPACKE_dsyrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* a,
                                long long int lda, const double* af,
                                long long int ldaf, const long long int* ipiv,
                                const double* b, long long int ldb, double* x,
                                long long int ldx, double* ferr, double* berr,
                                double* work, long long int* iwork );

long long int LAPACKE_csyrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* af,
                                long long int ldaf, const long long int* ipiv,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_zsyrfs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex16* a,
                                long long int lda, const MKL_Complex16* af,
                                long long int ldaf, const long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_ssyrfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs, const float* a,
                                 long long int lda, const float* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const float* s, const float* b, long long int ldb,
                                 float* x, long long int ldx, float* rcond,
                                 float* berr, long long int n_err_bnds,
                                 float* err_bnds_norm, float* err_bnds_comp,
                                 long long int nparams, float* params, float* work,
                                 long long int* iwork );

long long int LAPACKE_dsyrfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs, const double* a,
                                 long long int lda, const double* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const double* s, const double* b,
                                 long long int ldb, double* x, long long int ldx,
                                 double* rcond, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, double* work,
                                 long long int* iwork );

long long int LAPACKE_csyrfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs,
                                 const MKL_Complex8* a, long long int lda,
                                 const MKL_Complex8* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const float* s, const MKL_Complex8* b,
                                 long long int ldb, MKL_Complex8* x,
                                 long long int ldx, float* rcond, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, MKL_Complex8* work,
                                 float* rwork );

long long int LAPACKE_zsyrfsx_work( int matrix_layout, char uplo, char equed,
                                 long long int n, long long int nrhs,
                                 const MKL_Complex16* a, long long int lda,
                                 const MKL_Complex16* af,
                                 long long int ldaf, const long long int* ipiv,
                                 const double* s,
                                 const MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* x, long long int ldx,
                                 double* rcond, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, MKL_Complex16* work,
                                 double* rwork );


long long int LAPACKE_ssysv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, float* a, long long int lda,
                               long long int* ipiv, float* b, long long int ldb,
                               float* work, long long int lwork );

long long int LAPACKE_dsysv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, double* a, long long int lda,
                               long long int* ipiv, double* b, long long int ldb,
                               double* work, long long int lwork );

long long int LAPACKE_csysv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex8* a,
                               long long int lda, long long int* ipiv,
                               MKL_Complex8* b, long long int ldb,
                               MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zsysv_work( int matrix_layout, char uplo, long long int n,
                               long long int nrhs, MKL_Complex16* a,
                               long long int lda, long long int* ipiv,
                               MKL_Complex16* b, long long int ldb,
                               MKL_Complex16* work, long long int lwork );


long long int LAPACKE_ssysvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs, const float* a,
                                long long int lda, float* af, long long int ldaf,
                                long long int* ipiv, const float* b,
                                long long int ldb, float* x, long long int ldx,
                                float* rcond, float* ferr, float* berr,
                                float* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_dsysvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs, const double* a,
                                long long int lda, double* af, long long int ldaf,
                                long long int* ipiv, const double* b,
                                long long int ldb, double* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                double* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_csysvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex8* a, long long int lda,
                                MKL_Complex8* af, long long int ldaf,
                                long long int* ipiv, const MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* x,
                                long long int ldx, float* rcond, float* ferr,
                                float* berr, MKL_Complex8* work,
                                long long int lwork, float* rwork );

long long int LAPACKE_zsysvx_work( int matrix_layout, char fact, char uplo,
                                long long int n, long long int nrhs,
                                const MKL_Complex16* a, long long int lda,
                                MKL_Complex16* af, long long int ldaf,
                                long long int* ipiv,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* x, long long int ldx,
                                double* rcond, double* ferr, double* berr,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork );


long long int LAPACKE_ssysvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs, float* a,
                                 long long int lda, float* af, long long int ldaf,
                                 long long int* ipiv, char* equed, float* s,
                                 float* b, long long int ldb, float* x,
                                 long long int ldx, float* rcond, float* rpvgrw,
                                 float* berr, long long int n_err_bnds,
                                 float* err_bnds_norm, float* err_bnds_comp,
                                 long long int nparams, float* params, float* work,
                                 long long int* iwork );

long long int LAPACKE_dsysvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs, double* a,
                                 long long int lda, double* af, long long int ldaf,
                                 long long int* ipiv, char* equed, double* s,
                                 double* b, long long int ldb, double* x,
                                 long long int ldx, double* rcond, double* rpvgrw,
                                 double* berr, long long int n_err_bnds,
                                 double* err_bnds_norm, double* err_bnds_comp,
                                 long long int nparams, double* params,
                                 double* work, long long int* iwork );

long long int LAPACKE_csysvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs,
                                 MKL_Complex8* a, long long int lda,
                                 MKL_Complex8* af, long long int ldaf,
                                 long long int* ipiv, char* equed, float* s,
                                 MKL_Complex8* b, long long int ldb,
                                 MKL_Complex8* x, long long int ldx,
                                 float* rcond, float* rpvgrw, float* berr,
                                 long long int n_err_bnds, float* err_bnds_norm,
                                 float* err_bnds_comp, long long int nparams,
                                 float* params, MKL_Complex8* work,
                                 float* rwork );

long long int LAPACKE_zsysvxx_work( int matrix_layout, char fact, char uplo,
                                 long long int n, long long int nrhs,
                                 MKL_Complex16* a, long long int lda,
                                 MKL_Complex16* af, long long int ldaf,
                                 long long int* ipiv, char* equed, double* s,
                                 MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* x, long long int ldx,
                                 double* rcond, double* rpvgrw, double* berr,
                                 long long int n_err_bnds, double* err_bnds_norm,
                                 double* err_bnds_comp, long long int nparams,
                                 double* params, MKL_Complex16* work,
                                 double* rwork );


long long int LAPACKE_ssyswapr_work( int matrix_layout, char uplo, long long int n,
                                  float* a, long long int lda,
                                  long long int i1, long long int i2 );

long long int LAPACKE_dsyswapr_work( int matrix_layout, char uplo, long long int n,
                                  double* a, long long int lda,
                                  long long int i1, long long int i2 );

long long int LAPACKE_csyswapr_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex8* a, long long int lda,
                                  long long int i1, long long int i2 );

long long int LAPACKE_zsyswapr_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex16* a, long long int lda,
                                  long long int i1, long long int i2 );


long long int LAPACKE_ssytrd_work( int matrix_layout, char uplo, long long int n,
                                float* a, long long int lda, float* d, float* e,
                                float* tau, float* work, long long int lwork );

long long int LAPACKE_dsytrd_work( int matrix_layout, char uplo, long long int n,
                                double* a, long long int lda, double* d, double* e,
                                double* tau, double* work, long long int lwork );


long long int LAPACKE_ssytrf_work( int matrix_layout, char uplo, long long int n,
                                float* a, long long int lda, long long int* ipiv,
                                float* work, long long int lwork );

long long int LAPACKE_dsytrf_work( int matrix_layout, char uplo, long long int n,
                                double* a, long long int lda, long long int* ipiv,
                                double* work, long long int lwork );

long long int LAPACKE_csytrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                long long int* ipiv, MKL_Complex8* work,
                                long long int lwork );

long long int LAPACKE_zsytrf_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                long long int* ipiv, MKL_Complex16* work,
                                long long int lwork );


long long int LAPACKE_ssytri_work( int matrix_layout, char uplo, long long int n,
                                float* a, long long int lda,
                                const long long int* ipiv, float* work );

long long int LAPACKE_dsytri_work( int matrix_layout, char uplo, long long int n,
                                double* a, long long int lda,
                                const long long int* ipiv, double* work );

long long int LAPACKE_csytri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                const long long int* ipiv,
                                MKL_Complex8* work );

long long int LAPACKE_zsytri_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                const long long int* ipiv,
                                MKL_Complex16* work );


long long int LAPACKE_ssytri2_work( int matrix_layout, char uplo, long long int n,
                                 float* a, long long int lda,
                                 const long long int* ipiv,
                                 MKL_Complex8* work, long long int lwork );

long long int LAPACKE_dsytri2_work( int matrix_layout, char uplo, long long int n,
                                 double* a, long long int lda,
                                 const long long int* ipiv,
                                 MKL_Complex16* work,
                                 long long int lwork );

long long int LAPACKE_csytri2_work( int matrix_layout, char uplo, long long int n,
                                 MKL_Complex8* a, long long int lda,
                                 const long long int* ipiv,
                                 MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zsytri2_work( int matrix_layout, char uplo, long long int n,
                                 MKL_Complex16* a, long long int lda,
                                 const long long int* ipiv,
                                 MKL_Complex16* work,
                                 long long int lwork );


long long int LAPACKE_ssytri2x_work( int matrix_layout, char uplo, long long int n,
                                  float* a, long long int lda,
                                  const long long int* ipiv, float* work,
                                  long long int nb );

long long int LAPACKE_dsytri2x_work( int matrix_layout, char uplo, long long int n,
                                  double* a, long long int lda,
                                  const long long int* ipiv, double* work,
                                  long long int nb );

long long int LAPACKE_csytri2x_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex8* a, long long int lda,
                                  const long long int* ipiv,
                                  MKL_Complex8* work, long long int nb );

long long int LAPACKE_zsytri2x_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex16* a, long long int lda,
                                  const long long int* ipiv,
                                  MKL_Complex16* work, long long int nb );


long long int LAPACKE_ssytrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const float* a, long long int lda,
                                const long long int* ipiv, float* b,
                                long long int ldb );

long long int LAPACKE_dsytrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const double* a,
                                long long int lda, const long long int* ipiv,
                                double* b, long long int ldb );

long long int LAPACKE_csytrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex8* a,
                                long long int lda, const long long int* ipiv,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zsytrs_work( int matrix_layout, char uplo, long long int n,
                                long long int nrhs, const MKL_Complex16* a,
                                long long int lda, const long long int* ipiv,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_ssytrs2_work( int matrix_layout, char uplo, long long int n,
                                 long long int nrhs, const float* a,
                                 long long int lda, const long long int* ipiv,
                                 float* b, long long int ldb, float* work );

long long int LAPACKE_dsytrs2_work( int matrix_layout, char uplo, long long int n,
                                 long long int nrhs, const double* a,
                                 long long int lda, const long long int* ipiv,
                                 double* b, long long int ldb, double* work );

long long int LAPACKE_csytrs2_work( int matrix_layout, char uplo, long long int n,
                                 long long int nrhs, const MKL_Complex8* a,
                                 long long int lda, const long long int* ipiv,
                                 MKL_Complex8* b, long long int ldb,
                                 MKL_Complex8* work );

long long int LAPACKE_zsytrs2_work( int matrix_layout, char uplo, long long int n,
                                 long long int nrhs,
                                 const MKL_Complex16* a, long long int lda,
                                 const long long int* ipiv,
                                 MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* work );


long long int LAPACKE_stbcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n, long long int kd,
                                const float* ab, long long int ldab, float* rcond,
                                float* work, long long int* iwork );

long long int LAPACKE_dtbcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n, long long int kd,
                                const double* ab, long long int ldab,
                                double* rcond, double* work,
                                long long int* iwork );

long long int LAPACKE_ctbcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n, long long int kd,
                                const MKL_Complex8* ab, long long int ldab,
                                float* rcond, MKL_Complex8* work,
                                float* rwork );

long long int LAPACKE_ztbcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n, long long int kd,
                                const MKL_Complex16* ab,
                                long long int ldab, double* rcond,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_stbrfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int kd,
                                long long int nrhs, const float* ab,
                                long long int ldab, const float* b, long long int ldb,
                                const float* x, long long int ldx, float* ferr,
                                float* berr, float* work, long long int* iwork );

long long int LAPACKE_dtbrfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int kd,
                                long long int nrhs, const double* ab,
                                long long int ldab, const double* b,
                                long long int ldb, const double* x, long long int ldx,
                                double* ferr, double* berr, double* work,
                                long long int* iwork );

long long int LAPACKE_ctbrfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int kd,
                                long long int nrhs, const MKL_Complex8* ab,
                                long long int ldab, const MKL_Complex8* b,
                                long long int ldb, const MKL_Complex8* x,
                                long long int ldx, float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_ztbrfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int kd,
                                long long int nrhs,
                                const MKL_Complex16* ab,
                                long long int ldab, const MKL_Complex16* b,
                                long long int ldb, const MKL_Complex16* x,
                                long long int ldx, double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_stbtrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int kd,
                                long long int nrhs, const float* ab,
                                long long int ldab, float* b, long long int ldb );

long long int LAPACKE_dtbtrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int kd,
                                long long int nrhs, const double* ab,
                                long long int ldab, double* b, long long int ldb );

long long int LAPACKE_ctbtrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int kd,
                                long long int nrhs, const MKL_Complex8* ab,
                                long long int ldab, MKL_Complex8* b,
                                long long int ldb );

long long int LAPACKE_ztbtrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int kd,
                                long long int nrhs,
                                const MKL_Complex16* ab,
                                long long int ldab, MKL_Complex16* b,
                                long long int ldb );


long long int LAPACKE_stfsm_work( int matrix_layout, char transr, char side,
                               char uplo, char trans, char diag, long long int m,
                               long long int n, float alpha, const float* a,
                               float* b, long long int ldb );

long long int LAPACKE_dtfsm_work( int matrix_layout, char transr, char side,
                               char uplo, char trans, char diag, long long int m,
                               long long int n, double alpha, const double* a,
                               double* b, long long int ldb );

long long int LAPACKE_ctfsm_work( int matrix_layout, char transr, char side,
                               char uplo, char trans, char diag, long long int m,
                               long long int n, MKL_Complex8 alpha,
                               const MKL_Complex8* a,
                               MKL_Complex8* b, long long int ldb );

long long int LAPACKE_ztfsm_work( int matrix_layout, char transr, char side,
                               char uplo, char trans, char diag, long long int m,
                               long long int n, MKL_Complex16 alpha,
                               const MKL_Complex16* a,
                               MKL_Complex16* b, long long int ldb );


long long int LAPACKE_stftri_work( int matrix_layout, char transr, char uplo,
                                char diag, long long int n, float* a );

long long int LAPACKE_dtftri_work( int matrix_layout, char transr, char uplo,
                                char diag, long long int n, double* a );

long long int LAPACKE_ctftri_work( int matrix_layout, char transr, char uplo,
                                char diag, long long int n,
                                MKL_Complex8* a );

long long int LAPACKE_ztftri_work( int matrix_layout, char transr, char uplo,
                                char diag, long long int n,
                                MKL_Complex16* a );


long long int LAPACKE_stfttp_work( int matrix_layout, char transr, char uplo,
                                long long int n, const float* arf, float* ap );

long long int LAPACKE_dtfttp_work( int matrix_layout, char transr, char uplo,
                                long long int n, const double* arf, double* ap );

long long int LAPACKE_ctfttp_work( int matrix_layout, char transr, char uplo,
                                long long int n, const MKL_Complex8* arf,
                                MKL_Complex8* ap );

long long int LAPACKE_ztfttp_work( int matrix_layout, char transr, char uplo,
                                long long int n, const MKL_Complex16* arf,
                                MKL_Complex16* ap );


long long int LAPACKE_stfttr_work( int matrix_layout, char transr, char uplo,
                                long long int n, const float* arf, float* a,
                                long long int lda );

long long int LAPACKE_dtfttr_work( int matrix_layout, char transr, char uplo,
                                long long int n, const double* arf, double* a,
                                long long int lda );

long long int LAPACKE_ctfttr_work( int matrix_layout, char transr, char uplo,
                                long long int n, const MKL_Complex8* arf,
                                MKL_Complex8* a, long long int lda );

long long int LAPACKE_ztfttr_work( int matrix_layout, char transr, char uplo,
                                long long int n, const MKL_Complex16* arf,
                                MKL_Complex16* a, long long int lda );


long long int LAPACKE_stgevc_work( int matrix_layout, char side, char howmny,
                                const long long int* select, long long int n,
                                const float* s, long long int lds, const float* p,
                                long long int ldp, float* vl, long long int ldvl,
                                float* vr, long long int ldvr, long long int mm,
                                long long int* m, float* work );

long long int LAPACKE_dtgevc_work( int matrix_layout, char side, char howmny,
                                const long long int* select, long long int n,
                                const double* s, long long int lds,
                                const double* p, long long int ldp, double* vl,
                                long long int ldvl, double* vr, long long int ldvr,
                                long long int mm, long long int* m, double* work );

long long int LAPACKE_ctgevc_work( int matrix_layout, char side, char howmny,
                                const long long int* select, long long int n,
                                const MKL_Complex8* s, long long int lds,
                                const MKL_Complex8* p, long long int ldp,
                                MKL_Complex8* vl, long long int ldvl,
                                MKL_Complex8* vr, long long int ldvr,
                                long long int mm, long long int* m,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_ztgevc_work( int matrix_layout, char side, char howmny,
                                const long long int* select, long long int n,
                                const MKL_Complex16* s, long long int lds,
                                const MKL_Complex16* p, long long int ldp,
                                MKL_Complex16* vl, long long int ldvl,
                                MKL_Complex16* vr, long long int ldvr,
                                long long int mm, long long int* m,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_stgexc_work( int matrix_layout, long long int wantq,
                                long long int wantz, long long int n, float* a,
                                long long int lda, float* b, long long int ldb,
                                float* q, long long int ldq, float* z,
                                long long int ldz, long long int* ifst,
                                long long int* ilst, float* work,
                                long long int lwork );

long long int LAPACKE_dtgexc_work( int matrix_layout, long long int wantq,
                                long long int wantz, long long int n, double* a,
                                long long int lda, double* b, long long int ldb,
                                double* q, long long int ldq, double* z,
                                long long int ldz, long long int* ifst,
                                long long int* ilst, double* work,
                                long long int lwork );

long long int LAPACKE_ctgexc_work( int matrix_layout, long long int wantq,
                                long long int wantz, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* q, long long int ldq,
                                MKL_Complex8* z, long long int ldz,
                                long long int ifst, long long int ilst );

long long int LAPACKE_ztgexc_work( int matrix_layout, long long int wantq,
                                long long int wantz, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* q, long long int ldq,
                                MKL_Complex16* z, long long int ldz,
                                long long int ifst, long long int ilst );


long long int LAPACKE_stgsen_work( int matrix_layout, long long int ijob,
                                long long int wantq, long long int wantz,
                                const long long int* select, long long int n,
                                float* a, long long int lda, float* b,
                                long long int ldb, float* alphar, float* alphai,
                                float* beta, float* q, long long int ldq, float* z,
                                long long int ldz, long long int* m, float* pl,
                                float* pr, float* dif, float* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );

long long int LAPACKE_dtgsen_work( int matrix_layout, long long int ijob,
                                long long int wantq, long long int wantz,
                                const long long int* select, long long int n,
                                double* a, long long int lda, double* b,
                                long long int ldb, double* alphar, double* alphai,
                                double* beta, double* q, long long int ldq,
                                double* z, long long int ldz, long long int* m,
                                double* pl, double* pr, double* dif,
                                double* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_ctgsen_work( int matrix_layout, long long int ijob,
                                long long int wantq, long long int wantz,
                                const long long int* select, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* alpha,
                                MKL_Complex8* beta,
                                MKL_Complex8* q, long long int ldq,
                                MKL_Complex8* z, long long int ldz,
                                long long int* m, float* pl, float* pr, float* dif,
                                MKL_Complex8* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_ztgsen_work( int matrix_layout, long long int ijob,
                                long long int wantq, long long int wantz,
                                const long long int* select, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* alpha,
                                MKL_Complex16* beta,
                                MKL_Complex16* q, long long int ldq,
                                MKL_Complex16* z, long long int ldz,
                                long long int* m, double* pl, double* pr,
                                double* dif, MKL_Complex16* work,
                                long long int lwork, long long int* iwork,
                                long long int liwork );


long long int LAPACKE_stgsja_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int p,
                                long long int n, long long int k, long long int l,
                                float* a, long long int lda, float* b,
                                long long int ldb, float tola, float tolb,
                                float* alpha, float* beta, float* u,
                                long long int ldu, float* v, long long int ldv,
                                float* q, long long int ldq, float* work,
                                long long int* ncycle );

long long int LAPACKE_dtgsja_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int p,
                                long long int n, long long int k, long long int l,
                                double* a, long long int lda, double* b,
                                long long int ldb, double tola, double tolb,
                                double* alpha, double* beta, double* u,
                                long long int ldu, double* v, long long int ldv,
                                double* q, long long int ldq, double* work,
                                long long int* ncycle );

long long int LAPACKE_ctgsja_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int p,
                                long long int n, long long int k, long long int l,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                float tola, float tolb, float* alpha,
                                float* beta, MKL_Complex8* u,
                                long long int ldu, MKL_Complex8* v,
                                long long int ldv, MKL_Complex8* q,
                                long long int ldq, MKL_Complex8* work,
                                long long int* ncycle );

long long int LAPACKE_ztgsja_work( int matrix_layout, char jobu, char jobv,
                                char jobq, long long int m, long long int p,
                                long long int n, long long int k, long long int l,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                double tola, double tolb, double* alpha,
                                double* beta, MKL_Complex16* u,
                                long long int ldu, MKL_Complex16* v,
                                long long int ldv, MKL_Complex16* q,
                                long long int ldq, MKL_Complex16* work,
                                long long int* ncycle );


long long int LAPACKE_stgsna_work( int matrix_layout, char job, char howmny,
                                const long long int* select, long long int n,
                                const float* a, long long int lda, const float* b,
                                long long int ldb, const float* vl,
                                long long int ldvl, const float* vr,
                                long long int ldvr, float* s, float* dif,
                                long long int mm, long long int* m, float* work,
                                long long int lwork, long long int* iwork );

long long int LAPACKE_dtgsna_work( int matrix_layout, char job, char howmny,
                                const long long int* select, long long int n,
                                const double* a, long long int lda,
                                const double* b, long long int ldb,
                                const double* vl, long long int ldvl,
                                const double* vr, long long int ldvr, double* s,
                                double* dif, long long int mm, long long int* m,
                                double* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_ctgsna_work( int matrix_layout, char job, char howmny,
                                const long long int* select, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* b, long long int ldb,
                                const MKL_Complex8* vl, long long int ldvl,
                                const MKL_Complex8* vr, long long int ldvr,
                                float* s, float* dif, long long int mm,
                                long long int* m, MKL_Complex8* work,
                                long long int lwork, long long int* iwork );

long long int LAPACKE_ztgsna_work( int matrix_layout, char job, char howmny,
                                const long long int* select, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* b, long long int ldb,
                                const MKL_Complex16* vl,
                                long long int ldvl,
                                const MKL_Complex16* vr,
                                long long int ldvr, double* s, double* dif,
                                long long int mm, long long int* m,
                                MKL_Complex16* work, long long int lwork,
                                long long int* iwork );


long long int LAPACKE_stgsyl_work( int matrix_layout, char trans, long long int ijob,
                                long long int m, long long int n, const float* a,
                                long long int lda, const float* b, long long int ldb,
                                float* c, long long int ldc, const float* d,
                                long long int ldd, const float* e, long long int lde,
                                float* f, long long int ldf, float* scale,
                                float* dif, float* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_dtgsyl_work( int matrix_layout, char trans, long long int ijob,
                                long long int m, long long int n, const double* a,
                                long long int lda, const double* b, long long int ldb,
                                double* c, long long int ldc, const double* d,
                                long long int ldd, const double* e, long long int lde,
                                double* f, long long int ldf, double* scale,
                                double* dif, double* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_ctgsyl_work( int matrix_layout, char trans, long long int ijob,
                                long long int m, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* c, long long int ldc,
                                const MKL_Complex8* d, long long int ldd,
                                const MKL_Complex8* e, long long int lde,
                                MKL_Complex8* f, long long int ldf,
                                float* scale, float* dif,
                                MKL_Complex8* work, long long int lwork,
                                long long int* iwork );

long long int LAPACKE_ztgsyl_work( int matrix_layout, char trans, long long int ijob,
                                long long int m, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* c, long long int ldc,
                                const MKL_Complex16* d, long long int ldd,
                                const MKL_Complex16* e, long long int lde,
                                MKL_Complex16* f, long long int ldf,
                                double* scale, double* dif,
                                MKL_Complex16* work, long long int lwork,
                                long long int* iwork );


long long int LAPACKE_stpcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n, const float* ap,
                                float* rcond, float* work, long long int* iwork );

long long int LAPACKE_dtpcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n, const double* ap,
                                double* rcond, double* work,
                                long long int* iwork );

long long int LAPACKE_ctpcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n,
                                const MKL_Complex8* ap, float* rcond,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_ztpcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n,
                                const MKL_Complex16* ap, double* rcond,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_stpmqrt_work( int matrix_layout, char side, char trans,
                                 long long int m, long long int n, long long int k, long long int l,
                                 long long int nb, const float* v, long long int ldv,
                                 const float* t, long long int ldt, float* a,
                                 long long int lda, float* b, long long int ldb,
                                 float* work );

long long int LAPACKE_dtpmqrt_work( int matrix_layout, char side, char trans,
                                 long long int m, long long int n, long long int k, long long int l,
                                 long long int nb, const double* v, long long int ldv,
                                 const double* t, long long int ldt, double* a,
                                 long long int lda, double* b, long long int ldb,
                                 double* work );

long long int LAPACKE_ctpmqrt_work( int matrix_layout, char side, char trans,
                                 long long int m, long long int n, long long int k, long long int l,
                                 long long int nb, const MKL_Complex8* v,
                                 long long int ldv, const MKL_Complex8* t,
                                 long long int ldt, MKL_Complex8* a,
                                 long long int lda, MKL_Complex8* b,
                                 long long int ldb, MKL_Complex8* work );

long long int LAPACKE_ztpmqrt_work( int matrix_layout, char side, char trans,
                                 long long int m, long long int n, long long int k, long long int l,
                                 long long int nb, const MKL_Complex16* v,
                                 long long int ldv, const MKL_Complex16* t,
                                 long long int ldt, MKL_Complex16* a,
                                 long long int lda, MKL_Complex16* b,
                                 long long int ldb, MKL_Complex16* work );


long long int LAPACKE_stpqrt_work( int matrix_layout, long long int m, long long int n,
                                long long int l, long long int nb, float* a, long long int lda,
                                float* b, long long int ldb, float* t, long long int ldt,
                                float* work );

long long int LAPACKE_dtpqrt_work( int matrix_layout, long long int m, long long int n,
                                long long int l, long long int nb, double* a, long long int lda,
                                double* b, long long int ldb, double* t, long long int ldt,
                                double* work );

long long int LAPACKE_ctpqrt_work( int matrix_layout, long long int m, long long int n,
                                long long int l, long long int nb, MKL_Complex8* a,
                                long long int lda, MKL_Complex8* b,
                                long long int ldb, MKL_Complex8* t,
                                long long int ldt, MKL_Complex8* work );

long long int LAPACKE_ztpqrt_work( int matrix_layout, long long int m, long long int n,
                                long long int l, long long int nb, MKL_Complex16* a,
                                long long int lda, MKL_Complex16* b,
                                long long int ldb, MKL_Complex16* t,
                                long long int ldt, MKL_Complex16* work );


long long int LAPACKE_stpqrt2_work( int matrix_layout, long long int m, long long int n,
                                 long long int l, float* a, long long int lda, float* b,
                                 long long int ldb, float* t, long long int ldt );

long long int LAPACKE_dtpqrt2_work( int matrix_layout, long long int m, long long int n,
                                 long long int l, double* a, long long int lda, double* b,
                                 long long int ldb, double* t, long long int ldt );

long long int LAPACKE_ctpqrt2_work( int matrix_layout, long long int m, long long int n, long long int l,
                                 MKL_Complex8* a, long long int lda,
                                 MKL_Complex8* b, long long int ldb,
                                 MKL_Complex8* t, long long int ldt );

long long int LAPACKE_ztpqrt2_work( int matrix_layout, long long int m, long long int n, long long int l,
                                 MKL_Complex16* a, long long int lda,
                                 MKL_Complex16* b, long long int ldb,
                                 MKL_Complex16* t, long long int ldt );

long long int LAPACKE_mkl_ctppack_work( int matrix_layout, char uplo, char trans, long long int n,
                                     MKL_Complex8* ap, long long int i, long long int j, long long int rows,
                                     long long int cols, MKL_Complex8* a, long long int lda );
long long int LAPACKE_mkl_dtppack_work( int matrix_layout, char uplo, char trans, long long int n,
                                     double* ap, long long int i, long long int j, long long int rows,
                                     long long int cols, double* a, long long int lda );
long long int LAPACKE_mkl_stppack_work( int matrix_layout, char uplo, char trans, long long int n,
                                     float* ap, long long int i, long long int j, long long int rows,
                                     long long int cols, float* a, long long int lda );
long long int LAPACKE_mkl_ztppack_work( int matrix_layout, char uplo, char trans, long long int n,
                                     MKL_Complex16* ap, long long int i, long long int j, long long int rows,
                                     long long int cols, MKL_Complex16* a, long long int lda );

long long int LAPACKE_stprfb_work( int matrix_layout, char side, char trans,
                                char direct, char storev, long long int m,
                                long long int n, long long int k, long long int l,
                                const float* v, long long int ldv, const float* t,
                                long long int ldt, float* a, long long int lda,
                                float* b, long long int ldb, const float* work,
                                long long int ldwork );

long long int LAPACKE_dtprfb_work( int matrix_layout, char side, char trans,
                                char direct, char storev, long long int m,
                                long long int n, long long int k, long long int l,
                                const double* v, long long int ldv, const double* t,
                                long long int ldt, double* a, long long int lda,
                                double* b, long long int ldb, const double* work,
                                long long int ldwork );

long long int LAPACKE_ctprfb_work( int matrix_layout, char side, char trans,
                                char direct, char storev, long long int m,
                                long long int n, long long int k, long long int l,
                                const MKL_Complex8* v, long long int ldv,
                                const MKL_Complex8* t, long long int ldt,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb,
                                const MKL_Complex8* work,
                                long long int ldwork );

long long int LAPACKE_ztprfb_work( int matrix_layout, char side, char trans,
                                char direct, char storev, long long int m,
                                long long int n, long long int k, long long int l,
                                const MKL_Complex16* v, long long int ldv,
                                const MKL_Complex16* t, long long int ldt,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb,
                                const MKL_Complex16* work,
                                long long int ldwork );


long long int LAPACKE_stprfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const float* ap, const float* b, long long int ldb,
                                const float* x, long long int ldx, float* ferr,
                                float* berr, float* work, long long int* iwork );

long long int LAPACKE_dtprfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const double* ap, const double* b,
                                long long int ldb, const double* x, long long int ldx,
                                double* ferr, double* berr, double* work,
                                long long int* iwork );

long long int LAPACKE_ctprfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const MKL_Complex8* ap,
                                const MKL_Complex8* b, long long int ldb,
                                const MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_ztprfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const MKL_Complex16* ap,
                                const MKL_Complex16* b, long long int ldb,
                                const MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_stptri_work( int matrix_layout, char uplo, char diag,
                                long long int n, float* ap );

long long int LAPACKE_dtptri_work( int matrix_layout, char uplo, char diag,
                                long long int n, double* ap );

long long int LAPACKE_ctptri_work( int matrix_layout, char uplo, char diag,
                                long long int n, MKL_Complex8* ap );

long long int LAPACKE_ztptri_work( int matrix_layout, char uplo, char diag,
                                long long int n, MKL_Complex16* ap );


long long int LAPACKE_stptrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const float* ap, float* b, long long int ldb );

long long int LAPACKE_dtptrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const double* ap, double* b, long long int ldb );

long long int LAPACKE_ctptrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const MKL_Complex8* ap,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_ztptrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const MKL_Complex16* ap,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_stpttf_work( int matrix_layout, char transr, char uplo,
                                long long int n, const float* ap, float* arf );

long long int LAPACKE_dtpttf_work( int matrix_layout, char transr, char uplo,
                                long long int n, const double* ap, double* arf );

long long int LAPACKE_ctpttf_work( int matrix_layout, char transr, char uplo,
                                long long int n, const MKL_Complex8* ap,
                                MKL_Complex8* arf );

long long int LAPACKE_ztpttf_work( int matrix_layout, char transr, char uplo,
                                long long int n, const MKL_Complex16* ap,
                                MKL_Complex16* arf );


long long int LAPACKE_stpttr_work( int matrix_layout, char uplo, long long int n,
                                const float* ap, float* a, long long int lda );

long long int LAPACKE_dtpttr_work( int matrix_layout, char uplo, long long int n,
                                const double* ap, double* a, long long int lda );

long long int LAPACKE_ctpttr_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* ap,
                                MKL_Complex8* a, long long int lda );

long long int LAPACKE_ztpttr_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* ap,
                                MKL_Complex16* a, long long int lda );

long long int LAPACKE_ctpunpack_work( int matrix_layout, char uplo, char trans, long long int n,
                                   MKL_Complex8* ap, long long int i, long long int j, long long int rows,
                                   long long int cols, MKL_Complex8* a, long long int lda );
long long int LAPACKE_dtpunpack_work( int matrix_layout, char uplo, char trans, long long int n,
                                   double* ap, long long int i, long long int j, long long int rows,
                                   long long int cols, double* a, long long int lda );
long long int LAPACKE_stpunpack_work( int matrix_layout, char uplo, char trans, long long int n,
                                   float* ap, long long int i, long long int j, long long int rows,
                                   long long int cols, float* a, long long int lda );
long long int LAPACKE_ztpunpack_work( int matrix_layout, char uplo, char trans, long long int n,
                                   MKL_Complex16* ap, long long int i, long long int j, long long int rows,
                                   long long int cols, MKL_Complex16* a, long long int lda );

long long int LAPACKE_strcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n, const float* a,
                                long long int lda, float* rcond, float* work,
                                long long int* iwork );

long long int LAPACKE_dtrcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n, const double* a,
                                long long int lda, double* rcond, double* work,
                                long long int* iwork );

long long int LAPACKE_ctrcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                float* rcond, MKL_Complex8* work,
                                float* rwork );

long long int LAPACKE_ztrcon_work( int matrix_layout, char norm, char uplo,
                                char diag, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                double* rcond, MKL_Complex16* work,
                                double* rwork );


long long int LAPACKE_strevc_work( int matrix_layout, char side, char howmny,
                                long long int* select, long long int n,
                                const float* t, long long int ldt, float* vl,
                                long long int ldvl, float* vr, long long int ldvr,
                                long long int mm, long long int* m, float* work );

long long int LAPACKE_dtrevc_work( int matrix_layout, char side, char howmny,
                                long long int* select, long long int n,
                                const double* t, long long int ldt, double* vl,
                                long long int ldvl, double* vr, long long int ldvr,
                                long long int mm, long long int* m, double* work );

long long int LAPACKE_ctrevc_work( int matrix_layout, char side, char howmny,
                                const long long int* select, long long int n,
                                MKL_Complex8* t, long long int ldt,
                                MKL_Complex8* vl, long long int ldvl,
                                MKL_Complex8* vr, long long int ldvr,
                                long long int mm, long long int* m,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_ztrevc_work( int matrix_layout, char side, char howmny,
                                const long long int* select, long long int n,
                                MKL_Complex16* t, long long int ldt,
                                MKL_Complex16* vl, long long int ldvl,
                                MKL_Complex16* vr, long long int ldvr,
                                long long int mm, long long int* m,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_strexc_work( int matrix_layout, char compq, long long int n,
                                float* t, long long int ldt, float* q,
                                long long int ldq, long long int* ifst,
                                long long int* ilst, float* work );

long long int LAPACKE_dtrexc_work( int matrix_layout, char compq, long long int n,
                                double* t, long long int ldt, double* q,
                                long long int ldq, long long int* ifst,
                                long long int* ilst, double* work );

long long int LAPACKE_ctrexc_work( int matrix_layout, char compq, long long int n,
                                MKL_Complex8* t, long long int ldt,
                                MKL_Complex8* q, long long int ldq,
                                long long int ifst, long long int ilst );

long long int LAPACKE_ztrexc_work( int matrix_layout, char compq, long long int n,
                                MKL_Complex16* t, long long int ldt,
                                MKL_Complex16* q, long long int ldq,
                                long long int ifst, long long int ilst );


long long int LAPACKE_strrfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const float* a, long long int lda, const float* b,
                                long long int ldb, const float* x, long long int ldx,
                                float* ferr, float* berr, float* work,
                                long long int* iwork );

long long int LAPACKE_dtrrfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const double* a, long long int lda,
                                const double* b, long long int ldb,
                                const double* x, long long int ldx, double* ferr,
                                double* berr, double* work, long long int* iwork );

long long int LAPACKE_ctrrfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* b, long long int ldb,
                                const MKL_Complex8* x, long long int ldx,
                                float* ferr, float* berr,
                                MKL_Complex8* work, float* rwork );

long long int LAPACKE_ztrrfs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* b, long long int ldb,
                                const MKL_Complex16* x, long long int ldx,
                                double* ferr, double* berr,
                                MKL_Complex16* work, double* rwork );


long long int LAPACKE_strsen_work( int matrix_layout, char job, char compq,
                                const long long int* select, long long int n,
                                float* t, long long int ldt, float* q,
                                long long int ldq, float* wr, float* wi,
                                long long int* m, float* s, float* sep,
                                float* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_dtrsen_work( int matrix_layout, char job, char compq,
                                const long long int* select, long long int n,
                                double* t, long long int ldt, double* q,
                                long long int ldq, double* wr, double* wi,
                                long long int* m, double* s, double* sep,
                                double* work, long long int lwork,
                                long long int* iwork, long long int liwork );

long long int LAPACKE_ctrsen_work( int matrix_layout, char job, char compq,
                                const long long int* select, long long int n,
                                MKL_Complex8* t, long long int ldt,
                                MKL_Complex8* q, long long int ldq,
                                MKL_Complex8* w, long long int* m,
                                float* s, float* sep,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_ztrsen_work( int matrix_layout, char job, char compq,
                                const long long int* select, long long int n,
                                MKL_Complex16* t, long long int ldt,
                                MKL_Complex16* q, long long int ldq,
                                MKL_Complex16* w, long long int* m,
                                double* s, double* sep,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_strsna_work( int matrix_layout, char job, char howmny,
                                const long long int* select, long long int n,
                                const float* t, long long int ldt, const float* vl,
                                long long int ldvl, const float* vr,
                                long long int ldvr, float* s, float* sep,
                                long long int mm, long long int* m, float* work,
                                long long int ldwork, long long int* iwork );

long long int LAPACKE_dtrsna_work( int matrix_layout, char job, char howmny,
                                const long long int* select, long long int n,
                                const double* t, long long int ldt,
                                const double* vl, long long int ldvl,
                                const double* vr, long long int ldvr, double* s,
                                double* sep, long long int mm, long long int* m,
                                double* work, long long int ldwork,
                                long long int* iwork );

long long int LAPACKE_ctrsna_work( int matrix_layout, char job, char howmny,
                                const long long int* select, long long int n,
                                const MKL_Complex8* t, long long int ldt,
                                const MKL_Complex8* vl, long long int ldvl,
                                const MKL_Complex8* vr, long long int ldvr,
                                float* s, float* sep, long long int mm,
                                long long int* m, MKL_Complex8* work,
                                long long int ldwork, float* rwork );

long long int LAPACKE_ztrsna_work( int matrix_layout, char job, char howmny,
                                const long long int* select, long long int n,
                                const MKL_Complex16* t, long long int ldt,
                                const MKL_Complex16* vl,
                                long long int ldvl,
                                const MKL_Complex16* vr,
                                long long int ldvr, double* s, double* sep,
                                long long int mm, long long int* m,
                                MKL_Complex16* work, long long int ldwork,
                                double* rwork );


long long int LAPACKE_strsyl_work( int matrix_layout, char trana, char tranb,
                                long long int isgn, long long int m, long long int n,
                                const float* a, long long int lda, const float* b,
                                long long int ldb, float* c, long long int ldc,
                                float* scale );

long long int LAPACKE_dtrsyl_work( int matrix_layout, char trana, char tranb,
                                long long int isgn, long long int m, long long int n,
                                const double* a, long long int lda,
                                const double* b, long long int ldb, double* c,
                                long long int ldc, double* scale );

long long int LAPACKE_ctrsyl_work( int matrix_layout, char trana, char tranb,
                                long long int isgn, long long int m, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* b, long long int ldb,
                                MKL_Complex8* c, long long int ldc,
                                float* scale );

long long int LAPACKE_ztrsyl_work( int matrix_layout, char trana, char tranb,
                                long long int isgn, long long int m, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* b, long long int ldb,
                                MKL_Complex16* c, long long int ldc,
                                double* scale );


long long int LAPACKE_strtri_work( int matrix_layout, char uplo, char diag,
                                long long int n, float* a, long long int lda );

long long int LAPACKE_dtrtri_work( int matrix_layout, char uplo, char diag,
                                long long int n, double* a, long long int lda );

long long int LAPACKE_ctrtri_work( int matrix_layout, char uplo, char diag,
                                long long int n, MKL_Complex8* a,
                                long long int lda );

long long int LAPACKE_ztrtri_work( int matrix_layout, char uplo, char diag,
                                long long int n, MKL_Complex16* a,
                                long long int lda );


long long int LAPACKE_strtrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const float* a, long long int lda, float* b,
                                long long int ldb );

long long int LAPACKE_dtrtrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const double* a, long long int lda, double* b,
                                long long int ldb );

long long int LAPACKE_ctrtrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const MKL_Complex8* a, long long int lda,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_ztrtrs_work( int matrix_layout, char uplo, char trans,
                                char diag, long long int n, long long int nrhs,
                                const MKL_Complex16* a, long long int lda,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_strttf_work( int matrix_layout, char transr, char uplo,
                                long long int n, const float* a, long long int lda,
                                float* arf );

long long int LAPACKE_dtrttf_work( int matrix_layout, char transr, char uplo,
                                long long int n, const double* a, long long int lda,
                                double* arf );

long long int LAPACKE_ctrttf_work( int matrix_layout, char transr, char uplo,
                                long long int n, const MKL_Complex8* a,
                                long long int lda, MKL_Complex8* arf );

long long int LAPACKE_ztrttf_work( int matrix_layout, char transr, char uplo,
                                long long int n, const MKL_Complex16* a,
                                long long int lda, MKL_Complex16* arf );


long long int LAPACKE_strttp_work( int matrix_layout, char uplo, long long int n,
                                const float* a, long long int lda, float* ap );

long long int LAPACKE_dtrttp_work( int matrix_layout, char uplo, long long int n,
                                const double* a, long long int lda, double* ap );

long long int LAPACKE_ctrttp_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                MKL_Complex8* ap );

long long int LAPACKE_ztrttp_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                MKL_Complex16* ap );


long long int LAPACKE_stzrzf_work( int matrix_layout, long long int m, long long int n,
                                float* a, long long int lda, float* tau,
                                float* work, long long int lwork );

long long int LAPACKE_dtzrzf_work( int matrix_layout, long long int m, long long int n,
                                double* a, long long int lda, double* tau,
                                double* work, long long int lwork );

long long int LAPACKE_ctzrzf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex8* a, long long int lda,
                                MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_ztzrzf_work( int matrix_layout, long long int m, long long int n,
                                MKL_Complex16* a, long long int lda,
                                MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );



long long int LAPACKE_claghe( int matrix_layout, long long int n, long long int k,
                           const float* d, MKL_Complex8* a,
                           long long int lda, long long int* iseed );

long long int LAPACKE_zlaghe( int matrix_layout, long long int n, long long int k,
                           const double* d, MKL_Complex16* a,
                           long long int lda, long long int* iseed );


long long int LAPACKE_slagsy( int matrix_layout, long long int n, long long int k,
                           const float* d, float* a, long long int lda,
                           long long int* iseed );

long long int LAPACKE_dlagsy( int matrix_layout, long long int n, long long int k,
                           const double* d, double* a, long long int lda,
                           long long int* iseed );

long long int LAPACKE_clagsy( int matrix_layout, long long int n, long long int k,
                           const float* d, MKL_Complex8* a,
                           long long int lda, long long int* iseed );

long long int LAPACKE_zlagsy( int matrix_layout, long long int n, long long int k,
                           const double* d, MKL_Complex16* a,
                           long long int lda, long long int* iseed );


float LAPACKE_slapy2( float x, float y );

double LAPACKE_dlapy2( double x, double y );


float LAPACKE_slapy3( float x, float y, float z );

double LAPACKE_dlapy3( double x, double y, double z );


long long int LAPACKE_cunbdb_work( int matrix_layout, char trans, char signs,
                                long long int m, long long int p, long long int q,
                                MKL_Complex8* x11, long long int ldx11,
                                MKL_Complex8* x12, long long int ldx12,
                                MKL_Complex8* x21, long long int ldx21,
                                MKL_Complex8* x22, long long int ldx22,
                                float* theta, float* phi,
                                MKL_Complex8* taup1,
                                MKL_Complex8* taup2,
                                MKL_Complex8* tauq1,
                                MKL_Complex8* tauq2,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunbdb_work( int matrix_layout, char trans, char signs,
                                long long int m, long long int p, long long int q,
                                MKL_Complex16* x11, long long int ldx11,
                                MKL_Complex16* x12, long long int ldx12,
                                MKL_Complex16* x21, long long int ldx21,
                                MKL_Complex16* x22, long long int ldx22,
                                double* theta, double* phi,
                                MKL_Complex16* taup1,
                                MKL_Complex16* taup2,
                                MKL_Complex16* tauq1,
                                MKL_Complex16* tauq2,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cuncsd_work( int matrix_layout, char jobu1, char jobu2,
                                char jobv1t, char jobv2t, char trans,
                                char signs, long long int m, long long int p,
                                long long int q, MKL_Complex8* x11,
                                long long int ldx11, MKL_Complex8* x12,
                                long long int ldx12, MKL_Complex8* x21,
                                long long int ldx21, MKL_Complex8* x22,
                                long long int ldx22, float* theta,
                                MKL_Complex8* u1, long long int ldu1,
                                MKL_Complex8* u2, long long int ldu2,
                                MKL_Complex8* v1t, long long int ldv1t,
                                MKL_Complex8* v2t, long long int ldv2t,
                                MKL_Complex8* work, long long int lwork,
                                float* rwork, long long int lrwork,
                                long long int* iwork );

long long int LAPACKE_zuncsd_work( int matrix_layout, char jobu1, char jobu2,
                                char jobv1t, char jobv2t, char trans,
                                char signs, long long int m, long long int p,
                                long long int q, MKL_Complex16* x11,
                                long long int ldx11, MKL_Complex16* x12,
                                long long int ldx12, MKL_Complex16* x21,
                                long long int ldx21, MKL_Complex16* x22,
                                long long int ldx22, double* theta,
                                MKL_Complex16* u1, long long int ldu1,
                                MKL_Complex16* u2, long long int ldu2,
                                MKL_Complex16* v1t, long long int ldv1t,
                                MKL_Complex16* v2t, long long int ldv2t,
                                MKL_Complex16* work, long long int lwork,
                                double* rwork, long long int lrwork,
                                long long int* iwork );


long long int LAPACKE_cungbr_work( int matrix_layout, char vect, long long int m,
                                long long int n, long long int k,
                                MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zungbr_work( int matrix_layout, char vect, long long int m,
                                long long int n, long long int k,
                                MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunghr_work( int matrix_layout, long long int n, long long int ilo,
                                long long int ihi, MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunghr_work( int matrix_layout, long long int n, long long int ilo,
                                long long int ihi, MKL_Complex16* a,
                                long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunglq_work( int matrix_layout, long long int m, long long int n,
                                long long int k, MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunglq_work( int matrix_layout, long long int m, long long int n,
                                long long int k, MKL_Complex16* a,
                                long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cungql_work( int matrix_layout, long long int m, long long int n,
                                long long int k, MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zungql_work( int matrix_layout, long long int m, long long int n,
                                long long int k, MKL_Complex16* a,
                                long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cungqr_work( int matrix_layout, long long int m, long long int n,
                                long long int k, MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zungqr_work( int matrix_layout, long long int m, long long int n,
                                long long int k, MKL_Complex16* a,
                                long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cungrq_work( int matrix_layout, long long int m, long long int n,
                                long long int k, MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zungrq_work( int matrix_layout, long long int m, long long int n,
                                long long int k, MKL_Complex16* a,
                                long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cungtr_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* tau,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zungtr_work( int matrix_layout, char uplo, long long int n,
                                MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunmbr_work( int matrix_layout, char vect, char side,
                                char trans, long long int m, long long int n,
                                long long int k, const MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunmbr_work( int matrix_layout, char vect, char side,
                                char trans, long long int m, long long int n,
                                long long int k, const MKL_Complex16* a,
                                long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunmhr_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int ilo,
                                long long int ihi, const MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunmhr_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int ilo,
                                long long int ihi, const MKL_Complex16* a,
                                long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunmlq_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunmlq_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunmql_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunmql_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunmqr_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunmqr_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunmrq_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunmrq_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                const MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunmrz_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                long long int l, const MKL_Complex8* a,
                                long long int lda, const MKL_Complex8* tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunmrz_work( int matrix_layout, char side, char trans,
                                long long int m, long long int n, long long int k,
                                long long int l, const MKL_Complex16* a,
                                long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cunmtr_work( int matrix_layout, char side, char uplo,
                                char trans, long long int m, long long int n,
                                const MKL_Complex8* a, long long int lda,
                                const MKL_Complex8* tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zunmtr_work( int matrix_layout, char side, char uplo,
                                char trans, long long int m, long long int n,
                                const MKL_Complex16* a, long long int lda,
                                const MKL_Complex16* tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work, long long int lwork );


long long int LAPACKE_cupgtr_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex8* ap,
                                const MKL_Complex8* tau,
                                MKL_Complex8* q, long long int ldq,
                                MKL_Complex8* work );

long long int LAPACKE_zupgtr_work( int matrix_layout, char uplo, long long int n,
                                const MKL_Complex16* ap,
                                const MKL_Complex16* tau,
                                MKL_Complex16* q, long long int ldq,
                                MKL_Complex16* work );


long long int LAPACKE_cupmtr_work( int matrix_layout, char side, char uplo,
                                char trans, long long int m, long long int n,
                                const MKL_Complex8* ap,
                                const MKL_Complex8* tau,
                                MKL_Complex8* c, long long int ldc,
                                MKL_Complex8* work );

long long int LAPACKE_zupmtr_work( int matrix_layout, char side, char uplo,
                                char trans, long long int m, long long int n,
                                const MKL_Complex16* ap,
                                const MKL_Complex16* tau,
                                MKL_Complex16* c, long long int ldc,
                                MKL_Complex16* work );

long long int LAPACKE_ssysv_rook_work( int matrix_layout, char uplo, long long int n,
                                    long long int nrhs, float* a, long long int lda,
                                    long long int* ipiv, float* b, long long int ldb,
                                    float* work, long long int lwork );

long long int LAPACKE_dsysv_rook_work( int matrix_layout, char uplo, long long int n,
                                    long long int nrhs, double* a, long long int lda,
                                    long long int* ipiv, double* b, long long int ldb,
                                    double* work, long long int lwork );

long long int LAPACKE_csysv_rook_work( int matrix_layout, char uplo, long long int n,
                                    long long int nrhs, MKL_Complex8* a,
                                    long long int lda, long long int* ipiv,
                                    MKL_Complex8* b, long long int ldb,
                                    MKL_Complex8* work, long long int lwork );

long long int LAPACKE_zsysv_rook_work( int matrix_layout, char uplo, long long int n,
                                    long long int nrhs, MKL_Complex16* a,
                                    long long int lda, long long int* ipiv,
                                    MKL_Complex16* b, long long int ldb,
                                    MKL_Complex16* work, long long int lwork );


long long int LAPACKE_clacn2_work( long long int n, MKL_Complex8* v,
                                MKL_Complex8* x,
                                float* est, long long int* kase,
                                long long int* isave );

long long int LAPACKE_dlacn2_work( long long int n, double* v, double* x,
                                long long int* isgn, double* est, long long int* kase,
                                long long int* isave );

long long int LAPACKE_slacn2_work( long long int n, float* v, float* x,
                                long long int* isgn, float* est, long long int* kase,
                                long long int* isave );

long long int LAPACKE_zlacn2_work( long long int n, MKL_Complex16* v,
                                MKL_Complex16* x,
                                double* est, long long int* kase,
                                long long int* isave );


long long int LAPACKE_clacp2_work( int matrix_layout, char uplo, long long int m,
                                long long int n, const float* a, long long int lda,
                                MKL_Complex8* b, long long int ldb );

long long int LAPACKE_zlacp2_work( int matrix_layout, char uplo, long long int m,
                                long long int n, const double* a, long long int lda,
                                MKL_Complex16* b, long long int ldb );


long long int LAPACKE_csyr_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex8 alpha,
                                  const MKL_Complex8* x,
                                  long long int incx, MKL_Complex8* a,
                                  long long int lda );

long long int LAPACKE_zsyr_work( int matrix_layout, char uplo, long long int n,
                                  MKL_Complex16 alpha,
                                  const MKL_Complex16* x,
                                  long long int incx, MKL_Complex16* a,
                                  long long int lda );
# 42 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_pardiso.h" 1
# 33 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_pardiso.h"
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_dss.h" 1
# 42 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_dss.h"
typedef void * _MKL_DSS_HANDLE_t;
typedef char _CHARACTER_t;
typedef char _CHARACTER_STR_t;






typedef long _LONG_t;



typedef float _REAL_t;
typedef double _DOUBLE_PRECISION_t;

typedef struct { double r, i; } _DOUBLE_COMPLEX_t;
# 193 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_dss.h"
extern long long int dss_create_(_MKL_DSS_HANDLE_t *,
  long long int const *);
extern long long int dss_define_structure_(_MKL_DSS_HANDLE_t *,
  long long int const *, long long int const *, long long int const *,
  long long int const *, long long int const *, long long int const *);
extern long long int dss_reorder_(_MKL_DSS_HANDLE_t *, long long int const *,
  long long int const *);
extern long long int dss_factor_real_(_MKL_DSS_HANDLE_t *,
  long long int const *, void const *);
extern long long int dss_factor_complex_(_MKL_DSS_HANDLE_t *,
  long long int const *, void const *);
extern long long int dss_solve_real_(_MKL_DSS_HANDLE_t *,
  long long int const *, void const *, long long int const *,
  void *);
extern long long int dss_solve_complex_(_MKL_DSS_HANDLE_t *,
  long long int const *, void const *, long long int const *,
  void *);
extern long long int dss_statistics_( _MKL_DSS_HANDLE_t *, long long int const *,
  _CHARACTER_STR_t const *, _DOUBLE_PRECISION_t *);
extern long long int dss_delete_(_MKL_DSS_HANDLE_t const *,
  long long int const *);
# 34 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_pardiso.h" 2





void pardiso( _MKL_DSS_HANDLE_t, const long long int *, const long long int *, const long long int *,
                   const long long int *, const long long int *, const void *, const long long int *,
                   const long long int *, long long int *, const long long int *, long long int *,
                   const long long int *, void *, void *, long long int * );

void PARDISO( _MKL_DSS_HANDLE_t, const long long int *, const long long int *, const long long int *,
                   const long long int *, const long long int *, const void *, const long long int *,
                   const long long int *, long long int *, const long long int *, long long int *,
                   const long long int *, void *, void *, long long int * );

void pardisoinit( _MKL_DSS_HANDLE_t, const long long int *, long long int * );

void PARDISOINIT( _MKL_DSS_HANDLE_t, const long long int *, long long int * );

void pardiso_handle_store( _MKL_DSS_HANDLE_t, const char*, long long int *);
void PARDISO_HANDLE_STORE( _MKL_DSS_HANDLE_t, const char*, long long int *);

void pardiso_handle_restore( _MKL_DSS_HANDLE_t, const char*, long long int *);
void PARDISO_HANDLE_RESTORE( _MKL_DSS_HANDLE_t, const char*, long long int *);

void pardiso_handle_delete( const char*, long long int *);
void PARDISO_HANDLE_DELETE( const char*, long long int *);






void pardiso_64( _MKL_DSS_HANDLE_t, const long long int *, const long long int *, const long long int *,
                   const long long int *, const long long int *, const void *, const long long int *,
                   const long long int *, long long int *, const long long int *, long long int *,
                   const long long int *, void *, void *, long long int * );

void PARDISO_64( _MKL_DSS_HANDLE_t, const long long int *, const long long int *, const long long int *,
                   const long long int *, const long long int *, const void *, const long long int *,
                   const long long int *, long long int *, const long long int *, long long int *,
                   const long long int *, void *, void *, long long int * );

void pardiso_handle_store_64( _MKL_DSS_HANDLE_t, const char*, long long int *);
void PARDISO_HANDLE_STORE_64( _MKL_DSS_HANDLE_t, const char*, long long int *);

void pardiso_handle_restore_64( _MKL_DSS_HANDLE_t, const char*, long long int *);
void PARDISO_HANDLE_RESTORE_64( _MKL_DSS_HANDLE_t, const char*, long long int *);

void pardiso_handle_delete_64( const char*, long long int *);
void PARDISO_HANDLE_DELETE_64( const char*, long long int *);

enum PARDISO_ENV_PARAM {
       PARDISO_OOC_FILE_NAME = 1
};







long long int pardiso_getenv ( const _MKL_DSS_HANDLE_t, const enum PARDISO_ENV_PARAM*, char* );
long long int PARDISO_GETENV ( const _MKL_DSS_HANDLE_t, const enum PARDISO_ENV_PARAM*, char* );

long long int pardiso_setenv ( _MKL_DSS_HANDLE_t, const enum PARDISO_ENV_PARAM*, const char* );
long long int PARDISO_SETENV ( _MKL_DSS_HANDLE_t, const enum PARDISO_ENV_PARAM*, const char* );





int MKL_PARDISO_PIVOT ( const double* aii, double* bii, const double* eps );
int MKL_PARDISO_PIVOT_( const double* aii, double* bii, const double* eps );
int mkl_pardiso_pivot ( const double* aii, double* bii, const double* eps );
int mkl_pardiso_pivot_( const double* aii, double* bii, const double* eps );


void pardiso_getdiag( const _MKL_DSS_HANDLE_t, void *, void *, const long long int *, long long int * );
# 43 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_sparse_handle.h" 1
# 49 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_sparse_handle.h"
typedef enum { MKL_ZERO_BASED, MKL_ONE_BASED } sparse_matrix_indexing;
typedef enum { MKL_C_STYLE, MKL_FORTRAN_STYLE } sparse_matrix_print_styles;
typedef enum { MKL_CSR } sparse_matrix_formats;
typedef enum { MKL_GENERAL_STRUCTURE, MKL_UPPER_TRIANGULAR, MKL_LOWER_TRIANGULAR, MKL_STRUCTURAL_SYMMETRIC } sparse_matrix_structures;
typedef enum { MKL_NO_PRINT, MKL_PRINT } sparse_matrix_message_levels;
typedef enum { MKL_SPARSE_CHECKER_SUCCESS = 0, MKL_SPARSE_CHECKER_NON_MONOTONIC = 21, MKL_SPARSE_CHECKER_OUT_OF_RANGE = 22, MKL_SPARSE_CHECKER_NONTRIANGULAR = 23, MKL_SPARSE_CHECKER_NONORDERED = 24} sparse_checker_error_values;

typedef struct _sparse_struct {
    long long int n, *csr_ia, *csr_ja, check_result[3];
    sparse_matrix_indexing indexing;
    sparse_matrix_structures matrix_structure;
    sparse_matrix_formats matrix_format;
    sparse_matrix_message_levels message_level;
    sparse_matrix_print_styles print_style;
} sparse_struct;

extern void sparse_matrix_checker_init (sparse_struct*);
extern sparse_checker_error_values sparse_matrix_checker (sparse_struct*);
# 44 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2

# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_rci.h" 1
# 32 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_rci.h"
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_service.h" 1
# 30 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_service.h"
# 1 "/usr/include/stdlib.h" 1 3 4
# 24 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 365 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 410 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 411 "/usr/include/sys/cdefs.h" 2 3 4
# 366 "/usr/include/features.h" 2 3 4
# 389 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4
# 10 "/usr/include/gnu/stubs.h" 3 4
# 1 "/usr/include/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/gnu/stubs.h" 2 3 4
# 390 "/usr/include/features.h" 2 3 4
# 25 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.3/include/stddef.h" 1 3 4
# 33 "/usr/include/stdlib.h" 2 3 4








# 1 "/usr/include/bits/waitflags.h" 1 3 4
# 42 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/bits/waitstatus.h" 1 3 4
# 64 "/usr/include/bits/waitstatus.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 36 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 2 3 4
# 60 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/byteswap.h" 1 3 4
# 27 "/usr/include/bits/byteswap.h" 3 4
# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;







typedef long int __quad_t;
typedef unsigned long int __u_quad_t;
# 121 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 122 "/usr/include/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;
# 28 "/usr/include/bits/byteswap.h" 2 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/byteswap.h" 2 3 4






# 1 "/usr/include/bits/byteswap-16.h" 1 3 4
# 36 "/usr/include/bits/byteswap.h" 2 3 4
# 44 "/usr/include/bits/byteswap.h" 3 4
static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
# 108 "/usr/include/bits/byteswap.h" 3 4
static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{
  return __builtin_bswap64 (__bsx);
}
# 61 "/usr/include/endian.h" 2 3 4
# 65 "/usr/include/bits/waitstatus.h" 2 3 4

union wait
  {
    int w_status;
    struct
      {

 unsigned int __w_termsig:7;
 unsigned int __w_coredump:1;
 unsigned int __w_retcode:8;
 unsigned int:16;







      } __wait_terminated;
    struct
      {

 unsigned int __w_stopval:8;
 unsigned int __w_stopsig:8;
 unsigned int:16;






      } __wait_stopped;
  };
# 43 "/usr/include/stdlib.h" 2 3 4
# 67 "/usr/include/stdlib.h" 3 4
typedef union
  {
    union wait *__uptr;
    int *__iptr;
  } __WAIT_STATUS __attribute__ ((__transparent_union__));
# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 305 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));




# 1 "/usr/include/sys/types.h" 1 3 4
# 27 "/usr/include/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;
# 60 "/usr/include/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;
# 98 "/usr/include/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 132 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 57 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;



# 73 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 91 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 103 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 133 "/usr/include/sys/types.h" 2 3 4
# 146 "/usr/include/sys/types.h" 3 4
# 1 "/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.3/include/stddef.h" 1 3 4
# 147 "/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 194 "/usr/include/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 219 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/sys/select.h" 1 3 4
# 30 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/select.h" 1 3 4
# 22 "/usr/include/bits/select.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 23 "/usr/include/bits/select.h" 2 3 4
# 31 "/usr/include/sys/select.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 22 "/usr/include/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 34 "/usr/include/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;





# 1 "/usr/include/time.h" 1 3 4
# 120 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    __syscall_slong_t tv_nsec;
  };
# 44 "/usr/include/sys/select.h" 2 3 4

# 1 "/usr/include/bits/time.h" 1 3 4
# 30 "/usr/include/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 46 "/usr/include/sys/select.h" 2 3 4


typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 64 "/usr/include/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 96 "/usr/include/sys/select.h" 3 4

# 106 "/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 118 "/usr/include/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);





# 1 "/usr/include/bits/select2.h" 1 3 4
# 24 "/usr/include/bits/select2.h" 3 4
extern long int __fdelt_chk (long int __d);
extern long int __fdelt_warn (long int __d)
  __attribute__((__warning__ ("bit outside of fd_set selected")));
# 129 "/usr/include/sys/select.h" 2 3 4



# 220 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 24 "/usr/include/sys/sysmacros.h" 3 4


__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_major (unsigned long long int __dev)
{
  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);
}

__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_minor (unsigned long long int __dev)
{
  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);
}

__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned long long int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)
{
  return ((__minor & 0xff) | ((__major & 0xfff) << 8)
   | (((unsigned long long int) (__minor & ~0xff)) << 12)
   | (((unsigned long long int) (__major & ~0xfff)) << 32));
}


# 223 "/usr/include/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 270 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/bits/pthreadtypes.h" 1 3 4
# 21 "/usr/include/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 22 "/usr/include/bits/pthreadtypes.h" 2 3 4
# 60 "/usr/include/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;





typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;
# 90 "/usr/include/bits/pthreadtypes.h" 3 4
typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;

    unsigned int __nusers;



    int __kind;

    short __spins;
    short __elision;
    __pthread_list_t __list;
# 125 "/usr/include/bits/pthreadtypes.h" 3 4
  } __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{

  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;
    int __writer;
    int __shared;
    signed char __rwelision;




    unsigned char __pad1[7];


    unsigned long int __pad2;


    unsigned int __flags;

  } __data;
# 220 "/usr/include/bits/pthreadtypes.h" 3 4
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 271 "/usr/include/sys/types.h" 2 3 4



# 315 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));






extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));




extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));









extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));




extern void cfree (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));



# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.3/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 493 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 513 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 530 "/usr/include/stdlib.h" 3 4





extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

# 578 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 606 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 619 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 641 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 662 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) __attribute__ ((__warn_unused_result__));

# 733 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) __attribute__ ((__warn_unused_result__));


# 1 "/usr/include/bits/stdlib-bsearch.h" 1 3 4
# 19 "/usr/include/bits/stdlib-bsearch.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) void *
bsearch (const void *__key, const void *__base, size_t __nmemb, size_t __size,
  __compar_fn_t __compar)
{
  size_t __l, __u, __idx;
  const void *__p;
  int __comparison;

  __l = 0;
  __u = __nmemb;
  while (__l < __u)
    {
      __idx = (__l + __u) / 2;
      __p = (void *) (((const char *) __base) + (__idx * __size));
      __comparison = (*__compar) (__key, __p);
      if (__comparison < 0)
 __u = __idx;
      else if (__comparison > 0)
 __l = __idx + 1;
      else
 return (void *) __p;
    }

  return ((void *)0);
}
# 760 "/usr/include/stdlib.h" 2 3 4




extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 774 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));

# 811 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));






extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));








extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 898 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) __attribute__ ((__warn_unused_result__));
# 950 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 955 "/usr/include/stdlib.h" 2 3 4



# 1 "/usr/include/bits/stdlib.h" 1 3 4
# 23 "/usr/include/bits/stdlib.h" 3 4
extern char *__realpath_chk (const char *__restrict __name,
        char *__restrict __resolved,
        size_t __resolvedlen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern char *__realpath_alias (const char *__restrict __name, char *__restrict __resolved) __asm__ ("" "realpath") __attribute__ ((__nothrow__ , __leaf__))

                                                 __attribute__ ((__warn_unused_result__));
extern char *__realpath_chk_warn (const char *__restrict __name, char *__restrict __resolved, size_t __resolvedlen) __asm__ ("" "__realpath_chk") __attribute__ ((__nothrow__ , __leaf__))


                                                __attribute__ ((__warn_unused_result__))
     __attribute__((__warning__ ("second argument of realpath must be either NULL or at " "least PATH_MAX bytes long buffer")))
                                      ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
__attribute__ ((__nothrow__ , __leaf__)) realpath (const char *__restrict __name, char *__restrict __resolved)
{
  if (__builtin_object_size (__resolved, 2 > 1) != (size_t) -1)
    {




      return __realpath_chk (__name, __resolved, __builtin_object_size (__resolved, 2 > 1));
    }

  return __realpath_alias (__name, __resolved);
}


extern int __ptsname_r_chk (int __fd, char *__buf, size_t __buflen,
       size_t __nreal) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
extern int __ptsname_r_alias (int __fd, char *__buf, size_t __buflen) __asm__ ("" "ptsname_r") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (2)));
extern int __ptsname_r_chk_warn (int __fd, char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__ptsname_r_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (2))) __attribute__((__warning__ ("ptsname_r called with buflen bigger than " "size of buf")))
                   ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) ptsname_r (int __fd, char *__buf, size_t __buflen)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__buflen))
 return __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));
      if (__buflen > __builtin_object_size (__buf, 2 > 1))
 return __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));
    }
  return __ptsname_r_alias (__fd, __buf, __buflen);
}


extern int __wctomb_chk (char *__s, wchar_t __wchar, size_t __buflen)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int __wctomb_alias (char *__s, wchar_t __wchar) __asm__ ("" "wctomb") __attribute__ ((__nothrow__ , __leaf__))
              __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) int
__attribute__ ((__nothrow__ , __leaf__)) wctomb (char *__s, wchar_t __wchar)
{







  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1 && 16 > __builtin_object_size (__s, 2 > 1))
    return __wctomb_chk (__s, __wchar, __builtin_object_size (__s, 2 > 1));
  return __wctomb_alias (__s, __wchar);
}


extern size_t __mbstowcs_chk (wchar_t *__restrict __dst,
         const char *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__));
extern size_t __mbstowcs_alias (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len) __asm__ ("" "mbstowcs") __attribute__ ((__nothrow__ , __leaf__))


                                  ;
extern size_t __mbstowcs_chk_warn (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__mbstowcs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("mbstowcs called with dst buffer smaller than len " "* sizeof (wchar_t)")))
                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) mbstowcs (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len)

{
  if (__builtin_object_size (__dst, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__len))
 return __mbstowcs_chk (__dst, __src, __len,
          __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t));

      if (__len > __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t))
 return __mbstowcs_chk_warn (__dst, __src, __len,
         __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t));
    }
  return __mbstowcs_alias (__dst, __src, __len);
}


extern size_t __wcstombs_chk (char *__restrict __dst,
         const wchar_t *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__));
extern size_t __wcstombs_alias (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len) __asm__ ("" "wcstombs") __attribute__ ((__nothrow__ , __leaf__))


                                  ;
extern size_t __wcstombs_chk_warn (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__wcstombs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("wcstombs called with dst buffer smaller than len")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) wcstombs (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len)

{
  if (__builtin_object_size (__dst, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__len))
 return __wcstombs_chk (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1));
      if (__len > __builtin_object_size (__dst, 2 > 1))
 return __wcstombs_chk_warn (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1));
    }
  return __wcstombs_alias (__dst, __src, __len);
}
# 959 "/usr/include/stdlib.h" 2 3 4
# 967 "/usr/include/stdlib.h" 3 4

# 31 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_service.h" 2






void MKL_Get_Version(MKLVersion *ver);


void MKL_Get_Version_String(char *buffer, int len);


void MKL_Free_Buffers(void);


void MKL_Thread_Free_Buffers(void);


long long int MKL_Mem_Stat(int* nbuffers);
# 58 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_service.h"
long long int MKL_Peak_Mem_Usage(int reset);


void* MKL_malloc(size_t size, int align);


void* MKL_calloc(size_t num, size_t size, int align);


void* MKL_realloc(void *ptr, size_t size);


void MKL_free(void *ptr);


int MKL_Disable_Fast_MM(void);


void MKL_Get_Cpu_Clocks(unsigned long long int *);


double MKL_Get_Cpu_Frequency(void);


double MKL_Get_Max_Cpu_Frequency(void);


double MKL_Get_Clocks_Frequency(void);


int MKL_Set_Num_Threads_Local(int nth);

void MKL_Set_Num_Threads(int nth);

int MKL_Get_Max_Threads(void);

int MKL_Domain_Set_Num_Threads(int nth, int MKL_DOMAIN);

int MKL_Domain_Get_Max_Threads(int MKL_DOMAIN);

void MKL_Set_Dynamic(int bool_MKL_DYNAMIC);

int MKL_Get_Dynamic(void);
# 112 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_service.h"
int MKL_Enable_Instructions(int);
# 121 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_service.h"
int MKL_Set_Interface_Layer(int code);
# 130 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_service.h"
int MKL_Set_Threading_Layer(int code);


typedef void (* XerblaEntry) (const char * Name, const int * Num, const int Len);
XerblaEntry mkl_set_xerbla(XerblaEntry xerbla);

typedef int (* ProgressEntry) (int* thread, int* step, char* stage, int stage_len);
ProgressEntry mkl_set_progress(ProgressEntry progress);

typedef int (* PardisopivotEntry) (double* aii, double* bii, double*eps);
PardisopivotEntry mkl_set_pardiso_pivot(PardisopivotEntry pardiso_pivot);


int MKL_MIC_Enable(void);

int MKL_MIC_Disable(void);


int MKL_MIC_Get_Device_Count(void);


typedef enum MKL_MIC_TARGET_TYPE {
    MKL_TARGET_NONE = 0,
    MKL_TARGET_HOST = 1,
    MKL_TARGET_MIC = 2
} MKL_MIC_TARGET_TYPE;






int MKL_MIC_Get_Cpuinfo(MKL_MIC_TARGET_TYPE target_type, int target_number, int *ncores, int *nthreads, double *freq );


int MKL_MIC_Get_Meminfo(MKL_MIC_TARGET_TYPE target_type, int target_number, int *totalmem, int *freemem);


int MKL_MIC_Set_Resource_Limit(double fraction);


int MKL_MIC_Get_Resource_Limit(double *fraction);


int MKL_MIC_Set_Workdivision(MKL_MIC_TARGET_TYPE target_type,
                                 int target_number, double wd);


int MKL_MIC_Get_Workdivision(MKL_MIC_TARGET_TYPE target_type,
                                 int target_number, double *wd);


int MKL_MIC_Set_Max_Memory(MKL_MIC_TARGET_TYPE target_type,
                               int target_number, size_t card_mem_mbytes);


int MKL_MIC_Free_Memory(MKL_MIC_TARGET_TYPE target_type,
                            int target_number);


int MKL_MIC_Set_Offload_Report(int enabled);


int MKL_MIC_Set_Device_Num_Threads(MKL_MIC_TARGET_TYPE target_type,
                                        int target_number, int num_threads);





int MKL_MIC_Set_Flags(int flag);


int MKL_MIC_Get_Flags(void);
# 214 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_service.h"
int MKL_MIC_Get_Status(void);


void MKL_MIC_Clear_Status(void);



int MKL_CBWR_Get(int);

int MKL_CBWR_Set(int);

int MKL_CBWR_Get_Auto_Branch(void);


int MKL_Set_Env_Mode(int);


int MKL_Verbose(int);






typedef void (* MKLExitHandler)(int why);
void MKL_Set_Exit_Handler(MKLExitHandler h);




void MKL_MIC_register_memory(int enable);


enum {
 MKL_BLACS_CUSTOM = 0,
 MKL_BLACS_MSMPI = 1,
 MKL_BLACS_INTELMPI = 2,
 MKL_BLACS_MPICH2 = 3,
 MKL_BLACS_LASTMPI = 4
};
int MKL_Set_mpi(int vendor, const char *custom_library_name);




int MKL_Set_Memory_Limit(int mem_type, size_t limit);


void MKL_Finalize();
# 33 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_rci.h" 2





extern void dcsrilu0(const long long int *n, const double *a, const long long int *ia, const long long int *ja, double *alu, const long long int *ipar, const double *dpar,long long int *ierr);
extern void dcsrilut(const long long int *n, const double *a, const long long int *ia, const long long int *ja, double *alut, long long int *ialut, long long int *jalut, const double * tol, const long long int *maxfil, const long long int *ipar, const double *dpar,long long int *ierr);

extern void DCSRILU0(const long long int *n, const double *a, const long long int *ia, const long long int *ja, double *alu, const long long int *ipar, const double *dpar,long long int *ierr);
extern void DCSRILUT(const long long int *n, const double *a, const long long int *ia, const long long int *ja, double *alut, long long int *ialut, long long int *jalut, const double * tol, const long long int *maxfil, const long long int *ipar, const double *dpar,long long int *ierr);



extern void dcg_init(const long long int *n, const double *x, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void dcg_check(const long long int *n, const double *x, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void dcg(const long long int *n, double *x, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void dcg_get(const long long int *n, const double *x, const double *b, const long long int *rci_request, const long long int *ipar, const double *dpar, const double *tmp, long long int *itercount);

extern void dcgmrhs_init(const long long int *n, const double *x, const long long int* nRhs, const double *b,const long long int *method, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void dcgmrhs_check(const long long int *n, const double *x, const long long int* nRhs, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void dcgmrhs(const long long int *n, double *x, const long long int* nRhs, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void dcgmrhs_get(const long long int *n, const double *x, const long long int* nRhs, const double *b, const long long int *rci_request, const long long int *ipar, const double *dpar, const double *tmp, long long int *itercount);

extern void dfgmres_init(const long long int *n, const double *x, const double *b, long long int *RCI_request, long long int *ipar, double *dpar, double *tmp);
extern void dfgmres_check(const long long int *n, const double *x, const double *b, long long int *RCI_request, long long int *ipar, double *dpar, double *tmp);
extern void dfgmres(const long long int *n, double *x, double *b, long long int *RCI_request, long long int *ipar, double *dpar, double *tmp);
extern void dfgmres_get(const long long int *n, double *x, double *b, long long int *RCI_request, const long long int *ipar, const double *dpar, double *tmp, long long int *itercount);



extern void DCG_INIT(const long long int *n, const double *x, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void DCG_CHECK(const long long int *n, const double *x, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void DCG(const long long int *n, double *x, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void DCG_GET(const long long int *n, const double *x, const double *b, const long long int *rci_request, const long long int *ipar, const double *dpar, const double *tmp, long long int *itercount);

extern void DCGMRHS_INIT(const long long int *n, const double *x, const long long int* nRhs, const double *b, const long long int *method, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void DCGMRHS_CHECK(const long long int *n, const double *x, const long long int* nRhs, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void DCGMRHS(const long long int *n, double *x, const long long int* nRhs, const double *b, long long int *rci_request, long long int *ipar, double *dpar, double *tmp);
extern void DCGMRHS_GET(const long long int *n, const double *x, const long long int* nRhs, const double *b, const long long int *rci_request, const long long int *ipar, const double *dpar, const double *tmp, long long int *itercount);

extern void DFGMRES_INIT(const long long int *n, const double *x, const double *b, long long int *RCI_request, long long int *ipar, double *dpar, double *tmp);
extern void DFGMRES_CHECK(const long long int *n, const double *x, const double *b, long long int *RCI_request, long long int *ipar, double *dpar, double *tmp);
extern void DFGMRES(const long long int *n, double *x, double *b, long long int *RCI_request, long long int *ipar, double *dpar, double *tmp);
extern void DFGMRES_GET(const long long int *n, double *x, double *b, long long int *RCI_request, const long long int *ipar, const double *dpar, double *tmp, long long int *itercount);
# 92 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_rci.h"
typedef void* _TRNSP_HANDLE_t;
typedef void* _TRNSPBC_HANDLE_t;
typedef void* _JACOBIMATRIX_HANDLE_t;

typedef void(*USRFCND) (long long int*,long long int*,double*,double*);
typedef void(*USRFCNXD) (long long int*,long long int*,double*,double*,void*);

typedef void(*USRFCNS) (long long int*,long long int*,float*,float*);
typedef void(*USRFCNXS) (long long int*,long long int*,float*,float*,void*);


extern long long int dtrnlsp_init (_TRNSP_HANDLE_t*, const long long int*, const long long int*, const double*, const double*, const long long int*, const long long int*, const double*);
extern long long int dtrnlsp_check (_TRNSP_HANDLE_t*, const long long int*, const long long int*, const double*, const double*, const double*, long long int*);
extern long long int dtrnlsp_solve (_TRNSP_HANDLE_t*, double*, double*, long long int*);
extern long long int dtrnlsp_get (_TRNSP_HANDLE_t*, long long int*, long long int*, double*, double*);
extern long long int dtrnlsp_delete (_TRNSP_HANDLE_t*);

extern long long int dtrnlspbc_init (_TRNSPBC_HANDLE_t*, const long long int*, const long long int*, const double*, const double*, const double*, const double*, const long long int*, const long long int*, const double*);
extern long long int dtrnlspbc_check (_TRNSPBC_HANDLE_t*, const long long int*, const long long int*, const double*, const double*, const double*, const double*, const double*, long long int*);
extern long long int dtrnlspbc_solve (_TRNSPBC_HANDLE_t*, double*, double*, long long int*);
extern long long int dtrnlspbc_get (_TRNSPBC_HANDLE_t*, long long int*, long long int*, double*, double*);
extern long long int dtrnlspbc_delete (_TRNSPBC_HANDLE_t*);

extern long long int djacobi_init (_JACOBIMATRIX_HANDLE_t*, const long long int*, const long long int*, const double*, const double*, const double*);
extern long long int djacobi_solve (_JACOBIMATRIX_HANDLE_t*, double*, double*, long long int*);
extern long long int djacobi_delete (_JACOBIMATRIX_HANDLE_t*);
extern long long int djacobi (USRFCND fcn, const long long int*, const long long int*, double*, double*, double*);
extern long long int djacobix (USRFCNXD fcn, const long long int*, const long long int*, double*, double*, double*, void*);

extern long long int strnlsp_init (_TRNSP_HANDLE_t*, const long long int*, const long long int*, const float*, const float*, const long long int*, const long long int*, const float*);
extern long long int strnlsp_check (_TRNSP_HANDLE_t*, const long long int*, const long long int*, const float*, const float*, const float*, long long int*);
extern long long int strnlsp_solve (_TRNSP_HANDLE_t*, float*, float*, long long int*);
extern long long int strnlsp_get (_TRNSP_HANDLE_t*, long long int*, long long int*, float*, float*);
extern long long int strnlsp_delete (_TRNSP_HANDLE_t*);

extern long long int strnlspbc_init (_TRNSPBC_HANDLE_t*, const long long int*, const long long int*, const float*, const float*, const float*, const float*, const long long int*, const long long int*, const float*);
extern long long int strnlspbc_check (_TRNSPBC_HANDLE_t*, const long long int*, const long long int*, const float*, const float*, const float*, const float*, const float*, long long int*);
extern long long int strnlspbc_solve (_TRNSPBC_HANDLE_t*, float*, float*, long long int*);
extern long long int strnlspbc_get (_TRNSPBC_HANDLE_t*, long long int*, long long int*, float*, float*);
extern long long int strnlspbc_delete (_TRNSPBC_HANDLE_t*);

extern long long int sjacobi_init (_JACOBIMATRIX_HANDLE_t*, const long long int*, const long long int*, const float*, const float*, const float*);
extern long long int sjacobi_solve (_JACOBIMATRIX_HANDLE_t*, float*, float*, long long int*);
extern long long int sjacobi_delete (_JACOBIMATRIX_HANDLE_t*);
extern long long int sjacobi (USRFCNS fcn, const long long int*, const long long int*, float*, float*, float*);
extern long long int sjacobix (USRFCNXS fcn, const long long int*, const long long int*, float*, float*, float*, void*);
# 46 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml.h" 1
# 37 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml.h"
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml_defines.h" 1
# 38 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml_types.h" 1
# 62 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml_types.h"
typedef struct _DefVmlErrorContext
{
    int iCode;
    int iIndex;
    double dbA1;
    double dbA2;
    double dbR1;
    double dbR2;
    char cFuncName[64];
    int iFuncNameLen;
    double dbA1Im;
    double dbA2Im;
    double dbR1Im;
    double dbR2Im;
} DefVmlErrorContext;




typedef int (*VMLErrorCallBack) (DefVmlErrorContext* pdefVmlErrorContext);
# 39 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml_functions.h" 1
# 64 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml_functions.h"
extern void VSABS_ (const long long int *n, const float a[], float r[]);
extern void VDABS_ (const long long int *n, const double a[], double r[]);
extern void vsabs_ (const long long int *n, const float a[], float r[]);
extern void vdabs_ (const long long int *n, const double a[], double r[]);
extern void vsAbs (const long long int n, const float a[], float r[]);
extern void vdAbs (const long long int n, const double a[], double r[]);

extern void VMSABS_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDABS_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsabs_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdabs_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsAbs (const long long int n, const float a[], float r[], long long int mode);
extern void vmdAbs (const long long int n, const double a[], double r[], long long int mode);


extern void VCABS_ (const long long int *n, const MKL_Complex8 a[], float r[]);
extern void VZABS_ (const long long int *n, const MKL_Complex16 a[], double r[]);
extern void vcabs_ (const long long int *n, const MKL_Complex8 a[], float r[]);
extern void vzabs_ (const long long int *n, const MKL_Complex16 a[], double r[]);
extern void vcAbs (const long long int n, const MKL_Complex8 a[], float r[]);
extern void vzAbs (const long long int n, const MKL_Complex16 a[], double r[]);

extern void VMCABS_ (const long long int *n, const MKL_Complex8 a[], float r[], long long int *mode);
extern void VMZABS_ (const long long int *n, const MKL_Complex16 a[], double r[], long long int *mode);
extern void vmcabs_ (const long long int *n, const MKL_Complex8 a[], float r[], long long int *mode);
extern void vmzabs_ (const long long int *n, const MKL_Complex16 a[], double r[], long long int *mode);
extern void vmcAbs (const long long int n, const MKL_Complex8 a[], float r[], long long int mode);
extern void vmzAbs (const long long int n, const MKL_Complex16 a[], double r[], long long int mode);


extern void VCARG_ (const long long int *n, const MKL_Complex8 a[], float r[]);
extern void VZARG_ (const long long int *n, const MKL_Complex16 a[], double r[]);
extern void vcarg_ (const long long int *n, const MKL_Complex8 a[], float r[]);
extern void vzarg_ (const long long int *n, const MKL_Complex16 a[], double r[]);
extern void vcArg (const long long int n, const MKL_Complex8 a[], float r[]);
extern void vzArg (const long long int n, const MKL_Complex16 a[], double r[]);

extern void VMCARG_ (const long long int *n, const MKL_Complex8 a[], float r[], long long int *mode);
extern void VMZARG_ (const long long int *n, const MKL_Complex16 a[], double r[], long long int *mode);
extern void vmcarg_ (const long long int *n, const MKL_Complex8 a[], float r[], long long int *mode);
extern void vmzarg_ (const long long int *n, const MKL_Complex16 a[], double r[], long long int *mode);
extern void vmcArg (const long long int n, const MKL_Complex8 a[], float r[], long long int mode);
extern void vmzArg (const long long int n, const MKL_Complex16 a[], double r[], long long int mode);


extern void VSADD_ (const long long int *n, const float a[], const float b[], float r[]);
extern void VDADD_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsadd_ (const long long int *n, const float a[], const float b[], float r[]);
extern void vdadd_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsAdd (const long long int n, const float a[], const float b[], float r[]);
extern void vdAdd (const long long int n, const double a[], const double b[], double r[]);

extern void VMSADD_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void VMDADD_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsadd_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void vmdadd_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsAdd (const long long int n, const float a[], const float b[], float r[], long long int mode);
extern void vmdAdd (const long long int n, const double a[], const double b[], double r[], long long int mode);


extern void VCADD_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void VZADD_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcadd_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzadd_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcAdd (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzAdd (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);

extern void VMCADD_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void VMZADD_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcadd_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void vmzadd_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcAdd (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int mode);
extern void vmzAdd (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int mode);


extern void VSSUB_ (const long long int *n, const float a[], const float b[], float r[]);
extern void VDSUB_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vssub_ (const long long int *n, const float a[], const float b[], float r[]);
extern void vdsub_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsSub (const long long int n, const float a[], const float b[], float r[]);
extern void vdSub (const long long int n, const double a[], const double b[], double r[]);

extern void VMSSUB_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void VMDSUB_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmssub_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void vmdsub_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsSub (const long long int n, const float a[], const float b[], float r[], long long int mode);
extern void vmdSub (const long long int n, const double a[], const double b[], double r[], long long int mode);


extern void VCSUB_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void VZSUB_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcsub_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzsub_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcSub (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzSub (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);

extern void VMCSUB_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void VMZSUB_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcsub_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void vmzsub_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcSub (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int mode);
extern void vmzSub (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int mode);


extern void VSINV_ (const long long int *n, const float a[], float r[]);
extern void VDINV_ (const long long int *n, const double a[], double r[]);
extern void vsinv_ (const long long int *n, const float a[], float r[]);
extern void vdinv_ (const long long int *n, const double a[], double r[]);
extern void vsInv (const long long int n, const float a[], float r[]);
extern void vdInv (const long long int n, const double a[], double r[]);

extern void VMSINV_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDINV_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsinv_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdinv_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsInv (const long long int n, const float a[], float r[], long long int mode);
extern void vmdInv (const long long int n, const double a[], double r[], long long int mode);


extern void VSSQRT_ (const long long int *n, const float a[], float r[]);
extern void VDSQRT_ (const long long int *n, const double a[], double r[]);
extern void vssqrt_ (const long long int *n, const float a[], float r[]);
extern void vdsqrt_ (const long long int *n, const double a[], double r[]);
extern void vsSqrt (const long long int n, const float a[], float r[]);
extern void vdSqrt (const long long int n, const double a[], double r[]);

extern void VMSSQRT_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDSQRT_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmssqrt_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdsqrt_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsSqrt (const long long int n, const float a[], float r[], long long int mode);
extern void vmdSqrt (const long long int n, const double a[], double r[], long long int mode);


extern void VCSQRT_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZSQRT_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcsqrt_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzsqrt_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcSqrt (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzSqrt (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCSQRT_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZSQRT_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcsqrt_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzsqrt_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcSqrt (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzSqrt (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSINVSQRT_ (const long long int *n, const float a[], float r[]);
extern void VDINVSQRT_ (const long long int *n, const double a[], double r[]);
extern void vsinvsqrt_ (const long long int *n, const float a[], float r[]);
extern void vdinvsqrt_ (const long long int *n, const double a[], double r[]);
extern void vsInvSqrt (const long long int n, const float a[], float r[]);
extern void vdInvSqrt (const long long int n, const double a[], double r[]);

extern void VMSINVSQRT_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDINVSQRT_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsinvsqrt_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdinvsqrt_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsInvSqrt (const long long int n, const float a[], float r[], long long int mode);
extern void vmdInvSqrt (const long long int n, const double a[], double r[], long long int mode);


extern void VSCBRT_ (const long long int *n, const float a[], float r[]);
extern void VDCBRT_ (const long long int *n, const double a[], double r[]);
extern void vscbrt_ (const long long int *n, const float a[], float r[]);
extern void vdcbrt_ (const long long int *n, const double a[], double r[]);
extern void vsCbrt (const long long int n, const float a[], float r[]);
extern void vdCbrt (const long long int n, const double a[], double r[]);

extern void VMSCBRT_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDCBRT_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmscbrt_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdcbrt_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsCbrt (const long long int n, const float a[], float r[], long long int mode);
extern void vmdCbrt (const long long int n, const double a[], double r[], long long int mode);


extern void VSINVCBRT_ (const long long int *n, const float a[], float r[]);
extern void VDINVCBRT_ (const long long int *n, const double a[], double r[]);
extern void vsinvcbrt_ (const long long int *n, const float a[], float r[]);
extern void vdinvcbrt_ (const long long int *n, const double a[], double r[]);
extern void vsInvCbrt (const long long int n, const float a[], float r[]);
extern void vdInvCbrt (const long long int n, const double a[], double r[]);

extern void VMSINVCBRT_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDINVCBRT_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsinvcbrt_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdinvcbrt_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsInvCbrt (const long long int n, const float a[], float r[], long long int mode);
extern void vmdInvCbrt (const long long int n, const double a[], double r[], long long int mode);


extern void VSSQR_ (const long long int *n, const float a[], float r[]);
extern void VDSQR_ (const long long int *n, const double a[], double r[]);
extern void vssqr_ (const long long int *n, const float a[], float r[]);
extern void vdsqr_ (const long long int *n, const double a[], double r[]);
extern void vsSqr (const long long int n, const float a[], float r[]);
extern void vdSqr (const long long int n, const double a[], double r[]);

extern void VMSSQR_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDSQR_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmssqr_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdsqr_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsSqr (const long long int n, const float a[], float r[], long long int mode);
extern void vmdSqr (const long long int n, const double a[], double r[], long long int mode);


extern void VSEXP_ (const long long int *n, const float a[], float r[]);
extern void VDEXP_ (const long long int *n, const double a[], double r[]);
extern void vsexp_ (const long long int *n, const float a[], float r[]);
extern void vdexp_ (const long long int *n, const double a[], double r[]);
extern void vsExp (const long long int n, const float a[], float r[]);
extern void vdExp (const long long int n, const double a[], double r[]);

extern void VMSEXP_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDEXP_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsexp_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdexp_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsExp (const long long int n, const float a[], float r[], long long int mode);
extern void vmdExp (const long long int n, const double a[], double r[], long long int mode);


extern void VSEXPM1_ (const long long int *n, const float a[], float r[]);
extern void VDEXPM1_ (const long long int *n, const double a[], double r[]);
extern void vsexpm1_ (const long long int *n, const float a[], float r[]);
extern void vdexpm1_ (const long long int *n, const double a[], double r[]);
extern void vsExpm1 (const long long int n, const float a[], float r[]);
extern void vdExpm1 (const long long int n, const double a[], double r[]);

extern void VMSEXPM1_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDEXPM1_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsexpm1_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdexpm1_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsExpm1 (const long long int n, const float a[], float r[], long long int mode);
extern void vmdExpm1 (const long long int n, const double a[], double r[], long long int mode);


extern void VCEXP_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZEXP_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcexp_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzexp_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcExp (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzExp (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCEXP_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZEXP_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcexp_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzexp_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcExp (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzExp (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSLN_ (const long long int *n, const float a[], float r[]);
extern void VDLN_ (const long long int *n, const double a[], double r[]);
extern void vsln_ (const long long int *n, const float a[], float r[]);
extern void vdln_ (const long long int *n, const double a[], double r[]);
extern void vsLn (const long long int n, const float a[], float r[]);
extern void vdLn (const long long int n, const double a[], double r[]);

extern void VMSLN_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDLN_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsln_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdln_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsLn (const long long int n, const float a[], float r[], long long int mode);
extern void vmdLn (const long long int n, const double a[], double r[], long long int mode);


extern void VCLN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZLN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcln_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzln_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcLn (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzLn (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCLN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZLN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcln_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzln_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcLn (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzLn (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSLOG10_ (const long long int *n, const float a[], float r[]);
extern void VDLOG10_ (const long long int *n, const double a[], double r[]);
extern void vslog10_ (const long long int *n, const float a[], float r[]);
extern void vdlog10_ (const long long int *n, const double a[], double r[]);
extern void vsLog10 (const long long int n, const float a[], float r[]);
extern void vdLog10 (const long long int n, const double a[], double r[]);

extern void VMSLOG10_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDLOG10_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmslog10_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdlog10_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsLog10 (const long long int n, const float a[], float r[], long long int mode);
extern void vmdLog10 (const long long int n, const double a[], double r[], long long int mode);


extern void VCLOG10_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZLOG10_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vclog10_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzlog10_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcLog10 (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzLog10 (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCLOG10_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZLOG10_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmclog10_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzlog10_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcLog10 (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzLog10 (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSLOG1P_ (const long long int *n, const float a[], float r[]);
extern void VDLOG1P_ (const long long int *n, const double a[], double r[]);
extern void vslog1p_ (const long long int *n, const float a[], float r[]);
extern void vdlog1p_ (const long long int *n, const double a[], double r[]);
extern void vsLog1p (const long long int n, const float a[], float r[]);
extern void vdLog1p (const long long int n, const double a[], double r[]);

extern void VMSLOG1P_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDLOG1P_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmslog1p_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdlog1p_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsLog1p (const long long int n, const float a[], float r[], long long int mode);
extern void vmdLog1p (const long long int n, const double a[], double r[], long long int mode);


extern void VSCOS_ (const long long int *n, const float a[], float r[]);
extern void VDCOS_ (const long long int *n, const double a[], double r[]);
extern void vscos_ (const long long int *n, const float a[], float r[]);
extern void vdcos_ (const long long int *n, const double a[], double r[]);
extern void vsCos (const long long int n, const float a[], float r[]);
extern void vdCos (const long long int n, const double a[], double r[]);

extern void VMSCOS_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDCOS_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmscos_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdcos_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsCos (const long long int n, const float a[], float r[], long long int mode);
extern void vmdCos (const long long int n, const double a[], double r[], long long int mode);


extern void VCCOS_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZCOS_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vccos_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzcos_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcCos (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzCos (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCCOS_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZCOS_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmccos_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzcos_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcCos (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzCos (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSSIN_ (const long long int *n, const float a[], float r[]);
extern void VDSIN_ (const long long int *n, const double a[], double r[]);
extern void vssin_ (const long long int *n, const float a[], float r[]);
extern void vdsin_ (const long long int *n, const double a[], double r[]);
extern void vsSin (const long long int n, const float a[], float r[]);
extern void vdSin (const long long int n, const double a[], double r[]);

extern void VMSSIN_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDSIN_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmssin_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdsin_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsSin (const long long int n, const float a[], float r[], long long int mode);
extern void vmdSin (const long long int n, const double a[], double r[], long long int mode);


extern void VCSIN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZSIN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcsin_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzsin_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcSin (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzSin (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCSIN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZSIN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcsin_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzsin_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcSin (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzSin (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSTAN_ (const long long int *n, const float a[], float r[]);
extern void VDTAN_ (const long long int *n, const double a[], double r[]);
extern void vstan_ (const long long int *n, const float a[], float r[]);
extern void vdtan_ (const long long int *n, const double a[], double r[]);
extern void vsTan (const long long int n, const float a[], float r[]);
extern void vdTan (const long long int n, const double a[], double r[]);

extern void VMSTAN_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDTAN_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmstan_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdtan_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsTan (const long long int n, const float a[], float r[], long long int mode);
extern void vmdTan (const long long int n, const double a[], double r[], long long int mode);


extern void VCTAN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZTAN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vctan_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vztan_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcTan (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzTan (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCTAN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZTAN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmctan_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmztan_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcTan (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzTan (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSCOSH_ (const long long int *n, const float a[], float r[]);
extern void VDCOSH_ (const long long int *n, const double a[], double r[]);
extern void vscosh_ (const long long int *n, const float a[], float r[]);
extern void vdcosh_ (const long long int *n, const double a[], double r[]);
extern void vsCosh (const long long int n, const float a[], float r[]);
extern void vdCosh (const long long int n, const double a[], double r[]);

extern void VMSCOSH_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDCOSH_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmscosh_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdcosh_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsCosh (const long long int n, const float a[], float r[], long long int mode);
extern void vmdCosh (const long long int n, const double a[], double r[], long long int mode);


extern void VCCOSH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZCOSH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vccosh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzcosh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcCosh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzCosh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCCOSH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZCOSH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmccosh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzcosh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcCosh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzCosh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSSINH_ (const long long int *n, const float a[], float r[]);
extern void VDSINH_ (const long long int *n, const double a[], double r[]);
extern void vssinh_ (const long long int *n, const float a[], float r[]);
extern void vdsinh_ (const long long int *n, const double a[], double r[]);
extern void vsSinh (const long long int n, const float a[], float r[]);
extern void vdSinh (const long long int n, const double a[], double r[]);

extern void VMSSINH_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDSINH_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmssinh_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdsinh_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsSinh (const long long int n, const float a[], float r[], long long int mode);
extern void vmdSinh (const long long int n, const double a[], double r[], long long int mode);


extern void VCSINH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZSINH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcsinh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzsinh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcSinh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzSinh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCSINH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZSINH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcsinh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzsinh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcSinh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzSinh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSTANH_ (const long long int *n, const float a[], float r[]);
extern void VDTANH_ (const long long int *n, const double a[], double r[]);
extern void vstanh_ (const long long int *n, const float a[], float r[]);
extern void vdtanh_ (const long long int *n, const double a[], double r[]);
extern void vsTanh (const long long int n, const float a[], float r[]);
extern void vdTanh (const long long int n, const double a[], double r[]);

extern void VMSTANH_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDTANH_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmstanh_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdtanh_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsTanh (const long long int n, const float a[], float r[], long long int mode);
extern void vmdTanh (const long long int n, const double a[], double r[], long long int mode);


extern void VCTANH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZTANH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vctanh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vztanh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcTanh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzTanh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCTANH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZTANH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmctanh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmztanh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcTanh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzTanh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSACOS_ (const long long int *n, const float a[], float r[]);
extern void VDACOS_ (const long long int *n, const double a[], double r[]);
extern void vsacos_ (const long long int *n, const float a[], float r[]);
extern void vdacos_ (const long long int *n, const double a[], double r[]);
extern void vsAcos (const long long int n, const float a[], float r[]);
extern void vdAcos (const long long int n, const double a[], double r[]);

extern void VMSACOS_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDACOS_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsacos_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdacos_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsAcos (const long long int n, const float a[], float r[], long long int mode);
extern void vmdAcos (const long long int n, const double a[], double r[], long long int mode);


extern void VCACOS_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZACOS_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcacos_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzacos_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcAcos (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzAcos (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCACOS_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZACOS_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcacos_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzacos_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcAcos (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzAcos (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSASIN_ (const long long int *n, const float a[], float r[]);
extern void VDASIN_ (const long long int *n, const double a[], double r[]);
extern void vsasin_ (const long long int *n, const float a[], float r[]);
extern void vdasin_ (const long long int *n, const double a[], double r[]);
extern void vsAsin (const long long int n, const float a[], float r[]);
extern void vdAsin (const long long int n, const double a[], double r[]);

extern void VMSASIN_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDASIN_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsasin_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdasin_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsAsin (const long long int n, const float a[], float r[], long long int mode);
extern void vmdAsin (const long long int n, const double a[], double r[], long long int mode);


extern void VCASIN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZASIN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcasin_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzasin_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcAsin (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzAsin (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCASIN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZASIN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcasin_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzasin_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcAsin (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzAsin (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSATAN_ (const long long int *n, const float a[], float r[]);
extern void VDATAN_ (const long long int *n, const double a[], double r[]);
extern void vsatan_ (const long long int *n, const float a[], float r[]);
extern void vdatan_ (const long long int *n, const double a[], double r[]);
extern void vsAtan (const long long int n, const float a[], float r[]);
extern void vdAtan (const long long int n, const double a[], double r[]);

extern void VMSATAN_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDATAN_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsatan_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdatan_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsAtan (const long long int n, const float a[], float r[], long long int mode);
extern void vmdAtan (const long long int n, const double a[], double r[], long long int mode);


extern void VCATAN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZATAN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcatan_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzatan_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcAtan (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzAtan (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCATAN_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZATAN_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcatan_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzatan_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcAtan (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzAtan (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSACOSH_ (const long long int *n, const float a[], float r[]);
extern void VDACOSH_ (const long long int *n, const double a[], double r[]);
extern void vsacosh_ (const long long int *n, const float a[], float r[]);
extern void vdacosh_ (const long long int *n, const double a[], double r[]);
extern void vsAcosh (const long long int n, const float a[], float r[]);
extern void vdAcosh (const long long int n, const double a[], double r[]);

extern void VMSACOSH_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDACOSH_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsacosh_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdacosh_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsAcosh (const long long int n, const float a[], float r[], long long int mode);
extern void vmdAcosh (const long long int n, const double a[], double r[], long long int mode);


extern void VCACOSH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZACOSH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcacosh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzacosh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcAcosh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzAcosh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCACOSH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZACOSH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcacosh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzacosh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcAcosh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzAcosh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSASINH_ (const long long int *n, const float a[], float r[]);
extern void VDASINH_ (const long long int *n, const double a[], double r[]);
extern void vsasinh_ (const long long int *n, const float a[], float r[]);
extern void vdasinh_ (const long long int *n, const double a[], double r[]);
extern void vsAsinh (const long long int n, const float a[], float r[]);
extern void vdAsinh (const long long int n, const double a[], double r[]);

extern void VMSASINH_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDASINH_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsasinh_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdasinh_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsAsinh (const long long int n, const float a[], float r[], long long int mode);
extern void vmdAsinh (const long long int n, const double a[], double r[], long long int mode);


extern void VCASINH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZASINH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcasinh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzasinh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcAsinh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzAsinh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCASINH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZASINH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcasinh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzasinh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcAsinh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzAsinh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSATANH_ (const long long int *n, const float a[], float r[]);
extern void VDATANH_ (const long long int *n, const double a[], double r[]);
extern void vsatanh_ (const long long int *n, const float a[], float r[]);
extern void vdatanh_ (const long long int *n, const double a[], double r[]);
extern void vsAtanh (const long long int n, const float a[], float r[]);
extern void vdAtanh (const long long int n, const double a[], double r[]);

extern void VMSATANH_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDATANH_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsatanh_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdatanh_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsAtanh (const long long int n, const float a[], float r[], long long int mode);
extern void vmdAtanh (const long long int n, const double a[], double r[], long long int mode);


extern void VCATANH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZATANH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcatanh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzatanh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcAtanh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzAtanh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCATANH_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZATANH_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcatanh_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzatanh_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcAtanh (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzAtanh (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VSERF_ (const long long int *n, const float a[], float r[]);
extern void VDERF_ (const long long int *n, const double a[], double r[]);
extern void vserf_ (const long long int *n, const float a[], float r[]);
extern void vderf_ (const long long int *n, const double a[], double r[]);
extern void vsErf (const long long int n, const float a[], float r[]);
extern void vdErf (const long long int n, const double a[], double r[]);

extern void VMSERF_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDERF_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmserf_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmderf_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsErf (const long long int n, const float a[], float r[], long long int mode);
extern void vmdErf (const long long int n, const double a[], double r[], long long int mode);


extern void VSERFINV_ (const long long int *n, const float a[], float r[]);
extern void VDERFINV_ (const long long int *n, const double a[], double r[]);
extern void vserfinv_ (const long long int *n, const float a[], float r[]);
extern void vderfinv_ (const long long int *n, const double a[], double r[]);
extern void vsErfInv (const long long int n, const float a[], float r[]);
extern void vdErfInv (const long long int n, const double a[], double r[]);

extern void VMSERFINV_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDERFINV_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmserfinv_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmderfinv_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsErfInv (const long long int n, const float a[], float r[], long long int mode);
extern void vmdErfInv (const long long int n, const double a[], double r[], long long int mode);


extern void VSHYPOT_ (const long long int *n, const float a[], const float b[], float r[]);
extern void VDHYPOT_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vshypot_ (const long long int *n, const float a[], const float b[], float r[]);
extern void vdhypot_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsHypot (const long long int n, const float a[], const float b[], float r[]);
extern void vdHypot (const long long int n, const double a[], const double b[], double r[]);

extern void VMSHYPOT_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void VMDHYPOT_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmshypot_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void vmdhypot_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsHypot (const long long int n, const float a[], const float b[], float r[], long long int mode);
extern void vmdHypot (const long long int n, const double a[], const double b[], double r[], long long int mode);


extern void VSERFC_ (const long long int *n, const float a[], float r[]);
extern void VDERFC_ (const long long int *n, const double a[], double r[]);
extern void vserfc_ (const long long int *n, const float a[], float r[]);
extern void vderfc_ (const long long int *n, const double a[], double r[]);
extern void vsErfc (const long long int n, const float a[], float r[]);
extern void vdErfc (const long long int n, const double a[], double r[]);

extern void VMSERFC_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDERFC_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmserfc_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmderfc_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsErfc (const long long int n, const float a[], float r[], long long int mode);
extern void vmdErfc (const long long int n, const double a[], double r[], long long int mode);


extern void VSERFCINV_ (const long long int *n, const float a[], float r[]);
extern void VDERFCINV_ (const long long int *n, const double a[], double r[]);
extern void vserfcinv_ (const long long int *n, const float a[], float r[]);
extern void vderfcinv_ (const long long int *n, const double a[], double r[]);
extern void vsErfcInv (const long long int n, const float a[], float r[]);
extern void vdErfcInv (const long long int n, const double a[], double r[]);

extern void VMSERFCINV_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDERFCINV_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmserfcinv_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmderfcinv_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsErfcInv (const long long int n, const float a[], float r[], long long int mode);
extern void vmdErfcInv (const long long int n, const double a[], double r[], long long int mode);


extern void VSCDFNORM_ (const long long int *n, const float a[], float r[]);
extern void VDCDFNORM_ (const long long int *n, const double a[], double r[]);
extern void vscdfnorm_ (const long long int *n, const float a[], float r[]);
extern void vdcdfnorm_ (const long long int *n, const double a[], double r[]);
extern void vsCdfNorm (const long long int n, const float a[], float r[]);
extern void vdCdfNorm (const long long int n, const double a[], double r[]);

extern void VMSCDFNORM_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDCDFNORM_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmscdfnorm_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdcdfnorm_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsCdfNorm (const long long int n, const float a[], float r[], long long int mode);
extern void vmdCdfNorm (const long long int n, const double a[], double r[], long long int mode);


extern void VSCDFNORMINV_ (const long long int *n, const float a[], float r[]);
extern void VDCDFNORMINV_ (const long long int *n, const double a[], double r[]);
extern void vscdfnorminv_ (const long long int *n, const float a[], float r[]);
extern void vdcdfnorminv_ (const long long int *n, const double a[], double r[]);
extern void vsCdfNormInv (const long long int n, const float a[], float r[]);
extern void vdCdfNormInv (const long long int n, const double a[], double r[]);

extern void VMSCDFNORMINV_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDCDFNORMINV_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmscdfnorminv_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdcdfnorminv_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsCdfNormInv (const long long int n, const float a[], float r[], long long int mode);
extern void vmdCdfNormInv (const long long int n, const double a[], double r[], long long int mode);


extern void VSLGAMMA_ (const long long int *n, const float a[], float r[]);
extern void VDLGAMMA_ (const long long int *n, const double a[], double r[]);
extern void vslgamma_ (const long long int *n, const float a[], float r[]);
extern void vdlgamma_ (const long long int *n, const double a[], double r[]);
extern void vsLGamma (const long long int n, const float a[], float r[]);
extern void vdLGamma (const long long int n, const double a[], double r[]);

extern void VMSLGAMMA_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDLGAMMA_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmslgamma_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdlgamma_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsLGamma (const long long int n, const float a[], float r[], long long int mode);
extern void vmdLGamma (const long long int n, const double a[], double r[], long long int mode);


extern void VSTGAMMA_ (const long long int *n, const float a[], float r[]);
extern void VDTGAMMA_ (const long long int *n, const double a[], double r[]);
extern void vstgamma_ (const long long int *n, const float a[], float r[]);
extern void vdtgamma_ (const long long int *n, const double a[], double r[]);
extern void vsTGamma (const long long int n, const float a[], float r[]);
extern void vdTGamma (const long long int n, const double a[], double r[]);

extern void VMSTGAMMA_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDTGAMMA_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmstgamma_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdtgamma_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsTGamma (const long long int n, const float a[], float r[], long long int mode);
extern void vmdTGamma (const long long int n, const double a[], double r[], long long int mode);


extern void VSATAN2_ (const long long int *n, const float a[], const float b[], float r[]);
extern void VDATAN2_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsatan2_ (const long long int *n, const float a[], const float b[], float r[]);
extern void vdatan2_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsAtan2 (const long long int n, const float a[], const float b[], float r[]);
extern void vdAtan2 (const long long int n, const double a[], const double b[], double r[]);

extern void VMSATAN2_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void VMDATAN2_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsatan2_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void vmdatan2_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsAtan2 (const long long int n, const float a[], const float b[], float r[], long long int mode);
extern void vmdAtan2 (const long long int n, const double a[], const double b[], double r[], long long int mode);


extern void VSMUL_ (const long long int *n, const float a[], const float b[], float r[]);
extern void VDMUL_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsmul_ (const long long int *n, const float a[], const float b[], float r[]);
extern void vdmul_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsMul (const long long int n, const float a[], const float b[], float r[]);
extern void vdMul (const long long int n, const double a[], const double b[], double r[]);

extern void VMSMUL_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void VMDMUL_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsmul_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void vmdmul_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsMul (const long long int n, const float a[], const float b[], float r[], long long int mode);
extern void vmdMul (const long long int n, const double a[], const double b[], double r[], long long int mode);


extern void VCMUL_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void VZMUL_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcmul_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzmul_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcMul (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzMul (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);

extern void VMCMUL_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void VMZMUL_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcmul_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void vmzmul_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcMul (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int mode);
extern void vmzMul (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int mode);


extern void VSDIV_ (const long long int *n, const float a[], const float b[], float r[]);
extern void VDDIV_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsdiv_ (const long long int *n, const float a[], const float b[], float r[]);
extern void vddiv_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsDiv (const long long int n, const float a[], const float b[], float r[]);
extern void vdDiv (const long long int n, const double a[], const double b[], double r[]);

extern void VMSDIV_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void VMDDIV_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsdiv_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void vmddiv_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsDiv (const long long int n, const float a[], const float b[], float r[], long long int mode);
extern void vmdDiv (const long long int n, const double a[], const double b[], double r[], long long int mode);


extern void VCDIV_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void VZDIV_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcdiv_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzdiv_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcDiv (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzDiv (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);

extern void VMCDIV_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void VMZDIV_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcdiv_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void vmzdiv_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcDiv (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int mode);
extern void vmzDiv (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int mode);


extern void VSPOW_ (const long long int *n, const float a[], const float b[], float r[]);
extern void VDPOW_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vspow_ (const long long int *n, const float a[], const float b[], float r[]);
extern void vdpow_ (const long long int *n, const double a[], const double b[], double r[]);
extern void vsPow (const long long int n, const float a[], const float b[], float r[]);
extern void vdPow (const long long int n, const double a[], const double b[], double r[]);

extern void VMSPOW_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void VMDPOW_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmspow_ (const long long int *n, const float a[], const float b[], float r[], long long int *mode);
extern void vmdpow_ (const long long int *n, const double a[], const double b[], double r[], long long int *mode);
extern void vmsPow (const long long int n, const float a[], const float b[], float r[], long long int mode);
extern void vmdPow (const long long int n, const double a[], const double b[], double r[], long long int mode);


extern void VCPOW_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void VZPOW_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcpow_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzpow_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcPow (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzPow (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);

extern void VMCPOW_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void VMZPOW_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcpow_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void vmzpow_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcPow (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int mode);
extern void vmzPow (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int mode);


extern void VSPOW3O2_ (const long long int *n, const float a[], float r[]);
extern void VDPOW3O2_ (const long long int *n, const double a[], double r[]);
extern void vspow3o2_ (const long long int *n, const float a[], float r[]);
extern void vdpow3o2_ (const long long int *n, const double a[], double r[]);
extern void vsPow3o2 (const long long int n, const float a[], float r[]);
extern void vdPow3o2 (const long long int n, const double a[], double r[]);

extern void VMSPOW3O2_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDPOW3O2_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmspow3o2_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdpow3o2_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsPow3o2 (const long long int n, const float a[], float r[], long long int mode);
extern void vmdPow3o2 (const long long int n, const double a[], double r[], long long int mode);


extern void VSPOW2O3_ (const long long int *n, const float a[], float r[]);
extern void VDPOW2O3_ (const long long int *n, const double a[], double r[]);
extern void vspow2o3_ (const long long int *n, const float a[], float r[]);
extern void vdpow2o3_ (const long long int *n, const double a[], double r[]);
extern void vsPow2o3 (const long long int n, const float a[], float r[]);
extern void vdPow2o3 (const long long int n, const double a[], double r[]);

extern void VMSPOW2O3_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDPOW2O3_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmspow2o3_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdpow2o3_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsPow2o3 (const long long int n, const float a[], float r[], long long int mode);
extern void vmdPow2o3 (const long long int n, const double a[], double r[], long long int mode);


extern void VSPOWX_ (const long long int *n, const float a[], const float *b, float r[]);
extern void VDPOWX_ (const long long int *n, const double a[], const double *b, double r[]);
extern void vspowx_ (const long long int *n, const float a[], const float *b, float r[]);
extern void vdpowx_ (const long long int *n, const double a[], const double *b, double r[]);
extern void vsPowx (const long long int n, const float a[], const float b, float r[]);
extern void vdPowx (const long long int n, const double a[], const double b, double r[]);

extern void VMSPOWX_ (const long long int *n, const float a[], const float *b, float r[], long long int *mode);
extern void VMDPOWX_ (const long long int *n, const double a[], const double *b, double r[], long long int *mode);
extern void vmspowx_ (const long long int *n, const float a[], const float *b, float r[], long long int *mode);
extern void vmdpowx_ (const long long int *n, const double a[], const double *b, double r[], long long int *mode);
extern void vmsPowx (const long long int n, const float a[], const float b, float r[], long long int mode);
extern void vmdPowx (const long long int n, const double a[], const double b, double r[], long long int mode);


extern void VCPOWX_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 *b, MKL_Complex8 r[]);
extern void VZPOWX_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 *b, MKL_Complex16 r[]);
extern void vcpowx_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 *b, MKL_Complex8 r[]);
extern void vzpowx_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 *b, MKL_Complex16 r[]);
extern void vcPowx (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b, MKL_Complex8 r[]);
extern void vzPowx (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b, MKL_Complex16 r[]);

extern void VMCPOWX_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 *b, MKL_Complex8 r[], long long int *mode);
extern void VMZPOWX_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 *b, MKL_Complex16 r[], long long int *mode);
extern void vmcpowx_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 *b, MKL_Complex8 r[], long long int *mode);
extern void vmzpowx_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 *b, MKL_Complex16 r[], long long int *mode);
extern void vmcPowx (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b, MKL_Complex8 r[], long long int mode);
extern void vmzPowx (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b, MKL_Complex16 r[], long long int mode);


extern void VSSINCOS_ (const long long int *n, const float a[], float r1[], float r2[]);
extern void VDSINCOS_ (const long long int *n, const double a[], double r1[], double r2[]);
extern void vssincos_ (const long long int *n, const float a[], float r1[], float r2[]);
extern void vdsincos_ (const long long int *n, const double a[], double r1[], double r2[]);
extern void vsSinCos (const long long int n, const float a[], float r1[], float r2[]);
extern void vdSinCos (const long long int n, const double a[], double r1[], double r2[]);

extern void VMSSINCOS_ (const long long int *n, const float a[], float r1[], float r2[], long long int *mode);
extern void VMDSINCOS_ (const long long int *n, const double a[], double r1[], double r2[], long long int *mode);
extern void vmssincos_ (const long long int *n, const float a[], float r1[], float r2[], long long int *mode);
extern void vmdsincos_ (const long long int *n, const double a[], double r1[], double r2[], long long int *mode);
extern void vmsSinCos (const long long int n, const float a[], float r1[], float r2[], long long int mode);
extern void vmdSinCos (const long long int n, const double a[], double r1[], double r2[], long long int mode);


extern void VSLINEARFRAC_ (const long long int *n, const float a[], const float b[], const float *scalea, const float *shifta, const float *scaleb, const float *shiftb, float r[]);
extern void VDLINEARFRAC_ (const long long int *n, const double a[], const double b[], const double *scalea, const double *shifta, const double *scaleb, const double *shiftb, double r[]);
extern void vslinearfrac_ (const long long int *n, const float a[], const float b[], const float *scalea, const float *shifta, const float *scaleb, const float *shiftb, float r[]);
extern void vdlinearfrac_ (const long long int *n, const double a[], const double b[], const double *scalea, const double *shifta, const double *scaleb, const double *shiftb, double r[]);
extern void vsLinearFrac (const long long int n, const float a[], const float b[], const float scalea, const float shifta, const float scaleb, const float shiftb, float r[]);
extern void vdLinearFrac (const long long int n, const double a[], const double b[], const double scalea, const double shifta, const double scaleb, const double shiftb, double r[]);

extern void VMSLINEARFRAC_ (const long long int *n, const float a[], const float b[], const float *scalea, const float *shifta, const float *scaleb, const float *shiftb, float r[], long long int *mode);
extern void VMDLINEARFRAC_ (const long long int *n, const double a[], const double b[], const double *scalea, const double *shifta, const double *scaleb, const double *shiftb, double r[], long long int *mode);
extern void vmslinearfrac_ (const long long int *n, const float a[], const float b[], const float *scalea, const float *shifta, const float *scaleb, const float *shiftb, float r[], long long int *mode);
extern void vmdlinearfrac_ (const long long int *n, const double a[], const double b[], const double *scalea, const double *shifta, const double *scaleb, const double *shiftb, double r[], long long int *mode);
extern void vmsLinearFrac (const long long int n, const float a[], const float b[], const float scalea, const float shifta, const float scaleb, const float shiftb, float r[], long long int mode);
extern void vmdLinearFrac (const long long int n, const double a[], const double b[], const double scalea, const double shifta, const double scaleb, const double shiftb, double r[], long long int mode);


extern void VSCEIL_ (const long long int *n, const float a[], float r[]);
extern void VDCEIL_ (const long long int *n, const double a[], double r[]);
extern void vsceil_ (const long long int *n, const float a[], float r[]);
extern void vdceil_ (const long long int *n, const double a[], double r[]);
extern void vsCeil (const long long int n, const float a[], float r[]);
extern void vdCeil (const long long int n, const double a[], double r[]);

extern void VMSCEIL_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDCEIL_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsceil_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdceil_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsCeil (const long long int n, const float a[], float r[], long long int mode);
extern void vmdCeil (const long long int n, const double a[], double r[], long long int mode);


extern void VSFLOOR_ (const long long int *n, const float a[], float r[]);
extern void VDFLOOR_ (const long long int *n, const double a[], double r[]);
extern void vsfloor_ (const long long int *n, const float a[], float r[]);
extern void vdfloor_ (const long long int *n, const double a[], double r[]);
extern void vsFloor (const long long int n, const float a[], float r[]);
extern void vdFloor (const long long int n, const double a[], double r[]);

extern void VMSFLOOR_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDFLOOR_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsfloor_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdfloor_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsFloor (const long long int n, const float a[], float r[], long long int mode);
extern void vmdFloor (const long long int n, const double a[], double r[], long long int mode);


extern void VSFRAC_ (const long long int *n, const float a[], float r[]);
extern void VDFRAC_ (const long long int *n, const double a[], double r[]);
extern void vsfrac_ (const long long int *n, const float a[], float r[]);
extern void vdfrac_ (const long long int *n, const double a[], double r[]);
extern void vsFrac (const long long int n, const float a[], float r[]);
extern void vdFrac (const long long int n, const double a[], double r[]);

extern void VMSFRAC_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDFRAC_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsfrac_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdfrac_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsFrac (const long long int n, const float a[], float r[], long long int mode);
extern void vmdFrac (const long long int n, const double a[], double r[], long long int mode);


extern void VSMODF_ (const long long int *n, const float a[], float r1[], float r2[]);
extern void VDMODF_ (const long long int *n, const double a[], double r1[], double r2[]);
extern void vsmodf_ (const long long int *n, const float a[], float r1[], float r2[]);
extern void vdmodf_ (const long long int *n, const double a[], double r1[], double r2[]);
extern void vsModf (const long long int n, const float a[], float r1[], float r2[]);
extern void vdModf (const long long int n, const double a[], double r1[], double r2[]);

extern void VMSMODF_ (const long long int *n, const float a[], float r1[], float r2[], long long int *mode);
extern void VMDMODF_ (const long long int *n, const double a[], double r1[], double r2[], long long int *mode);
extern void vmsmodf_ (const long long int *n, const float a[], float r1[], float r2[], long long int *mode);
extern void vmdmodf_ (const long long int *n, const double a[], double r1[], double r2[], long long int *mode);
extern void vmsModf (const long long int n, const float a[], float r1[], float r2[], long long int mode);
extern void vmdModf (const long long int n, const double a[], double r1[], double r2[], long long int mode);


extern void VSNEARBYINT_ (const long long int *n, const float a[], float r[]);
extern void VDNEARBYINT_ (const long long int *n, const double a[], double r[]);
extern void vsnearbyint_ (const long long int *n, const float a[], float r[]);
extern void vdnearbyint_ (const long long int *n, const double a[], double r[]);
extern void vsNearbyInt (const long long int n, const float a[], float r[]);
extern void vdNearbyInt (const long long int n, const double a[], double r[]);

extern void VMSNEARBYINT_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDNEARBYINT_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsnearbyint_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdnearbyint_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsNearbyInt (const long long int n, const float a[], float r[], long long int mode);
extern void vmdNearbyInt (const long long int n, const double a[], double r[], long long int mode);


extern void VSRINT_ (const long long int *n, const float a[], float r[]);
extern void VDRINT_ (const long long int *n, const double a[], double r[]);
extern void vsrint_ (const long long int *n, const float a[], float r[]);
extern void vdrint_ (const long long int *n, const double a[], double r[]);
extern void vsRint (const long long int n, const float a[], float r[]);
extern void vdRint (const long long int n, const double a[], double r[]);

extern void VMSRINT_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDRINT_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsrint_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdrint_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsRint (const long long int n, const float a[], float r[], long long int mode);
extern void vmdRint (const long long int n, const double a[], double r[], long long int mode);


extern void VSROUND_ (const long long int *n, const float a[], float r[]);
extern void VDROUND_ (const long long int *n, const double a[], double r[]);
extern void vsround_ (const long long int *n, const float a[], float r[]);
extern void vdround_ (const long long int *n, const double a[], double r[]);
extern void vsRound (const long long int n, const float a[], float r[]);
extern void vdRound (const long long int n, const double a[], double r[]);

extern void VMSROUND_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDROUND_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsround_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdround_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsRound (const long long int n, const float a[], float r[], long long int mode);
extern void vmdRound (const long long int n, const double a[], double r[], long long int mode);


extern void VSTRUNC_ (const long long int *n, const float a[], float r[]);
extern void VDTRUNC_ (const long long int *n, const double a[], double r[]);
extern void vstrunc_ (const long long int *n, const float a[], float r[]);
extern void vdtrunc_ (const long long int *n, const double a[], double r[]);
extern void vsTrunc (const long long int n, const float a[], float r[]);
extern void vdTrunc (const long long int n, const double a[], double r[]);

extern void VMSTRUNC_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void VMDTRUNC_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmstrunc_ (const long long int *n, const float a[], float r[], long long int *mode);
extern void vmdtrunc_ (const long long int *n, const double a[], double r[], long long int *mode);
extern void vmsTrunc (const long long int n, const float a[], float r[], long long int mode);
extern void vmdTrunc (const long long int n, const double a[], double r[], long long int mode);


extern void VCCONJ_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void VZCONJ_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcconj_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzconj_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[]);
extern void vcConj (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[]);
extern void vzConj (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[]);

extern void VMCCONJ_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void VMZCONJ_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcconj_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int *mode);
extern void vmzconj_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int *mode);
extern void vmcConj (const long long int n, const MKL_Complex8 a[], MKL_Complex8 r[], long long int mode);
extern void vmzConj (const long long int n, const MKL_Complex16 a[], MKL_Complex16 r[], long long int mode);


extern void VCMULBYCONJ_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void VZMULBYCONJ_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcmulbyconj_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzmulbyconj_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);
extern void vcMulByConj (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[]);
extern void vzMulByConj (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[]);

extern void VMCMULBYCONJ_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void VMZMULBYCONJ_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcmulbyconj_ (const long long int *n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int *mode);
extern void vmzmulbyconj_ (const long long int *n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int *mode);
extern void vmcMulByConj (const long long int n, const MKL_Complex8 a[], const MKL_Complex8 b[], MKL_Complex8 r[], long long int mode);
extern void vmzMulByConj (const long long int n, const MKL_Complex16 a[], const MKL_Complex16 b[], MKL_Complex16 r[], long long int mode);


extern void VCCIS_ (const long long int *n, const float a[], MKL_Complex8 r[]);
extern void VZCIS_ (const long long int *n, const double a[], MKL_Complex16 r[]);
extern void vccis_ (const long long int *n, const float a[], MKL_Complex8 r[]);
extern void vzcis_ (const long long int *n, const double a[], MKL_Complex16 r[]);
extern void vcCIS (const long long int n, const float a[], MKL_Complex8 r[]);
extern void vzCIS (const long long int n, const double a[], MKL_Complex16 r[]);

extern void VMCCIS_ (const long long int *n, const float a[], MKL_Complex8 r[], long long int *mode);
extern void VMZCIS_ (const long long int *n, const double a[], MKL_Complex16 r[], long long int *mode);
extern void vmccis_ (const long long int *n, const float a[], MKL_Complex8 r[], long long int *mode);
extern void vmzcis_ (const long long int *n, const double a[], MKL_Complex16 r[], long long int *mode);
extern void vmcCIS (const long long int n, const float a[], MKL_Complex8 r[], long long int mode);
extern void vmzCIS (const long long int n, const double a[], MKL_Complex16 r[], long long int mode);







extern void VSPACKI_ (const long long int *n, const float a[], const long long int * incra, float y[]);
extern void VDPACKI_ (const long long int *n, const double a[], const long long int * incra, double y[]);
extern void vspacki_ (const long long int *n, const float a[], const long long int * incra, float y[]);
extern void vdpacki_ (const long long int *n, const double a[], const long long int * incra, double y[]);
extern void vsPackI (const long long int n, const float a[], const long long int incra, float y[]);
extern void vdPackI (const long long int n, const double a[], const long long int incra, double y[]);

extern void VCPACKI_ (const long long int *n, const MKL_Complex8 a[], const long long int * incra, MKL_Complex8 y[]);
extern void VZPACKI_ (const long long int *n, const MKL_Complex16 a[], const long long int * incra, MKL_Complex16 y[]);
extern void vcpacki_ (const long long int *n, const MKL_Complex8 a[], const long long int * incra, MKL_Complex8 y[]);
extern void vzpacki_ (const long long int *n, const MKL_Complex16 a[], const long long int * incra, MKL_Complex16 y[]);
extern void vcPackI (const long long int n, const MKL_Complex8 a[], const long long int incra, MKL_Complex8 y[]);
extern void vzPackI (const long long int n, const MKL_Complex16 a[], const long long int incra, MKL_Complex16 y[]);


extern void VSPACKV_ (const long long int *n, const float a[], const long long int ia[], float y[]);
extern void VDPACKV_ (const long long int *n, const double a[], const long long int ia[], double y[]);
extern void vspackv_ (const long long int *n, const float a[], const long long int ia[], float y[]);
extern void vdpackv_ (const long long int *n, const double a[], const long long int ia[], double y[]);
extern void vsPackV (const long long int n, const float a[], const long long int ia[], float y[]);
extern void vdPackV (const long long int n, const double a[], const long long int ia[], double y[]);

extern void VCPACKV_ (const long long int *n, const MKL_Complex8 a[], const long long int ia[], MKL_Complex8 y[]);
extern void VZPACKV_ (const long long int *n, const MKL_Complex16 a[], const long long int ia[], MKL_Complex16 y[]);
extern void vcpackv_ (const long long int *n, const MKL_Complex8 a[], const long long int ia[], MKL_Complex8 y[]);
extern void vzpackv_ (const long long int *n, const MKL_Complex16 a[], const long long int ia[], MKL_Complex16 y[]);
extern void vcPackV (const long long int n, const MKL_Complex8 a[], const long long int ia[], MKL_Complex8 y[]);
extern void vzPackV (const long long int n, const MKL_Complex16 a[], const long long int ia[], MKL_Complex16 y[]);


extern void VSPACKM_ (const long long int *n, const float a[], const long long int ma[], float y[]);
extern void VDPACKM_ (const long long int *n, const double a[], const long long int ma[], double y[]);
extern void vspackm_ (const long long int *n, const float a[], const long long int ma[], float y[]);
extern void vdpackm_ (const long long int *n, const double a[], const long long int ma[], double y[]);
extern void vsPackM (const long long int n, const float a[], const long long int ma[], float y[]);
extern void vdPackM (const long long int n, const double a[], const long long int ma[], double y[]);

extern void VCPACKM_ (const long long int *n, const MKL_Complex8 a[], const long long int ma[], MKL_Complex8 y[]);
extern void VZPACKM_ (const long long int *n, const MKL_Complex16 a[], const long long int ma[], MKL_Complex16 y[]);
extern void vcpackm_ (const long long int *n, const MKL_Complex8 a[], const long long int ma[], MKL_Complex8 y[]);
extern void vzpackm_ (const long long int *n, const MKL_Complex16 a[], const long long int ma[], MKL_Complex16 y[]);
extern void vcPackM (const long long int n, const MKL_Complex8 a[], const long long int ma[], MKL_Complex8 y[]);
extern void vzPackM (const long long int n, const MKL_Complex16 a[], const long long int ma[], MKL_Complex16 y[]);







extern void VSUNPACKI_ (const long long int *n, const float a[], float y[], const long long int * incry);
extern void VDUNPACKI_ (const long long int *n, const double a[], double y[], const long long int * incry);
extern void vsunpacki_ (const long long int *n, const float a[], float y[], const long long int * incry);
extern void vdunpacki_ (const long long int *n, const double a[], double y[], const long long int * incry);
extern void vsUnpackI (const long long int n, const float a[], float y[], const long long int incry );
extern void vdUnpackI (const long long int n, const double a[], double y[], const long long int incry );

extern void VCUNPACKI_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 y[], const long long int * incry);
extern void VZUNPACKI_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 y[], const long long int * incry);
extern void vcunpacki_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 y[], const long long int * incry);
extern void vzunpacki_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 y[], const long long int * incry);
extern void vcUnpackI (const long long int n, const MKL_Complex8 a[], MKL_Complex8 y[], const long long int incry );
extern void vzUnpackI (const long long int n, const MKL_Complex16 a[], MKL_Complex16 y[], const long long int incry );


extern void VSUNPACKV_ (const long long int *n, const float a[], float y[], const long long int iy[] );
extern void VDUNPACKV_ (const long long int *n, const double a[], double y[], const long long int iy[] );
extern void vsunpackv_ (const long long int *n, const float a[], float y[], const long long int iy[] );
extern void vdunpackv_ (const long long int *n, const double a[], double y[], const long long int iy[] );
extern void vsUnpackV (const long long int n, const float a[], float y[], const long long int iy[] );
extern void vdUnpackV (const long long int n, const double a[], double y[], const long long int iy[] );

extern void VCUNPACKV_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 y[], const long long int iy[]);
extern void VZUNPACKV_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 y[], const long long int iy[]);
extern void vcunpackv_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 y[], const long long int iy[]);
extern void vzunpackv_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 y[], const long long int iy[]);
extern void vcUnpackV (const long long int n, const MKL_Complex8 a[], MKL_Complex8 y[], const long long int iy[]);
extern void vzUnpackV (const long long int n, const MKL_Complex16 a[], MKL_Complex16 y[], const long long int iy[]);


extern void VSUNPACKM_ (const long long int *n, const float a[], float y[], const long long int my[] );
extern void VDUNPACKM_ (const long long int *n, const double a[], double y[], const long long int my[] );
extern void vsunpackm_ (const long long int *n, const float a[], float y[], const long long int my[] );
extern void vdunpackm_ (const long long int *n, const double a[], double y[], const long long int my[] );
extern void vsUnpackM (const long long int n, const float a[], float y[], const long long int my[] );
extern void vdUnpackM (const long long int n, const double a[], double y[], const long long int my[] );

extern void VCUNPACKM_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 y[], const long long int my[]);
extern void VZUNPACKM_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 y[], const long long int my[]);
extern void vcunpackm_ (const long long int *n, const MKL_Complex8 a[], MKL_Complex8 y[], const long long int my[]);
extern void vzunpackm_ (const long long int *n, const MKL_Complex16 a[], MKL_Complex16 y[], const long long int my[]);
extern void vcUnpackM (const long long int n, const MKL_Complex8 a[], MKL_Complex8 y[], const long long int my[]);
extern void vzUnpackM (const long long int n, const MKL_Complex16 a[], MKL_Complex16 y[], const long long int my[]);
# 1355 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml_functions.h"
extern int VMLSETERRSTATUS_ (const long long int * status);
extern int vmlseterrstatus_ (const long long int * status);
extern int vmlSetErrStatus (const long long int status);


extern int VMLGETERRSTATUS_ (void);
extern int vmlgeterrstatus_ (void);
extern int vmlGetErrStatus (void);


extern int VMLCLEARERRSTATUS_ (void);
extern int vmlclearerrstatus_ (void);
extern int vmlClearErrStatus (void);


extern VMLErrorCallBack VMLSETERRORCALLBACK_ (const VMLErrorCallBack func);
extern VMLErrorCallBack vmlseterrorcallback_ (const VMLErrorCallBack func);
extern VMLErrorCallBack vmlSetErrorCallBack (const VMLErrorCallBack func);


extern VMLErrorCallBack VMLGETERRORCALLBACK_ (void);
extern VMLErrorCallBack vmlgeterrorcallback_ (void);
extern VMLErrorCallBack vmlGetErrorCallBack (void);


extern VMLErrorCallBack VMLCLEARERRORCALLBACK_ (void);
extern VMLErrorCallBack vmlclearerrorcallback_ (void);
extern VMLErrorCallBack vmlClearErrorCallBack (void);
# 1391 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml_functions.h"
extern unsigned int VMLSETMODE_ (const unsigned long long int *newmode);
extern unsigned int vmlsetmode_ (const unsigned long long int *newmode);
extern unsigned int vmlSetMode (const unsigned long long int newmode);


extern unsigned int VMLGETMODE_ (void);
extern unsigned int vmlgetmode_ (void);
extern unsigned int vmlGetMode (void);
# 40 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vml.h" 2
# 47 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl.h" 1
# 36 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl.h"
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_defines.h" 1
# 37 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_functions.h" 1
# 32 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_functions.h"
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_types.h" 1
# 48 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_types.h"
typedef void* VSLStreamStatePtr;
typedef void* VSLConvTaskPtr;
typedef void* VSLCorrTaskPtr;
typedef void* VSLSSTaskPtr;
# 64 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_types.h"
typedef int (*InitStreamPtr)( int method, VSLStreamStatePtr stream,
        int n, const unsigned int params[] );
typedef int (*sBRngPtr)( VSLStreamStatePtr stream, int n, float r[],
        float a, float b );
typedef int (*dBRngPtr)( VSLStreamStatePtr stream, int n, double r[],
        double a, double b );
typedef int (*iBRngPtr)( VSLStreamStatePtr stream, int n, unsigned int r[] );


typedef int (*iUpdateFuncPtr)( VSLStreamStatePtr stream, int* n,
     unsigned int ibuf[], int* nmin, int* nmax, int* idx );
typedef int (*dUpdateFuncPtr)( VSLStreamStatePtr stream, int* n,
     double dbuf[], int* nmin, int* nmax, int* idx );
typedef int (*sUpdateFuncPtr)( VSLStreamStatePtr stream, int* n,
     float sbuf[], int* nmin, int* nmax, int* idx );
# 103 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_types.h"
typedef struct _VSLBRngProperties {
    int StreamStateSize;
    int NSeeds;
    int IncludesZero;
    int WordSize;
    int NBits;
    InitStreamPtr InitStream;
    sBRngPtr sBRng;
    dBRngPtr dBRng;
    iBRngPtr iBRng;
} VSLBRngProperties;
# 33 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_functions.h" 2
# 64 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_functions.h"
extern int vdRngCauchy (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double );
extern int VDRNGCAUCHY_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vdrngcauchy_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vsRngCauchy (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float );
extern int VSRNGCAUCHY_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );
extern int vsrngcauchy_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );


extern int vdRngUniform (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double );
extern int VDRNGUNIFORM_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vdrnguniform_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vsRngUniform (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float );
extern int VSRNGUNIFORM_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );
extern int vsrnguniform_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );


extern int vdRngGaussian (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double );
extern int VDRNGGAUSSIAN_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vdrnggaussian_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vsRngGaussian (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float );
extern int VSRNGGAUSSIAN_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );
extern int vsrnggaussian_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );


extern int vdRngGaussianMV (const long long int , VSLStreamStatePtr , const long long int , double [], const long long int , const long long int , const double *, const double *);
extern int VDRNGGAUSSIANMV_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const long long int *, const long long int *, const double *, const double *);
extern int vdrnggaussianmv_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const long long int *, const long long int *, const double *, const double *);
extern int vsRngGaussianMV (const long long int , VSLStreamStatePtr , const long long int , float [], const long long int , const long long int , const float *, const float * );
extern int VSRNGGAUSSIANMV_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const long long int *, const long long int *, const float *, const float * );
extern int vsrnggaussianmv_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const long long int *, const long long int *, const float *, const float * );


extern int vdRngExponential (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double );
extern int VDRNGEXPONENTIAL_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vdrngexponential_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vsRngExponential (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float );
extern int VSRNGEXPONENTIAL_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );
extern int vsrngexponential_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );


extern int vdRngLaplace (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double );
extern int VDRNGLAPLACE_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vdrnglaplace_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vsRngLaplace (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float );
extern int VSRNGLAPLACE_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );
extern int vsrnglaplace_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );


extern int vdRngWeibull (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double , const double );
extern int VDRNGWEIBULL_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *, const double *);
extern int vdrngweibull_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *, const double *);
extern int vsRngWeibull (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float , const float );
extern int VSRNGWEIBULL_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float *, const float * );
extern int vsrngweibull_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float *, const float * );


extern int vdRngRayleigh (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double );
extern int VDRNGRAYLEIGH_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vdrngrayleigh_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vsRngRayleigh (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float );
extern int VSRNGRAYLEIGH_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );
extern int vsrngrayleigh_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );


extern int vdRngLognormal (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double , const double , const double );
extern int VDRNGLOGNORMAL_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *, const double *, const double *);
extern int vdrnglognormal_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *, const double *, const double *);
extern int vsRngLognormal (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float , const float , const float );
extern int VSRNGLOGNORMAL_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float *, const float *, const float * );
extern int vsrnglognormal_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float *, const float *, const float * );


extern int vdRngGumbel (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double );
extern int VDRNGGUMBEL_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vdrnggumbel_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *);
extern int vsRngGumbel (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float );
extern int VSRNGGUMBEL_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );
extern int vsrnggumbel_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float * );


extern int vdRngGamma (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double , const double );
extern int VDRNGGAMMA_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *, const double *);
extern int vdrnggamma_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *, const double *);
extern int vsRngGamma (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float , const float );
extern int VSRNGGAMMA_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float *, const float * );
extern int vsrnggamma_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float *, const float * );


extern int vdRngBeta (const long long int , VSLStreamStatePtr , const long long int , double [], const double , const double , const double , const double );
extern int VDRNGBETA_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *, const double *, const double *);
extern int vdrngbeta_ (const long long int *, VSLStreamStatePtr *, const long long int *, double [], const double *, const double *, const double *, const double *);
extern int vsRngBeta (const long long int , VSLStreamStatePtr , const long long int , float [], const float , const float , const float , const float );
extern int VSRNGBETA_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float *, const float *, const float * );
extern int vsrngbeta_ (const long long int *, VSLStreamStatePtr *, const long long int *, float [], const float *, const float *, const float *, const float * );







extern int viRngBernoulli (const long long int , VSLStreamStatePtr , const long long int , int [], const double );
extern int VIRNGBERNOULLI_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double *);
extern int virngbernoulli_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double *);


extern int viRngUniform (const long long int , VSLStreamStatePtr , const long long int , int [], const int , const int );
extern int VIRNGUNIFORM_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const int *, const int *);
extern int virnguniform_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const int *, const int *);


extern int viRngUniformBits (const long long int , VSLStreamStatePtr , const long long int , unsigned int []);
extern int VIRNGUNIFORMBITS_ (const long long int *, VSLStreamStatePtr *, const long long int *, unsigned int []);
extern int virnguniformbits_ (const long long int *, VSLStreamStatePtr *, const long long int *, unsigned int []);


extern int viRngUniformBits32 (const long long int , VSLStreamStatePtr , const long long int , unsigned int []);
extern int VIRNGUNIFORMBITS32_ (const long long int *, VSLStreamStatePtr *, const long long int *, unsigned int []);
extern int virnguniformbits32_ (const long long int *, VSLStreamStatePtr *, const long long int *, unsigned int []);


extern int viRngUniformBits64 (const long long int , VSLStreamStatePtr , const long long int , unsigned long long int []);
extern int VIRNGUNIFORMBITS64_ (const long long int *, VSLStreamStatePtr *, const long long int *, unsigned long long int []);
extern int virnguniformbits64_ (const long long int *, VSLStreamStatePtr *, const long long int *, unsigned long long int []);


extern int viRngGeometric (const long long int , VSLStreamStatePtr , const long long int , int [], const double );
extern int VIRNGGEOMETRIC_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double *);
extern int virnggeometric_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double *);


extern int viRngBinomial (const long long int , VSLStreamStatePtr , const long long int , int [], const int , const double );
extern int VIRNGBINOMIAL_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const int *, const double *);
extern int virngbinomial_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const int *, const double *);


extern int viRngHypergeometric (const long long int , VSLStreamStatePtr , const long long int , int [], const int , const int , const int );
extern int VIRNGHYPERGEOMETRIC_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const int *, const int *, const int *);
extern int virnghypergeometric_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const int *, const int *, const int *);


extern int viRngNegbinomial (const long long int , VSLStreamStatePtr , const long long int , int [], const double , const double );
extern int viRngNegBinomial (const long long int , VSLStreamStatePtr , const long long int , int [], const double , const double );
extern int VIRNGNEGBINOMIAL_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double *, const double *);
extern int virngnegbinomial_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double *, const double *);


extern int viRngPoisson (const long long int , VSLStreamStatePtr , const long long int , int [], const double );
extern int VIRNGPOISSON_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double *);
extern int virngpoisson_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double *);


extern int viRngPoissonV (const long long int , VSLStreamStatePtr , const long long int , int [], const double []);
extern int VIRNGPOISSONV_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double []);
extern int virngpoissonv_ (const long long int *, VSLStreamStatePtr *, const long long int *, int [], const double []);
# 227 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_functions.h"
extern int vslNewStream (VSLStreamStatePtr* , const long long int , const unsigned long long int );
extern int vslnewstream_ (VSLStreamStatePtr* , const long long int *, const unsigned long long int *);
extern int VSLNEWSTREAM_ (VSLStreamStatePtr* , const long long int *, const unsigned long long int *);


extern int vslNewStreamEx (VSLStreamStatePtr* , const long long int , const long long int , const unsigned int[]);
extern int vslnewstreamex_ (VSLStreamStatePtr* , const long long int *, const long long int *, const unsigned int[]);
extern int VSLNEWSTREAMEX_ (VSLStreamStatePtr* , const long long int *, const long long int *, const unsigned int[]);

extern int vsliNewAbstractStream (VSLStreamStatePtr* , const long long int , const unsigned int[], const iUpdateFuncPtr);
extern int vslinewabstractstream_ (VSLStreamStatePtr* , const long long int *, const unsigned int[], const iUpdateFuncPtr);
extern int VSLINEWABSTRACTSTREAM_ (VSLStreamStatePtr* , const long long int *, const unsigned int[], const iUpdateFuncPtr);

extern int vsldNewAbstractStream (VSLStreamStatePtr* , const long long int , const double[], const double , const double , const dUpdateFuncPtr);
extern int vsldnewabstractstream_ (VSLStreamStatePtr* , const long long int *, const double[], const double *, const double *, const dUpdateFuncPtr);
extern int VSLDNEWABSTRACTSTREAM_ (VSLStreamStatePtr* , const long long int *, const double[], const double *, const double *, const dUpdateFuncPtr);

extern int vslsNewAbstractStream (VSLStreamStatePtr* , const long long int , const float[], const float , const float , const sUpdateFuncPtr);
extern int vslsnewabstractstream_ (VSLStreamStatePtr* , const long long int *, const float[], const float *, const float *, const sUpdateFuncPtr);
extern int VSLSNEWABSTRACTSTREAM_ (VSLStreamStatePtr* , const long long int *, const float[], const float *, const float *, const sUpdateFuncPtr);


extern int vslDeleteStream (VSLStreamStatePtr*);
extern int vsldeletestream_ (VSLStreamStatePtr*);
extern int VSLDELETESTREAM_ (VSLStreamStatePtr*);


extern int vslCopyStream (VSLStreamStatePtr*, const VSLStreamStatePtr);
extern int vslcopystream_ (VSLStreamStatePtr*, const VSLStreamStatePtr);
extern int VSLCOPYSTREAM_ (VSLStreamStatePtr*, const VSLStreamStatePtr);


extern int vslCopyStreamState (VSLStreamStatePtr , const VSLStreamStatePtr );
extern int vslcopystreamstate_ (VSLStreamStatePtr *, const VSLStreamStatePtr *);
extern int VSLCOPYSTREAMSTATE_ (VSLStreamStatePtr *, const VSLStreamStatePtr *);


extern int vslLeapfrogStream (VSLStreamStatePtr , const long long int , const long long int );
extern int vslleapfrogstream_ (VSLStreamStatePtr *, const long long int *, const long long int *);
extern int VSLLEAPFROGSTREAM_ (VSLStreamStatePtr *, const long long int *, const long long int *);


extern int vslSkipAheadStream (VSLStreamStatePtr , const long long int );
extern int vslskipaheadstream_ (VSLStreamStatePtr *, const long long int *);
extern int VSLSKIPAHEADSTREAM_ (VSLStreamStatePtr *, const long long int *);


extern int vslGetStreamStateBrng (const VSLStreamStatePtr );
extern int vslgetstreamstatebrng_ (const VSLStreamStatePtr *);
extern int VSLGETSTREAMSTATEBRNG_ (const VSLStreamStatePtr *);


extern int vslGetNumRegBrngs (void);
extern int vslgetnumregbrngs_ (void);
extern int VSLGETNUMREGBRNGS_ (void);


extern int vslRegisterBrng (const VSLBRngProperties* );
extern int vslregisterbrng_ (const VSLBRngProperties* );
extern int VSLREGISTERBRNG_ (const VSLBRngProperties* );


extern int vslGetBrngProperties (const int , VSLBRngProperties* );
extern int vslgetbrngproperties_ (const int *, VSLBRngProperties* );
extern int VSLGETBRNGPROPERTIES_ (const int *, VSLBRngProperties* );


extern int vslSaveStreamF (const VSLStreamStatePtr , const char* );
extern int vslsavestreamf_ (const VSLStreamStatePtr *, const char* , const int );
extern int VSLSAVESTREAMF_ (const VSLStreamStatePtr *, const char* , const int );


extern int vslLoadStreamF (VSLStreamStatePtr *, const char* );
extern int vslloadstreamf_ (VSLStreamStatePtr *, const char* , const int );
extern int VSLLOADSTREAMF_ (VSLStreamStatePtr *, const char* , const int );


extern int vslSaveStreamM (const VSLStreamStatePtr , char* );
extern int vslsavestreamm_ (const VSLStreamStatePtr *, char* );
extern int VSLSAVESTREAMM_ (const VSLStreamStatePtr *, char* );


extern int vslLoadStreamM (VSLStreamStatePtr *, const char* );
extern int vslloadstreamm_ (VSLStreamStatePtr *, const char* );
extern int VSLLOADSTREAMM_ (VSLStreamStatePtr *, const char* );


extern int vslGetStreamSize (const VSLStreamStatePtr);
extern int vslgetstreamsize_ (const VSLStreamStatePtr);
extern int VSLGETSTREAMSIZE_ (const VSLStreamStatePtr);







extern int vsldConvNewTask (VSLConvTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int []);
extern int vsldconvnewtask_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);
extern int VSLDCONVNEWTASK_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);

extern int vslsConvNewTask (VSLConvTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int []);
extern int vslsconvnewtask_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);
extern int VSLSCONVNEWTASK_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);

extern int vslzConvNewTask (VSLConvTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int []);
extern int vslzconvnewtask_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);
extern int VSLZCONVNEWTASK_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);

extern int vslcConvNewTask (VSLConvTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int []);
extern int vslcconvnewtask_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);
extern int VSLCCONVNEWTASK_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);

extern int vsldCorrNewTask (VSLCorrTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int []);
extern int vsldcorrnewtask_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);
extern int VSLDCORRNEWTASK_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);

extern int vslsCorrNewTask (VSLCorrTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int []);
extern int vslscorrnewtask_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);
extern int VSLSCORRNEWTASK_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);

extern int vslzCorrNewTask (VSLCorrTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int []);
extern int vslzcorrnewtask_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);
extern int VSLZCORRNEWTASK_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);

extern int vslcCorrNewTask (VSLCorrTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int []);
extern int vslccorrnewtask_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);
extern int VSLCCORRNEWTASK_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int []);


extern int vsldConvNewTask1D (VSLConvTaskPtr* , const long long int , const long long int , const long long int , const long long int );
extern int vsldconvnewtask1d_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );
extern int VSLDCONVNEWTASK1D_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );

extern int vslsConvNewTask1D (VSLConvTaskPtr* , const long long int , const long long int , const long long int , const long long int );
extern int vslsconvnewtask1d_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );
extern int VSLSCONVNEWTASK1D_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );

extern int vslzConvNewTask1D (VSLConvTaskPtr* , const long long int , const long long int , const long long int , const long long int );
extern int vslzconvnewtask1d_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );
extern int VSLZCONVNEWTASK1D_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );

extern int vslcConvNewTask1D (VSLConvTaskPtr* , const long long int , const long long int , const long long int , const long long int );
extern int vslcconvnewtask1d_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );
extern int VSLCCONVNEWTASK1D_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );

extern int vsldCorrNewTask1D (VSLCorrTaskPtr* , const long long int , const long long int , const long long int , const long long int );
extern int vsldcorrnewtask1d_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );
extern int VSLDCORRNEWTASK1D_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );

extern int vslsCorrNewTask1D (VSLCorrTaskPtr* , const long long int , const long long int , const long long int , const long long int );
extern int vslscorrnewtask1d_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );
extern int VSLSCORRNEWTASK1D_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );

extern int vslzCorrNewTask1D (VSLCorrTaskPtr* , const long long int , const long long int , const long long int , const long long int );
extern int vslzcorrnewtask1d_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );
extern int VSLZCORRNEWTASK1D_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );

extern int vslcCorrNewTask1D (VSLCorrTaskPtr* , const long long int , const long long int , const long long int , const long long int );
extern int vslccorrnewtask1d_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );
extern int VSLCCORRNEWTASK1D_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* );


extern int vsldConvNewTaskX (VSLConvTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int [], const double [], const long long int []);
extern int vsldconvnewtaskx_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const double [], const long long int []);
extern int VSLDCONVNEWTASKX_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const double [], const long long int []);

extern int vslsConvNewTaskX (VSLConvTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int [], const float [], const long long int []);
extern int vslsconvnewtaskx_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const float [], const long long int []);
extern int VSLSCONVNEWTASKX_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const float [], const long long int []);

extern int vslzConvNewTaskX (VSLConvTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int [], const MKL_Complex16 [], const long long int []);
extern int vslzconvnewtaskx_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const MKL_Complex16 [], const long long int []);
extern int VSLZCONVNEWTASKX_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const MKL_Complex16 [], const long long int []);

extern int vslcConvNewTaskX (VSLConvTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int [], const MKL_Complex8 [], const long long int []);
extern int vslcconvnewtaskx_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const MKL_Complex8 [], const long long int []);
extern int VSLCCONVNEWTASKX_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const MKL_Complex8 [], const long long int []);

extern int vsldCorrNewTaskX (VSLCorrTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int [], const double [], const long long int []);
extern int vsldcorrnewtaskx_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const double [], const long long int []);
extern int VSLDCORRNEWTASKX_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const double [], const long long int []);

extern int vslsCorrNewTaskX (VSLCorrTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int [], const float [], const long long int []);
extern int vslscorrnewtaskx_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const float [], const long long int []);
extern int VSLSCORRNEWTASKX_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const float [], const long long int []);

extern int vslzCorrNewTaskX (VSLCorrTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int [], const MKL_Complex16 [], const long long int []);
extern int vslzcorrnewtaskx_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const MKL_Complex16 [], const long long int []);
extern int VSLZCORRNEWTASKX_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const MKL_Complex16 [], const long long int []);

extern int vslcCorrNewTaskX (VSLCorrTaskPtr* , const long long int , const long long int , const long long int [], const long long int [], const long long int [], const MKL_Complex8 [], const long long int []);
extern int vslccorrnewtaskx_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const MKL_Complex8 [], const long long int []);
extern int VSLCCORRNEWTASKX_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int [], const long long int [], const long long int [], const MKL_Complex8 [], const long long int []);


extern int vsldConvNewTaskX1D (VSLConvTaskPtr* , const long long int , const long long int , const long long int , const long long int , const double [], const long long int );
extern int vsldconvnewtaskx1d_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const double [], const long long int* );
extern int VSLDCONVNEWTASKX1D_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const double [], const long long int* );

extern int vslsConvNewTaskX1D (VSLConvTaskPtr* , const long long int , const long long int , const long long int , const long long int , const float [], const long long int );
extern int vslsconvnewtaskx1d_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const float [], const long long int* );
extern int VSLSCONVNEWTASKX1D_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const float [], const long long int* );

extern int vslzConvNewTaskX1D (VSLConvTaskPtr* , const long long int , const long long int , const long long int , const long long int , const MKL_Complex16 [], const long long int );
extern int vslzconvnewtaskx1d_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const MKL_Complex16 [], const long long int* );
extern int VSLZCONVNEWTASKX1D_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const MKL_Complex16 [], const long long int* );

extern int vslcConvNewTaskX1D (VSLConvTaskPtr* , const long long int , const long long int , const long long int , const long long int , const MKL_Complex8 [], const long long int );
extern int vslcconvnewtaskx1d_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const MKL_Complex8 [], const long long int* );
extern int VSLCCONVNEWTASKX1D_ (VSLConvTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const MKL_Complex8 [], const long long int* );

extern int vsldCorrNewTaskX1D (VSLCorrTaskPtr* , const long long int , const long long int , const long long int , const long long int , const double [], const long long int );
extern int vsldcorrnewtaskx1d_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const double [], const long long int* );
extern int VSLDCORRNEWTASKX1D_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const double [], const long long int* );

extern int vslsCorrNewTaskX1D (VSLCorrTaskPtr* , const long long int , const long long int , const long long int , const long long int , const float [], const long long int );
extern int vslscorrnewtaskx1d_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const float [], const long long int* );
extern int VSLSCORRNEWTASKX1D_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const float [], const long long int* );

extern int vslzCorrNewTaskX1D (VSLCorrTaskPtr* , const long long int , const long long int , const long long int , const long long int , const MKL_Complex16 [], const long long int );
extern int vslzcorrnewtaskx1d_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const MKL_Complex16 [], const long long int* );
extern int VSLZCORRNEWTASKX1D_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const MKL_Complex16 [], const long long int* );

extern int vslcCorrNewTaskX1D (VSLCorrTaskPtr* , const long long int , const long long int , const long long int , const long long int , const MKL_Complex8 [], const long long int );
extern int vslccorrnewtaskx1d_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const MKL_Complex8 [], const long long int* );
extern int VSLCCORRNEWTASKX1D_ (VSLCorrTaskPtr* , const long long int* , const long long int* , const long long int* , const long long int* , const MKL_Complex8 [], const long long int* );


extern int vslConvDeleteTask (VSLConvTaskPtr* );
extern int vslconvdeletetask_ (VSLConvTaskPtr* );
extern int VSLCONVDeleteTask_ (VSLConvTaskPtr* );

extern int vslCorrDeleteTask (VSLCorrTaskPtr* );
extern int vslcorrdeletetask_ (VSLCorrTaskPtr* );
extern int VSLCORRDeleteTask_ (VSLCorrTaskPtr* );


extern int vslConvCopyTask (VSLConvTaskPtr* , const VSLConvTaskPtr );
extern int vslconvcopytask_ (VSLConvTaskPtr* , const VSLConvTaskPtr* );
extern int VSLCONVCopyTask_ (VSLConvTaskPtr* , const VSLConvTaskPtr* );

extern int vslCorrCopyTask (VSLCorrTaskPtr* , const VSLCorrTaskPtr );
extern int vslcorrcopytask_ (VSLCorrTaskPtr* , const VSLCorrTaskPtr* );
extern int VSLCORRCopyTask_ (VSLCorrTaskPtr* , const VSLCorrTaskPtr* );


extern int vslConvSetMode (VSLConvTaskPtr , const long long int );
extern int vslconvsetmode_ (VSLConvTaskPtr* , const long long int* );
extern int VSLCONVSETMODE_ (VSLConvTaskPtr* , const long long int* );

extern int vslCorrSetMode (VSLCorrTaskPtr , const long long int );
extern int vslcorrsetmode_ (VSLCorrTaskPtr* , const long long int* );
extern int VSLCORRSETMODE_ (VSLCorrTaskPtr* , const long long int* );


extern int vslConvSetInternalPrecision (VSLConvTaskPtr , const long long int );
extern int vslconvsetinternalprecision_ (VSLConvTaskPtr* , const long long int* );
extern int VSLCONVSETINTERNALPRECISION_ (VSLConvTaskPtr* , const long long int* );

extern int vslCorrSetInternalPrecision (VSLCorrTaskPtr , const long long int );
extern int vslcorrsetinternalprecision_ (VSLCorrTaskPtr* , const long long int* );
extern int VSLCORRSETINTERNALPRECISION_ (VSLCorrTaskPtr* , const long long int* );


extern int vslConvSetStart (VSLConvTaskPtr , const long long int []);
extern int vslconvsetstart_ (VSLConvTaskPtr* , const long long int []);
extern int VSLCONVSETSTART_ (VSLConvTaskPtr* , const long long int []);

extern int vslCorrSetStart (VSLCorrTaskPtr , const long long int []);
extern int vslcorrsetstart_ (VSLCorrTaskPtr* , const long long int []);
extern int VSLCORRSETSTART_ (VSLCorrTaskPtr* , const long long int []);


extern int vslConvSetDecimation (VSLConvTaskPtr , const long long int []);
extern int vslconvsetdecimation_ (VSLConvTaskPtr* , const long long int []);
extern int VSLCONVSETDECIMATION_ (VSLConvTaskPtr* , const long long int []);

extern int vslCorrSetDecimation (VSLCorrTaskPtr , const long long int []);
extern int vslcorrsetdecimation_ (VSLCorrTaskPtr* , const long long int []);
extern int VSLCORRSETDECIMATION_ (VSLCorrTaskPtr* , const long long int []);


extern int vsldConvExec (VSLConvTaskPtr , const double [], const long long int [], const double [], const long long int [], double [], const long long int []);
extern int vsldconvexec_ (VSLConvTaskPtr* , const double [], const long long int [], const double [], const long long int [], double [], const long long int []);
extern int VSLDCONVEXEC_ (VSLConvTaskPtr* , const double [], const long long int [], const double [], const long long int [], double [], const long long int []);

extern int vslsConvExec (VSLConvTaskPtr , const float [], const long long int [], const float [], const long long int [], float [], const long long int []);
extern int vslsconvexec_ (VSLConvTaskPtr* , const float [], const long long int [], const float [], const long long int [], float [], const long long int []);
extern int VSLSCONVEXEC_ (VSLConvTaskPtr* , const float [], const long long int [], const float [], const long long int [], float [], const long long int []);

extern int vslzConvExec (VSLConvTaskPtr , const MKL_Complex16 [], const long long int [], const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);
extern int vslzconvexec_ (VSLConvTaskPtr* , const MKL_Complex16 [], const long long int [], const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);
extern int VSLZCONVEXEC_ (VSLConvTaskPtr* , const MKL_Complex16 [], const long long int [], const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);

extern int vslcConvExec (VSLConvTaskPtr , const MKL_Complex8 [], const long long int [], const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);
extern int vslcconvexec_ (VSLConvTaskPtr* , const MKL_Complex8 [], const long long int [], const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);
extern int VSLCCONVEXEC_ (VSLConvTaskPtr* , const MKL_Complex8 [], const long long int [], const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);

extern int vsldCorrExec (VSLCorrTaskPtr , const double [], const long long int [], const double [], const long long int [], double [], const long long int []);
extern int vsldcorrexec_ (VSLCorrTaskPtr* , const double [], const long long int [], const double [], const long long int [], double [], const long long int []);
extern int VSLDCORREXEC_ (VSLCorrTaskPtr* , const double [], const long long int [], const double [], const long long int [], double [], const long long int []);

extern int vslsCorrExec (VSLCorrTaskPtr , const float [], const long long int [], const float [], const long long int [], float [], const long long int []);
extern int vslscorrexec_ (VSLCorrTaskPtr* , const float [], const long long int [], const float [], const long long int [], float [], const long long int []);
extern int VSLSCORREXEC_ (VSLCorrTaskPtr* , const float [], const long long int [], const float [], const long long int [], float [], const long long int []);

extern int vslzCorrExec (VSLCorrTaskPtr , const MKL_Complex16 [], const long long int [], const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);
extern int vslzcorrexec_ (VSLCorrTaskPtr* , const MKL_Complex16 [], const long long int [], const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);
extern int VSLZCORREXEC_ (VSLCorrTaskPtr* , const MKL_Complex16 [], const long long int [], const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);

extern int vslcCorrExec (VSLCorrTaskPtr , const MKL_Complex8 [], const long long int [], const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);
extern int vslccorrexec_ (VSLCorrTaskPtr* , const MKL_Complex8 [], const long long int [], const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);
extern int VSLCCORREXEC_ (VSLCorrTaskPtr* , const MKL_Complex8 [], const long long int [], const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);


extern int vsldConvExec1D (VSLConvTaskPtr , const double [], const long long int , const double [], const long long int , double [], const long long int );
extern int vsldconvexec1d_ (VSLConvTaskPtr* , const double [], const long long int* , const double [], const long long int* , double [], const long long int* );
extern int VSLDCONVEXEC1D_ (VSLConvTaskPtr* , const double [], const long long int* , const double [], const long long int* , double [], const long long int* );

extern int vslsConvExec1D (VSLConvTaskPtr , const float [], const long long int , const float [], const long long int , float [], const long long int );
extern int vslsconvexec1d_ (VSLConvTaskPtr* , const float [], const long long int* , const float [], const long long int* , float [], const long long int* );
extern int VSLSCONVEXEC1D_ (VSLConvTaskPtr* , const float [], const long long int* , const float [], const long long int* , float [], const long long int* );

extern int vslzConvExec1D (VSLConvTaskPtr , const MKL_Complex16 [], const long long int , const MKL_Complex16 [], const long long int , MKL_Complex16 [], const long long int );
extern int vslzconvexec1d_ (VSLConvTaskPtr* , const MKL_Complex16 [], const long long int* , const MKL_Complex16 [], const long long int* , MKL_Complex16 [], const long long int* );
extern int VSLZCONVEXEC1D_ (VSLConvTaskPtr* , const MKL_Complex16 [], const long long int* , const MKL_Complex16 [], const long long int* , MKL_Complex16 [], const long long int* );

extern int vslcConvExec1D (VSLConvTaskPtr , const MKL_Complex8 [], const long long int , const MKL_Complex8 [], const long long int , MKL_Complex8 [], const long long int );
extern int vslcconvexec1d_ (VSLConvTaskPtr* , const MKL_Complex8 [], const long long int* , const MKL_Complex8 [], const long long int* , MKL_Complex8 [], const long long int* );
extern int VSLCCONVEXEC1D_ (VSLConvTaskPtr* , const MKL_Complex8 [], const long long int* , const MKL_Complex8 [], const long long int* , MKL_Complex8 [], const long long int* );

extern int vsldCorrExec1D (VSLCorrTaskPtr , const double [], const long long int , const double [], const long long int , double [], const long long int );
extern int vsldcorrexec1d_ (VSLCorrTaskPtr* , const double [], const long long int* , const double [], const long long int* , double [], const long long int* );
extern int VSLDCORREXEC1D_ (VSLCorrTaskPtr* , const double [], const long long int* , const double [], const long long int* , double [], const long long int* );

extern int vslsCorrExec1D (VSLCorrTaskPtr , const float [], const long long int , const float [], const long long int , float [], const long long int );
extern int vslscorrexec1d_ (VSLCorrTaskPtr* , const float [], const long long int* , const float [], const long long int* , float [], const long long int* );
extern int VSLSCORREXEC1D_ (VSLCorrTaskPtr* , const float [], const long long int* , const float [], const long long int* , float [], const long long int* );

extern int vslzCorrExec1D (VSLCorrTaskPtr , const MKL_Complex16 [], const long long int , const MKL_Complex16 [], const long long int , MKL_Complex16 [], const long long int );
extern int vslzcorrexec1d_ (VSLCorrTaskPtr* , const MKL_Complex16 [], const long long int* , const MKL_Complex16 [], const long long int* , MKL_Complex16 [], const long long int* );
extern int VSLZCORREXEC1D_ (VSLCorrTaskPtr* , const MKL_Complex16 [], const long long int* , const MKL_Complex16 [], const long long int* , MKL_Complex16 [], const long long int* );

extern int vslcCorrExec1D (VSLCorrTaskPtr , const MKL_Complex8 [], const long long int , const MKL_Complex8 [], const long long int , MKL_Complex8 [], const long long int );
extern int vslccorrexec1d_ (VSLCorrTaskPtr* , const MKL_Complex8 [], const long long int* , const MKL_Complex8 [], const long long int* , MKL_Complex8 [], const long long int* );
extern int VSLCCORREXEC1D_ (VSLCorrTaskPtr* , const MKL_Complex8 [], const long long int* , const MKL_Complex8 [], const long long int* , MKL_Complex8 [], const long long int* );


extern int vsldConvExecX (VSLConvTaskPtr , const double [], const long long int [], double [], const long long int []);
extern int vsldconvexecx_ (VSLConvTaskPtr* , const double [], const long long int [], double [], const long long int []);
extern int VSLDCONVEXECX_ (VSLConvTaskPtr* , const double [], const long long int [], double [], const long long int []);

extern int vslsConvExecX (VSLConvTaskPtr , const float [], const long long int [], float [], const long long int []);
extern int vslsconvexecx_ (VSLConvTaskPtr* , const float [], const long long int [], float [], const long long int []);
extern int VSLSCONVEXECX_ (VSLConvTaskPtr* , const float [], const long long int [], float [], const long long int []);

extern int vslzConvExecX (VSLConvTaskPtr , const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);
extern int vslzconvexecx_ (VSLConvTaskPtr* , const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);
extern int VSLZCONVEXECX_ (VSLConvTaskPtr* , const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);

extern int vslcConvExecX (VSLConvTaskPtr , const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);
extern int vslcconvexecx_ (VSLConvTaskPtr* , const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);
extern int VSLCCONVEXECX_ (VSLConvTaskPtr* , const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);

extern int vsldCorrExecX (VSLCorrTaskPtr , const double [], const long long int [], double [], const long long int []);
extern int vsldcorrexecx_ (VSLCorrTaskPtr* , const double [], const long long int [], double [], const long long int []);
extern int VSLDCORREXECX_ (VSLCorrTaskPtr* , const double [], const long long int [], double [], const long long int []);

extern int vslsCorrExecX (VSLCorrTaskPtr , const float [], const long long int [], float [], const long long int []);
extern int vslscorrexecx_ (VSLCorrTaskPtr* , const float [], const long long int [], float [], const long long int []);
extern int VSLSCORREXECX_ (VSLCorrTaskPtr* , const float [], const long long int [], float [], const long long int []);

extern int vslzCorrExecX (VSLCorrTaskPtr , const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);
extern int vslzcorrexecx_ (VSLCorrTaskPtr* , const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);
extern int VSLZCORREXECX_ (VSLCorrTaskPtr* , const MKL_Complex16 [], const long long int [], MKL_Complex16 [], const long long int []);

extern int vslcCorrExecX (VSLCorrTaskPtr , const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);
extern int vslccorrexecx_ (VSLCorrTaskPtr* , const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);
extern int VSLCCORREXECX_ (VSLCorrTaskPtr* , const MKL_Complex8 [], const long long int [], MKL_Complex8 [], const long long int []);


extern int vsldConvExecX1D (VSLConvTaskPtr , const double [], const long long int , double [], const long long int );
extern int vsldconvexecx1d_ (VSLConvTaskPtr* , const double [], const long long int* , double [], const long long int* );
extern int VSLDCONVEXECX1D_ (VSLConvTaskPtr* , const double [], const long long int* , double [], const long long int* );

extern int vslsConvExecX1D (VSLConvTaskPtr , const float [], const long long int , float [], const long long int );
extern int vslsconvexecx1d_ (VSLConvTaskPtr* , const float [], const long long int* , float [], const long long int* );
extern int VSLSCONVEXECX1D_ (VSLConvTaskPtr* , const float [], const long long int* , float [], const long long int* );

extern int vslzConvExecX1D (VSLConvTaskPtr , const MKL_Complex16 [], const long long int , MKL_Complex16 [], const long long int );
extern int vslzconvexecx1d_ (VSLConvTaskPtr* , const MKL_Complex16 [], const long long int* , MKL_Complex16 [], const long long int* );
extern int VSLZCONVEXECX1D_ (VSLConvTaskPtr* , const MKL_Complex16 [], const long long int* , MKL_Complex16 [], const long long int* );

extern int vslcConvExecX1D (VSLConvTaskPtr , const MKL_Complex8 [], const long long int , MKL_Complex8 [], const long long int );
extern int vslcconvexecx1d_ (VSLConvTaskPtr* , const MKL_Complex8 [], const long long int* , MKL_Complex8 [], const long long int* );
extern int VSLCCONVEXECX1D_ (VSLConvTaskPtr* , const MKL_Complex8 [], const long long int* , MKL_Complex8 [], const long long int* );

extern int vsldCorrExecX1D (VSLCorrTaskPtr , const double [], const long long int , double [], const long long int );
extern int vsldcorrexecx1d_ (VSLCorrTaskPtr* , const double [], const long long int* , double [], const long long int* );
extern int VSLDCORREXECX1D_ (VSLCorrTaskPtr* , const double [], const long long int* , double [], const long long int* );

extern int vslsCorrExecX1D (VSLCorrTaskPtr , const float [], const long long int , float [], const long long int );
extern int vslscorrexecx1d_ (VSLCorrTaskPtr* , const float [], const long long int* , float [], const long long int* );
extern int VSLSCORREXECX1D_ (VSLCorrTaskPtr* , const float [], const long long int* , float [], const long long int* );

extern int vslzCorrExecX1D (VSLCorrTaskPtr , const MKL_Complex16 [], const long long int , MKL_Complex16 [], const long long int );
extern int vslzcorrexecx1d_ (VSLCorrTaskPtr* , const MKL_Complex16 [], const long long int* , MKL_Complex16 [], const long long int* );
extern int VSLZCORREXECX1D_ (VSLCorrTaskPtr* , const MKL_Complex16 [], const long long int* , MKL_Complex16 [], const long long int* );

extern int vslcCorrExecX1D (VSLCorrTaskPtr , const MKL_Complex8 [], const long long int , MKL_Complex8 [], const long long int );
extern int vslccorrexecx1d_ (VSLCorrTaskPtr* , const MKL_Complex8 [], const long long int* , MKL_Complex8 [], const long long int* );
extern int VSLCCORREXECX1D_ (VSLCorrTaskPtr* , const MKL_Complex8 [], const long long int* , MKL_Complex8 [], const long long int* );
# 651 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_functions.h"
extern int vsldSSNewTask (VSLSSTaskPtr* , const long long int* , const long long int* , const long long int* , const double [], const double [], const long long int []);
extern int vsldssnewtask_ (VSLSSTaskPtr* , const long long int* , const long long int* , const long long int* , const double [], const double [], const long long int []);
extern int VSLDSSNEWTASK_ (VSLSSTaskPtr* , const long long int* , const long long int* , const long long int* , const double [], const double [], const long long int []);

extern int vslsSSNewTask (VSLSSTaskPtr* , const long long int* , const long long int* , const long long int* , const float [], const float [], const long long int []);
extern int vslsssnewtask_ (VSLSSTaskPtr* , const long long int* , const long long int* , const long long int* , const float [], const float [], const long long int []);
extern int VSLSSSNEWTASK_ (VSLSSTaskPtr* , const long long int* , const long long int* , const long long int* , const float [], const float [], const long long int []);
# 667 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_functions.h"
extern int vsldSSEditTask (VSLSSTaskPtr , const long long int , const double* );
extern int vsldssedittask_ (VSLSSTaskPtr* , const long long int* , const double* );
extern int VSLDSSEDITTASK_ (VSLSSTaskPtr* , const long long int* , const double* );

extern int vslsSSEditTask (VSLSSTaskPtr , const long long int , const float* );
extern int vslsssedittask_ (VSLSSTaskPtr* , const long long int* , const float* );
extern int VSLSSSEDITTASK_ (VSLSSTaskPtr* , const long long int* , const float* );

extern int vsliSSEditTask (VSLSSTaskPtr , const long long int , const long long int* );
extern int vslissedittask_ (VSLSSTaskPtr* , const long long int* , const long long int* );
extern int VSLISSEDITTASK_ (VSLSSTaskPtr* , const long long int* , const long long int* );
# 686 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl_functions.h"
extern int vsldSSEditMoments (VSLSSTaskPtr , const double* , const double* , const double* , const double* , const double* , const double* , const double* );
extern int vsldsseditmoments_ (VSLSSTaskPtr* , const double* , const double* , const double* , const double* , const double* , const double* , const double* );
extern int VSLDSSEDITMOMENTS_ (VSLSSTaskPtr* , const double* , const double* , const double* , const double* , const double* , const double* , const double* );

extern int vslsSSEditMoments (VSLSSTaskPtr , const float* , const float* , const float* , const float* , const float* , const float* , const float* );
extern int vslssseditmoments_ (VSLSSTaskPtr* , const float* , const float* , const float* , const float* , const float* , const float* , const float* );
extern int VSLSSSEDITMOMENTS_ (VSLSSTaskPtr* , const float* , const float* , const float* , const float* , const float* , const float* , const float* );





extern int vsldSSEditSums (VSLSSTaskPtr , const double* , const double* , const double* , const double* , const double* , const double* , const double* );
extern int vsldsseditsums_ (VSLSSTaskPtr* , const double* , const double* , const double* , const double* , const double* , const double* , const double* );
extern int VSLDSSEDITSUMS_ (VSLSSTaskPtr* , const double* , const double* , const double* , const double* , const double* , const double* , const double* );

extern int vslsSSEditSums (VSLSSTaskPtr , const float* , const float* , const float* , const float* , const float* , const float* , const float* );
extern int vslssseditsums_ (VSLSSTaskPtr* , const float* , const float* , const float* , const float* , const float* , const float* , const float* );
extern int VSLSSSEDITSUMS_ (VSLSSTaskPtr* , const float* , const float* , const float* , const float* , const float* , const float* , const float* );





extern int vsldSSEditCovCor (VSLSSTaskPtr , const double* , const double* , const long long int* , const double* , const long long int* );
extern int vsldsseditcovcor_ (VSLSSTaskPtr* , const double* , const double* , const long long int* , const double* , const long long int* );
extern int VSLDSSEDITCOVCOR_ (VSLSSTaskPtr* , const double* , const double* , const long long int* , const double* , const long long int* );

extern int vslsSSEditCovCor (VSLSSTaskPtr , const float* , const float* , const long long int* , const float* , const long long int* );
extern int vslssseditcovcor_ (VSLSSTaskPtr* , const float* , const float* , const long long int* , const float* , const long long int* );
extern int VSLSSSEDITCOVCOR_ (VSLSSTaskPtr* , const float* , const float* , const long long int* , const float* , const long long int* );





extern int vsldSSEditCP (VSLSSTaskPtr , const double* , const double* , const double* , const long long int* );
extern int vsldsseditcp_ (VSLSSTaskPtr* , const double* , const double* , const double* , const long long int* );
extern int VSLDSSEDITCP_ (VSLSSTaskPtr* , const double* , const double* , const double* , const long long int* );

extern int vslsSSEditCP (VSLSSTaskPtr , const float* , const float* , const float* , const long long int* );
extern int vslssseditcp_ (VSLSSTaskPtr* , const float* , const float* , const float* , const long long int* );
extern int VSLSSSEDITCP_ (VSLSSTaskPtr* , const float* , const float* , const float* , const long long int* );





extern int vsldSSEditPartialCovCor (VSLSSTaskPtr , const long long int [], const double* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* , const long long int* );
extern int vsldsseditpartialcovcor_ (VSLSSTaskPtr* , const long long int [], const double* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* , const long long int* );
extern int VSLDSSEDITPARTIALCOVCOR_ (VSLSSTaskPtr* , const long long int [], const double* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* , const long long int* );

extern int vslsSSEditPartialCovCor (VSLSSTaskPtr , const long long int [], const float* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* , const long long int* );
extern int vslssseditpartialcovcor_ (VSLSSTaskPtr* , const long long int [], const float* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* , const long long int* );
extern int VSLSSSEDITPARTIALCOVCOR_ (VSLSSTaskPtr* , const long long int [], const float* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* , const long long int* );





extern int vsldSSEditQuantiles (VSLSSTaskPtr , const long long int* , const double* , const double* , const double* , const long long int* );
extern int vsldsseditquantiles_ (VSLSSTaskPtr* , const long long int* , const double* , const double* , const double* , const long long int* );
extern int VSLDSSEDITQUANTILES_ (VSLSSTaskPtr* , const long long int* , const double* , const double* , const double* , const long long int* );

extern int vslsSSEditQuantiles (VSLSSTaskPtr , const long long int* , const float* , const float* , const float* , const long long int* );
extern int vslssseditquantiles_ (VSLSSTaskPtr* , const long long int* , const float* , const float* , const float* , const long long int* );
extern int VSLSSSEDITQUANTILES_ (VSLSSTaskPtr* , const long long int* , const float* , const float* , const float* , const long long int* );





extern int vsldSSEditStreamQuantiles (VSLSSTaskPtr , const long long int* , const double* , const double* , const long long int* , const double* );
extern int vsldsseditstreamquantiles_ (VSLSSTaskPtr* , const long long int* , const double* , const double* , const long long int* , const double* );
extern int VSLDSSEDITSTREAMQUANTILES_ (VSLSSTaskPtr* , const long long int* , const double* , const double* , const long long int* , const double* );

extern int vslsSSEditStreamQuantiles (VSLSSTaskPtr , const long long int* , const float* , const float* , const long long int* , const float* );
extern int vslssseditstreamquantiles_ (VSLSSTaskPtr* , const long long int* , const float* , const float* , const long long int* , const float* );
extern int VSLSSSEDITSTREAMQUANTILES_ (VSLSSTaskPtr* , const long long int* , const float* , const float* , const long long int* , const float* );




extern int vsldSSEditPooledCovariance (VSLSSTaskPtr , const long long int* , const double* , const double* , const long long int* , const double* , const double* );
extern int vsldsseditpooledcovariance_ (VSLSSTaskPtr* , const long long int* , const double* , const double* , const long long int* , const double* , const double* );
extern int VSLDSSEDITPOOLEDCOVARIANCE_ (VSLSSTaskPtr* , const long long int* , const double* , const double* , const long long int* , const double* , const double* );

extern int vslsSSEditPooledCovariance (VSLSSTaskPtr , const long long int* , const float* , const float* , const long long int* , const float* , const float* );
extern int vslssseditpooledcovariance_ (VSLSSTaskPtr* , const long long int* , const float* , const float* , const long long int* , const float* , const float* );
extern int VSLSSSEDITPOOLEDCOVARIANCE_ (VSLSSTaskPtr* , const long long int* , const float* , const float* , const long long int* , const float* , const float* );





extern int vsldSSEditRobustCovariance (VSLSSTaskPtr , const long long int* , const long long int* , const double* , const double* , const double* );
extern int vsldsseditrobustcovariance_ (VSLSSTaskPtr* , const long long int* , const long long int* , const double* , const double* , const double* );
extern int VSLDSSEDITROBUSTCOVARIANCE_ (VSLSSTaskPtr* , const long long int* , const long long int* , const double* , const double* , const double* );

extern int vslsSSEditRobustCovariance (VSLSSTaskPtr , const long long int* , const long long int* , const float* , const float* , const float* );
extern int vslssseditrobustcovariance_ (VSLSSTaskPtr* , const long long int* , const long long int* , const float* , const float* , const float* );
extern int VSLSSSEDITROBUSTCOVARIANCE_ (VSLSSTaskPtr* , const long long int* , const long long int* , const float* , const float* , const float* );





extern int vsldSSEditOutliersDetection (VSLSSTaskPtr , const long long int* , const double* , const double* );
extern int vsldsseditoutliersdetection_ (VSLSSTaskPtr* , const long long int* , const double* , const double* );
extern int VSLDSSEDITOUTLIERSDETECTION_ (VSLSSTaskPtr* , const long long int* , const double* , const double* );

extern int vslsSSEditOutliersDetection (VSLSSTaskPtr , const long long int* , const float* , const float* );
extern int vslssseditoutliersdetection_ (VSLSSTaskPtr* , const long long int* , const float* , const float* );
extern int VSLSSSEDITOUTLIERSDETECTION_ (VSLSSTaskPtr* , const long long int* , const float* , const float* );




extern int vsldSSEditMissingValues (VSLSSTaskPtr , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* );
extern int vsldsseditmissingvalues_ (VSLSSTaskPtr* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* );
extern int VSLDSSEDITMISSINGVALUES_ (VSLSSTaskPtr* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* , const long long int* , const double* );

extern int vslsSSEditMissingValues (VSLSSTaskPtr , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* );
extern int vslssseditmissingvalues_ (VSLSSTaskPtr* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* );
extern int VSLSSSEDITMISSINGVALUES_ (VSLSSTaskPtr* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* , const long long int* , const float* );




extern int vsldSSEditCorParameterization (VSLSSTaskPtr , const double* , const long long int* , const double* , const long long int* );
extern int vsldsseditcorparameterization_ (VSLSSTaskPtr* , const double* , const long long int* , const double* , const long long int* );
extern int VSLDSSEDITCORPARAMETERIZATION_ (VSLSSTaskPtr* , const double* , const long long int* , const double* , const long long int* );

extern int vslsSSEditCorParameterization (VSLSSTaskPtr , const float* , const long long int* , const float* , const long long int* );
extern int vslssseditcorparameterization_ (VSLSSTaskPtr* , const float* , const long long int* , const float* , const long long int* );
extern int VSLSSSEDITCORPARAMETERIZATION_ (VSLSSTaskPtr* , const float* , const long long int* , const float* , const long long int* );





extern int vsldSSCompute (VSLSSTaskPtr , const unsigned long long int , const long long int );
extern int vsldsscompute_ (VSLSSTaskPtr* , const unsigned long long int* , const long long int* );
extern int VSLDSSCOMPUTE_ (VSLSSTaskPtr* , const unsigned long long int* , const long long int* );

extern int vslsSSCompute (VSLSSTaskPtr , const unsigned long long int , const long long int );
extern int vslssscompute_ (VSLSSTaskPtr* , const unsigned long long int* , const long long int* );
extern int VSLSSSCOMPUTE_ (VSLSSTaskPtr* , const unsigned long long int* , const long long int* );





extern int vslSSDeleteTask (VSLSSTaskPtr* );
extern int vslssdeletetask_ (VSLSSTaskPtr* );
extern int VSLSSDELETETASK_ (VSLSSTaskPtr* );
# 38 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_vsl.h" 2
# 48 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df.h" 1
# 36 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df.h"
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_defines.h" 1
# 37 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_functions.h" 1
# 32 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_functions.h"
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_types.h" 1
# 48 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_types.h"
typedef void* DFTaskPtr;





typedef int (*dfsInterpCallBack) ( long long int* n, long long int cell[], float site[], float r[], void* param );
typedef int (*dfdInterpCallBack) ( long long int* n, long long int cell[], double site[], double r[], void* param );




typedef int (*dfsIntegrCallBack) ( long long int* n, long long int lcell[], float llim[], long long int rcell[], float rlim[], float r[], void* params );
typedef int (*dfdIntegrCallBack) ( long long int* n, long long int lcell[], double llim[], long long int rcell[], double rlim[], double r[], void* params );




typedef int (*dfsSearchCellsCallBack) ( long long int* n, float site[], long long int cell[], int flag[], void* params );
typedef int (*dfdSearchCellsCallBack) ( long long int* n, double site[], long long int cell[], int flag[], void* params );
# 33 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_functions.h" 2
# 65 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_functions.h"
extern int dfsNewTask1D (DFTaskPtr *, const long long int , const float [], const long long int , const long long int , const float [], const long long int );
extern int dfsnewtask1d_ (DFTaskPtr *, const long long int *, const float [], const long long int *, const long long int *, const float [], const long long int *);
extern int DFSNEWTASK1D_ (DFTaskPtr *, const long long int *, const float [], const long long int *, const long long int *, const float [], const long long int *);

extern int dfdNewTask1D (DFTaskPtr *, const long long int , const double [], const long long int , const long long int , const double [], const long long int );
extern int dfdnewtask1d_ (DFTaskPtr *, const long long int *, const double [], const long long int *, const long long int *, const double [], const long long int *);
extern int DFDNEWTASK1D_ (DFTaskPtr *, const long long int *, const double [], const long long int *, const long long int *, const double [], const long long int *);
# 80 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_functions.h"
extern int dfsEditPtr (DFTaskPtr , const long long int , const float *);
extern int dfseditptr_ (DFTaskPtr *, const long long int *, const float *);
extern int DFSEDITPTR_ (DFTaskPtr *, const long long int *, const float *);

extern int dfdEditPtr (DFTaskPtr , const long long int , const double *);
extern int dfdeditptr_ (DFTaskPtr *, const long long int *, const double *);
extern int DFDEDITPTR_ (DFTaskPtr *, const long long int *, const double *);


extern int dfiEditVal (DFTaskPtr , const long long int , const long long int );
extern int dfieditval_ (DFTaskPtr *, const long long int *, const long long int *);
extern int DFIEDITVAL_ (DFTaskPtr *, const long long int *, const long long int *);



extern int dfsEditIdxPtr (DFTaskPtr , const long long int , const long long int , const float []);
extern int dfseditidxptr_ (DFTaskPtr *, const long long int *, const long long int *, const float []);
extern int DFSEDITIDXPTR_ (DFTaskPtr *, const long long int *, const long long int *, const float []);

extern int dfdEditIdxPtr (DFTaskPtr , const long long int , const long long int , const double []);
extern int dfdeditidxptr_ (DFTaskPtr *, const long long int *, const long long int *, const double []);
extern int DFDEDITIDXPTR_ (DFTaskPtr *, const long long int *, const long long int *, const double []);


extern int dfsEditPPSpline1D (DFTaskPtr , const long long int , const long long int , const long long int , const float [], const long long int , const float [], const float [], const long long int );
extern int dfseditppspline1d_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const float [], const long long int *, const float [], const float [], const long long int *);
extern int DFSEDITPPSPLINE1D_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const float [], const long long int *, const float [], const float [], const long long int *);

extern int dfdEditPPSpline1D (DFTaskPtr , const long long int , const long long int , const long long int , const double [], const long long int , const double [], const double [], const long long int );
extern int dfdeditppspline1d_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const double [], const long long int *, const double [], const double [], const long long int *);
extern int DFDEDITPPSPLINE1D_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const double [], const long long int *, const double [], const double [], const long long int *);
# 119 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_functions.h"
extern int dfsQueryPtr (DFTaskPtr , const long long int , float **);
extern int dfsqueryptr_ (DFTaskPtr *, const long long int *, float **);
extern int DFSQUERYPTR_ (DFTaskPtr *, const long long int *, float **);

extern int dfdQueryPtr (DFTaskPtr , const long long int , double **);
extern int dfdqueryptr_ (DFTaskPtr *, const long long int *, double **);
extern int DFDQUERYPTR_ (DFTaskPtr *, const long long int *, double **);


extern int dfiQueryVal (DFTaskPtr , const long long int , long long int *);
extern int dfiqueryval_ (DFTaskPtr *, const long long int *, long long int *);
extern int DFIQUERYVAL_ (DFTaskPtr *, const long long int *, long long int *);



extern int dfsQueryIdxPtr (DFTaskPtr , const long long int , const long long int , float **);
extern int dfsqueryidxptr_ (DFTaskPtr *, const long long int *, const long long int *, float **);
extern int DFSQUERYIDXPTR_ (DFTaskPtr *, const long long int *, const long long int *, float **);

extern int dfdQueryIdxPtr (DFTaskPtr , const long long int , const long long int , double **);
extern int dfdqueryidxptr_ (DFTaskPtr *, const long long int *, const long long int *, double **);
extern int DFDQUERYIDXPTR_ (DFTaskPtr *, const long long int *, const long long int *, double **);
# 149 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df_functions.h"
extern int dfsConstruct1D (DFTaskPtr , const long long int , const long long int );
extern int dfsconstruct1d_ (DFTaskPtr *, const long long int *, const long long int *);
extern int DFSCONSTRUCT1D_ (DFTaskPtr *, const long long int *, const long long int *);

extern int dfdConstruct1D (DFTaskPtr , const long long int , const long long int );
extern int dfdconstruct1d_ (DFTaskPtr *, const long long int *, const long long int *);
extern int DFDCONSTRUCT1D_ (DFTaskPtr *, const long long int *, const long long int *);


extern int dfsInterpolateEx1D (DFTaskPtr , const long long int , const long long int , const long long int , const float [], const long long int , const long long int , const long long int [], const float [], float [], const long long int , long long int [], const dfsInterpCallBack , const void *, const dfsInterpCallBack , const void *, const dfsInterpCallBack , const void *, const dfsSearchCellsCallBack , const void *);
extern int dfsinterpolateex1d_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const float [], const long long int *, const long long int *, const long long int [], const float [], float [], const long long int *, long long int [], const dfsInterpCallBack , const void *, const dfsInterpCallBack , const void *, const dfsInterpCallBack , const void *, const dfsSearchCellsCallBack , const void *);
extern int DFSINTERPOLATEEX1D_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const float [], const long long int *, const long long int *, const long long int [], const float [], float [], const long long int *, long long int [], const dfsInterpCallBack , const void *, const dfsInterpCallBack , const void *, const dfsInterpCallBack , const void *, const dfsSearchCellsCallBack , const void *);

extern int dfdInterpolateEx1D (DFTaskPtr , const long long int , const long long int , const long long int , const double [], const long long int , const long long int , const long long int [], const double [], double [], const long long int , long long int [], const dfdInterpCallBack , const void *, const dfdInterpCallBack , const void *, const dfdInterpCallBack , const void *, const dfdSearchCellsCallBack , const void *);
extern int dfdinterpolateex1d_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const double [], const long long int *, const long long int *, const long long int [], const double [], double [], const long long int *, long long int [], const dfdInterpCallBack , const void *, const dfdInterpCallBack , const void *, const dfdInterpCallBack , const void *, const dfdSearchCellsCallBack , const void *);
extern int DFDINTERPOLATEEX1D_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const double [], const long long int *, const long long int *, const long long int [], const double [], double [], const long long int *, long long int [], const dfdInterpCallBack , const void *, const dfdInterpCallBack , const void *, const dfdInterpCallBack , const void *, const dfdSearchCellsCallBack , const void *);


extern int dfsInterpolate1D (DFTaskPtr , const long long int , const long long int , const long long int , const float [], const long long int , const long long int , const long long int [], const float [], float [], const long long int , long long int [] );
extern int dfsinterpolate1d_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const float [], const long long int *, const long long int *, const long long int [], const float [], float [], const long long int *, long long int [] );
extern int DFSINTERPOLATE1D_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const float [], const long long int *, const long long int *, const long long int [], const float [], float [], const long long int *, long long int [] );

extern int dfdInterpolate1D (DFTaskPtr , const long long int , const long long int , const long long int , const double [], const long long int , const long long int , const long long int [], const double [], double [], const long long int , long long int [] );
extern int dfdinterpolate1d_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const double [], const long long int *, const long long int *, const long long int [], const double [], double [], const long long int *, long long int [] );
extern int DFDINTERPOLATE1D_ (DFTaskPtr *, const long long int *, const long long int *, const long long int *, const double [], const long long int *, const long long int *, const long long int [], const double [], double [], const long long int *, long long int [] );


extern int dfsSearchCellsEx1D (DFTaskPtr , const long long int , const long long int , const float [], const long long int , const float [], long long int [], const dfsSearchCellsCallBack , const void * );
extern int dfssearchcellsex1d_ (DFTaskPtr *, const long long int *, const long long int *, const float [], const long long int *, const float [], long long int [], const dfsSearchCellsCallBack , const void * );
extern int DFSSEARCHCELLSEX1D_ (DFTaskPtr *, const long long int *, const long long int *, const float [], const long long int *, const float [], long long int [], const dfsSearchCellsCallBack , const void * );

extern int dfdSearchCellsEx1D (DFTaskPtr , const long long int , const long long int , const double [], const long long int , const double [], long long int [], const dfdSearchCellsCallBack , const void * );
extern int dfdsearchcellsex1d_ (DFTaskPtr *, const long long int *, const long long int *, const double [], const long long int *, const double [], long long int [], const dfdSearchCellsCallBack , const void * );
extern int DFDSEARCHCELLSEX1D_ (DFTaskPtr *, const long long int *, const long long int *, const double [], const long long int *, const double [], long long int [], const dfdSearchCellsCallBack , const void * );


extern int dfsSearchCells1D (DFTaskPtr , const long long int , const long long int , const float [], const long long int , const float [], long long int [] );
extern int dfssearchcells1d_ (DFTaskPtr *, const long long int *, const long long int *, const float [], const long long int *, const float [], long long int [] );
extern int DFSSEARCHCELLS1D_ (DFTaskPtr *, const long long int *, const long long int *, const float [], const long long int *, const float [], long long int [] );

extern int dfdSearchCells1D (DFTaskPtr , const long long int , const long long int , const double [], const long long int , const double [], long long int [] );
extern int dfdsearchcells1d_ (DFTaskPtr *, const long long int *, const long long int *, const double [], const long long int *, const double [], long long int [] );
extern int DFDSEARCHCELLS1D_ (DFTaskPtr *, const long long int *, const long long int *, const double [], const long long int *, const double [], long long int [] );


extern int dfsIntegrate1D (DFTaskPtr , const long long int , const long long int , const float [], const long long int , const float [], const long long int , const float [], const float [], float [], const long long int );
extern int dfsintegrate1d_ (DFTaskPtr *, const long long int *, const long long int *, const float [], const long long int *, const float [], const long long int *, const float [], const float [], float [], const long long int *);
extern int DFSINTEGRATE1D_ (DFTaskPtr *, const long long int *, const long long int *, const float [], const long long int *, const float [], const long long int *, const float [], const float [], float [], const long long int *);

extern int dfdIntegrate1D (DFTaskPtr , const long long int , const long long int , const double [], const long long int , const double [], const long long int , const double [], const double [], double [], const long long int );
extern int dfdintegrate1d_ (DFTaskPtr *, const long long int *, const long long int *, const double [], const long long int *, const double [], const long long int *, const double [], const double [], double [], const long long int *);
extern int DFDINTEGRATE1D_ (DFTaskPtr *, const long long int *, const long long int *, const double [], const long long int *, const double [], const long long int *, const double [], const double [], double [], const long long int *);


extern int dfsIntegrateEx1D (DFTaskPtr , const long long int , const long long int , const float [], const long long int , const float [], const long long int , const float [], const float [], float [], const long long int , const dfsIntegrCallBack , const void *, const dfsIntegrCallBack , const void *, const dfsIntegrCallBack , const void *, const dfsSearchCellsCallBack , const void *);
extern int dfsintegrateex1d_ (DFTaskPtr *, const long long int *, const long long int *, const float [], const long long int *, const float [], const long long int *, const float [], const float [], float [], const long long int *, const dfsIntegrCallBack , const void *, const dfsIntegrCallBack , const void *, const dfsIntegrCallBack , const void *, const dfsSearchCellsCallBack , const void *);
extern int DFSINTEGRATEEX1D_ (DFTaskPtr *, const long long int *, const long long int *, const float [], const long long int *, const float [], const long long int *, const float [], const float [], float [], const long long int *, const dfsIntegrCallBack , const void *, const dfsIntegrCallBack , const void *, const dfsIntegrCallBack , const void *, const dfsSearchCellsCallBack , const void *);

extern int dfdIntegrateEx1D (DFTaskPtr , const long long int , const long long int , const double [], const long long int , const double [], const long long int , const double [], const double [], double [], const long long int , const dfdIntegrCallBack , const void *, const dfdIntegrCallBack , const void *, const dfdIntegrCallBack , const void *, const dfdSearchCellsCallBack , const void *);
extern int dfdintegrateex1d_ (DFTaskPtr *, const long long int *, const long long int *, const double [], const long long int *, const double [], const long long int *, const double [], const double [], double [], const long long int *, const dfdIntegrCallBack , const void *, const dfdIntegrCallBack , const void *, const dfdIntegrCallBack , const void *, const dfdSearchCellsCallBack , const void *);
extern int DFDINTEGRATEEX1D_ (DFTaskPtr *, const long long int *, const long long int *, const double [], const long long int *, const double [], const long long int *, const double [], const double [], double [], const long long int *, const dfdIntegrCallBack , const void *, const dfdIntegrCallBack , const void *, const dfdIntegrCallBack , const void *, const dfdSearchCellsCallBack , const void *);







extern int dfDeleteTask (DFTaskPtr *);
extern int dfdeletetask_ (DFTaskPtr *);
extern int DFDELETETASK_ (DFTaskPtr *);
# 38 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_df.h" 2
# 49 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2

# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_dfti.h" 1
# 70 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_dfti.h"
enum DFTI_CONFIG_PARAM
{

    DFTI_FORWARD_DOMAIN = 0,


    DFTI_DIMENSION = 1,


    DFTI_LENGTHS = 2,


    DFTI_PRECISION = 3,


    DFTI_FORWARD_SCALE = 4,


    DFTI_BACKWARD_SCALE = 5,





    DFTI_NUMBER_OF_TRANSFORMS = 7,



    DFTI_COMPLEX_STORAGE = 8,



    DFTI_REAL_STORAGE = 9,



    DFTI_CONJUGATE_EVEN_STORAGE = 10,


    DFTI_PLACEMENT = 11,



    DFTI_INPUT_STRIDES = 12,



    DFTI_OUTPUT_STRIDES = 13,



    DFTI_INPUT_DISTANCE = 14,



    DFTI_OUTPUT_DISTANCE = 15,





    DFTI_WORKSPACE = 17,


    DFTI_ORDERING = 18,


    DFTI_TRANSPOSE = 19,


    DFTI_DESCRIPTOR_NAME = 20,



    DFTI_PACKED_FORMAT = 21,


    DFTI_COMMIT_STATUS = 22,


    DFTI_VERSION = 23,
# 159 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_dfti.h"
    DFTI_NUMBER_OF_USER_THREADS = 26,


    DFTI_THREAD_LIMIT = 27,


    DFTI_DESTROY_INPUT = 28
};


enum DFTI_CONFIG_VALUE
{

    DFTI_COMMITTED = 30,
    DFTI_UNCOMMITTED = 31,


    DFTI_COMPLEX = 32,
    DFTI_REAL = 33,



    DFTI_SINGLE = 35,
    DFTI_DOUBLE = 36,






    DFTI_COMPLEX_COMPLEX = 39,
    DFTI_COMPLEX_REAL = 40,


    DFTI_REAL_COMPLEX = 41,
    DFTI_REAL_REAL = 42,


    DFTI_INPLACE = 43,
    DFTI_NOT_INPLACE = 44,







    DFTI_ORDERED = 48,
    DFTI_BACKWARD_SCRAMBLED = 49,



    DFTI_ALLOW = 51,
    DFTI_AVOID = 52,
    DFTI_NONE = 53,



    DFTI_CCS_FORMAT = 54,
    DFTI_PACK_FORMAT = 55,
    DFTI_PERM_FORMAT = 56,
    DFTI_CCE_FORMAT = 57
};

typedef struct DFTI_DESCRIPTOR *DFTI_DESCRIPTOR_HANDLE;
typedef struct DFTI_DESCRIPTOR DFTI_DESCRIPTOR;




 long long int DftiCreateDescriptor(DFTI_DESCRIPTOR_HANDLE*,
                              enum DFTI_CONFIG_VALUE,
                              enum DFTI_CONFIG_VALUE,
                              long long int, ...);
 long long int DftiCopyDescriptor(DFTI_DESCRIPTOR_HANDLE,
                            DFTI_DESCRIPTOR_HANDLE*);
 long long int DftiCommitDescriptor(DFTI_DESCRIPTOR_HANDLE);
 long long int DftiComputeForward(DFTI_DESCRIPTOR_HANDLE, void*, ...);
 long long int DftiComputeBackward(DFTI_DESCRIPTOR_HANDLE, void*, ...);
 long long int DftiSetValue(DFTI_DESCRIPTOR_HANDLE, enum DFTI_CONFIG_PARAM, ...);
 long long int DftiGetValue(DFTI_DESCRIPTOR_HANDLE, enum DFTI_CONFIG_PARAM, ...);
 long long int DftiFreeDescriptor(DFTI_DESCRIPTOR_HANDLE*);
 char* DftiErrorMessage(long long int);
 long long int DftiErrorClass(long long int, long long int);




 long long int DftiCreateDescriptor_s_1d(DFTI_DESCRIPTOR_HANDLE *,
                                   enum DFTI_CONFIG_VALUE domain,
                                   ... );
 long long int DftiCreateDescriptor_s_md(DFTI_DESCRIPTOR_HANDLE *,
                                   enum DFTI_CONFIG_VALUE domain,
                                   long long int many,
                                   ... );
 long long int DftiCreateDescriptor_d_1d(DFTI_DESCRIPTOR_HANDLE *,
                                   enum DFTI_CONFIG_VALUE domain,
                                   ... );
 long long int DftiCreateDescriptor_d_md(DFTI_DESCRIPTOR_HANDLE *,
                                   enum DFTI_CONFIG_VALUE domain,
                                   long long int many,
                                   ... );
# 51 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_trig_transforms.h" 1
# 47 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_trig_transforms.h"
void d_init_trig_transform(long long int *, long long int *, long long int *, double *, long long int *);
void d_commit_trig_transform(double *, DFTI_DESCRIPTOR_HANDLE *, long long int *, double *, long long int *);
void d_forward_trig_transform(double *, DFTI_DESCRIPTOR_HANDLE *, long long int *, double *, long long int *);
void d_backward_trig_transform(double *, DFTI_DESCRIPTOR_HANDLE *, long long int *, double *, long long int *);
void s_init_trig_transform(long long int *, long long int *, long long int *, float *, long long int *);
void s_commit_trig_transform(float *, DFTI_DESCRIPTOR_HANDLE *, long long int *, float *, long long int *);
void s_forward_trig_transform(float *, DFTI_DESCRIPTOR_HANDLE *, long long int *, float *, long long int *);
void s_backward_trig_transform(float *, DFTI_DESCRIPTOR_HANDLE *, long long int *, float *, long long int *);
void free_trig_transform(DFTI_DESCRIPTOR_HANDLE *, long long int *, long long int *);
# 52 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_poisson.h" 1
# 134 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_poisson.h"
void d_init_helmholtz_2d(const double*, const double*, const double*, const double*, const long long int*, const long long int*, const char*, const double*, long long int*, double*, long long int*);
void d_commit_helmholtz_2d(double*, const double*, const double*, const double*, const double*, DFTI_DESCRIPTOR_HANDLE *, long long int*, double*,long long int*);
void d_helmholtz_2d(double*, const double*, const double*, const double*, const double*, DFTI_DESCRIPTOR_HANDLE *, long long int*, const double*,long long int*);
void free_helmholtz_2d(DFTI_DESCRIPTOR_HANDLE*, long long int*, long long int*);

void d_init_helmholtz_3d(const double*, const double*, const double*, const double*, const double*, const double*, const long long int*, const long long int*, const long long int*, const char*, const double*, long long int*, double*, long long int*);
void d_commit_helmholtz_3d(double*, const double*, const double*, const double*, const double*, const double*, const double*, DFTI_DESCRIPTOR_HANDLE*, DFTI_DESCRIPTOR_HANDLE*, long long int*, double*, long long int*);
void d_helmholtz_3d(double*, const double*, const double*, const double*, const double*, const double*, const double*, DFTI_DESCRIPTOR_HANDLE*, DFTI_DESCRIPTOR_HANDLE*, long long int*, const double*,long long int*);
void free_helmholtz_3d(DFTI_DESCRIPTOR_HANDLE*, DFTI_DESCRIPTOR_HANDLE*, long long int*, long long int*);

void s_init_helmholtz_2d(const float*, const float*, const float*, const float*, const long long int*, const long long int*, const char*, const float*, long long int*, float*, long long int*);
void s_commit_helmholtz_2d(float*, const float*, const float*, const float*, const float*, DFTI_DESCRIPTOR_HANDLE *, long long int*, float*, long long int*);
void s_helmholtz_2d(float*, const float*, const float*, const float*, const float*, DFTI_DESCRIPTOR_HANDLE *, long long int*, const float*, long long int*);

void s_init_helmholtz_3d(const float*, const float*, const float*, const float*, const float*, const float*, const long long int*, const long long int*, const long long int*, const char*, const float*,long long int*,float*,long long int*);
void s_commit_helmholtz_3d(float*, const float*, const float*, const float*, const float*, const float*, const float*, DFTI_DESCRIPTOR_HANDLE*, DFTI_DESCRIPTOR_HANDLE*, long long int*, float*, long long int*);
void s_helmholtz_3d(float*, const float*, const float*, const float*, const float*, const float*, const float*, DFTI_DESCRIPTOR_HANDLE*, DFTI_DESCRIPTOR_HANDLE*, long long int*, const float*,long long int*);

void d_init_sph_p(const double*, const double*, const double*, const double*, const long long int*, const long long int*, const double*, long long int*, double*, long long int*);
void d_commit_sph_p(double*,DFTI_DESCRIPTOR_HANDLE*,DFTI_DESCRIPTOR_HANDLE*,long long int*,double*,long long int*);
void d_sph_p(double*,DFTI_DESCRIPTOR_HANDLE*,DFTI_DESCRIPTOR_HANDLE*,long long int*,double*,long long int*);
void free_sph_p(DFTI_DESCRIPTOR_HANDLE*,DFTI_DESCRIPTOR_HANDLE*,long long int*,long long int*);

void d_init_sph_np(const double*, const double*, const double*, const double*, const long long int*, const long long int*, const double*, long long int*, double*, long long int*);
void d_commit_sph_np(double*,DFTI_DESCRIPTOR_HANDLE*,long long int*,double*,long long int*);
void d_sph_np(double*,DFTI_DESCRIPTOR_HANDLE*,long long int*,double*,long long int*);
void free_sph_np(DFTI_DESCRIPTOR_HANDLE*,long long int*,long long int*);

void s_init_sph_p(const float*, const float*, const float*, const float*, const long long int*, const long long int*, const float*, long long int*, float*,long long int*);
void s_commit_sph_p(float*,DFTI_DESCRIPTOR_HANDLE*,DFTI_DESCRIPTOR_HANDLE*,long long int*,float*,long long int*);
void s_sph_p(float*,DFTI_DESCRIPTOR_HANDLE*,DFTI_DESCRIPTOR_HANDLE*,long long int*,float*,long long int*);

void s_init_sph_np(const float*, const float*, const float*, const float*, const long long int*, const long long int*, const float*, long long int*, float*,long long int*);
void s_commit_sph_np(float*,DFTI_DESCRIPTOR_HANDLE*,long long int*,float*,long long int*);
void s_sph_np(float*,DFTI_DESCRIPTOR_HANDLE*,long long int*,float*,long long int*);
# 53 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_solvers_ee.h" 1
# 37 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_solvers_ee.h"
void feastinit (long long int* fpm);
void FEASTINIT (long long int* fpm);

void dfeast_scsrev (const char* uplo , const long long int* n , const double* sa , const long long int* isa , const long long int* jsa , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);
void DFEAST_SCSREV (const char* uplo , const long long int* n , const double* sa , const long long int* isa , const long long int* jsa , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);

void sfeast_sygv (const char* uplo , const long long int* n , const float* a , const long long int* lda , const float* b , const long long int* ldb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);
void SFEAST_SYGV (const char* uplo , const long long int* n , const float* a , const long long int* lda , const float* b , const long long int* ldb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);

void sfeast_scsrev (const char* uplo , const long long int* n , const float* sa , const long long int* isa , const long long int* jsa , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);
void SFEAST_SCSREV (const char* uplo , const long long int* n , const float* sa , const long long int* isa , const long long int* jsa , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);

void zfeast_hbgv (const char* uplo , const long long int* n , const long long int* kla , const MKL_Complex16* a , const long long int* lda , const long long int* klb , const MKL_Complex16* b , const long long int* ldb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);
void ZFEAST_HBGV (const char* uplo , const long long int* n , const long long int* kla , const MKL_Complex16* a , const long long int* lda , const long long int* klb , const MKL_Complex16* b , const long long int* ldb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);

void zfeast_hcsrev (const char* uplo , const long long int* n , const MKL_Complex16* sa , const long long int* isa , const long long int* jsa , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);
void ZFEAST_HCSREV (const char* uplo , const long long int* n , const MKL_Complex16* sa , const long long int* isa , const long long int* jsa , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);

void cfeast_hbev (const char* uplo , const long long int* n , const long long int* kla , const MKL_Complex8* a , const long long int* lda , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);
void CFEAST_HBEV (const char* uplo , const long long int* n , const long long int* kla , const MKL_Complex8* a , const long long int* lda , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);

void zfeast_heev (const char* uplo , const long long int* n , const MKL_Complex16* a , const long long int* lda , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);
void ZFEAST_HEEV (const char* uplo , const long long int* n , const MKL_Complex16* a , const long long int* lda , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);

void zfeast_hcsrgv (const char* uplo , const long long int* n , const MKL_Complex16* sa , const long long int* isa , const long long int* jsa , const MKL_Complex16* sb , const long long int* isb , const long long int* jsb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);
void ZFEAST_HCSRGV (const char* uplo , const long long int* n , const MKL_Complex16* sa , const long long int* isa , const long long int* jsa , const MKL_Complex16* sb , const long long int* isb , const long long int* jsb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);

void sfeast_scsrgv (const char* uplo , const long long int* n , const float* sa , const long long int* isa , const long long int* jsa , const float* sb , const long long int* isb , const long long int* jsb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);
void SFEAST_SCSRGV (const char* uplo , const long long int* n , const float* sa , const long long int* isa , const long long int* jsa , const float* sb , const long long int* isb , const long long int* jsb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);

void dfeast_srci (long long int* ijob , const long long int* n , MKL_Complex16* ze , double* work , MKL_Complex16* workc , double* aq , double* sq , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* lambda , double* q , long long int* mode , double* res , long long int* info);
void DFEAST_SRCI (long long int* ijob , const long long int* n , MKL_Complex16* ze , double* work , MKL_Complex16* workc , double* aq , double* sq , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* lambda , double* q , long long int* mode , double* res , long long int* info);

void sfeast_sbev (const char* uplo , const long long int* n , const long long int* kla , const float* a , const long long int* lda , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);
void SFEAST_SBEV (const char* uplo , const long long int* n , const long long int* kla , const float* a , const long long int* lda , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);

void dfeast_sygv (const char* uplo , const long long int* n , const double* a , const long long int* lda , const double* b , const long long int* ldb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);
void DFEAST_SYGV (const char* uplo , const long long int* n , const double* a , const long long int* lda , const double* b , const long long int* ldb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);

void cfeast_hegv (const char* uplo , const long long int* n , const MKL_Complex8* a , const long long int* lda , const MKL_Complex8* b , const long long int* ldb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);
void CFEAST_HEGV (const char* uplo , const long long int* n , const MKL_Complex8* a , const long long int* lda , const MKL_Complex8* b , const long long int* ldb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);

void zfeast_hrci (long long int* ijob , const long long int* n , MKL_Complex16* ze , MKL_Complex16* work , MKL_Complex16* workc , MKL_Complex16* zaq , MKL_Complex16* zsq , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* lambda , MKL_Complex16* q , long long int* mode , double* res , long long int* info);
void ZFEAST_HRCI (long long int* ijob , const long long int* n , MKL_Complex16* ze , MKL_Complex16* work , MKL_Complex16* workc , MKL_Complex16* zaq , MKL_Complex16* zsq , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* lambda , MKL_Complex16* q , long long int* mode , double* res , long long int* info);

void cfeast_hrci (long long int* ijob , const long long int* n , MKL_Complex8* ze , MKL_Complex8* work , MKL_Complex8* workc , MKL_Complex8* zaq , MKL_Complex8* zsq , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* lambda , MKL_Complex8* q , long long int* mode , float* res , long long int* info);
void CFEAST_HRCI (long long int* ijob , const long long int* n , MKL_Complex8* ze , MKL_Complex8* work , MKL_Complex8* workc , MKL_Complex8* zaq , MKL_Complex8* zsq , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* lambda , MKL_Complex8* q , long long int* mode , float* res , long long int* info);

void zfeast_hegv (const char* uplo , const long long int* n , const MKL_Complex16* a , const long long int* lda , const MKL_Complex16* b , const long long int* ldb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);
void ZFEAST_HEGV (const char* uplo , const long long int* n , const MKL_Complex16* a , const long long int* lda , const MKL_Complex16* b , const long long int* ldb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);

void sfeast_srci (long long int* ijob , const long long int* n , MKL_Complex8* ze , float* work , MKL_Complex8* workc , float* aq , float* sq , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* lambda , float* q , long long int* mode , float* res , long long int* info);
void SFEAST_SRCI (long long int* ijob , const long long int* n , MKL_Complex8* ze , float* work , MKL_Complex8* workc , float* aq , float* sq , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* lambda , float* q , long long int* mode , float* res , long long int* info);

void dfeast_scsrgv (const char* uplo , const long long int* n , const double* sa , const long long int* isa , const long long int* jsa , const double* sb , const long long int* isb , const long long int* jsb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);
void DFEAST_SCSRGV (const char* uplo , const long long int* n , const double* sa , const long long int* isa , const long long int* jsa , const double* sb , const long long int* isb , const long long int* jsb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);

void sfeast_syev (const char* uplo , const long long int* n , const float* a , const long long int* lda , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);
void SFEAST_SYEV (const char* uplo , const long long int* n , const float* a , const long long int* lda , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);

void cfeast_hcsrev (const char* uplo , const long long int* n , const MKL_Complex8* sa , const long long int* isa , const long long int* jsa , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);
void CFEAST_HCSREV (const char* uplo , const long long int* n , const MKL_Complex8* sa , const long long int* isa , const long long int* jsa , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);

void zfeast_hbev (const char* uplo , const long long int* n , const long long int* kla , const MKL_Complex16* a , const long long int* lda , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);
void ZFEAST_HBEV (const char* uplo , const long long int* n , const long long int* kla , const MKL_Complex16* a , const long long int* lda , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , MKL_Complex16* x , long long int* mode , double* res , long long int* info);

void dfeast_sbgv (const char* uplo , const long long int* n , const long long int* kla , const double* a , const long long int* lda , const long long int* klb , const double* b , const long long int* ldb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);
void DFEAST_SBGV (const char* uplo , const long long int* n , const long long int* kla , const double* a , const long long int* lda , const long long int* klb , const double* b , const long long int* ldb , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);

void cfeast_hbgv (const char* uplo , const long long int* n , const long long int* kla , const MKL_Complex8* a , const long long int* lda , const long long int* klb , const MKL_Complex8* b , const long long int* ldb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);
void CFEAST_HBGV (const char* uplo , const long long int* n , const long long int* kla , const MKL_Complex8* a , const long long int* lda , const long long int* klb , const MKL_Complex8* b , const long long int* ldb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);

void cfeast_heev (const char* uplo , const long long int* n , const MKL_Complex8* a , const long long int* lda , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);
void CFEAST_HEEV (const char* uplo , const long long int* n , const MKL_Complex8* a , const long long int* lda , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);

void sfeast_sbgv (const char* uplo , const long long int* n , const long long int* kla , const float* a , const long long int* lda , const long long int* klb , const float* b , const long long int* ldb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);
void SFEAST_SBGV (const char* uplo , const long long int* n , const long long int* kla , const float* a , const long long int* lda , const long long int* klb , const float* b , const long long int* ldb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , float* x , long long int* mode , float* res , long long int* info);

void cfeast_hcsrgv (const char* uplo , const long long int* n , const MKL_Complex8* sa , const long long int* isa , const long long int* jsa , const MKL_Complex8* sb , const long long int* isb , const long long int* jsb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);
void CFEAST_HCSRGV (const char* uplo , const long long int* n , const MKL_Complex8* sa , const long long int* isa , const long long int* jsa , const MKL_Complex8* sb , const long long int* isb , const long long int* jsb , long long int* fpm , float* epsout , long long int* loop , const float* emin , const float* emax , long long int* m0 , float* e , MKL_Complex8* x , long long int* mode , float* res , long long int* info);

void dfeast_syev (const char* uplo , const long long int* n , const double* a , const long long int* lda , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);
void DFEAST_SYEV (const char* uplo , const long long int* n , const double* a , const long long int* lda , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);

void dfeast_sbev (const char* uplo , const long long int* n , const long long int* kla , const double* a , const long long int* lda , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);
void DFEAST_SBEV (const char* uplo , const long long int* n , const long long int* kla , const double* a , const long long int* lda , long long int* fpm , double* epsout , long long int* loop , const double* emin , const double* emax , long long int* m0 , double* e , double* x , long long int* mode , double* res , long long int* info);
# 54 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 1 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl_direct_call.h" 1
# 55 "/opt/intel/compilers_and_libraries_2016.2.181/linux/mkl/include/mkl.h" 2
# 2 "dgemm-blas.c" 2


const char* dgemm_desc = "Reference dgemm.";






void square_dgemm (int N, double* A, double* B, double* C)
{
  double BETA = 1.;
  int LDA = N;
  int LDB = N;
  int LDC = N;

cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, LDA, LDB, LDC, BETA, A, LDA, B, LDB, BETA, C, LDC);
}
